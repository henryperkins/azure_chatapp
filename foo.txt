🛡️ Frontend Pattern Checker - Scanning...

Scanning: apiClient.js                                                                      ┌──────────────────────────────────────────────────────────────────────────────┐
│                                                                              │
│                     🛡️ Violations in: apiClient.js (1)                      │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

┌────────────────────────────────────────────────────────────────────────┬─────┐
│Pattern Rule                                                            │Count│
├────────────────────────────────────────────────────────────────────────┼─────┤
│🔒 12. Logger / Observability                                           │1    │
└────────────────────────────────────────────────────────────────────────┴─────┘

Detailed Violations:

• Rule 12: Logger / Observability
  No `console.*`; all logs via DI logger with context. Use canonical safeHandler for event error handling.

L117: } catch (err) {
  ⚠  Violation: Caught errors must be logged via 'logger.error(message, errorObject, { context: ... })' or equivalent.
  💡 Hint:
     Example:
     } catch (err) {
       logger.error("Operation failed", err, { context: "api-client:myError" });
     }

--------------------------------------------------------------------------------
┌──────────────────────────────────────────────────────────────────────────────┐
│                                                                              │
│              🚨 Found 1 violation(s) in 1 of 1 file(s) scanned.              │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

