"""Security schema

Revision ID: 651a20616543
Revises: 
Create Date: 2025-03-21 23:11:39.768716

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '651a20616543'
down_revision: Union[str, None] = 'XXXX'  # Points to metadataâ†’config migration
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema with security-related tables."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('token_blacklist',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('jti', sa.String(length=36), nullable=False),
        sa.Column('expires', sa.TIMESTAMP(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_token_blacklist_jti'), 'token_blacklist', ['jti'], unique=True)
    
    op.create_table('login_attempts',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=150), nullable=False),
        sa.Column('ip_address', sa.String(length=45), nullable=False),
        sa.Column('user_agent', sa.String(length=500), nullable=True),
        sa.Column('attempt_time', sa.TIMESTAMP(), nullable=False),
        sa.Column('success', sa.Boolean(), nullable=False, default=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_login_attempts_username'), 'login_attempts', ['username'], unique=False)
    op.create_index(op.f('ix_login_attempts_ip_address'), 'login_attempts', ['ip_address'], unique=False)
    op.create_index(op.f('ix_login_attempts_attempt_time'), 'login_attempts', ['attempt_time'], unique=False)
    op.create_index(
        'ix_login_attempts_ip_attempt_time', 
        'login_attempts', 
        ['ip_address', 'attempt_time'], 
        unique=False
    )
    op.create_index(
        'ix_login_attempts_username_attempt_time', 
        'login_attempts', 
        ['username', 'attempt_time'], 
        unique=False
    )
    
    # Add token_version column to users table if it doesn't exist
    op.add_column('users', sa.Column('token_version', sa.Integer(), nullable=False, server_default='0'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema, remove security-related tables."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_login_attempts_username_attempt_time', table_name='login_attempts')
    op.drop_index('ix_login_attempts_ip_attempt_time', table_name='login_attempts')
    op.drop_index(op.f('ix_login_attempts_attempt_time'), table_name='login_attempts')
    op.drop_index(op.f('ix_login_attempts_ip_address'), table_name='login_attempts')
    op.drop_index(op.f('ix_login_attempts_username'), table_name='login_attempts')
    op.drop_table('login_attempts')
    
    op.drop_index(op.f('ix_token_blacklist_jti'), table_name='token_blacklist')
    op.drop_table('token_blacklist')
    
    # Remove token_version column from users table
    op.drop_column('users', 'token_version')
    # ### end Alembic commands ###
