{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "WebInspector",
      "version": "537.36"
    },
    "pages": [
      {
        "startedDateTime": "2025-05-23T11:46:58.589Z",
        "id": "page_1",
        "title": "http://localhost:8000/",
        "pageTimings": {
          "onContentLoad": 1866.6740000044229,
          "onLoad": 1941.8379999988247
        }
      }
    ],
    "entries": [
      {
        "_connectionId": "106417",
        "_initiator": {
          "type": "other"
        },
        "_priority": "VeryHigh",
        "_resourceType": "document",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "document"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "navigate"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Sec-Fetch-User",
              "value": "?1"
            },
            {
              "name": "Upgrade-Insecure-Requests",
              "value": "1"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1544,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "26553"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:57 GMT"
            },
            {
              "name": "etag",
              "value": "\"551f90ea6e3e8b76c96a5fcbd3de238a\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 00:17:07 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 26553,
            "mimeType": "text/html",
            "compression": 0,
            "text": "<!DOCTYPE html>\n<html lang=\"en\" class=\"mobile-safe\">\n\n<head>\n  <!-- ============================================= -->\n  <!-- Merge of Original CSP and Mobile-First Meta   -->\n  <!-- ============================================= -->\n  <meta charset=\"UTF-8\">\n  <!-- Content Security Policy for Sentry + baseline -->\n  <meta http-equiv=\"Content-Security-Policy\" content=\"\n    default-src 'self' blob:;\n    script-src 'self' 'unsafe-inline' blob: https://js.sentry-cdn.com https://browser.sentry-cdn.com;\n    script-src-elem 'self' 'unsafe-inline' blob: https://js.sentry-cdn.com https://browser.sentry-cdn.com;\n    worker-src 'self' blob:;\n    child-src 'self' blob:;\n    connect-src 'self' https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com;\n    img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com;\n    style-src 'self' 'unsafe-inline';\n    frame-src 'self';\n  \">\n\n  <!-- Mobile-Optimized Viewport & PWA Hints -->\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, viewport-fit=cover\" />\n  <meta name=\"mobile-web-app-capable\" content=\"yes\">\n  <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n  <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"default\">\n  <meta name=\"format-detection\" content=\"telephone=no\">\n  <meta name=\"msapplication-tap-highlight\" content=\"no\">\n  <meta name=\"theme-color\" content=\"#3b82f6\">\n  <meta name=\"apple-mobile-web-app-title\" content=\"Azure Chat\">\n\n  <title>Azure OpenAI Chat - Mobile & Desktop</title>\n\n  <!-- ============================================= -->\n  <!-- Sentry Loader Script (same logic as original) -->\n  <!-- ============================================= -->\n  <script>\n    if (\n      window.location.hostname !== 'localhost' &&\n      window.location.hostname !== '127.0.0.1'\n    ) {\n      const script = document.createElement('script');\n      script.src = 'https://js.sentry-cdn.com/b03711f63d1160f48dcaeda3edae14ac.min.js';\n      script.crossOrigin = 'anonymous';\n      document.head.appendChild(script);\n    }\n    window.sentryOnLoad = function () {\n      if (window.Sentry && typeof window.initSentry === 'function') {\n        window.initSentry();\n      } else {\n        (window.DependencySystem?.modules?.get?.('logger')\n          || window.logger\n          || { warn: () => { } }\n        ).warn('[base.html] Sentry or initSentry function not available',\n          { context: 'base:sentry' });\n      }\n    };\n  </script>\n\n  <!-- ============================================= -->\n  <!-- Merged CSS: Using the new Tailwind-Mobile     -->\n  <!-- (You can rename or adjust as needed)         -->\n  <!-- ============================================= -->\n  <link rel=\"stylesheet\" href=\"/static/css/dist/mobile.css\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"/static/favicon.ico\" />\n\n  <!-- ============================================= -->\n  <!-- Tier 0.5: DependencySystem & Additional Logic -->\n  <!-- ============================================= -->\n  <script>\n    // Keep the 'DependencySystem' from original base.html\n    const DependencySystem = {\n      modules: new Map(),\n      states: new Map(),\n      waiters: new Map(),\n      _pendingCleanups: [],\n      async register(name, instance, dependencies = []) {\n        if (this.modules.has(name)) {\n          const msg = `[DependencySystem] Duplicate module: '${name}'`;\n          console.error(msg);\n          throw new Error(msg);\n        }\n        if (dependencies.length > 0) {\n          await this.waitFor(dependencies);\n        }\n        console.log(`[DependencySystem] Registering module: ${name}`);\n        this.modules.set(name, instance);\n        if (name === 'eventHandlers' && this._pendingCleanups.length && instance?.cleanupListeners) {\n          this._pendingCleanups.forEach(ctx => instance.cleanupListeners({ context: ctx }));\n          this._pendingCleanups.length = 0;\n        }\n        this.states.set(name, 'loaded');\n        this._notifyWaiters(name);\n        return instance;\n      },\n      _notifyWaiters(name) {\n        if (!this.waiters.has(name)) return;\n        this.waiters.get(name).forEach((callback) => {\n          try {\n            callback(this.modules.get(name));\n          } catch (error) {\n            console.error(`[DependencySystem] Error in waiter callback for ${name}:`, error);\n          }\n        });\n        this.waiters.delete(name);\n      },\n      waitFor(names, callback, timeout = 5000) {\n        const nameArray = Array.isArray(names) ? names : [names];\n        if (nameArray.every(name => this.modules.has(name))) {\n          const modules = nameArray.map(n => this.modules.get(n));\n          if (callback) callback(...modules);\n          return Promise.resolve(modules);\n        }\n        return new Promise((resolve, reject) => {\n          const missing = nameArray.filter(name => !this.modules.has(name));\n          let resolved = false;\n          const timeoutId = setTimeout(() => {\n            if (!resolved) {\n              const msg = `[DependencySystem] Timeout – missing: ${missing.join(', ')}`;\n              console.error(msg);\n              resolved = true;\n              reject(new Error(msg));\n            }\n          }, timeout);\n          missing.forEach(name => {\n            if (!this.waiters.has(name)) {\n              this.waiters.set(name, []);\n            }\n            this.waiters.get(name).push(() => {\n              if (nameArray.every(n => this.modules.has(n)) && !resolved) {\n                clearTimeout(timeoutId);\n                resolved = true;\n                const modules = nameArray.map(n => this.modules.get(n));\n                if (callback) callback(...modules);\n                resolve(modules);\n              }\n            });\n          });\n        });\n      },\n      get(name) { return this.modules.get(name); },\n      getCurrentTraceIds() {\n        const id = `trace-${Date.now()}-${Math.floor(Math.random() * 1e5)}`;\n        return { traceId: id, parentId: id };\n      },\n      generateTransactionId() {\n        return `txn-${Date.now()}-${Math.floor(Math.random() * 1e5)}`;\n      },\n      cleanupModuleListeners(context) {\n        const eh = this.modules.get('eventHandlers');\n        if (eh?.cleanupListeners) {\n          eh.cleanupListeners({ context });\n        } else {\n          // eventHandlers not registered yet – remember for later\n          if (context) this._pendingCleanups.push(context);\n        }\n      },\n    };\n    window.DependencySystem = DependencySystem;\n  </script>\n\n  <!-- ============================================= -->\n  <!-- Scripts (Theme Toggle, DOMPurify, App, etc.)  -->\n  <!-- ============================================= -->\n  <script type=\"module\" src=\"/static/js/theme-toggle.js\"></script>\n  <script type=\"module\" src=\"/static/js/vendor/dompurify-global.js\"></script>\n  <script type=\"module\" src=\"/static/js/app.js\"></script>\n\n  <!-- Additional style tag from original (optional) -->\n  <style>\n    #projectListView {\n      transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s ease;\n    }\n  </style>\n</head>\n\n<body class=\"bg-base-200 text-base-content min-h-screen mobile-safe flex flex-col font-sans\">\n  <!-- ========================================================= -->\n  <!-- Potential top-level error display from original base.html -->\n  <!-- ========================================================= -->\n  <div id=\"appInitError\" class=\"bg-error text-error-content text-sm p-2 hidden\" aria-live=\"assertive\"\n    style=\"z-index: 9999;\">\n    <strong>Initialization Error:</strong>\n    <span id=\"appInitErrorText\"></span>\n  </div>\n\n  <!-- ========================================================= -->\n  <!-- \"Skip to content\" for accessibility (from original base) -->\n  <!-- ========================================================= -->\n  <a href=\"#mainContent\"\n    class=\"skip-to-content sr-only focus:not-sr-only focus:inline-block focus:px-4 focus:py-2 focus:bg-primary focus:text-primary-content\">\n    Skip to content\n  </a>\n\n  <!-- ========================================================= -->\n  <!-- MOBILE-FIRST HEADER (Merged with old header extras)      -->\n  <!-- ========================================================= -->\n  <header id=\"header\"\n    class=\"bg-base-100 border-b border-base-200 sticky top-0 z-30 shadow-md transition-all duration-300\">\n    <div class=\"max-w-7xl mx-auto px-3 py-2 md:py-3 flex items-center justify-between gap-2\">\n      <!-- Mobile Menu Button (toggles #mainSidebar) -->\n      <button id=\"navToggleBtn\" class=\"btn btn-ghost btn-square lg:hidden min-w-[44px] min-h-[44px]\"\n        aria-label=\"Toggle sidebar\" aria-expanded=\"false\" aria-controls=\"mainSidebar\">\n        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n        </svg>\n      </button>\n\n      <!-- App title / Logo -->\n      <div class=\"flex items-center gap-2 min-w-0\">\n        <svg class=\"w-7 h-7 text-primary flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2\n               2 0 002-2V6a2 2 0 00-2-2H5a2\n               2 0 00-2 2v12a2 2 0 002 2z\" />\n        </svg>\n        <!-- Show short name on mobile, longer name on bigger screens -->\n        <h1 class=\"text-lg font-bold text-base-content sm:hidden truncate\">Azure Chat</h1>\n        <h1 class=\"hidden sm:block sm:text-xl font-bold text-base-content truncate\">\n          Azure OpenAI Chat\n        </h1>\n      </div>\n\n      <!-- Right side actions: help, theme, auth, etc. -->\n      <div class=\"flex items-center gap-2 flex-shrink-0\">\n        <!-- Original help button from old code, optional -->\n        <button id=\"keyboardHelpBtn\" type=\"button\" class=\"btn btn-ghost btn-sm btn-square hidden sm:inline-flex\"\n          aria-label=\"Show keyboard shortcuts\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"\n            aria-hidden=\"true\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8.228 9c.549-1.165\n                     2.03-2 3.772-2 2.21 0\n                     4 1.343 4\n                     3 0 1.4-1.278\n                     2.575-3.006\n                     2.907-.542.104-.994.54-.994\n                     1.093m0 3h.01M21\n                     12a9 9 0\n                     11-18 0 9 9 0\n                     0118 0z\">\n            </path>\n          </svg>\n        </button>\n\n        <!-- Dark Mode Toggle (like new + old) -->\n        <button id=\"darkModeToggle\" type=\"button\" class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\"\n          aria-label=\"Toggle dark mode\">\n          <svg id=\"darkModeIcon\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"\n            aria-hidden=\"true\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 3v1m0 16v1m9-9h-1M4\n                 12H3m15.364 6.364l-.707-.707M6.343\n                 6.343l-.707-.707m12.728\n                 0l-.707.707M6.343 17.657l-.707.707M16\n                 12a4 4 0 11-8\n                 0 4 4 0 018 0z\" />\n          </svg>\n        </button>\n\n        <!-- Auth Section: Login button when not authenticated, User menu when authenticated -->\n        <div id=\"authSection\" class=\"flex items-center gap-2\">\n          <!-- Login button (shown when not authenticated) -->\n          <button id=\"authButton\" class=\"btn btn-primary btn-sm min-w-[44px] min-h-[44px]\">\n            Login\n          </button>\n\n          <!-- User menu (shown when authenticated) -->\n          <div id=\"userMenu\" class=\"dropdown dropdown-end hidden\">\n            <div tabindex=\"0\" role=\"button\" class=\"btn btn-ghost btn-sm btn-circle avatar\">\n              <div\n                class=\"w-8 h-8 rounded-full bg-primary text-primary-content flex items-center justify-center text-sm font-medium\">\n                <span id=\"userInitials\">?</span>\n              </div>\n            </div>\n            <ul tabindex=\"0\"\n              class=\"dropdown-content menu bg-base-100 rounded-box z-[1] w-52 p-2 shadow-lg border border-base-300\">\n              <li class=\"menu-title px-4 py-2\">\n                <span id=\"authStatus\">Not Authenticated</span>\n              </li>\n              <li>\n                <div class=\"px-4 py-2 text-sm\">\n                  Hello, <span id=\"usernameDisplay\">User</span>\n                </div>\n              </li>\n              <li>\n                <hr class=\"my-1\">\n              </li>\n              <li>\n                <button id=\"logoutBtn\" class=\"text-error hover:bg-error hover:text-error-content\">\n                  <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                      d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                  </svg>\n                  Logout\n                </button>\n              </li>\n            </ul>\n          </div>\n\n          <!-- User status indicator (hidden, for backwards compatibility) -->\n          <div id=\"userStatus\" class=\"hidden\"></div>\n        </div>\n      </div>\n    </div>\n  </header>\n\n\n  <!-- ========================================================= -->\n  <!-- Combined Layout: Desktop Sidebar + Mobile Nav Bottom      -->\n  <!-- ========================================================= -->\n  <div class=\"flex flex-1 overflow-hidden\">\n    <!-- SIDEBAR (using original #mainSidebar markup, but updated classes) -->\n    <nav id=\"mainSidebar\" class=\"fixed md:relative inset-0 md:inset-y-0 md:left-0 z-50 w-4/5 max-w-xs md:w-72 bg-base-100\n                shadow-xl md:shadow-none border-r border-base-300 transform transition-transform duration-300\n                ease-in-out -translate-x-full md:translate-x-0 overflow-y-auto h-[100dvh] md:h-full flex flex-col\n                sidebar focus-within:ring-2 focus-within:ring-primary focus-within:outline-none\n                p-0 md:p-0 pt-[env(safe-area-inset-top)] pb-[env(safe-area-inset-bottom)]\n                touch-pan-y overscroll-contain\">\n      <h2 class=\"sr-only\">Site Navigation</h2>\n\n      <!-- Close button (mobile only) -->\n      <button id=\"closeSidebarBtn\" type=\"button\"\n        class=\"md:hidden absolute top-3 right-3 btn btn-ghost btn-sm btn-circle\" aria-label=\"Close sidebar\"\n        tabindex=\"0\">\n        <svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6\n                   6l12 12\" />\n        </svg>\n      </button>\n\n      <div class=\"p-4 pb-6 flex flex-col h-full min-h-0\">\n        <!-- Back to Chat or New Chat link -->\n        <a href=\"/\" class=\"w-full btn btn-primary mb-4 flex items-center justify-center gap-2\" role=\"button\">\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 12h.01M12\n                     12h.01M16\n                     12h.01M21\n                     12c0 4.418-4.03\n                     8-9\n                     8a9.863\n                     9.863 0\n                     01-4.255-.949L3\n                     20l1.395-3.72C3.512\n                     15.042 3\n                     13.574 3\n                     12c0-4.418\n                     4.03-8 9-8s9\n                     3.582 9\n                     8z\" />\n          </svg>\n          Back to Chat\n        </a>\n\n        <!-- Sidebar Tabs -->\n        <div class=\"tabs tabs-boxed mb-4\" role=\"tablist\">\n          <button id=\"recentChatsTab\" class=\"tab tab-active\" role=\"tab\" aria-selected=\"true\">Recent</button>\n          <button id=\"starredChatsTab\" class=\"tab\" role=\"tab\" aria-selected=\"false\">Starred</button>\n          <button id=\"projectsTab\" class=\"tab\" role=\"tab\" aria-selected=\"false\">Projects</button>\n        </div>\n\n        <!-- Recent Chats Section -->\n        <div id=\"recentChatsSection\" class=\"flex-1 flex flex-col min-h-0\">\n          <div class=\"mb-3\">\n            <input id=\"chatSearchInput\" type=\"text\" placeholder=\"Search conversations...\"\n              class=\"input input-sm input-bordered w-full\">\n          </div>\n          <div class=\"flex-1 overflow-y-auto\">\n            <div class=\"text-base-content/60 text-center py-4\">No recent conversations</div>\n          </div>\n        </div>\n\n        <!-- Starred Chats Section -->\n        <div id=\"starredChatsSection\" class=\"flex-1 flex-col min-h-0 hidden\">\n          <div class=\"mb-3\">\n            <input type=\"text\" placeholder=\"Search starred...\" class=\"input input-sm input-bordered w-full\">\n          </div>\n          <div class=\"flex-1 overflow-y-auto\">\n            <div class=\"text-base-content/60 text-center py-4\">No starred conversations.</div>\n          </div>\n        </div>\n\n        <!-- Projects Section -->\n        <div id=\"projectsSection\" class=\"flex-1 flex flex-col min-h-0 hidden\">\n          <div class=\"mb-3\">\n            <input id=\"sidebarProjectSearch\" type=\"text\" placeholder=\"Search projects...\"\n                   class=\"input input-sm input-bordered w-full\">\n          </div>\n          <div class=\"flex-1 overflow-y-auto\">\n            <div class=\"text-base-content/60 text-center py-4\">No projects yet.</div>\n          </div>\n        </div>\n\n        <!-- ============================= -->\n        <!-- RESTORED LOGIN/REGISTER FORM -->\n        <!-- ============================= -->\n        <div id=\"sidebarAuthFormContainer\" class=\"p-4 border-t border-base-300\">\n          <h3 id=\"sidebarAuthFormTitle\" class=\"text-lg font-semibold mb-2 text-base-content\">Login</h3>\n          <form id=\"sidebarAuthForm\">\n            <!-- Username (shown only on registration) -->\n            <div id=\"sidebarUsernameContainer\" class=\"mb-2 hidden\">\n              <label for=\"sidebarUsername\" class=\"sr-only\">Username</label>\n              <input type=\"text\" id=\"sidebarUsername\" name=\"username\" placeholder=\"Username\" autocomplete=\"username\"\n                class=\"input input-sm input-bordered w-full\" />\n            </div>\n\n            <!-- Email -->\n            <div class=\"mb-2\">\n              <label for=\"sidebarEmail\" class=\"sr-only\">Email</label>\n              <input type=\"email\" id=\"sidebarEmail\" name=\"email\" placeholder=\"Email\" autocomplete=\"email\" required\n                class=\"input input-sm input-bordered w-full\" />\n            </div>\n\n            <!-- Password -->\n            <div class=\"mb-2\">\n              <label for=\"sidebarPassword\" class=\"sr-only\">Password</label>\n              <input type=\"password\" id=\"sidebarPassword\" name=\"password\" placeholder=\"Password\"\n                autocomplete=\"current-password\" required class=\"input input-sm input-bordered w-full\" />\n            </div>\n\n            <!-- Confirm Password (shown only on registration) -->\n            <div id=\"sidebarConfirmPasswordContainer\" class=\"mb-3 hidden\">\n              <label for=\"sidebarConfirmPassword\" class=\"sr-only\">Confirm Password</label>\n              <input type=\"password\" id=\"sidebarConfirmPassword\" name=\"confirmPassword\" placeholder=\"Confirm Password\"\n                autocomplete=\"new-password\" class=\"input input-sm input-bordered w-full\" />\n            </div>\n\n            <button type=\"submit\" id=\"sidebarAuthBtn\" class=\"btn btn-primary btn-sm w-full\">\n              Login\n            </button>\n            <div id=\"sidebarAuthError\" class=\"text-error text-xs mt-2 min-h-[1em]\"></div>\n          </form>\n          <div class=\"text-center mt-3\">\n            <a href=\"#\" id=\"sidebarAuthToggle\"\n              class=\"link link-hover text-sm min-w-[44px] min-h-[44px] inline-flex items-center\">\n              Need an account? Register\n            </a>\n          </div>\n        </div>\n        <!-- End inline login/register form -->\n      </div>\n    </nav>\n\n    <!-- MAIN CONTENT -->\n    <main id=\"mainContent\" class=\"flex-1 flex flex-col overflow-hidden\">\n      <!-- (Where your project manager panel, chat UI, or other content is injected) -->\n      <div class=\"p-4 md:p-6 flex-1 overflow-y-auto\">\n        <section id=\"projectManagerPanel\" class=\"bg-base-100 rounded-box shadow-md p-4 mb-6 border border-base-300\">\n          <div id=\"projectListView\" class=\"flex flex-col min-h-0\">\n            <!-- Insert dynamic content like project list or details here -->\n            <div class=\"project-list grid gap-4 p-4\">\n              <!-- Example placeholder -->\n              <div class=\"text-base-content/60 text-center py-8\">No projects loaded.</div>\n            </div>\n          </div>\n          <div id=\"projectDetailsView\" class=\"flex flex-col min-h-0 hidden\">\n            <!-- Insert dynamic project details content here -->\n            <div class=\"project-details p-4\">\n              <!-- Project details template will be loaded here -->\n            </div>\n          </div>\n        </section>\n      </div>\n    </main>\n  </div>\n\n  <!-- MOBILE BOTTOM NAV (from new base.html), hidden on lg+ screens -->\n  <nav class=\"mobile-nav lg:hidden\">\n    <button class=\"mobile-nav-item active\" data-tab=\"chat\">\n      <svg class=\"w-6 h-6 mb-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 12h.01M12\n                 12h.01M16\n                 12h.01M21\n                 12c0 4.418-4.03\n                 8-9\n                 8a9.863\n                 9.863 0\n                 01-4.255-.949L3\n                 20l1.395-3.72C3.512\n                 15.042 3\n                 13.574 3\n                 12c0-4.418\n                 4.03-8 9-8s9\n                 3.582 9\n                 8z\" />\n      </svg>\n      <span>Chat</span>\n    </button>\n    <button class=\"mobile-nav-item\" data-tab=\"projects\">\n      <svg class=\"w-6 h-6 mb-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2\n                 2 0 002\n                 2h14a2 2\n                 0 002-2V9a2 2 0\n                 00-2-2h-6l-2-2H5a2\n                 2 0 00-2\n                 2z\" />\n      </svg>\n      <span>Projects</span>\n    </button>\n    <button class=\"mobile-nav-item\" data-tab=\"settings\">\n      <svg class=\"w-6 h-6 mb-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10.325\n                 4.317c.426-1.756\n                 2.924-1.756\n                 3.35 0a1.724\n                 1.724 0\n                 002.573\n                 1.066c1.543-.94\n                 3.31.826\n                 2.37 2.37a1.724\n                 1.724 0\n                 001.065\n                 2.572c1.756.426\n                 1.756 2.924\n                 0 3.35a1.724\n                 1.724 0\n                 00-1.066\n                 2.573c.94\n                 1.543-.826\n                 3.31-2.37\n                 2.37a1.724\n                 1.724 0\n                 00-2.572\n                 1.065c-.426\n                 1.756-2.924\n                 1.756-3.35\n                 0a1.724\n                 1.724 0\n                 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724\n                 1.724 0\n                 001.066-2.572c-1.756-.426-1.756-2.924\n                 0-3.35a1.724\n                 1.724 0\n                 001.066-2.573c-.94-1.543.826-3.31\n                 2.37-2.37.996.608\n                 2.296.07\n                 2.572-1.065z\" />\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15\n                 12a3 3 0\n                 11-6 0\n                 3 3 0\n                 016 0z\" />\n      </svg>\n      <span>Settings</span>\n    </button>\n  </nav>\n\n  <!-- ============================================= -->\n  <!-- Loading Spinners, same as original           -->\n  <!-- ============================================= -->\n  <div id=\"loadingSpinner\" class=\"fixed inset-0 bg-base-100 z-50 flex items-center justify-center hidden\">\n    <div class=\"loading-spinner w-8 h-8 text-primary\"></div>\n    <span class=\"ml-3 text-lg\">Loading...</span>\n  </div>\n  <div id=\"appLoadingSpinner\" class=\"fixed inset-0 bg-base-100 z-50 flex items-center justify-center hidden\"\n    role=\"status\">\n    <div class=\"text-center\">\n      <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4\"></div>\n      <p class=\"text-lg\">Loading application...</p>\n    </div>\n  </div>\n\n  <!-- ============================================= -->\n  <!-- Modals Container (same as original)          -->\n  <!-- ============================================= -->\n  <div id=\"modalsContainer\" aria-live=\"polite\" role=\"complementary\" class=\"hidden\">\n    <!-- modals.html will be dynamically loaded here -->\n  </div>\n\n  <!-- Keyboard shortcuts overlay, if needed -->\n  <div id=\"keyboardHelp\" class=\"hidden fixed inset-0 bg-base-300 bg-opacity-70 z-50 flex items-center justify-center\"\n    role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"keyboardHelpTitle\">\n    <div class=\"card max-w-lg w-full bg-base-100 shadow-xl p-6 relative\">\n      <button class=\"btn btn-sm btn-ghost btn-circle absolute top-2 right-2\"\n        aria-label=\"Close keyboard shortcuts\">×</button>\n      <h3 id=\"keyboardHelpTitle\" class=\"text-lg font-bold mb-4\">Keyboard Shortcuts</h3>\n      <!-- Example shortcuts or your original content -->\n      <div class=\"grid grid-cols-2 gap-2 text-sm\">\n        <div class=\"flex items-center gap-1\">\n          <kbd class=\"kbd kbd-sm\">Tab</kbd>\n          <span>Focus next element</span>\n        </div>\n        <div class=\"flex items-center gap-1\">\n          <kbd class=\"kbd kbd-sm\">Esc</kbd>\n          <span>Close modal</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Additional placeholders for dynamic injection from the old system -->\n  <div id=\"sidebarActions\" class=\"hidden\" data-requires-chat=\"true\"></div>\n  <div id=\"noChatSelectedMessage\" class=\"hidden\" data-requires-chat=\"true\"></div>\n  <div id=\"conversationArea\" class=\"hidden\" data-requires-chat=\"true\"></div>\n  <button id=\"newConversationBtn\" class=\"hidden\" data-requires-chat=\"true\">New Conversation</button>\n  <div id=\"knowledgeBaseContainer\" class=\"hidden\" data-requires-kb=\"true\"></div>\n</body>\n\n</html>\n"
          },
          "redirectURL": "",
          "headersSize": 1046,
          "bodySize": 26553,
          "_transferSize": 27599,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:58.588Z",
        "time": 618.1570000039198,
        "timings": {
          "blocked": 3.2109999957578257,
          "dns": 0.02299999999999991,
          "ssl": -1,
          "connect": 303.342,
          "send": 0.28199999999998226,
          "wait": 310.70099999489264,
          "receive": 0.598000013269484,
          "_blocked_queueing": 1.3199999957578257,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "parser",
          "url": "http://localhost:8000/",
          "lineNumber": 63
        },
        "_priority": "VeryHigh",
        "_resourceType": "stylesheet",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/css/dist/mobile.css",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "text/css,*/*;q=0.1"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "style"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1432,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "157881"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/css; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"4470aa1f65a5249ba6c0adb59268c25a\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 08:29:02 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 157881,
            "mimeType": "text/css",
            "compression": 0,
            "text": "/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */\n@layer properties;\n@layer theme, base, components, utilities;\n@layer theme {\n  :root, :host {\n    --font-sans: ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\",\n      \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\",\n      \"Courier New\", monospace;\n    --color-green-600: oklch(62.7% 0.194 149.214);\n    --color-blue-50: oklch(97% 0.014 254.604);\n    --color-blue-200: oklch(88.2% 0.059 254.128);\n    --color-blue-400: oklch(70.7% 0.165 254.624);\n    --color-blue-500: oklch(62.3% 0.214 259.815);\n    --color-blue-600: oklch(54.6% 0.245 262.881);\n    --color-blue-700: oklch(48.8% 0.243 264.376);\n    --color-blue-800: oklch(42.4% 0.199 265.638);\n    --color-gray-50: oklch(98.5% 0.002 247.839);\n    --color-gray-200: oklch(92.8% 0.006 264.531);\n    --color-gray-300: oklch(87.2% 0.01 258.338);\n    --color-gray-400: oklch(70.7% 0.022 261.325);\n    --color-gray-500: oklch(55.1% 0.027 264.364);\n    --color-gray-600: oklch(44.6% 0.03 256.802);\n    --color-gray-700: oklch(37.3% 0.034 259.733);\n    --color-black: #000;\n    --color-white: #fff;\n    --spacing: 0.25rem;\n    --container-xs: 20rem;\n    --container-sm: 24rem;\n    --container-md: 28rem;\n    --container-lg: 32rem;\n    --container-xl: 36rem;\n    --container-2xl: 42rem;\n    --container-4xl: 56rem;\n    --container-6xl: 72rem;\n    --container-7xl: 80rem;\n    --text-xs: 0.75rem;\n    --text-xs--line-height: calc(1 / 0.75);\n    --text-sm: 0.875rem;\n    --text-sm--line-height: calc(1.25 / 0.875);\n    --text-base: 1rem;\n    --text-base--line-height: calc(1.5 / 1);\n    --text-lg: 1.125rem;\n    --text-lg--line-height: calc(1.75 / 1.125);\n    --text-xl: 1.25rem;\n    --text-xl--line-height: calc(1.75 / 1.25);\n    --text-2xl: 1.5rem;\n    --text-2xl--line-height: calc(2 / 1.5);\n    --font-weight-medium: 500;\n    --font-weight-semibold: 600;\n    --font-weight-bold: 700;\n    --tracking-wider: 0.05em;\n    --leading-tight: 1.25;\n    --radius-md: 0.375rem;\n    --radius-lg: 0.5rem;\n    --radius-xl: 0.75rem;\n    --radius-2xl: 1rem;\n    --ease-out: cubic-bezier(0, 0, 0.2, 1);\n    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);\n    --animate-spin: spin 1s linear infinite;\n    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n    --blur-sm: 8px;\n    --default-transition-duration: 150ms;\n    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    --default-font-family: var(--font-sans);\n    --default-mono-font-family: var(--font-mono);\n  }\n}\n@layer base {\n  *, ::after, ::before, ::backdrop, ::file-selector-button {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    border: 0 solid;\n  }\n  html, :host {\n    line-height: 1.5;\n    -webkit-text-size-adjust: 100%;\n    -moz-tab-size: 4;\n      -o-tab-size: 4;\n         tab-size: 4;\n    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\");\n    font-feature-settings: var(--default-font-feature-settings, normal);\n    font-variation-settings: var(--default-font-variation-settings, normal);\n    -webkit-tap-highlight-color: transparent;\n  }\n  hr {\n    height: 0;\n    color: inherit;\n    border-top-width: 1px;\n  }\n  abbr:where([title]) {\n    -webkit-text-decoration: underline dotted;\n    text-decoration: underline dotted;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    font-size: inherit;\n    font-weight: inherit;\n  }\n  a {\n    color: inherit;\n    -webkit-text-decoration: inherit;\n    text-decoration: inherit;\n  }\n  b, strong {\n    font-weight: bolder;\n  }\n  code, kbd, samp, pre {\n    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace);\n    font-feature-settings: var(--default-mono-font-feature-settings, normal);\n    font-variation-settings: var(--default-mono-font-variation-settings, normal);\n    font-size: 1em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub, sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  table {\n    text-indent: 0;\n    border-color: inherit;\n    border-collapse: collapse;\n  }\n  :-moz-focusring {\n    outline: auto;\n  }\n  progress {\n    vertical-align: baseline;\n  }\n  summary {\n    display: list-item;\n  }\n  ol, ul, menu {\n    list-style: none;\n  }\n  img, svg, video, canvas, audio, iframe, embed, object {\n    display: block;\n    vertical-align: middle;\n  }\n  img, video {\n    max-width: 100%;\n    height: auto;\n  }\n  button, input, select, optgroup, textarea, ::file-selector-button {\n    font: inherit;\n    font-feature-settings: inherit;\n    font-variation-settings: inherit;\n    letter-spacing: inherit;\n    color: inherit;\n    border-radius: 0;\n    background-color: transparent;\n    opacity: 1;\n  }\n  :where(select:is([multiple], [size])) optgroup {\n    font-weight: bolder;\n  }\n  :where(select:is([multiple], [size])) optgroup option {\n    padding-inline-start: 20px;\n  }\n  ::file-selector-button {\n    margin-inline-end: 4px;\n  }\n  ::-moz-placeholder {\n    opacity: 1;\n  }\n  ::placeholder {\n    opacity: 1;\n  }\n  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {\n    ::-moz-placeholder {\n      color: currentcolor;\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, currentcolor 50%, transparent);\n      }\n    }\n    ::placeholder {\n      color: currentcolor;\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, currentcolor 50%, transparent);\n      }\n    }\n  }\n  textarea {\n    resize: vertical;\n  }\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  ::-webkit-date-and-time-value {\n    min-height: 1lh;\n    text-align: inherit;\n  }\n  ::-webkit-datetime-edit {\n    display: inline-flex;\n  }\n  ::-webkit-datetime-edit-fields-wrapper {\n    padding: 0;\n  }\n  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {\n    padding-block: 0;\n  }\n  :-moz-ui-invalid {\n    box-shadow: none;\n  }\n  button, input:where([type=\"button\"], [type=\"reset\"], [type=\"submit\"]), ::file-selector-button {\n    -webkit-appearance: button;\n       -moz-appearance: button;\n            appearance: button;\n  }\n  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\n    height: auto;\n  }\n  [hidden]:where(:not([hidden=\"until-found\"])) {\n    display: none !important;\n  }\n}\n@layer utilities {\n  .diff {\n    position: relative;\n    display: grid;\n    width: 100%;\n    overflow: hidden;\n    webkit-user-select: none;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n            user-select: none;\n    direction: ltr;\n    container-type: inline-size;\n    grid-template-columns: auto 1fr;\n    &:focus-visible, &:has(.diff-item-1:focus-visible) {\n      outline-style: var(--tw-outline-style);\n      outline-width: 2px;\n      outline-offset: 1px;\n      outline-color: var(--color-base-content);\n    }\n    &:focus-visible {\n      outline-style: var(--tw-outline-style);\n      outline-width: 2px;\n      outline-offset: 1px;\n      outline-color: var(--color-base-content);\n      .diff-resizer {\n        min-width: 90cqi;\n        max-width: 90cqi;\n      }\n    }\n    &:has(.diff-item-2:focus-visible) {\n      outline-style: var(--tw-outline-style);\n      outline-width: 2px;\n      outline-offset: 1px;\n      .diff-resizer {\n        min-width: 10cqi;\n        max-width: 10cqi;\n      }\n    }\n    @supports (-webkit-overflow-scrolling: touch) and (overflow: -webkit-paged-x) {\n      &:focus {\n        .diff-resizer {\n          min-width: 10cqi;\n          max-width: 10cqi;\n        }\n      }\n      &:has(.diff-item-1:focus) {\n        .diff-resizer {\n          min-width: 90cqi;\n          max-width: 90cqi;\n        }\n      }\n    }\n  }\n  .modal {\n    pointer-events: none;\n    visibility: hidden;\n    position: fixed;\n    inset: calc(0.25rem * 0);\n    margin: calc(0.25rem * 0);\n    display: grid;\n    height: 100%;\n    max-height: none;\n    width: 100%;\n    max-width: none;\n    align-items: center;\n    justify-items: center;\n    background-color: transparent;\n    padding: calc(0.25rem * 0);\n    color: inherit;\n    overflow-x: hidden;\n    transition: translate 0.3s ease-out, visibility 0.3s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;\n    overflow-y: hidden;\n    overscroll-behavior: contain;\n    z-index: 999;\n    &::backdrop {\n      display: none;\n    }\n    &.modal-open, &[open], &:target {\n      pointer-events: auto;\n      visibility: visible;\n      opacity: 100%;\n      background-color: oklch(0% 0 0/ 0.4);\n      .modal-box {\n        translate: 0 0;\n        scale: 1;\n        opacity: 1;\n      }\n    }\n    @starting-style {\n      &.modal-open, &[open], &:target {\n        visibility: hidden;\n        opacity: 0%;\n      }\n    }\n  }\n  .tooltip {\n    position: relative;\n    display: inline-block;\n    --tt-bg: var(--color-neutral);\n    --tt-off: calc(100% + 0.5rem);\n    --tt-tail: calc(100% + 1px + 0.25rem);\n    > :where(.tooltip-content), &:where([data-tip]):before {\n      position: absolute;\n      max-width: 20rem;\n      border-radius: var(--radius-field);\n      padding-inline: calc(0.25rem * 2);\n      padding-block: calc(0.25rem * 1);\n      text-align: center;\n      white-space: normal;\n      color: var(--color-neutral-content);\n      opacity: 0%;\n      font-size: 0.875rem;\n      line-height: 1.25;\n      transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;\n      background-color: var(--tt-bg);\n      width: -moz-max-content;\n      width: max-content;\n      pointer-events: none;\n      z-index: 1;\n      --tw-content: attr(data-tip);\n      content: var(--tw-content);\n    }\n    &:after {\n      position: absolute;\n      position: absolute;\n      opacity: 0%;\n      background-color: var(--tt-bg);\n      transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;\n      content: \"\";\n      pointer-events: none;\n      width: 0.625rem;\n      height: 0.25rem;\n      display: block;\n      -webkit-mask-repeat: no-repeat;\n              mask-repeat: no-repeat;\n      -webkit-mask-position: -1px 0;\n              mask-position: -1px 0;\n      --mask-tooltip: url(\"data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A\");\n      -webkit-mask-image: var(--mask-tooltip);\n              mask-image: var(--mask-tooltip);\n    }\n    &.tooltip-open, &[data-tip]:not([data-tip=\"\"]):hover, &:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover, &:has(:focus-visible) {\n      > .tooltip-content, &[data-tip]:before, &:after {\n        opacity: 100%;\n        --tt-pos: 0rem;\n        transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n      }\n    }\n    > .tooltip-content, &[data-tip]:before {\n      transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));\n      inset: auto auto var(--tt-off) 50%;\n    }\n    &:after {\n      transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));\n      inset: auto auto var(--tt-tail) 50%;\n    }\n  }\n  .tab {\n    position: relative;\n    display: inline-flex;\n    cursor: pointer;\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    webkit-user-select: none;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n            user-select: none;\n    &:hover {\n      @media (hover: hover) {\n        color: var(--color-base-content);\n      }\n    }\n    --tab-p: 1rem;\n    --tab-bg: var(--color-base-100);\n    --tab-border-color: var(--color-base-300);\n    --tab-radius-ss: 0;\n    --tab-radius-se: 0;\n    --tab-radius-es: 0;\n    --tab-radius-ee: 0;\n    --tab-order: 0;\n    --tab-radius-min: calc(0.75rem - var(--border));\n    border-color: #0000;\n    order: var(--tab-order);\n    height: calc(var(--size-field, 0.25rem) * 10);\n    font-size: 0.875rem;\n    padding-inline-start: var(--tab-p);\n    padding-inline-end: var(--tab-p);\n    &:is(input[type=\"radio\"]) {\n      min-width: -moz-fit-content;\n      min-width: fit-content;\n      &:after {\n        content: attr(aria-label);\n      }\n    }\n    &:is(label) {\n      position: relative;\n      input {\n        position: absolute;\n        inset: calc(0.25rem * 0);\n        cursor: pointer;\n        -webkit-appearance: none;\n           -moz-appearance: none;\n                appearance: none;\n        opacity: 0%;\n      }\n    }\n    &:checked, &:is(label:has(:checked)), &:is(.tab-active, [aria-selected=\"true\"]) {\n      & + .tab-content {\n        display: block;\n        height: 100%;\n      }\n    }\n    &:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected=\"true\"]) {\n      color: var(--color-base-content);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);\n      }\n    }\n    &:not(input):empty {\n      flex-grow: 1;\n      cursor: default;\n    }\n    &:focus {\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n    }\n    &:focus-visible, &:is(label:has(:checked:focus-visible)) {\n      outline: 2px solid currentColor;\n      outline-offset: -5px;\n    }\n    &[disabled] {\n      pointer-events: none;\n      opacity: 40%;\n    }\n  }\n  .menu {\n    display: flex;\n    width: -moz-fit-content;\n    width: fit-content;\n    flex-direction: column;\n    flex-wrap: wrap;\n    padding: calc(0.25rem * 2);\n    --menu-active-fg: var(--color-neutral-content);\n    --menu-active-bg: var(--color-neutral);\n    font-size: 0.875rem;\n    :where(li ul) {\n      position: relative;\n      margin-inline-start: calc(0.25rem * 4);\n      padding-inline-start: calc(0.25rem * 2);\n      white-space: nowrap;\n      &:before {\n        position: absolute;\n        inset-inline-start: calc(0.25rem * 0);\n        top: calc(0.25rem * 3);\n        bottom: calc(0.25rem * 3);\n        background-color: var(--color-base-content);\n        opacity: 10%;\n        width: var(--border);\n        content: \"\";\n      }\n    }\n    :where(li > .menu-dropdown:not(.menu-dropdown-show)) {\n      display: none;\n    }\n    :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {\n      display: grid;\n      grid-auto-flow: column;\n      align-content: flex-start;\n      align-items: center;\n      gap: calc(0.25rem * 2);\n      border-radius: var(--radius-field);\n      padding-inline: calc(0.25rem * 3);\n      padding-block: calc(0.25rem * 1.5);\n      text-align: start;\n      transition-property: color, background-color, box-shadow;\n      transition-duration: 0.2s;\n      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\n      grid-auto-columns: minmax(auto, max-content) auto max-content;\n      text-wrap: balance;\n      -webkit-user-select: none;\n         -moz-user-select: none;\n              user-select: none;\n    }\n    :where(li > details > summary) {\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n      &::-webkit-details-marker {\n        display: none;\n      }\n    }\n    :where(li > details > summary), :where(li > .menu-dropdown-toggle) {\n      &:after {\n        justify-self: flex-end;\n        display: block;\n        height: 0.375rem;\n        width: 0.375rem;\n        rotate: -135deg;\n        translate: 0 -1px;\n        transition-property: rotate, translate;\n        transition-duration: 0.2s;\n        content: \"\";\n        transform-origin: 50% 50%;\n        box-shadow: 2px 2px inset;\n        pointer-events: none;\n      }\n    }\n    :where(li > details[open] > summary):after, :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {\n      rotate: 45deg;\n      translate: 0 1px;\n    }\n    :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn) {\n      &.menu-focus, &:focus-visible {\n        cursor: pointer;\n        background-color: var(--color-base-content);\n        @supports (color: color-mix(in lab, red, red)) {\n          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);\n        }\n        color: var(--color-base-content);\n        --tw-outline-style: none;\n        outline-style: none;\n        @media (forced-colors: active) {\n          outline: 2px solid transparent;\n          outline-offset: 2px;\n        }\n      }\n    }\n    :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {\n      cursor: pointer;\n      background-color: var(--color-base-content);\n      @supports (color: color-mix(in lab, red, red)) {\n        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);\n      }\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n      box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;\n    }\n    :where(li:empty) {\n      background-color: var(--color-base-content);\n      opacity: 10%;\n      margin: 0.5rem 1rem;\n      height: 1px;\n    }\n    :where(li) {\n      position: relative;\n      display: flex;\n      flex-shrink: 0;\n      flex-direction: column;\n      flex-wrap: wrap;\n      align-items: stretch;\n      .badge {\n        justify-self: flex-end;\n      }\n      & > *:not(ul, .menu-title, details, .btn):active, & > *:not(ul, .menu-title, details, .btn).menu-active, & > details > summary:active {\n        --tw-outline-style: none;\n        outline-style: none;\n        @media (forced-colors: active) {\n          outline: 2px solid transparent;\n          outline-offset: 2px;\n        }\n        color: var(--menu-active-fg);\n        background-color: var(--menu-active-bg);\n        background-size: auto, calc(var(--noise) * 100%);\n        background-image: none, var(--fx-noise);\n        &:not(&:active) {\n          box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);\n        }\n      }\n      &.menu-disabled {\n        pointer-events: none;\n        color: var(--color-base-content);\n        @supports (color: color-mix(in lab, red, red)) {\n          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n        }\n      }\n    }\n    .dropdown:focus-within {\n      .menu-dropdown-toggle:after {\n        rotate: 45deg;\n        translate: 0 1px;\n      }\n    }\n    .dropdown-content {\n      margin-top: calc(0.25rem * 2);\n      padding: calc(0.25rem * 2);\n      &:before {\n        display: none;\n      }\n    }\n  }\n  .collapse-arrow {\n    > .collapse-title:after {\n      position: absolute;\n      display: block;\n      height: 0.5rem;\n      width: 0.5rem;\n      transform: translateY(-100%) rotate(45deg);\n      transition-property: all;\n      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      transition-duration: 0.2s;\n      top: 1.9rem;\n      inset-inline-end: 1.4rem;\n      content: \"\";\n      transform-origin: 75% 75%;\n      box-shadow: 2px 2px;\n      pointer-events: none;\n    }\n  }\n  .dock {\n    position: fixed;\n    right: calc(0.25rem * 0);\n    bottom: calc(0.25rem * 0);\n    left: calc(0.25rem * 0);\n    z-index: 1;\n    display: flex;\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-around;\n    background-color: var(--color-base-100);\n    padding: calc(0.25rem * 2);\n    color: currentColor;\n    border-top: 0.5px solid var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      border-top: 0.5px solid color-mix(in oklab, var(--color-base-content) 5%, #0000);\n    }\n    height: 4rem;\n    height: calc(4rem + env(safe-area-inset-bottom));\n    padding-bottom: env(safe-area-inset-bottom);\n    > * {\n      position: relative;\n      margin-bottom: calc(0.25rem * 2);\n      display: flex;\n      height: 100%;\n      max-width: calc(0.25rem * 32);\n      flex-shrink: 1;\n      flex-basis: 100%;\n      cursor: pointer;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      gap: 1px;\n      border-radius: var(--radius-box);\n      background-color: transparent;\n      transition: opacity 0.2s ease-out;\n      @media (hover: hover) {\n        &:hover {\n          opacity: 80%;\n        }\n      }\n      &[aria-disabled=\"true\"], &[disabled] {\n        &, &:hover {\n          pointer-events: none;\n          color: var(--color-base-content);\n          @supports (color: color-mix(in lab, red, red)) {\n            color: color-mix(in oklab, var(--color-base-content) 10%, transparent);\n          }\n          opacity: 100%;\n        }\n      }\n      .dock-label {\n        font-size: 0.6875rem;\n      }\n      &:after {\n        content: \"\";\n        position: absolute;\n        height: calc(0.25rem * 1);\n        width: calc(0.25rem * 6);\n        border-radius: calc(infinity * 1px);\n        background-color: transparent;\n        bottom: 0.2rem;\n        border-top: 3px solid transparent;\n        transition: background-color 0.1s ease-out, text-color 0.1s ease-out, width 0.1s ease-out;\n      }\n    }\n  }\n  .dropdown {\n    position: relative;\n    display: inline-block;\n    position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);\n    & > *:not(summary):focus {\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n    }\n    .dropdown-content {\n      position: absolute;\n    }\n    &:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) {\n      .dropdown-content {\n        display: none;\n        transform-origin: top;\n        opacity: 0%;\n        scale: 95%;\n      }\n    }\n    &[popover], .dropdown-content {\n      z-index: 999;\n      animation: dropdown 0.2s;\n      transition-property: opacity, scale, display;\n      transition-behavior: allow-discrete;\n      transition-duration: 0.2s;\n      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    }\n    @starting-style {\n      &[popover], .dropdown-content {\n        scale: 95%;\n        opacity: 0;\n      }\n    }\n    &.dropdown-open, &:not(.dropdown-hover):focus, &:focus-within {\n      > [tabindex]:first-child {\n        pointer-events: none;\n      }\n      .dropdown-content {\n        opacity: 100%;\n      }\n    }\n    &.dropdown-hover:hover {\n      .dropdown-content {\n        opacity: 100%;\n        scale: 100%;\n      }\n    }\n    &:is(details) {\n      summary {\n        &::-webkit-details-marker {\n          display: none;\n        }\n      }\n    }\n    &.dropdown-open, &:focus, &:focus-within {\n      .dropdown-content {\n        scale: 100%;\n      }\n    }\n    &:where([popover]) {\n      background: #0000;\n    }\n    &[popover] {\n      position: fixed;\n      color: inherit;\n      @supports not (position-area: bottom) {\n        margin: auto;\n        &.dropdown-open:not(:popover-open) {\n          display: none;\n          transform-origin: top;\n          opacity: 0%;\n          scale: 95%;\n        }\n        &::backdrop {\n          background-color: color-mix(in oklab, #000 30%, #0000);\n        }\n      }\n      &:not(.dropdown-open, :popover-open) {\n        display: none;\n        transform-origin: top;\n        opacity: 0%;\n        scale: 95%;\n      }\n    }\n  }\n  .btn {\n    :where(&) {\n      width: unset;\n    }\n    display: inline-flex;\n    flex-shrink: 0;\n    cursor: pointer;\n    flex-wrap: nowrap;\n    align-items: center;\n    justify-content: center;\n    gap: calc(0.25rem * 1.5);\n    text-align: center;\n    vertical-align: middle;\n    outline-offset: 2px;\n    webkit-user-select: none;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n            user-select: none;\n    padding-inline: var(--btn-p);\n    color: var(--btn-fg);\n    --tw-prose-links: var(--btn-fg);\n    height: var(--size);\n    font-size: var(--fontsize, 0.875rem);\n    font-weight: 600;\n    outline-color: var(--btn-color, var(--color-base-content));\n    transition-property: color, background-color, border-color, box-shadow;\n    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\n    transition-duration: 0.2s;\n    border-start-start-radius: var(--join-ss, var(--radius-field));\n    border-start-end-radius: var(--join-se, var(--radius-field));\n    border-end-start-radius: var(--join-es, var(--radius-field));\n    border-end-end-radius: var(--join-ee, var(--radius-field));\n    background-color: var(--btn-bg);\n    background-size: auto, calc(var(--noise) * 100%);\n    background-image: none, var(--btn-noise);\n    border-width: var(--border);\n    border-style: solid;\n    border-color: var(--btn-border);\n    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));\n    touch-action: manipulation;\n    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);\n    --size: calc(var(--size-field, 0.25rem) * 10);\n    --btn-bg: var(--btn-color, var(--color-base-200));\n    --btn-fg: var(--color-base-content);\n    --btn-p: 1rem;\n    --btn-border: var(--btn-bg);\n    @supports (color: color-mix(in lab, red, red)) {\n      --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));\n    }\n    --btn-shadow: 0 3px 2px -2px var(--btn-bg),\n    0 4px 3px -2px var(--btn-bg);\n    @supports (color: color-mix(in lab, red, red)) {\n      --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),\n    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);\n    }\n    --btn-noise: var(--fx-noise);\n    .prose & {\n      text-decoration-line: none;\n    }\n    @media (hover: hover) {\n      &:hover {\n        --btn-bg: var(--btn-color, var(--color-base-200));\n        @supports (color: color-mix(in lab, red, red)) {\n          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);\n        }\n      }\n    }\n    &:focus-visible {\n      outline-width: 2px;\n      outline-style: solid;\n      isolation: isolate;\n    }\n    &:active:not(.btn-active) {\n      translate: 0 0.5px;\n      --btn-bg: var(--btn-color, var(--color-base-200));\n      @supports (color: color-mix(in lab, red, red)) {\n        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);\n      }\n      --btn-border: var(--btn-color, var(--color-base-200));\n      @supports (color: color-mix(in lab, red, red)) {\n        --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);\n      }\n      --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);\n    }\n    &:is(:disabled, [disabled], .btn-disabled) {\n      &:not(.btn-link, .btn-ghost) {\n        background-color: var(--color-base-content);\n        @supports (color: color-mix(in lab, red, red)) {\n          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);\n        }\n        box-shadow: none;\n      }\n      pointer-events: none;\n      --btn-border: #0000;\n      --btn-noise: none;\n      --btn-fg: var(--color-base-content);\n      @supports (color: color-mix(in lab, red, red)) {\n        --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);\n      }\n      @media (hover: hover) {\n        &:hover {\n          pointer-events: none;\n          background-color: var(--color-neutral);\n          @supports (color: color-mix(in lab, red, red)) {\n            background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);\n          }\n          --btn-border: #0000;\n          --btn-fg: var(--color-base-content);\n          @supports (color: color-mix(in lab, red, red)) {\n            --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);\n          }\n        }\n      }\n    }\n    &:is(input[type=\"checkbox\"], input[type=\"radio\"]) {\n      -webkit-appearance: none;\n         -moz-appearance: none;\n              appearance: none;\n      &::after {\n        content: attr(aria-label);\n      }\n    }\n    &:where(input:checked:not(.filter .btn)) {\n      --btn-color: var(--color-primary);\n      --btn-fg: var(--color-primary-content);\n      isolation: isolate;\n    }\n  }\n  .loading {\n    pointer-events: none;\n    display: inline-block;\n    aspect-ratio: 1 / 1;\n    background-color: currentColor;\n    vertical-align: middle;\n    width: calc(var(--size-selector, 0.25rem) * 6);\n    -webkit-mask-size: 100%;\n            mask-size: 100%;\n    -webkit-mask-repeat: no-repeat;\n            mask-repeat: no-repeat;\n    -webkit-mask-position: center;\n            mask-position: center;\n    -webkit-mask-image: url(\"data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n            mask-image: url(\"data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n  }\n  .pointer-events-none {\n    pointer-events: none;\n  }\n  .collapse {\n    &:not(td, tr, colgroup) {\n      visibility: visible;\n    }\n    position: relative;\n    display: grid;\n    overflow: hidden;\n    border-radius: var(--radius-box, 1rem);\n    width: 100%;\n    grid-template-rows: max-content 0fr;\n    transition: grid-template-rows 0.2s;\n    isolation: isolate;\n    > input:is([type=\"checkbox\"], [type=\"radio\"]) {\n      grid-column-start: 1;\n      grid-row-start: 1;\n      -webkit-appearance: none;\n         -moz-appearance: none;\n              appearance: none;\n      opacity: 0;\n      z-index: 1;\n      width: 100%;\n      padding: 1rem;\n      padding-inline-end: 3rem;\n      min-height: 3.75rem;\n      transition: background-color 0.2s ease-out;\n    }\n    &:is([open], :focus:not(.collapse-close)), &:not(.collapse-close):has(> input:is([type=\"checkbox\"], [type=\"radio\"]):checked) {\n      grid-template-rows: max-content 1fr;\n    }\n    &:is([open], :focus:not(.collapse-close)) > .collapse-content, &:not(.collapse-close) > :where(input:is([type=\"checkbox\"], [type=\"radio\"]):checked ~ .collapse-content) {\n      visibility: visible;\n      min-height: -moz-fit-content;\n      min-height: fit-content;\n    }\n    &:focus-visible, &:has(> input:is([type=\"checkbox\"], [type=\"radio\"]):focus-visible) {\n      outline-color: var(--color-base-content);\n      outline-style: solid;\n      outline-width: 2px;\n      outline-offset: 2px;\n    }\n    &:not(.collapse-close) {\n      > input[type=\"checkbox\"], > input[type=\"radio\"]:not(:checked), > .collapse-title {\n        cursor: pointer;\n      }\n    }\n    &:focus:not(.collapse-close, .collapse[open]) > .collapse-title {\n      cursor: unset;\n    }\n    &:is([open], :focus:not(.collapse-close)) > :where(.collapse-content), &:not(.collapse-close) > :where(input:is([type=\"checkbox\"], [type=\"radio\"]):checked ~ .collapse-content) {\n      padding-bottom: 1rem;\n      transition: padding 0.2s ease-out, background-color 0.2s ease-out;\n    }\n    &:is([open]) {\n      &.collapse-arrow {\n        > .collapse-title:after {\n          transform: translateY(-50%) rotate(225deg);\n        }\n      }\n    }\n    &.collapse-open {\n      &.collapse-arrow {\n        > .collapse-title:after {\n          transform: translateY(-50%) rotate(225deg);\n        }\n      }\n      &.collapse-plus {\n        > .collapse-title:after {\n          content: \"−\";\n        }\n      }\n    }\n    &.collapse-arrow:focus:not(.collapse-close) {\n      > .collapse-title:after {\n        transform: translateY(-50%) rotate(225deg);\n      }\n    }\n    &.collapse-arrow:not(.collapse-close) {\n      > input:is([type=\"checkbox\"], [type=\"radio\"]):checked ~ .collapse-title:after {\n        transform: translateY(-50%) rotate(225deg);\n      }\n    }\n    &[open] {\n      &.collapse-plus {\n        > .collapse-title:after {\n          content: \"−\";\n        }\n      }\n    }\n    &.collapse-plus:focus:not(.collapse-close) {\n      > .collapse-title:after {\n        content: \"−\";\n      }\n    }\n    &.collapse-plus:not(.collapse-close) {\n      > input:is([type=\"checkbox\"], [type=\"radio\"]):checked ~ .collapse-title:after {\n        content: \"−\";\n      }\n    }\n    &:is(details) {\n      width: 100%;\n      & summary {\n        position: relative;\n        display: block;\n        &::-webkit-details-marker {\n          display: none;\n        }\n      }\n    }\n    &:is(details) summary {\n      outline: none;\n    }\n  }\n  .collapse-content {\n    grid-column-start: 1;\n    grid-row-start: 1;\n    visibility: hidden;\n    grid-column-start: 1;\n    grid-row-start: 2;\n    min-height: 0;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    cursor: unset;\n    transition: visibility 0.2s, padding 0.2s ease-out, background-color 0.2s ease-out;\n  }\n  .validator-hint {\n    visibility: hidden;\n    margin-top: calc(0.25rem * 2);\n    font-size: 0.75rem;\n  }\n  .validator {\n    &:user-valid, &:has(:user-valid) {\n      &, &:focus, &:checked, &[aria-checked=\"true\"], &:focus-within {\n        --input-color: var(--color-success);\n      }\n    }\n    &:user-invalid, &:has(:user-invalid), &[aria-invalid] {\n      &, &:focus, &:checked, &[aria-checked=\"true\"], &:focus-within {\n        --input-color: var(--color-error);\n      }\n      & ~ .validator-hint {\n        visibility: visible;\n        display: block;\n        color: var(--color-error);\n      }\n    }\n  }\n  .collapse {\n    visibility: collapse;\n  }\n  .visible {\n    visibility: visible;\n  }\n  .list {\n    display: flex;\n    flex-direction: column;\n    font-size: 0.875rem;\n    :where(.list-row) {\n      --list-grid-cols: minmax(0, auto) 1fr;\n      position: relative;\n      display: grid;\n      grid-auto-flow: column;\n      gap: calc(0.25rem * 4);\n      border-radius: var(--radius-box);\n      padding: calc(0.25rem * 4);\n      word-break: break-word;\n      grid-template-columns: var(--list-grid-cols);\n      &:has(.list-col-grow:nth-child(1)) {\n        --list-grid-cols: 1fr;\n      }\n      &:has(.list-col-grow:nth-child(2)) {\n        --list-grid-cols: minmax(0, auto) 1fr;\n      }\n      &:has(.list-col-grow:nth-child(3)) {\n        --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;\n      }\n      &:has(.list-col-grow:nth-child(4)) {\n        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;\n      }\n      &:has(.list-col-grow:nth-child(5)) {\n        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;\n      }\n      &:has(.list-col-grow:nth-child(6)) {\n        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)\n        minmax(0, auto) 1fr;\n      }\n      :not(.list-col-wrap) {\n        grid-row-start: 1;\n      }\n    }\n    & > :not(:last-child) {\n      &.list-row, .list-row {\n        &:after {\n          content: \"\";\n          border-bottom: var(--border) solid;\n          inset-inline: var(--radius-box);\n          position: absolute;\n          bottom: calc(0.25rem * 0);\n          border-color: var(--color-base-content);\n          @supports (color: color-mix(in lab, red, red)) {\n            border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);\n          }\n        }\n      }\n    }\n  }\n  .toast {\n    position: fixed;\n    inset-inline-start: auto;\n    inset-inline-end: calc(0.25rem * 4);\n    top: auto;\n    bottom: calc(0.25rem * 4);\n    display: flex;\n    flex-direction: column;\n    gap: calc(0.25rem * 2);\n    background-color: transparent;\n    translate: var(--toast-x, 0) var(--toast-y, 0);\n    width: -moz-max-content;\n    width: max-content;\n    max-width: calc(100vw - 2rem);\n    & > * {\n      animation: toast 0.25s ease-out;\n    }\n    &:where(.toast-start) {\n      inset-inline-start: calc(0.25rem * 4);\n      inset-inline-end: auto;\n      --toast-x: 0;\n    }\n    &:where(.toast-center) {\n      inset-inline-start: calc(1/2 * 100%);\n      inset-inline-end: calc(1/2 * 100%);\n      --toast-x: -50%;\n    }\n    &:where(.toast-end) {\n      inset-inline-start: auto;\n      inset-inline-end: calc(0.25rem * 4);\n      --toast-x: 0;\n    }\n    &:where(.toast-bottom) {\n      top: auto;\n      bottom: calc(0.25rem * 4);\n      --toast-y: 0;\n    }\n    &:where(.toast-middle) {\n      top: calc(1/2 * 100%);\n      bottom: auto;\n      --toast-y: -50%;\n    }\n    &:where(.toast-top) {\n      top: calc(0.25rem * 4);\n      bottom: auto;\n      --toast-y: 0;\n    }\n  }\n  .toggle {\n    border: var(--border) solid currentColor;\n    color: var(--input-color);\n    position: relative;\n    display: inline-grid;\n    flex-shrink: 0;\n    cursor: pointer;\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n    place-content: center;\n    vertical-align: middle;\n    webkit-user-select: none;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n            user-select: none;\n    grid-template-columns: 0fr 1fr 1fr;\n    --radius-selector-max: calc(\n    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)\n  );\n    border-radius: calc( var(--radius-selector) + min(var(--toggle-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) );\n    padding: var(--toggle-p);\n    box-shadow: 0 1px currentColor inset;\n    @supports (color: color-mix(in lab, red, red)) {\n      box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;\n    }\n    transition: color 0.3s, grid-template-columns 0.2s;\n    --input-color: var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);\n    }\n    --toggle-p: calc(var(--size) * 0.125);\n    --size: calc(var(--size-selector, 0.25rem) * 6);\n    width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2);\n    height: var(--size);\n    > * {\n      z-index: 1;\n      grid-column: span 1 / span 1;\n      grid-column-start: 2;\n      grid-row-start: 1;\n      height: 100%;\n      cursor: pointer;\n      -webkit-appearance: none;\n         -moz-appearance: none;\n              appearance: none;\n      background-color: transparent;\n      padding: calc(0.25rem * 0.5);\n      transition: opacity 0.2s, rotate 0.4s;\n      border: none;\n      &:focus {\n        --tw-outline-style: none;\n        outline-style: none;\n        @media (forced-colors: active) {\n          outline: 2px solid transparent;\n          outline-offset: 2px;\n        }\n      }\n      &:nth-child(2) {\n        color: var(--color-base-100);\n        rotate: 0deg;\n      }\n      &:nth-child(3) {\n        color: var(--color-base-100);\n        opacity: 0%;\n        rotate: -15deg;\n      }\n    }\n    &:has(:checked) {\n      > :nth-child(2) {\n        opacity: 0%;\n        rotate: 15deg;\n      }\n      > :nth-child(3) {\n        opacity: 100%;\n        rotate: 0deg;\n      }\n    }\n    &:before {\n      position: relative;\n      inset-inline-start: calc(0.25rem * 0);\n      grid-column-start: 2;\n      grid-row-start: 1;\n      aspect-ratio: 1 / 1;\n      height: 100%;\n      border-radius: var(--radius-selector);\n      background-color: currentColor;\n      translate: 0;\n      --tw-content: \"\";\n      content: var(--tw-content);\n      transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;\n      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor;\n      @supports (color: color-mix(in lab, red, red)) {\n        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);\n      }\n      background-size: auto, calc(var(--noise) * 100%);\n      background-image: none, var(--fx-noise);\n    }\n    @media (forced-colors: active) {\n      &:before {\n        outline-style: var(--tw-outline-style);\n        outline-width: 1px;\n        outline-offset: calc(1px * -1);\n      }\n    }\n    @media print {\n      &:before {\n        outline: 0.25rem solid;\n        outline-offset: -1rem;\n      }\n    }\n    &:focus-visible, &:has(:focus-visible) {\n      outline: 2px solid currentColor;\n      outline-offset: 2px;\n    }\n    &:checked, &[aria-checked=\"true\"], &:has(> input:checked) {\n      grid-template-columns: 1fr 1fr 0fr;\n      background-color: var(--color-base-100);\n      --input-color: var(--color-base-content);\n      &:before {\n        background-color: currentColor;\n      }\n      @starting-style {\n        &:before {\n          opacity: 0;\n        }\n      }\n    }\n    &:indeterminate {\n      grid-template-columns: 0.5fr 1fr 0.5fr;\n    }\n    &:disabled {\n      cursor: not-allowed;\n      opacity: 30%;\n      &:before {\n        background-color: transparent;\n        border: var(--border) solid currentColor;\n      }\n    }\n  }\n  .input {\n    cursor: text;\n    border: var(--border) solid #0000;\n    position: relative;\n    display: inline-flex;\n    flex-shrink: 1;\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n    align-items: center;\n    gap: calc(0.25rem * 2);\n    background-color: var(--color-base-100);\n    padding-inline: calc(0.25rem * 3);\n    vertical-align: middle;\n    white-space: nowrap;\n    width: clamp(3rem, 20rem, 100%);\n    height: var(--size);\n    font-size: 0.875rem;\n    border-start-start-radius: var(--join-ss, var(--radius-field));\n    border-start-end-radius: var(--join-se, var(--radius-field));\n    border-end-start-radius: var(--join-es, var(--radius-field));\n    border-end-end-radius: var(--join-ee, var(--radius-field));\n    border-color: var(--input-color);\n    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n    @supports (color: color-mix(in lab, red, red)) {\n      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n    }\n    --size: calc(var(--size-field, 0.25rem) * 10);\n    --input-color: var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);\n    }\n    &:where(input) {\n      display: inline-flex;\n    }\n    :where(input) {\n      display: inline-flex;\n      height: 100%;\n      width: 100%;\n      -webkit-appearance: none;\n         -moz-appearance: none;\n              appearance: none;\n      background-color: transparent;\n      border: none;\n      &:focus, &:focus-within {\n        --tw-outline-style: none;\n        outline-style: none;\n        @media (forced-colors: active) {\n          outline: 2px solid transparent;\n          outline-offset: 2px;\n        }\n      }\n    }\n    :where(input[type=\"date\"]) {\n      display: inline-block;\n    }\n    &:focus, &:focus-within {\n      --input-color: var(--color-base-content);\n      box-shadow: 0 1px var(--input-color);\n      @supports (color: color-mix(in lab, red, red)) {\n        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);\n      }\n      outline: 2px solid var(--input-color);\n      outline-offset: 2px;\n      isolation: isolate;\n      z-index: 1;\n    }\n    &:has(> input[disabled]), &:is(:disabled, [disabled]) {\n      cursor: not-allowed;\n      border-color: var(--color-base-200);\n      background-color: var(--color-base-200);\n      color: var(--color-base-content);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);\n      }\n      &::-moz-placeholder {\n        color: var(--color-base-content);\n        @supports (color: color-mix(in lab, red, red)) {\n          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n        }\n      }\n      &::placeholder {\n        color: var(--color-base-content);\n        @supports (color: color-mix(in lab, red, red)) {\n          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n        }\n      }\n      box-shadow: none;\n    }\n    &:has(> input[disabled]) > input[disabled] {\n      cursor: not-allowed;\n    }\n    &::-webkit-date-and-time-value {\n      text-align: inherit;\n    }\n    &[type=\"number\"] {\n      &::-webkit-inner-spin-button {\n        margin-block: calc(0.25rem * -3);\n        margin-inline-end: calc(0.25rem * -3);\n      }\n    }\n    &::-webkit-calendar-picker-indicator {\n      position: absolute;\n      inset-inline-end: 0.75em;\n    }\n  }\n  .indicator {\n    position: relative;\n    display: inline-flex;\n    width: -moz-max-content;\n    width: max-content;\n    :where(.indicator-item) {\n      z-index: 1;\n      position: absolute;\n      white-space: nowrap;\n      top: var(--inidicator-t, 0);\n      bottom: var(--inidicator-b, auto);\n      left: var(--inidicator-s, auto);\n      right: var(--inidicator-e, 0);\n      translate: var(--inidicator-x, 50%) var(--indicator-y, -50%);\n    }\n  }\n  .table {\n    font-size: 0.875rem;\n    position: relative;\n    width: 100%;\n    border-radius: var(--radius-box);\n    text-align: left;\n    &:where(:dir(rtl), [dir=\"rtl\"], [dir=\"rtl\"] *) {\n      text-align: right;\n    }\n    tr.row-hover {\n      &, &:nth-child(even) {\n        &:hover {\n          @media (hover: hover) {\n            background-color: var(--color-base-200);\n          }\n        }\n      }\n    }\n    :where(th, td) {\n      padding-inline: calc(0.25rem * 4);\n      padding-block: calc(0.25rem * 3);\n      vertical-align: middle;\n    }\n    :where(thead, tfoot) {\n      white-space: nowrap;\n      color: var(--color-base-content);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n      }\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n    :where(tfoot) {\n      border-top: var(--border) solid var(--color-base-content);\n      @supports (color: color-mix(in lab, red, red)) {\n        border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);\n      }\n    }\n    :where(.table-pin-rows thead tr) {\n      position: sticky;\n      top: calc(0.25rem * 0);\n      z-index: 1;\n      background-color: var(--color-base-100);\n    }\n    :where(.table-pin-rows tfoot tr) {\n      position: sticky;\n      bottom: calc(0.25rem * 0);\n      z-index: 1;\n      background-color: var(--color-base-100);\n    }\n    :where(.table-pin-cols tr th) {\n      position: sticky;\n      right: calc(0.25rem * 0);\n      left: calc(0.25rem * 0);\n      background-color: var(--color-base-100);\n    }\n    :where(thead tr, tbody tr:not(:last-child)) {\n      border-bottom: var(--border) solid var(--color-base-content);\n      @supports (color: color-mix(in lab, red, red)) {\n        border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);\n      }\n    }\n  }\n  .steps {\n    display: inline-grid;\n    grid-auto-flow: column;\n    overflow: hidden;\n    overflow-x: auto;\n    counter-reset: step;\n    grid-auto-columns: 1fr;\n    .step {\n      display: grid;\n      grid-template-columns: repeat(1, minmax(0, 1fr));\n      grid-template-columns: auto;\n      grid-template-rows: repeat(2, minmax(0, 1fr));\n      grid-template-rows: 40px 1fr;\n      place-items: center;\n      text-align: center;\n      min-width: 4rem;\n      --step-bg: var(--color-base-300);\n      --step-fg: var(--color-base-content);\n      &:before {\n        top: calc(0.25rem * 0);\n        grid-column-start: 1;\n        grid-row-start: 1;\n        height: calc(0.25rem * 2);\n        width: 100%;\n        border: 1px solid;\n        color: var(--step-bg);\n        background-color: var(--step-bg);\n        --tw-content: \"\";\n        content: var(--tw-content);\n        margin-inline-start: -100%;\n      }\n      > .step-icon, &:not(:has(.step-icon)):after {\n        content: counter(step);\n        counter-increment: step;\n        z-index: 1;\n        color: var(--step-fg);\n        background-color: var(--step-bg);\n        border: 1px solid var(--step-bg);\n        position: relative;\n        grid-column-start: 1;\n        grid-row-start: 1;\n        display: grid;\n        height: calc(0.25rem * 8);\n        width: calc(0.25rem * 8);\n        place-items: center;\n        place-self: center;\n        border-radius: calc(infinity * 1px);\n      }\n      &:first-child:before {\n        content: none;\n      }\n      &[data-content]:after {\n        content: attr(data-content);\n      }\n    }\n    .step-neutral {\n      + .step-neutral:before, &:after, > .step-icon {\n        --step-bg: var(--color-neutral);\n        --step-fg: var(--color-neutral-content);\n      }\n    }\n    .step-primary {\n      + .step-primary:before, &:after, > .step-icon {\n        --step-bg: var(--color-primary);\n        --step-fg: var(--color-primary-content);\n      }\n    }\n    .step-secondary {\n      + .step-secondary:before, &:after, > .step-icon {\n        --step-bg: var(--color-secondary);\n        --step-fg: var(--color-secondary-content);\n      }\n    }\n    .step-accent {\n      + .step-accent:before, &:after, > .step-icon {\n        --step-bg: var(--color-accent);\n        --step-fg: var(--color-accent-content);\n      }\n    }\n    .step-info {\n      + .step-info:before, &:after, > .step-icon {\n        --step-bg: var(--color-info);\n        --step-fg: var(--color-info-content);\n      }\n    }\n    .step-success {\n      + .step-success:before, &:after, > .step-icon {\n        --step-bg: var(--color-success);\n        --step-fg: var(--color-success-content);\n      }\n    }\n    .step-warning {\n      + .step-warning:before, &:after, > .step-icon {\n        --step-bg: var(--color-warning);\n        --step-fg: var(--color-warning-content);\n      }\n    }\n    .step-error {\n      + .step-error:before, &:after, > .step-icon {\n        --step-bg: var(--color-error);\n        --step-fg: var(--color-error-content);\n      }\n    }\n  }\n  .range {\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n    webkit-appearance: none;\n    --range-thumb: var(--color-base-100);\n    --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);\n    --range-progress: currentColor;\n    --range-fill: 1;\n    --range-p: 0.25rem;\n    --range-bg: currentColor;\n    @supports (color: color-mix(in lab, red, red)) {\n      --range-bg: color-mix(in oklab, currentColor 10%, #0000);\n    }\n    cursor: pointer;\n    overflow: hidden;\n    background-color: transparent;\n    vertical-align: middle;\n    width: clamp(3rem, 20rem, 100%);\n    --radius-selector-max: calc(\n    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)\n  );\n    border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));\n    border: none;\n    height: var(--range-thumb-size);\n    [dir=\"rtl\"] & {\n      --range-dir: -1;\n    }\n    &:focus {\n      outline: none;\n    }\n    &:focus-visible {\n      outline: 2px solid;\n      outline-offset: 2px;\n    }\n    &::-webkit-slider-runnable-track {\n      width: 100%;\n      background-color: var(--range-bg);\n      border-radius: var(--radius-selector);\n      height: calc(var(--range-thumb-size) * 0.5);\n    }\n    @media (forced-colors: active) {\n      &::-webkit-slider-runnable-track {\n        border: 1px solid;\n      }\n    }\n    @media (forced-colors: active) {\n      &::-moz-range-track {\n        border: 1px solid;\n      }\n    }\n    &::-webkit-slider-thumb {\n      position: relative;\n      box-sizing: border-box;\n      border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));\n      background-color: currentColor;\n      height: var(--range-thumb-size);\n      width: var(--range-thumb-size);\n      border: var(--range-p) solid;\n      -webkit-appearance: none;\n              appearance: none;\n      webkit-appearance: none;\n      top: 50%;\n      color: var(--range-progress);\n      transform: translateY(-50%);\n      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));\n      @supports (color: color-mix(in lab, red, red)) {\n        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));\n      }\n    }\n    &::-moz-range-track {\n      width: 100%;\n      background-color: var(--range-bg);\n      border-radius: var(--radius-selector);\n      height: calc(var(--range-thumb-size) * 0.5);\n    }\n    &::-moz-range-thumb {\n      position: relative;\n      box-sizing: border-box;\n      border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));\n      background-color: currentColor;\n      height: var(--range-thumb-size);\n      width: var(--range-thumb-size);\n      border: var(--range-p) solid;\n      top: 50%;\n      color: var(--range-progress);\n      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));\n      @supports (color: color-mix(in lab, red, red)) {\n        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));\n      }\n    }\n    &:disabled {\n      cursor: not-allowed;\n      opacity: 30%;\n    }\n  }\n  .select {\n    border: var(--border) solid #0000;\n    position: relative;\n    display: inline-flex;\n    flex-shrink: 1;\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n    align-items: center;\n    gap: calc(0.25rem * 1.5);\n    background-color: var(--color-base-100);\n    padding-inline-start: calc(0.25rem * 4);\n    padding-inline-end: calc(0.25rem * 7);\n    vertical-align: middle;\n    width: clamp(3rem, 20rem, 100%);\n    height: var(--size);\n    font-size: 0.875rem;\n    border-start-start-radius: var(--join-ss, var(--radius-field));\n    border-start-end-radius: var(--join-se, var(--radius-field));\n    border-end-start-radius: var(--join-es, var(--radius-field));\n    border-end-end-radius: var(--join-ee, var(--radius-field));\n    background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);\n    background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);\n    background-size: 4px 4px, 4px 4px;\n    background-repeat: no-repeat;\n    text-overflow: ellipsis;\n    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n    @supports (color: color-mix(in lab, red, red)) {\n      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n    }\n    border-color: var(--input-color);\n    --input-color: var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);\n    }\n    --size: calc(var(--size-field, 0.25rem) * 10);\n    [dir=\"rtl\"] & {\n      background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);\n    }\n    select {\n      margin-inline-start: calc(0.25rem * -4);\n      margin-inline-end: calc(0.25rem * -7);\n      width: calc(100% + 2.75rem);\n      -webkit-appearance: none;\n         -moz-appearance: none;\n              appearance: none;\n      padding-inline-start: calc(0.25rem * 4);\n      padding-inline-end: calc(0.25rem * 7);\n      height: calc(100% - 2px);\n      background: inherit;\n      border-radius: inherit;\n      border-style: none;\n      &:focus, &:focus-within {\n        --tw-outline-style: none;\n        outline-style: none;\n        @media (forced-colors: active) {\n          outline: 2px solid transparent;\n          outline-offset: 2px;\n        }\n      }\n      &:not(:last-child) {\n        margin-inline-end: calc(0.25rem * -5.5);\n        background-image: none;\n      }\n    }\n    &:focus, &:focus-within {\n      --input-color: var(--color-base-content);\n      box-shadow: 0 1px var(--input-color);\n      @supports (color: color-mix(in lab, red, red)) {\n        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);\n      }\n      outline: 2px solid var(--input-color);\n      outline-offset: 2px;\n      isolation: isolate;\n      z-index: 1;\n    }\n    &:has(> select[disabled]), &:is(:disabled, [disabled]) {\n      cursor: not-allowed;\n      border-color: var(--color-base-200);\n      background-color: var(--color-base-200);\n      color: var(--color-base-content);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);\n      }\n      &::-moz-placeholder {\n        color: var(--color-base-content);\n        @supports (color: color-mix(in lab, red, red)) {\n          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n        }\n      }\n      &::placeholder {\n        color: var(--color-base-content);\n        @supports (color: color-mix(in lab, red, red)) {\n          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n        }\n      }\n    }\n    &:has(> select[disabled]) > select[disabled] {\n      cursor: not-allowed;\n    }\n  }\n  .card {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    border-radius: var(--radius-box);\n    outline-width: 2px;\n    transition: outline 0.2s ease-in-out;\n    outline: 0 solid #0000;\n    outline-offset: 2px;\n    &:focus {\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n    }\n    &:focus-visible {\n      outline-color: currentColor;\n    }\n    :where(figure:first-child) {\n      overflow: hidden;\n      border-start-start-radius: inherit;\n      border-start-end-radius: inherit;\n      border-end-start-radius: unset;\n      border-end-end-radius: unset;\n    }\n    :where(figure:last-child) {\n      overflow: hidden;\n      border-start-start-radius: unset;\n      border-start-end-radius: unset;\n      border-end-start-radius: inherit;\n      border-end-end-radius: inherit;\n    }\n    &:where(.card-border) {\n      border: var(--border) solid var(--color-base-200);\n    }\n    &:where(.card-dash) {\n      border: var(--border) dashed var(--color-base-200);\n    }\n    &.image-full {\n      display: grid;\n      > * {\n        grid-column-start: 1;\n        grid-row-start: 1;\n      }\n      > .card-body {\n        position: relative;\n        color: var(--color-neutral-content);\n      }\n      :where(figure) {\n        overflow: hidden;\n        border-radius: inherit;\n      }\n      > figure img {\n        height: 100%;\n        -o-object-fit: cover;\n           object-fit: cover;\n        filter: brightness(28%);\n      }\n    }\n    figure {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    &:has(> input:is(input[type=\"checkbox\"], input[type=\"radio\"])) {\n      cursor: pointer;\n      -webkit-user-select: none;\n         -moz-user-select: none;\n              user-select: none;\n    }\n    &:has(> :checked) {\n      outline: 2px solid currentColor;\n    }\n  }\n  .collapse-title {\n    grid-column-start: 1;\n    grid-row-start: 1;\n    position: relative;\n    width: 100%;\n    padding: 1rem;\n    padding-inline-end: 3rem;\n    min-height: 3.75rem;\n    transition: background-color 0.2s ease-out;\n  }\n  .sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border-width: 0;\n  }\n  .avatar {\n    position: relative;\n    display: inline-flex;\n    vertical-align: middle;\n    & > div {\n      display: block;\n      aspect-ratio: 1 / 1;\n      overflow: hidden;\n    }\n    img {\n      height: 100%;\n      width: 100%;\n      -o-object-fit: cover;\n         object-fit: cover;\n    }\n  }\n  .checkbox {\n    border: var(--border) solid var(--input-color, var(--color-base-content));\n    @supports (color: color-mix(in lab, red, red)) {\n      border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));\n    }\n    position: relative;\n    flex-shrink: 0;\n    cursor: pointer;\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n    border-radius: var(--radius-selector);\n    padding: calc(0.25rem * 1);\n    vertical-align: middle;\n    color: var(--color-base-content);\n    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;\n    transition: background-color 0.2s, box-shadow 0.2s;\n    --size: calc(var(--size-selector, 0.25rem) * 6);\n    width: var(--size);\n    height: var(--size);\n    background-size: auto, calc(var(--noise) * 100%);\n    background-image: none, var(--fx-noise);\n    &:before {\n      --tw-content: \"\";\n      content: var(--tw-content);\n      display: block;\n      width: 100%;\n      height: 100%;\n      rotate: 45deg;\n      background-color: currentColor;\n      opacity: 0%;\n      transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;\n      transition-delay: 0.1s;\n      clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);\n      box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n      font-size: 1rem;\n      line-height: 0.75;\n    }\n    &:focus-visible {\n      outline: 2px solid var(--input-color, currentColor);\n      outline-offset: 2px;\n    }\n    &:checked, &[aria-checked=\"true\"] {\n      background-color: var(--input-color, #0000);\n      box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));\n      &:before {\n        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);\n        opacity: 100%;\n      }\n      @media (forced-colors: active) {\n        &:before {\n          rotate: 0deg;\n          background-color: transparent;\n          --tw-content: \"✔︎\";\n          clip-path: none;\n        }\n      }\n      @media print {\n        &:before {\n          rotate: 0deg;\n          background-color: transparent;\n          --tw-content: \"✔︎\";\n          clip-path: none;\n        }\n      }\n    }\n    &:indeterminate {\n      &:before {\n        rotate: 0deg;\n        opacity: 100%;\n        translate: 0 -35%;\n        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);\n      }\n    }\n    &:disabled {\n      cursor: not-allowed;\n      opacity: 20%;\n    }\n  }\n  .stats {\n    position: relative;\n    display: inline-grid;\n    grid-auto-flow: column;\n    overflow-x: auto;\n    border-radius: var(--radius-box);\n  }\n  .progress {\n    position: relative;\n    height: calc(0.25rem * 2);\n    width: 100%;\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n    overflow: hidden;\n    border-radius: var(--radius-box);\n    background-color: currentColor;\n    @supports (color: color-mix(in lab, red, red)) {\n      background-color: color-mix(in oklab, currentColor 20%, transparent);\n    }\n    color: var(--color-base-content);\n    &:indeterminate {\n      background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );\n      background-size: 200%;\n      background-position-x: 15%;\n      animation: progress 5s ease-in-out infinite;\n      @supports (-moz-appearance: none) {\n        &::-moz-progress-bar {\n          background-color: transparent;\n          background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );\n          background-size: 200%;\n          background-position-x: 15%;\n          animation: progress 5s ease-in-out infinite;\n        }\n      }\n    }\n    @supports (-moz-appearance: none) {\n      &::-moz-progress-bar {\n        border-radius: var(--radius-box);\n        background-color: currentColor;\n      }\n    }\n    @supports (-webkit-appearance: none) {\n      &::-webkit-progress-bar {\n        border-radius: var(--radius-box);\n        background-color: transparent;\n      }\n      &::-webkit-progress-value {\n        border-radius: var(--radius-box);\n        background-color: currentColor;\n      }\n    }\n  }\n  .absolute {\n    position: absolute;\n  }\n  .fixed {\n    position: fixed;\n  }\n  .relative {\n    position: relative;\n  }\n  .static {\n    position: static;\n  }\n  .sticky {\n    position: sticky;\n  }\n  .inset-0 {\n    inset: calc(var(--spacing) * 0);\n  }\n  .dropdown-end {\n    --anchor-h: span-left;\n    :where(.dropdown-content) {\n      inset-inline-end: calc(0.25rem * 0);\n      translate: 0 0;\n    }\n    &.dropdown-left {\n      --anchor-h: left;\n      --anchor-v: span-top;\n      .dropdown-content {\n        top: auto;\n        bottom: calc(0.25rem * 0);\n      }\n    }\n    &.dropdown-right {\n      --anchor-h: right;\n      --anchor-v: span-top;\n      .dropdown-content {\n        top: auto;\n        bottom: calc(0.25rem * 0);\n      }\n    }\n  }\n  .top-0 {\n    top: calc(var(--spacing) * 0);\n  }\n  .top-1\\/2 {\n    top: calc(1/2 * 100%);\n  }\n  .top-2 {\n    top: calc(var(--spacing) * 2);\n  }\n  .top-3 {\n    top: calc(var(--spacing) * 3);\n  }\n  .right-2 {\n    right: calc(var(--spacing) * 2);\n  }\n  .right-3 {\n    right: calc(var(--spacing) * 3);\n  }\n  .right-4 {\n    right: calc(var(--spacing) * 4);\n  }\n  .bottom-4 {\n    bottom: calc(var(--spacing) * 4);\n  }\n  .bottom-20 {\n    bottom: calc(var(--spacing) * 20);\n  }\n  .left-3 {\n    left: calc(var(--spacing) * 3);\n  }\n  .textarea {\n    border: var(--border) solid #0000;\n    min-height: calc(0.25rem * 20);\n    flex-shrink: 1;\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n    border-radius: var(--radius-field);\n    background-color: var(--color-base-100);\n    padding-block: calc(0.25rem * 2);\n    vertical-align: middle;\n    width: clamp(3rem, 20rem, 100%);\n    padding-inline-start: 0.75rem;\n    padding-inline-end: 0.75rem;\n    font-size: 0.875rem;\n    border-color: var(--input-color);\n    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n    @supports (color: color-mix(in lab, red, red)) {\n      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n    }\n    --input-color: var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);\n    }\n    textarea {\n      -webkit-appearance: none;\n         -moz-appearance: none;\n              appearance: none;\n      background-color: transparent;\n      border: none;\n      &:focus, &:focus-within {\n        --tw-outline-style: none;\n        outline-style: none;\n        @media (forced-colors: active) {\n          outline: 2px solid transparent;\n          outline-offset: 2px;\n        }\n      }\n    }\n    &:focus, &:focus-within {\n      --input-color: var(--color-base-content);\n      box-shadow: 0 1px var(--input-color);\n      @supports (color: color-mix(in lab, red, red)) {\n        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);\n      }\n      outline: 2px solid var(--input-color);\n      outline-offset: 2px;\n      isolation: isolate;\n    }\n    &:has(> textarea[disabled]), &:is(:disabled, [disabled]) {\n      cursor: not-allowed;\n      border-color: var(--color-base-200);\n      background-color: var(--color-base-200);\n      color: var(--color-base-content);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);\n      }\n      &::-moz-placeholder {\n        color: var(--color-base-content);\n        @supports (color: color-mix(in lab, red, red)) {\n          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n        }\n      }\n      &::placeholder {\n        color: var(--color-base-content);\n        @supports (color: color-mix(in lab, red, red)) {\n          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n        }\n      }\n      box-shadow: none;\n    }\n    &:has(> textarea[disabled]) > textarea[disabled] {\n      cursor: not-allowed;\n    }\n  }\n  .isolate {\n    isolation: isolate;\n  }\n  .stack {\n    display: inline-grid;\n    grid-template-columns: 3px 4px 1fr 4px 3px;\n    grid-template-rows: 3px 4px 1fr 4px 3px;\n    & > * {\n      height: 100%;\n      width: 100%;\n      &:nth-child(n + 2) {\n        width: 100%;\n        opacity: 70%;\n      }\n      &:nth-child(2) {\n        z-index: 2;\n        opacity: 90%;\n      }\n      &:nth-child(1) {\n        z-index: 3;\n        width: 100%;\n      }\n    }\n    &, &.stack-bottom {\n      > * {\n        grid-column: 3 / 4;\n        grid-row: 3 / 6;\n        &:nth-child(2) {\n          grid-column: 2 / 5;\n          grid-row: 2 / 5;\n        }\n        &:nth-child(1) {\n          grid-column: 1 / 6;\n          grid-row: 1 / 4;\n        }\n      }\n    }\n    &.stack-top {\n      > * {\n        grid-column: 3 / 4;\n        grid-row: 1 / 4;\n        &:nth-child(2) {\n          grid-column: 2 / 5;\n          grid-row: 2 / 5;\n        }\n        &:nth-child(1) {\n          grid-column: 1 / 6;\n          grid-row: 3 / 6;\n        }\n      }\n    }\n    &.stack-start {\n      > * {\n        grid-column: 1 / 4;\n        grid-row: 3 / 4;\n        &:nth-child(2) {\n          grid-column: 2 / 5;\n          grid-row: 2 / 5;\n        }\n        &:nth-child(1) {\n          grid-column: 3 / 6;\n          grid-row: 1 / 6;\n        }\n      }\n    }\n    &.stack-end {\n      > * {\n        grid-column: 3 / 6;\n        grid-row: 3 / 4;\n        &:nth-child(2) {\n          grid-column: 2 / 5;\n          grid-row: 2 / 5;\n        }\n        &:nth-child(1) {\n          grid-column: 1 / 4;\n          grid-row: 1 / 6;\n        }\n      }\n    }\n  }\n  .modal-backdrop {\n    grid-column-start: 1;\n    grid-row-start: 1;\n    display: grid;\n    align-self: stretch;\n    justify-self: stretch;\n    color: transparent;\n    z-index: -1;\n    button {\n      cursor: pointer;\n    }\n  }\n  .z-10 {\n    z-index: 10;\n  }\n  .z-30 {\n    z-index: 30;\n  }\n  .z-50 {\n    z-index: 50;\n  }\n  .z-\\[1\\] {\n    z-index: 1;\n  }\n  .col-span-1 {\n    grid-column: span 1 / span 1;\n  }\n  .modal-box {\n    grid-column-start: 1;\n    grid-row-start: 1;\n    max-height: 100vh;\n    width: calc(11/12 * 100%);\n    max-width: 32rem;\n    background-color: var(--color-base-100);\n    padding: calc(0.25rem * 6);\n    transition: translate 0.3s ease-out, scale 0.3s ease-out, opacity 0.2s ease-out 0.05s, box-shadow 0.3s ease-out;\n    border-top-left-radius: var(--modal-tl, var(--radius-box));\n    border-top-right-radius: var(--modal-tr, var(--radius-box));\n    border-bottom-left-radius: var(--modal-bl, var(--radius-box));\n    border-bottom-right-radius: var(--modal-br, var(--radius-box));\n    scale: 95%;\n    opacity: 0;\n    box-shadow: oklch(0% 0 0/ 0.25) 0px 25px 50px -12px;\n    overflow-y: auto;\n    overscroll-behavior: contain;\n  }\n  .container {\n    width: 100%;\n    @media (width >= 40rem) {\n      max-width: 40rem;\n    }\n    @media (width >= 48rem) {\n      max-width: 48rem;\n    }\n    @media (width >= 64rem) {\n      max-width: 64rem;\n    }\n    @media (width >= 80rem) {\n      max-width: 80rem;\n    }\n    @media (width >= 96rem) {\n      max-width: 96rem;\n    }\n  }\n  .filter {\n    display: flex;\n    flex-wrap: wrap;\n    input[type=\"radio\"] {\n      width: auto;\n    }\n    input {\n      overflow: hidden;\n      opacity: 100%;\n      scale: 1;\n      transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;\n      &:not(:last-child) {\n        margin-inline-end: calc(0.25rem * 1);\n      }\n      &.filter-reset {\n        aspect-ratio: 1 / 1;\n        &::after {\n          content: \"×\";\n        }\n      }\n    }\n    &:not(:has(input:checked:not(.filter-reset))) {\n      .filter-reset, input[type=\"reset\"] {\n        scale: 0;\n        border-width: 0;\n        margin-inline: calc(0.25rem * 0);\n        width: calc(0.25rem * 0);\n        padding-inline: calc(0.25rem * 0);\n        opacity: 0%;\n      }\n    }\n    &:has(input:checked:not(.filter-reset)) {\n      input:not(:checked, .filter-reset, input[type=\"reset\"]) {\n        scale: 0;\n        border-width: 0;\n        margin-inline: calc(0.25rem * 0);\n        width: calc(0.25rem * 0);\n        padding-inline: calc(0.25rem * 0);\n        opacity: 0%;\n      }\n    }\n  }\n  .mx-1 {\n    margin-inline: calc(var(--spacing) * 1);\n  }\n  .mx-auto {\n    margin-inline: auto;\n  }\n  .input-sm {\n    --size: calc(var(--size-field, 0.25rem) * 8);\n    font-size: 0.75rem;\n    &[type=\"number\"] {\n      &::-webkit-inner-spin-button {\n        margin-block: calc(0.25rem * -2);\n        margin-inline-end: calc(0.25rem * -3);\n      }\n    }\n  }\n  .my-1 {\n    margin-block: calc(var(--spacing) * 1);\n  }\n  .my-2 {\n    margin-block: calc(var(--spacing) * 2);\n  }\n  .my-4 {\n    margin-block: calc(var(--spacing) * 4);\n  }\n  .label {\n    display: inline-flex;\n    align-items: center;\n    gap: calc(0.25rem * 1.5);\n    white-space: nowrap;\n    color: currentColor;\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, currentColor 60%, transparent);\n    }\n    &:has(input) {\n      cursor: pointer;\n    }\n    &:is(.input > *, .select > *) {\n      display: flex;\n      height: calc(100% - 0.5rem);\n      align-items: center;\n      padding-inline: calc(0.25rem * 3);\n      white-space: nowrap;\n      font-size: inherit;\n      &:first-child {\n        margin-inline-start: calc(0.25rem * -3);\n        margin-inline-end: calc(0.25rem * 3);\n        border-inline-end: var(--border) solid currentColor;\n        @supports (color: color-mix(in lab, red, red)) {\n          border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);\n        }\n      }\n      &:last-child {\n        margin-inline-start: calc(0.25rem * 3);\n        margin-inline-end: calc(0.25rem * -3);\n        border-inline-start: var(--border) solid currentColor;\n        @supports (color: color-mix(in lab, red, red)) {\n          border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);\n        }\n      }\n    }\n  }\n  .modal-action {\n    margin-top: calc(0.25rem * 6);\n    display: flex;\n    justify-content: flex-end;\n    gap: calc(0.25rem * 2);\n  }\n  .mt-0\\.5 {\n    margin-top: calc(var(--spacing) * 0.5);\n  }\n  .mt-1 {\n    margin-top: calc(var(--spacing) * 1);\n  }\n  .mt-2 {\n    margin-top: calc(var(--spacing) * 2);\n  }\n  .mt-3 {\n    margin-top: calc(var(--spacing) * 3);\n  }\n  .mt-4 {\n    margin-top: calc(var(--spacing) * 4);\n  }\n  .mt-6 {\n    margin-top: calc(var(--spacing) * 6);\n  }\n  .mt-auto {\n    margin-top: auto;\n  }\n  .breadcrumbs {\n    max-width: 100%;\n    overflow-x: auto;\n    padding-block: calc(0.25rem * 2);\n    > menu, > ul, > ol {\n      display: flex;\n      min-height: -moz-min-content;\n      min-height: min-content;\n      align-items: center;\n      white-space: nowrap;\n      > li {\n        display: flex;\n        align-items: center;\n        > * {\n          display: flex;\n          cursor: pointer;\n          align-items: center;\n          gap: calc(0.25rem * 2);\n          &:hover {\n            @media (hover: hover) {\n              text-decoration-line: underline;\n            }\n          }\n          &:focus {\n            --tw-outline-style: none;\n            outline-style: none;\n            @media (forced-colors: active) {\n              outline: 2px solid transparent;\n              outline-offset: 2px;\n            }\n          }\n          &:focus-visible {\n            outline: 2px solid currentColor;\n            outline-offset: 2px;\n          }\n        }\n        & + *:before {\n          content: \"\";\n          margin-right: calc(0.25rem * 3);\n          margin-left: calc(0.25rem * 2);\n          display: block;\n          height: calc(0.25rem * 1.5);\n          width: calc(0.25rem * 1.5);\n          opacity: 40%;\n          rotate: 45deg;\n          border-top: 1px solid;\n          border-right: 1px solid;\n          background-color: #0000;\n        }\n        [dir=\"rtl\"] & + *:before {\n          rotate: -135deg;\n        }\n      }\n    }\n  }\n  .mr-1 {\n    margin-right: calc(var(--spacing) * 1);\n  }\n  .mr-2 {\n    margin-right: calc(var(--spacing) * 2);\n  }\n  .mr-auto {\n    margin-right: auto;\n  }\n  .mb-1 {\n    margin-bottom: calc(var(--spacing) * 1);\n  }\n  .mb-2 {\n    margin-bottom: calc(var(--spacing) * 2);\n  }\n  .mb-3 {\n    margin-bottom: calc(var(--spacing) * 3);\n  }\n  .mb-4 {\n    margin-bottom: calc(var(--spacing) * 4);\n  }\n  .mb-6 {\n    margin-bottom: calc(var(--spacing) * 6);\n  }\n  .ml-1 {\n    margin-left: calc(var(--spacing) * 1);\n  }\n  .ml-2 {\n    margin-left: calc(var(--spacing) * 2);\n  }\n  .ml-3 {\n    margin-left: calc(var(--spacing) * 3);\n  }\n  .ml-7 {\n    margin-left: calc(var(--spacing) * 7);\n  }\n  .status {\n    display: inline-block;\n    aspect-ratio: 1 / 1;\n    width: calc(0.25rem * 2);\n    height: calc(0.25rem * 2);\n    border-radius: var(--radius-selector);\n    background-color: var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n    }\n    background-position: center;\n    background-repeat: no-repeat;\n    vertical-align: middle;\n    color: color-mix(in srgb, #000 30%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in srgb, #000 30%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-black) 30%, transparent);\n      }\n    }\n    background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );\n    box-shadow: 0 2px 3px -1px currentColor;\n    @supports (color: color-mix(in lab, red, red)) {\n      box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);\n    }\n  }\n  .badge {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: calc(0.25rem * 2);\n    border-radius: var(--radius-selector);\n    vertical-align: middle;\n    color: var(--badge-fg);\n    border: var(--border) solid var(--badge-color, var(--color-base-200));\n    font-size: 0.875rem;\n    width: -moz-fit-content;\n    width: fit-content;\n    padding-inline: calc(0.25rem * 3 - var(--border));\n    background-size: auto, calc(var(--noise) * 100%);\n    background-image: none, var(--fx-noise);\n    background-color: var(--badge-bg);\n    --badge-bg: var(--badge-color, var(--color-base-100));\n    --badge-fg: var(--color-base-content);\n    --size: calc(var(--size-selector, 0.25rem) * 6);\n    height: var(--size);\n    &.badge-outline {\n      --badge-fg: var(--badge-color);\n      --badge-bg: #0000;\n      background-image: none;\n      border-color: currentColor;\n    }\n    &.badge-dash {\n      --badge-fg: var(--badge-color);\n      --badge-bg: #0000;\n      background-image: none;\n      border-color: currentColor;\n      border-style: dashed;\n    }\n    &.badge-soft {\n      color: var(--badge-color, var(--color-base-content));\n      background-color: var(--badge-color, var(--color-base-content));\n      @supports (color: color-mix(in lab, red, red)) {\n        background-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 8%, var(--color-base-100) );\n      }\n      border-color: var(--badge-color, var(--color-base-content));\n      @supports (color: color-mix(in lab, red, red)) {\n        border-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 10%, var(--color-base-100) );\n      }\n      background-image: none;\n    }\n  }\n  .kbd {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--radius-field);\n    background-color: var(--color-base-200);\n    vertical-align: middle;\n    padding-left: 0.5em;\n    padding-right: 0.5em;\n    border: var(--border) solid var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      border: var(--border) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);\n    }\n    border-bottom: calc(var(--border) + 1px) solid var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      border-bottom: calc(var(--border) + 1px) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);\n    }\n    --size: calc(var(--size-selector, 0.25rem) * 6);\n    font-size: 0.875rem;\n    height: var(--size);\n    min-width: var(--size);\n  }\n  .tabs {\n    display: flex;\n    flex-wrap: wrap;\n    --tabs-height: auto;\n    --tabs-direction: row;\n    height: var(--tabs-height);\n    flex-direction: var(--tabs-direction);\n  }\n  .footer {\n    display: grid;\n    width: 100%;\n    grid-auto-flow: row;\n    place-items: start;\n    -moz-column-gap: calc(0.25rem * 4);\n         column-gap: calc(0.25rem * 4);\n    row-gap: calc(0.25rem * 10);\n    font-size: 0.875rem;\n    line-height: 1.25rem;\n    & > * {\n      display: grid;\n      place-items: start;\n      gap: calc(0.25rem * 2);\n    }\n    &.footer-center {\n      grid-auto-flow: column dense;\n      place-items: center;\n      text-align: center;\n      & > * {\n        place-items: center;\n      }\n    }\n  }\n  .stat {\n    display: inline-grid;\n    width: 100%;\n    -moz-column-gap: calc(0.25rem * 4);\n         column-gap: calc(0.25rem * 4);\n    padding-inline: calc(0.25rem * 6);\n    padding-block: calc(0.25rem * 4);\n    grid-template-columns: repeat(1, 1fr);\n    &:not(:last-child) {\n      border-inline-end: var(--border) dashed currentColor;\n      @supports (color: color-mix(in lab, red, red)) {\n        border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);\n      }\n      border-block-end: none;\n    }\n  }\n  .card-body {\n    display: flex;\n    flex: auto;\n    flex-direction: column;\n    gap: calc(0.25rem * 2);\n    padding: var(--card-p, 1.5rem);\n    font-size: var(--card-fs, 0.875rem);\n    :where(p) {\n      flex-grow: 1;\n    }\n  }\n  .alert {\n    display: grid;\n    align-items: center;\n    gap: calc(0.25rem * 4);\n    border-radius: var(--radius-box);\n    padding-inline: calc(0.25rem * 4);\n    padding-block: calc(0.25rem * 3);\n    color: var(--color-base-content);\n    background-color: var(--alert-color, var(--color-base-200));\n    justify-content: start;\n    justify-items: start;\n    grid-auto-flow: column;\n    grid-template-columns: auto;\n    text-align: start;\n    border: var(--border) solid var(--color-base-200);\n    font-size: 0.875rem;\n    line-height: 1.25rem;\n    background-size: auto, calc(var(--noise) * 100%);\n    background-image: none, var(--fx-noise);\n    box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px #000, 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));\n    @supports (color: color-mix(in lab, red, red)) {\n      box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));\n    }\n    &:has(:nth-child(2)) {\n      grid-template-columns: auto minmax(auto, 1fr);\n    }\n    &.alert-outline {\n      background-color: transparent;\n      color: var(--alert-color);\n      box-shadow: none;\n      background-image: none;\n    }\n    &.alert-dash {\n      background-color: transparent;\n      color: var(--alert-color);\n      border-style: dashed;\n      box-shadow: none;\n      background-image: none;\n    }\n    &.alert-soft {\n      color: var(--alert-color, var(--color-base-content));\n      background: var(--alert-color, var(--color-base-content));\n      @supports (color: color-mix(in lab, red, red)) {\n        background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );\n      }\n      border-color: var(--alert-color, var(--color-base-content));\n      @supports (color: color-mix(in lab, red, red)) {\n        border-color: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 10%, var(--color-base-100) );\n      }\n      box-shadow: none;\n      background-image: none;\n    }\n  }\n  .fieldset {\n    display: grid;\n    gap: calc(0.25rem * 1.5);\n    padding-block: calc(0.25rem * 1);\n    font-size: 0.75rem;\n    grid-template-columns: 1fr;\n    grid-auto-rows: max-content;\n  }\n  .card-title {\n    display: flex;\n    align-items: center;\n    gap: calc(0.25rem * 2);\n    font-size: var(--cardtitle-fs, 1.125rem);\n    font-weight: 600;\n  }\n  .chat {\n    display: grid;\n    -moz-column-gap: calc(0.25rem * 3);\n         column-gap: calc(0.25rem * 3);\n    padding-block: calc(0.25rem * 1);\n  }\n  .line-clamp-2 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n  }\n  .mask {\n    display: inline-block;\n    vertical-align: middle;\n    -webkit-mask-size: contain;\n            mask-size: contain;\n    -webkit-mask-repeat: no-repeat;\n            mask-repeat: no-repeat;\n    -webkit-mask-position: center;\n            mask-position: center;\n  }\n  .block {\n    display: block;\n  }\n  .contents {\n    display: contents;\n  }\n  .flex {\n    display: flex;\n  }\n  .grid {\n    display: grid;\n  }\n  .hidden {\n    display: none;\n  }\n  .inline {\n    display: inline;\n  }\n  .inline-flex {\n    display: inline-flex;\n  }\n  .table {\n    display: table;\n  }\n  .modal-bottom {\n    place-items: end;\n    :where(.modal-box) {\n      height: auto;\n      width: 100%;\n      max-width: none;\n      max-height: calc(100vh - 5em);\n      translate: 0 100%;\n      scale: 1;\n      --modal-tl: var(--radius-box);\n      --modal-tr: var(--radius-box);\n      --modal-bl: 0;\n      --modal-br: 0;\n    }\n  }\n  .btn-circle {\n    border-radius: calc(infinity * 1px);\n    padding-inline: calc(0.25rem * 0);\n    width: var(--size);\n    height: var(--size);\n  }\n  .btn-square {\n    padding-inline: calc(0.25rem * 0);\n    width: var(--size);\n    height: var(--size);\n  }\n  .h-2 {\n    height: calc(var(--spacing) * 2);\n  }\n  .h-3 {\n    height: calc(var(--spacing) * 3);\n  }\n  .h-4 {\n    height: calc(var(--spacing) * 4);\n  }\n  .h-5 {\n    height: calc(var(--spacing) * 5);\n  }\n  .h-6 {\n    height: calc(var(--spacing) * 6);\n  }\n  .h-7 {\n    height: calc(var(--spacing) * 7);\n  }\n  .h-8 {\n    height: calc(var(--spacing) * 8);\n  }\n  .h-12 {\n    height: calc(var(--spacing) * 12);\n  }\n  .h-14 {\n    height: calc(var(--spacing) * 14);\n  }\n  .h-16 {\n    height: calc(var(--spacing) * 16);\n  }\n  .h-20 {\n    height: calc(var(--spacing) * 20);\n  }\n  .h-\\[100dvh\\] {\n    height: 100dvh;\n  }\n  .h-full {\n    height: 100%;\n  }\n  .max-h-32 {\n    max-height: calc(var(--spacing) * 32);\n  }\n  .max-h-\\[90vh\\] {\n    max-height: 90vh;\n  }\n  .min-h-0 {\n    min-height: calc(var(--spacing) * 0);\n  }\n  .min-h-\\[1em\\] {\n    min-height: 1em;\n  }\n  .min-h-\\[44px\\] {\n    min-height: 44px;\n  }\n  .min-h-screen {\n    min-height: 100vh;\n  }\n  .loading-md {\n    width: calc(var(--size-selector, 0.25rem) * 6);\n  }\n  .loading-xs {\n    width: calc(var(--size-selector, 0.25rem) * 4);\n  }\n  .w-1\\/3 {\n    width: calc(1/3 * 100%);\n  }\n  .w-2\\/3 {\n    width: calc(2/3 * 100%);\n  }\n  .w-3 {\n    width: calc(var(--spacing) * 3);\n  }\n  .w-3\\/4 {\n    width: calc(3/4 * 100%);\n  }\n  .w-4 {\n    width: calc(var(--spacing) * 4);\n  }\n  .w-4\\/5 {\n    width: calc(4/5 * 100%);\n  }\n  .w-5 {\n    width: calc(var(--spacing) * 5);\n  }\n  .w-6 {\n    width: calc(var(--spacing) * 6);\n  }\n  .w-7 {\n    width: calc(var(--spacing) * 7);\n  }\n  .w-8 {\n    width: calc(var(--spacing) * 8);\n  }\n  .w-12 {\n    width: calc(var(--spacing) * 12);\n  }\n  .w-14 {\n    width: calc(var(--spacing) * 14);\n  }\n  .w-16 {\n    width: calc(var(--spacing) * 16);\n  }\n  .w-52 {\n    width: calc(var(--spacing) * 52);\n  }\n  .w-full {\n    width: 100%;\n  }\n  .max-w-2xl {\n    max-width: var(--container-2xl);\n  }\n  .max-w-4xl {\n    max-width: var(--container-4xl);\n  }\n  .max-w-7xl {\n    max-width: var(--container-7xl);\n  }\n  .max-w-full {\n    max-width: 100%;\n  }\n  .max-w-lg {\n    max-width: var(--container-lg);\n  }\n  .max-w-md {\n    max-width: var(--container-md);\n  }\n  .max-w-sm {\n    max-width: var(--container-sm);\n  }\n  .max-w-xs {\n    max-width: var(--container-xs);\n  }\n  .min-w-0 {\n    min-width: calc(var(--spacing) * 0);\n  }\n  .min-w-\\[44px\\] {\n    min-width: 44px;\n  }\n  .flex-1 {\n    flex: 1;\n  }\n  .flex-shrink-0 {\n    flex-shrink: 0;\n  }\n  .shrink-0 {\n    flex-shrink: 0;\n  }\n  .flex-grow {\n    flex-grow: 1;\n  }\n  .-translate-x-full {\n    --tw-translate-x: -100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n  .translate-x-0 {\n    --tw-translate-x: calc(var(--spacing) * 0);\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n  .-translate-y-1\\/2 {\n    --tw-translate-y: calc(calc(1/2 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n  .transform {\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);\n  }\n  .skeleton {\n    border-radius: var(--radius-box);\n    background-color: var(--color-base-300);\n    @media (prefers-reduced-motion: reduce) {\n      transition-duration: 15s;\n    }\n    will-change: background-position;\n    animation: skeleton 1.8s ease-in-out infinite;\n    background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );\n    background-size: 200% auto;\n    background-repeat: no-repeat;\n    background-position-x: -50%;\n  }\n  .animate-pulse {\n    animation: var(--animate-pulse);\n  }\n  .animate-spin {\n    animation: var(--animate-spin);\n  }\n  .link {\n    cursor: pointer;\n    text-decoration-line: underline;\n    &:focus {\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n    }\n    &:focus-visible {\n      outline: 2px solid currentColor;\n      outline-offset: 2px;\n    }\n  }\n  .cursor-not-allowed {\n    cursor: not-allowed;\n  }\n  .cursor-pointer {\n    cursor: pointer;\n  }\n  .touch-pan-y {\n    --tw-pan-y: pan-y;\n    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);\n  }\n  .resize {\n    resize: both;\n  }\n  .resize-none {\n    resize: none;\n  }\n  .grid-cols-1 {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n  .grid-cols-2 {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n  .flex-col {\n    flex-direction: column;\n  }\n  .flex-row-reverse {\n    flex-direction: row-reverse;\n  }\n  .flex-wrap {\n    flex-wrap: wrap;\n  }\n  .items-center {\n    align-items: center;\n  }\n  .items-start {\n    align-items: flex-start;\n  }\n  .justify-between {\n    justify-content: space-between;\n  }\n  .justify-center {\n    justify-content: center;\n  }\n  .justify-end {\n    justify-content: flex-end;\n  }\n  .gap-1 {\n    gap: calc(var(--spacing) * 1);\n  }\n  .gap-2 {\n    gap: calc(var(--spacing) * 2);\n  }\n  .gap-3 {\n    gap: calc(var(--spacing) * 3);\n  }\n  .gap-4 {\n    gap: calc(var(--spacing) * 4);\n  }\n  .space-y-1 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-y-2 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-y-3 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-y-4 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-y-6 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-x-2 {\n    :where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));\n    }\n  }\n  .space-x-3 {\n    :where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));\n    }\n  }\n  .truncate {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n  .overflow-auto {\n    overflow: auto;\n  }\n  .overflow-hidden {\n    overflow: hidden;\n  }\n  .overflow-x-auto {\n    overflow-x: auto;\n  }\n  .overflow-y-auto {\n    overflow-y: auto;\n  }\n  .overscroll-contain {\n    overscroll-behavior: contain;\n  }\n  .rounded {\n    border-radius: 0.25rem;\n  }\n  .rounded-box {\n    border-radius: var(--radius-box);\n  }\n  .rounded-box {\n    border-radius: var(--radius-box);\n  }\n  .rounded-full {\n    border-radius: calc(infinity * 1px);\n  }\n  .rounded-lg {\n    border-radius: var(--radius-lg);\n  }\n  .rounded-md {\n    border-radius: var(--radius-md);\n  }\n  .rounded-t-lg {\n    border-top-left-radius: var(--radius-lg);\n    border-top-right-radius: var(--radius-lg);\n  }\n  .rounded-l-md {\n    border-top-left-radius: var(--radius-md);\n    border-bottom-left-radius: var(--radius-md);\n  }\n  .rounded-r-md {\n    border-top-right-radius: var(--radius-md);\n    border-bottom-right-radius: var(--radius-md);\n  }\n  .border {\n    border-style: var(--tw-border-style);\n    border-width: 1px;\n  }\n  .border-t {\n    border-top-style: var(--tw-border-style);\n    border-top-width: 1px;\n  }\n  .border-r {\n    border-right-style: var(--tw-border-style);\n    border-right-width: 1px;\n  }\n  .border-b {\n    border-bottom-style: var(--tw-border-style);\n    border-bottom-width: 1px;\n  }\n  .border-b-2 {\n    border-bottom-style: var(--tw-border-style);\n    border-bottom-width: 2px;\n  }\n  .badge-ghost {\n    border-color: var(--color-base-200);\n    background-color: var(--color-base-200);\n    color: var(--color-base-content);\n    background-image: none;\n  }\n  .alert-error {\n    border-color: var(--color-error);\n    color: var(--color-error-content);\n    --alert-color: var(--color-error);\n  }\n  .alert-info {\n    border-color: var(--color-info);\n    color: var(--color-info-content);\n    --alert-color: var(--color-info);\n  }\n  .alert-success {\n    border-color: var(--color-success);\n    color: var(--color-success-content);\n    --alert-color: var(--color-success);\n  }\n  .alert-warning {\n    border-color: var(--color-warning);\n    color: var(--color-warning-content);\n    --alert-color: var(--color-warning);\n  }\n  .border-base-200 {\n    border-color: var(--color-base-200);\n  }\n  .border-base-300 {\n    border-color: var(--color-base-300);\n  }\n  .border-blue-200 {\n    border-color: var(--color-blue-200);\n  }\n  .border-blue-400 {\n    border-color: var(--color-blue-400);\n  }\n  .border-error\\/20 {\n    border-color: var(--color-error);\n    @supports (color: color-mix(in lab, red, red)) {\n      border-color: color-mix(in oklab, var(--color-error) 20%, transparent);\n    }\n  }\n  .border-gray-300 {\n    border-color: var(--color-gray-300);\n  }\n  .border-primary {\n    border-color: var(--color-primary);\n  }\n  .bg-base-100 {\n    background-color: var(--color-base-100);\n  }\n  .bg-base-200 {\n    background-color: var(--color-base-200);\n  }\n  .bg-base-300 {\n    background-color: var(--color-base-300);\n  }\n  .bg-blue-50 {\n    background-color: var(--color-blue-50);\n  }\n  .bg-blue-600 {\n    background-color: var(--color-blue-600);\n  }\n  .bg-error {\n    background-color: var(--color-error);\n  }\n  .bg-gray-200 {\n    background-color: var(--color-gray-200);\n  }\n  .bg-gray-600 {\n    background-color: var(--color-gray-600);\n  }\n  .bg-green-600 {\n    background-color: var(--color-green-600);\n  }\n  .bg-primary {\n    background-color: var(--color-primary);\n  }\n  .bg-success {\n    background-color: var(--color-success);\n  }\n  .loading-dots {\n    -webkit-mask-image: url(\"data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E\");\n            mask-image: url(\"data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E\");\n  }\n  .loading-spinner {\n    -webkit-mask-image: url(\"data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n            mask-image: url(\"data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n  }\n  .stroke-info {\n    stroke: var(--color-info);\n  }\n  .checkbox-sm {\n    padding: 0.1875rem;\n    --size: calc(var(--size-selector, 0.25rem) * 5);\n  }\n  .p-0 {\n    padding: calc(var(--spacing) * 0);\n  }\n  .p-2 {\n    padding: calc(var(--spacing) * 2);\n  }\n  .p-3 {\n    padding: calc(var(--spacing) * 3);\n  }\n  .p-4 {\n    padding: calc(var(--spacing) * 4);\n  }\n  .p-6 {\n    padding: calc(var(--spacing) * 6);\n  }\n  .menu-title {\n    padding-inline: calc(0.25rem * 3);\n    padding-block: calc(0.25rem * 2);\n    color: var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);\n    }\n    font-size: 0.875rem;\n    font-weight: 600;\n  }\n  .badge-lg {\n    --size: calc(var(--size-selector, 0.25rem) * 7);\n    font-size: 1rem;\n    padding-inline: calc(0.25rem * 3.5 - var(--border));\n  }\n  .badge-sm {\n    --size: calc(var(--size-selector, 0.25rem) * 5);\n    font-size: 0.75rem;\n    padding-inline: calc(0.25rem * 2.5 - var(--border));\n  }\n  .px-1 {\n    padding-inline: calc(var(--spacing) * 1);\n  }\n  .px-2 {\n    padding-inline: calc(var(--spacing) * 2);\n  }\n  .px-3 {\n    padding-inline: calc(var(--spacing) * 3);\n  }\n  .px-4 {\n    padding-inline: calc(var(--spacing) * 4);\n  }\n  .py-1 {\n    padding-block: calc(var(--spacing) * 1);\n  }\n  .py-2 {\n    padding-block: calc(var(--spacing) * 2);\n  }\n  .py-4 {\n    padding-block: calc(var(--spacing) * 4);\n  }\n  .py-8 {\n    padding-block: calc(var(--spacing) * 8);\n  }\n  .pt-2 {\n    padding-top: calc(var(--spacing) * 2);\n  }\n  .pt-\\[env\\(safe-area-inset-top\\)\\] {\n    padding-top: env(safe-area-inset-top);\n  }\n  .pb-6 {\n    padding-bottom: calc(var(--spacing) * 6);\n  }\n  .pb-\\[env\\(safe-area-inset-bottom\\)\\] {\n    padding-bottom: env(safe-area-inset-bottom);\n  }\n  .pl-10 {\n    padding-left: calc(var(--spacing) * 10);\n  }\n  .text-center {\n    text-align: center;\n  }\n  .font-sans {\n    font-family: var(--font-sans);\n  }\n  .text-2xl {\n    font-size: var(--text-2xl);\n    line-height: var(--tw-leading, var(--text-2xl--line-height));\n  }\n  .text-base {\n    font-size: var(--text-base);\n    line-height: var(--tw-leading, var(--text-base--line-height));\n  }\n  .text-lg {\n    font-size: var(--text-lg);\n    line-height: var(--tw-leading, var(--text-lg--line-height));\n  }\n  .text-sm {\n    font-size: var(--text-sm);\n    line-height: var(--tw-leading, var(--text-sm--line-height));\n  }\n  .text-xl {\n    font-size: var(--text-xl);\n    line-height: var(--tw-leading, var(--text-xl--line-height));\n  }\n  .text-xs {\n    font-size: var(--text-xs);\n    line-height: var(--tw-leading, var(--text-xs--line-height));\n  }\n  .kbd-sm {\n    --size: calc(var(--size-selector, 0.25rem) * 5);\n    font-size: 0.75rem;\n  }\n  .select-sm {\n    --size: calc(var(--size-field, 0.25rem) * 8);\n    font-size: 0.75rem;\n  }\n  .select-xs {\n    --size: calc(var(--size-field, 0.25rem) * 6);\n    font-size: 0.6875rem;\n  }\n  .textarea-sm {\n    font-size: 0.75rem;\n  }\n  .leading-tight {\n    --tw-leading: var(--leading-tight);\n    line-height: var(--leading-tight);\n  }\n  .font-bold {\n    --tw-font-weight: var(--font-weight-bold);\n    font-weight: var(--font-weight-bold);\n  }\n  .font-medium {\n    --tw-font-weight: var(--font-weight-medium);\n    font-weight: var(--font-weight-medium);\n  }\n  .font-semibold {\n    --tw-font-weight: var(--font-weight-semibold);\n    font-weight: var(--font-weight-semibold);\n  }\n  .whitespace-pre-wrap {\n    white-space: pre-wrap;\n  }\n  .checkbox-primary {\n    color: var(--color-primary-content);\n    --input-color: var(--color-primary);\n  }\n  .progress-error {\n    color: var(--color-error);\n  }\n  .progress-info {\n    color: var(--color-info);\n  }\n  .progress-primary {\n    color: var(--color-primary);\n  }\n  .progress-success {\n    color: var(--color-success);\n  }\n  .progress-warning {\n    color: var(--color-warning);\n  }\n  .text-accent {\n    color: var(--color-accent);\n  }\n  .text-base-content {\n    color: var(--color-base-content);\n  }\n  .text-base-content\\/30 {\n    color: var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 30%, transparent);\n    }\n  }\n  .text-base-content\\/50 {\n    color: var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);\n    }\n  }\n  .text-base-content\\/60 {\n    color: var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n    }\n  }\n  .text-base-content\\/70 {\n    color: var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 70%, transparent);\n    }\n  }\n  .text-base-content\\/80 {\n    color: var(--color-base-content);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);\n    }\n  }\n  .text-blue-600 {\n    color: var(--color-blue-600);\n  }\n  .text-blue-700 {\n    color: var(--color-blue-700);\n  }\n  .text-blue-800 {\n    color: var(--color-blue-800);\n  }\n  .text-error {\n    color: var(--color-error);\n  }\n  .text-error-content {\n    color: var(--color-error-content);\n  }\n  .text-error\\/60 {\n    color: var(--color-error);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-error) 60%, transparent);\n    }\n  }\n  .text-gray-500 {\n    color: var(--color-gray-500);\n  }\n  .text-gray-600 {\n    color: var(--color-gray-600);\n  }\n  .text-gray-700 {\n    color: var(--color-gray-700);\n  }\n  .text-info {\n    color: var(--color-info);\n  }\n  .text-primary {\n    color: var(--color-primary);\n  }\n  .text-primary-content {\n    color: var(--color-primary-content);\n  }\n  .text-success {\n    color: var(--color-success);\n  }\n  .text-success-content {\n    color: var(--color-success-content);\n  }\n  .text-warning {\n    color: var(--color-warning);\n  }\n  .text-white {\n    color: var(--color-white);\n  }\n  .capitalize {\n    text-transform: capitalize;\n  }\n  .lowercase {\n    text-transform: lowercase;\n  }\n  .uppercase {\n    text-transform: uppercase;\n  }\n  .italic {\n    font-style: italic;\n  }\n  .link-hover {\n    text-decoration-line: none;\n    &:hover {\n      @media (hover: hover) {\n        text-decoration-line: underline;\n      }\n    }\n  }\n  .opacity-0 {\n    opacity: 0%;\n  }\n  .opacity-40 {\n    opacity: 40%;\n  }\n  .opacity-50 {\n    opacity: 50%;\n  }\n  .shadow {\n    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-lg {\n    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-md {\n    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-sm {\n    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-xl {\n    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-xs {\n    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .outline {\n    outline-style: var(--tw-outline-style);\n    outline-width: 1px;\n  }\n  .btn-ghost {\n    &:not(.btn-active, :hover, :active:focus, :focus-visible) {\n      --btn-shadow: \"\";\n      --btn-bg: #0000;\n      --btn-border: #0000;\n      --btn-noise: none;\n      &:not(:disabled, [disabled], .btn-disabled) {\n        outline-color: currentColor;\n        --btn-fg: currentColor;\n      }\n    }\n  }\n  .blur {\n    --tw-blur: blur(8px);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);\n  }\n  .filter {\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);\n  }\n  .transition {\n    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-all {\n    transition-property: all;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-colors {\n    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-opacity {\n    transition-property: opacity;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-shadow {\n    transition-property: box-shadow;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-transform {\n    transition-property: transform, translate, scale, rotate;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .duration-300 {\n    --tw-duration: 300ms;\n    transition-duration: 300ms;\n  }\n  .ease-in-out {\n    --tw-ease: var(--ease-in-out);\n    transition-timing-function: var(--ease-in-out);\n  }\n  .ease-out {\n    --tw-ease: var(--ease-out);\n    transition-timing-function: var(--ease-out);\n  }\n  .btn-outline {\n    &:not( .btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {\n      --btn-shadow: \"\";\n      --btn-bg: #0000;\n      --btn-fg: var(--btn-color);\n      --btn-border: var(--btn-color);\n      --btn-noise: none;\n    }\n    @media (hover: none) {\n      &:hover:not( .btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {\n        --btn-shadow: \"\";\n        --btn-bg: #0000;\n        --btn-fg: var(--btn-color);\n        --btn-border: var(--btn-color);\n        --btn-noise: none;\n      }\n    }\n  }\n  .btn-lg {\n    --fontsize: 1.125rem;\n    --btn-p: 1.25rem;\n    --size: calc(var(--size-field, 0.25rem) * 12);\n  }\n  .btn-sm {\n    --fontsize: 0.75rem;\n    --btn-p: 0.75rem;\n    --size: calc(var(--size-field, 0.25rem) * 8);\n  }\n  .btn-xs {\n    --fontsize: 0.6875rem;\n    --btn-p: 0.5rem;\n    --size: calc(var(--size-field, 0.25rem) * 6);\n  }\n  .badge-error {\n    --badge-color: var(--color-error);\n    --badge-fg: var(--color-error-content);\n  }\n  .badge-neutral {\n    --badge-color: var(--color-neutral);\n    --badge-fg: var(--color-neutral-content);\n  }\n  .badge-success {\n    --badge-color: var(--color-success);\n    --badge-fg: var(--color-success-content);\n  }\n  .badge-warning {\n    --badge-color: var(--color-warning);\n    --badge-fg: var(--color-warning-content);\n  }\n  .btn-error {\n    --btn-color: var(--color-error);\n    --btn-fg: var(--color-error-content);\n  }\n  .btn-primary {\n    --btn-color: var(--color-primary);\n    --btn-fg: var(--color-primary-content);\n  }\n  .btn-secondary {\n    --btn-color: var(--color-secondary);\n    --btn-fg: var(--color-secondary-content);\n  }\n  .btn-success {\n    --btn-color: var(--color-success);\n    --btn-fg: var(--color-success-content);\n  }\n  .btn-warning {\n    --btn-color: var(--color-warning);\n    --btn-fg: var(--color-warning-content);\n  }\n  .range-xs {\n    --range-thumb-size: calc(var(--size-selector, 0.25rem) * 4);\n  }\n  .toggle-primary {\n    &:checked, &[aria-checked=\"true\"] {\n      --input-color: var(--color-primary);\n    }\n  }\n  .toggle-sm {\n    &:is([type=\"checkbox\"]), &:has([type=\"checkbox\"]) {\n      --size: calc(var(--size-selector, 0.25rem) * 5);\n    }\n  }\n  .toggle-xs {\n    &:is([type=\"checkbox\"]), &:has([type=\"checkbox\"]) {\n      --size: calc(var(--size-selector, 0.25rem) * 4);\n    }\n  }\n  .focus-within\\:ring-2 {\n    &:focus-within {\n      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n  .focus-within\\:ring-primary {\n    &:focus-within {\n      --tw-ring-color: var(--color-primary);\n    }\n  }\n  .focus-within\\:outline-none {\n    &:focus-within {\n      --tw-outline-style: none;\n      outline-style: none;\n    }\n  }\n  .hover\\:bg-base-200 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-base-200);\n      }\n    }\n  }\n  .hover\\:bg-base-300 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-base-300);\n      }\n    }\n  }\n  .hover\\:bg-blue-700 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-blue-700);\n      }\n    }\n  }\n  .hover\\:bg-error {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-error);\n      }\n    }\n  }\n  .hover\\:bg-error\\/10 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-error);\n        @supports (color: color-mix(in lab, red, red)) {\n          background-color: color-mix(in oklab, var(--color-error) 10%, transparent);\n        }\n      }\n    }\n  }\n  .hover\\:bg-gray-50 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-gray-50);\n      }\n    }\n  }\n  .hover\\:bg-gray-700 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-gray-700);\n      }\n    }\n  }\n  .hover\\:bg-info\\/10 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-info);\n        @supports (color: color-mix(in lab, red, red)) {\n          background-color: color-mix(in oklab, var(--color-info) 10%, transparent);\n        }\n      }\n    }\n  }\n  .hover\\:text-error-content {\n    &:hover {\n      @media (hover: hover) {\n        color: var(--color-error-content);\n      }\n    }\n  }\n  .hover\\:shadow-lg {\n    &:hover {\n      @media (hover: hover) {\n        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n      }\n    }\n  }\n  .focus\\:not-sr-only {\n    &:focus {\n      position: static;\n      width: auto;\n      height: auto;\n      padding: 0;\n      margin: 0;\n      overflow: visible;\n      clip: auto;\n      white-space: normal;\n    }\n  }\n  .focus\\:inline-block {\n    &:focus {\n      display: inline-block;\n    }\n  }\n  .focus\\:border-blue-500 {\n    &:focus {\n      border-color: var(--color-blue-500);\n    }\n  }\n  .focus\\:border-primary {\n    &:focus {\n      border-color: var(--color-primary);\n    }\n  }\n  .focus\\:bg-primary {\n    &:focus {\n      background-color: var(--color-primary);\n    }\n  }\n  .focus\\:px-4 {\n    &:focus {\n      padding-inline: calc(var(--spacing) * 4);\n    }\n  }\n  .focus\\:py-2 {\n    &:focus {\n      padding-block: calc(var(--spacing) * 2);\n    }\n  }\n  .focus\\:text-primary-content {\n    &:focus {\n      color: var(--color-primary-content);\n    }\n  }\n  .focus\\:ring-1 {\n    &:focus {\n      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n  .focus\\:ring-2 {\n    &:focus {\n      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n  .focus\\:ring-blue-500 {\n    &:focus {\n      --tw-ring-color: var(--color-blue-500);\n    }\n  }\n  .focus\\:ring-gray-500 {\n    &:focus {\n      --tw-ring-color: var(--color-gray-500);\n    }\n  }\n  .focus\\:ring-primary {\n    &:focus {\n      --tw-ring-color: var(--color-primary);\n    }\n  }\n  .focus\\:ring-offset-2 {\n    &:focus {\n      --tw-ring-offset-width: 2px;\n      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n    }\n  }\n  .focus\\:outline-hidden {\n    &:focus {\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n    }\n  }\n  .focus\\:outline-none {\n    &:focus {\n      --tw-outline-style: none;\n      outline-style: none;\n    }\n  }\n  .disabled\\:opacity-50 {\n    &:disabled {\n      opacity: 50%;\n    }\n  }\n  .sm\\:block {\n    @media (width >= 40rem) {\n      display: block;\n    }\n  }\n  .sm\\:hidden {\n    @media (width >= 40rem) {\n      display: none;\n    }\n  }\n  .sm\\:inline {\n    @media (width >= 40rem) {\n      display: inline;\n    }\n  }\n  .sm\\:inline-flex {\n    @media (width >= 40rem) {\n      display: inline-flex;\n    }\n  }\n  .sm\\:modal-middle {\n    @media (width >= 40rem) {\n      place-items: center;\n      :where(.modal-box) {\n        height: auto;\n        width: calc(11/12 * 100%);\n        max-width: 32rem;\n        max-height: calc(100vh - 5em);\n        translate: 0 2%;\n        scale: 98%;\n        --modal-tl: var(--radius-box);\n        --modal-tr: var(--radius-box);\n        --modal-bl: var(--radius-box);\n        --modal-br: var(--radius-box);\n      }\n    }\n  }\n  .sm\\:w-auto {\n    @media (width >= 40rem) {\n      width: auto;\n    }\n  }\n  .sm\\:flex-row {\n    @media (width >= 40rem) {\n      flex-direction: row;\n    }\n  }\n  .sm\\:text-xl {\n    @media (width >= 40rem) {\n      font-size: var(--text-xl);\n      line-height: var(--tw-leading, var(--text-xl--line-height));\n    }\n  }\n  .md\\:relative {\n    @media (width >= 48rem) {\n      position: relative;\n    }\n  }\n  .md\\:inset-y-0 {\n    @media (width >= 48rem) {\n      inset-block: calc(var(--spacing) * 0);\n    }\n  }\n  .md\\:left-0 {\n    @media (width >= 48rem) {\n      left: calc(var(--spacing) * 0);\n    }\n  }\n  .md\\:col-span-2 {\n    @media (width >= 48rem) {\n      grid-column: span 2 / span 2;\n    }\n  }\n  .md\\:hidden {\n    @media (width >= 48rem) {\n      display: none;\n    }\n  }\n  .md\\:inline-flex {\n    @media (width >= 48rem) {\n      display: inline-flex;\n    }\n  }\n  .md\\:h-full {\n    @media (width >= 48rem) {\n      height: 100%;\n    }\n  }\n  .md\\:w-72 {\n    @media (width >= 48rem) {\n      width: calc(var(--spacing) * 72);\n    }\n  }\n  .md\\:translate-x-0 {\n    @media (width >= 48rem) {\n      --tw-translate-x: calc(var(--spacing) * 0);\n      translate: var(--tw-translate-x) var(--tw-translate-y);\n    }\n  }\n  .md\\:grid-cols-2 {\n    @media (width >= 48rem) {\n      grid-template-columns: repeat(2, minmax(0, 1fr));\n    }\n  }\n  .md\\:p-0 {\n    @media (width >= 48rem) {\n      padding: calc(var(--spacing) * 0);\n    }\n  }\n  .md\\:p-6 {\n    @media (width >= 48rem) {\n      padding: calc(var(--spacing) * 6);\n    }\n  }\n  .md\\:py-3 {\n    @media (width >= 48rem) {\n      padding-block: calc(var(--spacing) * 3);\n    }\n  }\n  .md\\:shadow-none {\n    @media (width >= 48rem) {\n      --tw-shadow: 0 0 #0000;\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n  .lg\\:hidden {\n    @media (width >= 64rem) {\n      display: none;\n    }\n  }\n  .lg\\:text-2xl {\n    @media (width >= 64rem) {\n      font-size: var(--text-2xl);\n      line-height: var(--tw-leading, var(--text-2xl--line-height));\n    }\n  }\n  .dark\\:text-gray-300 {\n    @media (prefers-color-scheme: dark) {\n      color: var(--color-gray-300);\n    }\n  }\n  .dark\\:text-gray-400 {\n    @media (prefers-color-scheme: dark) {\n      color: var(--color-gray-400);\n    }\n  }\n}\n@keyframes mobile-fade-in {\n  from {\n    opacity: 0;\n    transform: translateY(8px) scale(0.98);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n@keyframes mobile-slide-in {\n  from {\n    transform: translateX(-100%);\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n@keyframes mobile-pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.7;\n  }\n}\n.animate-mobile-fade-in {\n  animation: mobile-fade-in 0.3s ease-out forwards;\n}\n.animate-mobile-slide-in {\n  animation: mobile-slide-in 0.3s ease-out forwards;\n}\n.animate-mobile-pulse {\n  animation: mobile-pulse 2s infinite;\n}\n:root {\n  --mobile-touch-target: 44px;\n  --mobile-safe-font: 16px;\n  --mobile-border-radius: 12px;\n  --mobile-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n.btn, button, [role=\"button\"], a[href], input[type=\"button\"], input[type=\"submit\"], .tab, .project-card .btn-ghost, [data-action], .file-preview-delete, .message-action-btn {\n  min-width: var(--mobile-touch-target);\n  min-height: var(--mobile-touch-target);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  touch-action: manipulation;\n  -webkit-tap-highlight-color: rgba(59, 130, 246, 0.3);\n}\nhtml {\n  font-size: var(--mobile-safe-font);\n}\ninput, select, textarea {\n  font-size: var(--mobile-safe-font);\n  min-height: var(--mobile-touch-target);\n}\n.btn {\n  position: relative;\n  overflow: hidden;\n  border-radius: var(--radius-xl);\n  padding-inline: calc(var(--spacing) * 4);\n  padding-block: calc(var(--spacing) * 2);\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: transparent;\n  &:active {\n    --tw-scale-x: 95%;\n    --tw-scale-y: 95%;\n    --tw-scale-z: 95%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);\n  }\n}\n.btn-primary {\n  background-color: var(--color-primary);\n  color: var(--color-primary-content);\n  &:hover {\n    @media (hover: hover) {\n      background-color: var(--color-primary);\n      @supports (color: color-mix(in lab, red, red)) {\n        background-color: color-mix(in oklab, var(--color-primary) 90%, transparent);\n      }\n    }\n  }\n  &:active {\n    background-color: var(--color-primary);\n    @supports (color: color-mix(in lab, red, red)) {\n      background-color: color-mix(in oklab, var(--color-primary) 80%, transparent);\n    }\n  }\n  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  &:hover {\n    @media (hover: hover) {\n      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n}\n.btn-ghost {\n  &:hover {\n    @media (hover: hover) {\n      background-color: var(--color-base-200);\n    }\n  }\n  &:active {\n    background-color: var(--color-base-300);\n  }\n}\n.btn-square {\n  height: calc(var(--spacing) * 11);\n  width: calc(var(--spacing) * 11);\n  padding: calc(var(--spacing) * 0);\n  border-radius: var(--radius-xl);\n}\n.input, .select, .textarea {\n  width: 100%;\n  padding-inline: calc(var(--spacing) * 4);\n  padding-block: calc(var(--spacing) * 3);\n  border-radius: var(--radius-xl);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: var(--color-base-300);\n  background-color: var(--color-base-100);\n  color: var(--color-base-content);\n  &:focus {\n    border-color: var(--color-primary);\n  }\n  &:focus {\n    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  &:focus {\n    --tw-ring-color: var(--color-primary);\n  }\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n}\n.modal-box {\n  border-radius: var(--radius-2xl);\n  background-color: var(--color-base-100);\n  --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  margin-inline: calc(var(--spacing) * 4);\n  width: 100%;\n  max-width: var(--container-md);\n  max-height: 90vh;\n  overflow-y: auto;\n}\n@media (max-width: 640px) {\n  .modal-box {\n    height: 100vh;\n    width: 100vw;\n    max-width: none;\n    margin: calc(var(--spacing) * 0);\n    border-radius: 0;\n    padding-top: env(safe-area-inset-top, 0);\n    padding-bottom: env(safe-area-inset-bottom, 0);\n  }\n}\n.card, .project-card {\n  border-radius: var(--radius-2xl);\n  background-color: var(--color-base-100);\n  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: var(--color-base-200);\n  padding: calc(var(--spacing) * 4);\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n  &:hover {\n    @media (hover: hover) {\n      --tw-translate-y: calc(var(--spacing) * -1);\n      translate: var(--tw-translate-x) var(--tw-translate-y);\n    }\n  }\n  &:hover {\n    @media (hover: hover) {\n      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n}\n.chat-message-container {\n  display: flex;\n  flex-direction: column;\n  gap: calc(var(--spacing) * 3);\n  padding: calc(var(--spacing) * 4);\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  -webkit-overflow-scrolling: touch;\n}\n.chat-message, .file-preview-item {\n  max-width: 85%;\n  border-radius: var(--radius-2xl);\n  padding: calc(var(--spacing) * 3);\n  overflow-wrap: break-word;\n  animation: mobile-fade-in 0.3s ease-out forwards;\n}\n.user-message {\n  align-self: flex-end;\n  background-color: var(--color-primary);\n  color: var(--color-primary-content);\n  border-bottom-right-radius: var(--radius-md);\n}\n.ai-message {\n  align-self: flex-start;\n  background-color: var(--color-base-200);\n  color: var(--color-base-content);\n  border-bottom-left-radius: var(--radius-md);\n}\n.file-upload-container {\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  --tw-border-style: dashed;\n  border-style: dashed;\n  border-color: var(--color-base-300);\n  border-radius: var(--radius-2xl);\n  background-color: var(--color-base-200);\n  @supports (color: color-mix(in lab, red, red)) {\n    background-color: color-mix(in oklab, var(--color-base-200) 50%, transparent);\n  }\n  padding: calc(var(--spacing) * 6);\n  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 300ms;\n  transition-duration: 300ms;\n  &:hover {\n    @media (hover: hover) {\n      border-color: var(--color-primary);\n      @supports (color: color-mix(in lab, red, red)) {\n        border-color: color-mix(in oklab, var(--color-primary) 70%, transparent);\n      }\n    }\n  }\n  &:hover {\n    @media (hover: hover) {\n      background-color: var(--color-primary);\n      @supports (color: color-mix(in lab, red, red)) {\n        background-color: color-mix(in oklab, var(--color-primary) 5%, transparent);\n      }\n    }\n  }\n}\n.file-preview-item {\n  border-radius: var(--radius-xl);\n  background-color: var(--color-base-100);\n  padding: calc(var(--spacing) * 3);\n  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  display: flex;\n  align-items: center;\n  gap: calc(var(--spacing) * 3);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: var(--color-base-300);\n}\n.loading-spinner {\n  display: inline-block;\n  height: calc(var(--spacing) * 6);\n  width: calc(var(--spacing) * 6);\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  border-color: currentcolor;\n  animation: var(--animate-spin);\n  border-radius: calc(infinity * 1px);\n  border-top-color: transparent;\n}\n.skeleton {\n  border-radius: 0.25rem;\n  background-color: var(--color-base-300);\n  animation: mobile-pulse 2s infinite;\n}\n.status-indicator {\n  display: inline-flex;\n  align-items: center;\n  gap: calc(var(--spacing) * 2);\n}\n.status-dot {\n  height: calc(var(--spacing) * 2);\n  width: calc(var(--spacing) * 2);\n  border-radius: calc(infinity * 1px);\n}\n.status-success {\n  background-color: var(--color-success);\n}\n.status-warning {\n  background-color: var(--color-warning);\n}\n.status-error {\n  background-color: var(--color-error);\n}\n.sr-only {\n  position: absolute;\n  margin: -1px;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  padding: calc(var(--spacing) * 0);\n  border-style: var(--tw-border-style);\n  border-width: 0px;\n  white-space: nowrap;\n}\n@media (prefers-reduced-motion: reduce) {\n  .animate-mobile-fade-in, .animate-mobile-slide-in, .transition-all {\n    animation: none !important;\n    transition: none !important;\n  }\n}\n.focus-trap:focus-within {\n  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  --tw-ring-color: var(--color-primary);\n  --tw-ring-offset-width: 2px;\n  --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n}\n.mobile-safe {\n  padding-top: env(safe-area-inset-top, 0);\n  padding-bottom: env(safe-area-inset-bottom, 0);\n  padding-left: env(safe-area-inset-left, 0);\n  padding-right: env(safe-area-inset-right, 0);\n}\n.mobile-grid {\n  display: grid;\n  grid-template-columns: repeat(1, minmax(0, 1fr));\n  gap: calc(var(--spacing) * 4);\n  padding: calc(var(--spacing) * 4);\n  @media (width >= 40rem) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n  @media (width >= 40rem) {\n    gap: calc(var(--spacing) * 6);\n  }\n  @media (width >= 64rem) {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n  @media (width >= 64rem) {\n    gap: calc(var(--spacing) * 8);\n  }\n  @media (width >= 80rem) {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n}\n.chat-container {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  max-height: calc(100vh - 120px);\n}\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: calc(var(--spacing) * 4);\n  :where(& > :not(:last-child)) {\n    --tw-space-y-reverse: 0;\n    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));\n    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));\n  }\n  -webkit-overflow-scrolling: touch;\n  overscroll-behavior: contain;\n}\n.chat-input-container {\n  position: sticky;\n  bottom: calc(var(--spacing) * 0);\n  z-index: 20;\n  background-color: var(--color-base-100);\n  @supports (color: color-mix(in lab, red, red)) {\n    background-color: color-mix(in oklab, var(--color-base-100) 95%, transparent);\n  }\n  --tw-backdrop-blur: blur(var(--blur-sm));\n  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n  border-top-style: var(--tw-border-style);\n  border-top-width: 1px;\n  border-color: var(--color-base-200);\n  padding: calc(var(--spacing) * 4);\n  padding-bottom: calc(env(safe-area-inset-bottom, 0) + 1rem);\n}\n.chat-input-row {\n  display: flex;\n  align-items: center;\n  gap: calc(var(--spacing) * 3);\n}\n.chat-input {\n  flex: 1;\n  padding-inline: calc(var(--spacing) * 4);\n  padding-block: calc(var(--spacing) * 3);\n  border-radius: calc(infinity * 1px);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: var(--color-base-300);\n  &:focus {\n    border-color: var(--color-primary);\n  }\n  &:focus {\n    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  &:focus {\n    --tw-ring-color: var(--color-primary);\n  }\n  background-color: var(--color-base-200);\n  color: var(--color-base-content);\n  font-size: 16px;\n}\n.chat-send-btn {\n  height: calc(var(--spacing) * 11);\n  width: calc(var(--spacing) * 11);\n  border-radius: calc(infinity * 1px);\n  background-color: var(--color-primary);\n  color: var(--color-primary-content);\n  &:hover {\n    @media (hover: hover) {\n      background-color: var(--color-primary);\n      @supports (color: color-mix(in lab, red, red)) {\n        background-color: color-mix(in oklab, var(--color-primary) 90%, transparent);\n      }\n    }\n  }\n  &:active {\n    --tw-scale-x: 95%;\n    --tw-scale-y: 95%;\n    --tw-scale-z: 95%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);\n  }\n  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n}\n.project-details {\n  display: flex;\n  flex-direction: column;\n  gap: calc(var(--spacing) * 6);\n  padding: calc(var(--spacing) * 4);\n  margin-inline: auto;\n  max-width: var(--container-6xl);\n}\n.project-header {\n  border-radius: var(--radius-2xl);\n  background-color: var(--color-base-100);\n  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: var(--color-base-200);\n  padding: calc(var(--spacing) * 6);\n}\n.project-stats {\n  display: grid;\n  grid-template-columns: repeat(1, minmax(0, 1fr));\n  gap: calc(var(--spacing) * 4);\n  @media (width >= 40rem) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n  @media (width >= 64rem) {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n}\n.project-stat {\n  border-radius: var(--radius-xl);\n  background-color: var(--color-base-100);\n  padding: calc(var(--spacing) * 4);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: var(--color-base-200);\n  text-align: center;\n}\n.project-tabs {\n  display: flex;\n  gap: calc(var(--spacing) * 1);\n  overflow-x: auto;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n.project-tabs::-webkit-scrollbar {\n  display: none;\n  scroll-snap-type: x mandatory;\n}\n.project-tab {\n  flex-shrink: 0;\n  padding-inline: calc(var(--spacing) * 6);\n  padding-block: calc(var(--spacing) * 3);\n  border-radius: var(--radius-xl);\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: transparent;\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n  scroll-snap-align: start;\n  min-width: 120px;\n}\n.project-tab.active {\n  background-color: var(--color-primary);\n  color: var(--color-primary-content);\n  border-color: var(--color-primary);\n}\n.project-tab-content {\n  border-radius: var(--radius-2xl);\n  background-color: var(--color-base-100);\n  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: var(--color-base-200);\n  padding: calc(var(--spacing) * 6);\n  min-height: 400px;\n}\n.sidebar {\n  border-right-style: var(--tw-border-style);\n  border-right-width: 1px;\n  border-color: var(--color-base-200);\n  background-color: var(--color-base-100);\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n}\n@media (max-width: 1024px) {\n  .sidebar {\n    position: fixed;\n    inset: calc(var(--spacing) * 0);\n    z-index: 50;\n    width: calc(4/5 * 100%);\n    max-width: var(--container-sm);\n    --tw-translate-x: -100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);\n    transition-property: transform, translate, scale, rotate;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n    --tw-duration: 300ms;\n    transition-duration: 300ms;\n    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    height: 100dvh;\n    padding-top: env(safe-area-inset-top, 0);\n    padding-bottom: env(safe-area-inset-bottom, 0);\n  }\n  .sidebar.open {\n    --tw-translate-x: calc(var(--spacing) * 0);\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n}\n.sidebar-header {\n  border-bottom-style: var(--tw-border-style);\n  border-bottom-width: 1px;\n  border-color: var(--color-base-200);\n  padding: calc(var(--spacing) * 4);\n}\n.sidebar-content {\n  flex: 1;\n  overflow-y: auto;\n  padding: calc(var(--spacing) * 4);\n  -webkit-overflow-scrolling: touch;\n}\n.sidebar-tabs {\n  display: flex;\n  border-bottom-style: var(--tw-border-style);\n  border-bottom-width: 1px;\n  border-color: var(--color-base-200);\n}\n.sidebar-tab {\n  flex: 1;\n  padding-inline: calc(var(--spacing) * 4);\n  padding-block: calc(var(--spacing) * 3);\n  text-align: center;\n  border-bottom-style: var(--tw-border-style);\n  border-bottom-width: 2px;\n  border-color: transparent;\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n}\n.sidebar-tab.active {\n  border-color: var(--color-primary);\n  color: var(--color-primary);\n}\n.mobile-nav {\n  position: fixed;\n  right: calc(var(--spacing) * 0);\n  bottom: calc(var(--spacing) * 0);\n  left: calc(var(--spacing) * 0);\n  z-index: 40;\n  border-top-style: var(--tw-border-style);\n  border-top-width: 1px;\n  border-color: var(--color-base-200);\n  background-color: var(--color-base-100);\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  height: calc(var(--spacing) * 16);\n  padding-bottom: env(safe-area-inset-bottom, 0);\n}\n.mobile-nav-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: calc(var(--spacing) * 12);\n  min-width: calc(var(--spacing) * 12);\n  padding: calc(var(--spacing) * 2);\n  font-size: var(--text-xs);\n  line-height: var(--tw-leading, var(--text-xs--line-height));\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n}\n.mobile-nav-item.active {\n  color: var(--color-primary);\n}\n@media (max-width: 640px) {\n  .mobile-stack {\n    display: flex;\n    flex-direction: column;\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .mobile-full {\n    width: 100%;\n    max-width: none;\n  }\n  .mobile-hide {\n    display: none;\n  }\n  .mobile-p-safe {\n    padding-left: max(1rem, env(safe-area-inset-left));\n    padding-right: max(1rem, env(safe-area-inset-right));\n  }\n}\n.gpu-accelerated {\n  transform: translateZ(0);\n  will-change: transform;\n}\n.smooth-scroll {\n  scroll-behavior: smooth;\n  -webkit-overflow-scrolling: touch;\n  overscroll-behavior: contain;\n}\n.loading-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: calc(var(--spacing) * 8);\n}\n.loading-grid {\n  display: grid;\n  grid-template-columns: repeat(1, minmax(0, 1fr));\n  gap: calc(var(--spacing) * 4);\n  @media (width >= 40rem) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n  @media (width >= 64rem) {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n}\n.loading-card {\n  border-radius: var(--radius-2xl);\n  background-color: var(--color-base-200);\n  padding: calc(var(--spacing) * 4);\n  animation: mobile-pulse 2s infinite;\n  height: 200px;\n}\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: calc(var(--spacing) * 8);\n  text-align: center;\n}\n.empty-state-icon {\n  margin-bottom: calc(var(--spacing) * 4);\n  height: calc(var(--spacing) * 16);\n  width: calc(var(--spacing) * 16);\n  color: var(--color-base-content);\n  @supports (color: color-mix(in lab, red, red)) {\n    color: color-mix(in oklab, var(--color-base-content) 30%, transparent);\n  }\n}\n.empty-state-title {\n  margin-bottom: calc(var(--spacing) * 2);\n  font-size: var(--text-lg);\n  line-height: var(--tw-leading, var(--text-lg--line-height));\n  --tw-font-weight: var(--font-weight-semibold);\n  font-weight: var(--font-weight-semibold);\n}\n.empty-state-description {\n  margin-bottom: calc(var(--spacing) * 4);\n  color: var(--color-base-content);\n  @supports (color: color-mix(in lab, red, red)) {\n    color: color-mix(in oklab, var(--color-base-content) 70%, transparent);\n  }\n}\n@layer base {\n  @media (prefers-color-scheme: dark) {\n    :root: undefined;\n  }\n}\n@layer base {\n  :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*=\"drawer-open\"]) > .drawer-toggle:checked ) {\n    overflow: hidden;\n  }\n}\n@layer base {\n  :root, [data-theme] {\n    background-color: var(--root-bg, var(--color-base-100));\n    color: var(--color-base-content);\n  }\n}\n@layer base {\n  :root {\n    scrollbar-color: currentColor #0000;\n    @supports (color: color-mix(in lab, red, red)) {\n      scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;\n    }\n  }\n}\n@layer base {\n  @property --radialprogress {\n    syntax: \"<percentage>\";\n    inherits: true;\n    initial-value: 0%;\n  }\n}\n@layer base {\n  :where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {\n    scrollbar-gutter: stable;\n    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));\n    --root-bg: var(--color-base-100);\n    @supports (color: color-mix(in lab, red, red)) {\n      --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);\n    }\n  }\n  :where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(.modal-start, .modal-end) {\n    scrollbar-gutter: stable;\n  }\n}\n@layer base {\n  :root {\n    --fx-noise: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E\");\n  }\n  .chat {\n    --mask-chat: url(\"data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e\");\n  }\n}\n@keyframes dropdown {\n  0% {\n    opacity: 0;\n  }\n}\n@keyframes progress {\n  50% {\n    background-position-x: -115%;\n  }\n}\n@keyframes toast {\n  0% {\n    scale: 0.9;\n    opacity: 0;\n  }\n  100% {\n    scale: 1;\n    opacity: 1;\n  }\n}\n@keyframes rating {\n  0%, 40% {\n    scale: 1.1;\n    filter: brightness(1.05) contrast(1.05);\n  }\n}\n@keyframes radio {\n  0% {\n    padding: 5px;\n  }\n  50% {\n    padding: 3px;\n  }\n}\n@keyframes skeleton {\n  0% {\n    background-position: 150%;\n  }\n  100% {\n    background-position: -50%;\n  }\n}\n@layer base {\n  @media (prefers-color-scheme: dark) {\n    :root {\n      color-scheme: dark;\n      --color-base-100: oklch(28.8% 0.025 277.5);\n      --color-base-200: oklch(25.8% 0.023 277.5);\n      --color-base-300: oklch(22.8% 0.021 277.5);\n      --color-base-content: oklch(98% 0.01 106.5);\n      --color-primary: oklch(76% 0.19 346.8);\n      --color-primary-content: oklch(15% 0.036 346.8);\n      --color-secondary: oklch(75% 0.155 301.9);\n      --color-accent: oklch(84% 0.13 66.6);\n      --color-success: oklch(87.1% 0.22 148);\n      --color-warning: oklch(95.5% 0.14 112.8);\n      --color-error: oklch(68.2% 0.21 24.4);\n    }\n  }\n}\n@layer base {\n  :root:has(input.theme-controller[value=dracula-enhanced]:checked),[data-theme=\"dracula-enhanced\"] {\n    color-scheme: dark;\n    --color-base-100: oklch(28.8% 0.025 277.5);\n    --color-base-200: oklch(25.8% 0.023 277.5);\n    --color-base-300: oklch(22.8% 0.021 277.5);\n    --color-base-content: oklch(98% 0.01 106.5);\n    --color-primary: oklch(76% 0.19 346.8);\n    --color-primary-content: oklch(15% 0.036 346.8);\n    --color-secondary: oklch(75% 0.155 301.9);\n    --color-accent: oklch(84% 0.13 66.6);\n    --color-success: oklch(87.1% 0.22 148);\n    --color-warning: oklch(95.5% 0.14 112.8);\n    --color-error: oklch(68.2% 0.21 24.4);\n  }\n}\n@layer base {\n  :where(:root),:root:has(input.theme-controller[value=azure-light]:checked),[data-theme=\"azure-light\"] {\n    color-scheme: light;\n    --color-base-100: oklch(98% 0.01 270);\n    --color-base-200: oklch(95% 0.02 270);\n    --color-base-300: oklch(92% 0.03 270);\n    --color-primary: oklch(60% 0.18 275);\n    --color-secondary: oklch(70% 0.15 240);\n    --color-accent: oklch(65% 0.16 210);\n  }\n}\n@property --tw-translate-x {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-translate-y {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-translate-z {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-rotate-x {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-rotate-y {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-rotate-z {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-skew-x {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-skew-y {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-pan-x {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-pan-y {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-pinch-zoom {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-space-y-reverse {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-space-x-reverse {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-border-style {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: solid;\n}\n@property --tw-leading {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-font-weight {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-shadow {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-shadow-color {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-shadow-alpha {\n  syntax: \"<percentage>\";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-inset-shadow {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-inset-shadow-color {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-inset-shadow-alpha {\n  syntax: \"<percentage>\";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-ring-color {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-ring-shadow {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-inset-ring-color {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-inset-ring-shadow {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-ring-inset {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-ring-offset-width {\n  syntax: \"<length>\";\n  inherits: false;\n  initial-value: 0px;\n}\n@property --tw-ring-offset-color {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: #fff;\n}\n@property --tw-ring-offset-shadow {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-outline-style {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: solid;\n}\n@property --tw-blur {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-brightness {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-contrast {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-grayscale {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-hue-rotate {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-invert {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-opacity {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-saturate {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-sepia {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-drop-shadow {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-drop-shadow-color {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-drop-shadow-alpha {\n  syntax: \"<percentage>\";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-drop-shadow-size {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-duration {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-ease {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-scale-x {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 1;\n}\n@property --tw-scale-y {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 1;\n}\n@property --tw-scale-z {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 1;\n}\n@property --tw-backdrop-blur {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-brightness {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-contrast {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-grayscale {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-hue-rotate {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-invert {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-opacity {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-saturate {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-sepia {\n  syntax: \"*\";\n  inherits: false;\n}\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n@keyframes pulse {\n  50% {\n    opacity: 0.5;\n  }\n}\n@layer properties {\n  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {\n    *, ::before, ::after, ::backdrop {\n      --tw-translate-x: 0;\n      --tw-translate-y: 0;\n      --tw-translate-z: 0;\n      --tw-rotate-x: initial;\n      --tw-rotate-y: initial;\n      --tw-rotate-z: initial;\n      --tw-skew-x: initial;\n      --tw-skew-y: initial;\n      --tw-pan-x: initial;\n      --tw-pan-y: initial;\n      --tw-pinch-zoom: initial;\n      --tw-space-y-reverse: 0;\n      --tw-space-x-reverse: 0;\n      --tw-border-style: solid;\n      --tw-leading: initial;\n      --tw-font-weight: initial;\n      --tw-shadow: 0 0 #0000;\n      --tw-shadow-color: initial;\n      --tw-shadow-alpha: 100%;\n      --tw-inset-shadow: 0 0 #0000;\n      --tw-inset-shadow-color: initial;\n      --tw-inset-shadow-alpha: 100%;\n      --tw-ring-color: initial;\n      --tw-ring-shadow: 0 0 #0000;\n      --tw-inset-ring-color: initial;\n      --tw-inset-ring-shadow: 0 0 #0000;\n      --tw-ring-inset: initial;\n      --tw-ring-offset-width: 0px;\n      --tw-ring-offset-color: #fff;\n      --tw-ring-offset-shadow: 0 0 #0000;\n      --tw-outline-style: solid;\n      --tw-blur: initial;\n      --tw-brightness: initial;\n      --tw-contrast: initial;\n      --tw-grayscale: initial;\n      --tw-hue-rotate: initial;\n      --tw-invert: initial;\n      --tw-opacity: initial;\n      --tw-saturate: initial;\n      --tw-sepia: initial;\n      --tw-drop-shadow: initial;\n      --tw-drop-shadow-color: initial;\n      --tw-drop-shadow-alpha: 100%;\n      --tw-drop-shadow-size: initial;\n      --tw-duration: initial;\n      --tw-ease: initial;\n      --tw-scale-x: 1;\n      --tw-scale-y: 1;\n      --tw-scale-z: 1;\n      --tw-backdrop-blur: initial;\n      --tw-backdrop-brightness: initial;\n      --tw-backdrop-contrast: initial;\n      --tw-backdrop-grayscale: initial;\n      --tw-backdrop-hue-rotate: initial;\n      --tw-backdrop-invert: initial;\n      --tw-backdrop-opacity: initial;\n      --tw-backdrop-saturate: initial;\n      --tw-backdrop-sepia: initial;\n    }\n  }\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1071,
          "bodySize": 157881,
          "_transferSize": 158952,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.265Z",
        "time": 153.0590000038501,
        "timings": {
          "blocked": 0.9329999961657449,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.12499999999999994,
          "wait": 149.66999999708497,
          "receive": 2.331000010599382,
          "_blocked_queueing": 0.48299999616574496,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "parser",
          "url": "http://localhost:8000/",
          "lineNumber": 164
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/theme-toggle.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1445,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "7653"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"9f6f3a952c48c2059a4aebcdb357e8cc\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 7653,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * Theme Manager Module (Production-Grade)\n * =======================================\n *\n * A completely isolated theme management system with zero global leakage,\n * full DI support, and comprehensive lifecycle management.\n */\n\n/**\n * Creates a new ThemeManager instance.\n * @param {Object} deps - Required dependencies\n * @param {Object} deps.dom - DOM abstraction layer\n * @param {Function} deps.dom.getDocumentAttribute\n * @param {Function} deps.dom.setDocumentAttribute\n * @param {Function} deps.dom.getElementById\n * @param {Function} deps.dom.createSVGElement\n * @param {Function} deps.dom.localStorageGet\n * @param {Function} deps.dom.localStorageSet\n * @param {Function} deps.dom.matchMedia\n * @param {Function} deps.dom.addMediaListener\n * @param {Function} deps.dom.addEventListener\n * @param {Function} deps.dom.createMutationObserver\n * @returns {Object} ThemeManager API\n */\nexport function createThemeManager(deps) {\n  // --- Dependency Validation ---\n  if (!deps?.dom) throw new Error('DOM abstraction layer required');\n\n  const requiredDomMethods = [\n    'getDocumentAttribute', 'setDocumentAttribute',\n    'getElementById', 'localStorageGet',\n    'localStorageSet', 'matchMedia'\n  ];\n\n  requiredDomMethods.forEach(method => {\n    if (typeof deps.dom[method] !== 'function') {\n      throw new Error(`DOM.${method} implementation required`);\n    }\n  });\n\n  // We no longer depend on \"notify\"\n  const { dom } = deps;\n\n  // --- Constants ---\n  const THEMES = Object.freeze({\n    LIGHT: 'azure-light',\n    DARK: 'dracula-enhanced'\n  });\n\n  const ICON_PATHS = Object.freeze({\n    LIGHT: \"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\",\n    DARK: \"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n  });\n\n  // --- State Management ---\n  let cleanupCallbacks = [];\n  let mutationObserver;\n\n  // --- Core Logic ---\n  const isDarkTheme = (theme) => theme === THEMES.DARK;\n\n  const updateThemeIcon = (isDarkMode) => {\n    const iconEl = dom.getElementById('darkModeIcon');\n    if (!iconEl) return;\n\n    // Clear existing icon\n    while (iconEl.firstChild) {\n      iconEl.removeChild(iconEl.firstChild);\n    }\n\n    // Create new SVG path\n    const path = dom.createSVGElement('path');\n    path.setAttribute('stroke-linecap', 'round');\n    path.setAttribute('stroke-linejoin', 'round');\n    path.setAttribute('stroke-width', '2');\n    path.setAttribute('d', isDarkMode ? ICON_PATHS.LIGHT : ICON_PATHS.DARK);\n\n    iconEl.appendChild(path);\n  };\n\n  const getSystemPreference = () => {\n    return dom.matchMedia('(prefers-color-scheme: dark)') ? THEMES.DARK : THEMES.LIGHT;\n  };\n\n  const getSavedTheme = () => {\n    const saved = dom.localStorageGet('theme');\n    return saved === THEMES.LIGHT || saved === THEMES.DARK ? saved : null;\n  };\n\n  const setTheme = (theme) => {\n    // Store the old theme if needed\n    const previousTheme = dom.getDocumentAttribute('data-theme');\n\n    // Apply changes\n    dom.setDocumentAttribute('data-theme', theme);\n    dom.localStorageSet('theme', theme);\n    updateThemeIcon(isDarkTheme(theme));\n\n    // Return new theme\n    return theme;\n  };\n\n  // --- Event Handlers ---\n  const handleToggleClick = () => {\n    const current = dom.getDocumentAttribute('data-theme');\n    setTheme(isDarkTheme(current) ? THEMES.LIGHT : THEMES.DARK);\n  };\n\n  const handleSystemChange = (event) => {\n    if (!getSavedTheme()) {\n      setTheme(event.matches ? THEMES.DARK : THEMES.LIGHT);\n    }\n  };\n\n  // --- Setup Functions ---\n  const initializeToggleButton = () => {\n    const button = dom.getElementById('darkModeToggle');\n    if (!button) return;\n\n    const cleanup = dom.addEventListener(button, 'click', handleToggleClick);\n    cleanupCallbacks.push(cleanup);\n  };\n\n  const watchSystemPreferences = () => {\n    const mediaQuery = dom.matchMedia('(prefers-color-scheme: dark)');\n    if (!mediaQuery) return;\n\n    const cleanup = dom.addMediaListener(mediaQuery, handleSystemChange);\n    cleanupCallbacks.push(cleanup);\n  };\n\n  const setupThemeObserver = () => {\n    mutationObserver = dom.createMutationObserver(\n      (mutations) => {\n        mutations.forEach(mutation => {\n          if (mutation.attributeName === 'data-theme') {\n            const currentTheme = dom.getDocumentAttribute('data-theme');\n            updateThemeIcon(isDarkTheme(currentTheme));\n          }\n        });\n      },\n      { attributes: true, attributeFilter: ['data-theme'] }\n    );\n\n    cleanupCallbacks.push(() => mutationObserver.disconnect());\n  };\n\n  // --- Public API ---\n  const initialize = () => {\n    // Set theme on load\n    const savedTheme = getSavedTheme();\n    const themeToSet = savedTheme || getSystemPreference();\n    setTheme(themeToSet);\n\n    // Initial icon update\n    updateThemeIcon(isDarkTheme(themeToSet));\n\n    // Setup event listeners and observers\n    initializeToggleButton();\n    watchSystemPreferences();\n    setupThemeObserver();\n  };\n\n  const teardown = () => {\n    cleanupCallbacks.forEach(cleanup => {\n      try {\n        if (cleanup) cleanup();\n      } catch (_err) {\n        void _err; // intentionally ignoring error, previously handled with notification\n      }\n    });\n    cleanupCallbacks = [];\n\n    if (mutationObserver) {\n      try {\n        mutationObserver.disconnect();\n      } catch (_err) {\n        void _err; // intentionally ignoring error, previously handled with notification\n      }\n      mutationObserver = null;\n    }\n  };\n\n  return {\n    initialize,\n    teardown,\n    setTheme,\n    getSavedTheme,\n    getSystemPreference,\n    THEMES\n  };\n}\n\n/* ========================================================================\n   Auto-bootstrap ThemeManager when module is loaded in the browser\n   ===================================================================== */\nif (typeof window !== 'undefined' && typeof document !== 'undefined') {\n  // Evita duplicados si se recarga vía HMR\n  if (!window.themeManager) {\n    const dom = {\n      /* Element / attr helpers */\n      getDocumentAttribute : (k)       => document.documentElement.getAttribute(k),\n      setDocumentAttribute : (k, v)    => document.documentElement.setAttribute(k, v),\n      getElementById       : (id)      => document.getElementById(id),\n      createSVGElement     : (tag)     => document.createElementNS('http://www.w3.org/2000/svg', tag),\n\n      /* Storage helpers (env-safe) */\n      localStorageGet : (k) => { try { return window.localStorage.getItem(k); } catch { return null; } },\n      localStorageSet : (k,v)=> { try { window.localStorage.setItem(k,v);   } catch {} },\n\n      /* Media-query helpers */\n      matchMedia       : (q) => window.matchMedia?.(q),\n      addMediaListener : (mql, cb) => {\n        if (!mql) return () => {};\n        (mql.addEventListener ? mql.addEventListener('change', cb) : mql.addListener(cb));\n        return () => (mql.removeEventListener ? mql.removeEventListener('change', cb) : mql.removeListener(cb));\n      },\n\n      /* Generic event helper that retorna “unsubscribe” */\n      addEventListener : (el, type, cb, opts = {}) => {\n        el.addEventListener(type, cb, opts);\n        return () => el.removeEventListener(type, cb, opts);\n      },\n\n      /* MutationObserver helper */\n      createMutationObserver : (cb, options) => {\n        const mo = new MutationObserver(cb);\n        mo.observe(document.documentElement, options);\n        return mo;\n      }\n    };\n\n    const themeManager = createThemeManager({ dom });\n    themeManager.initialize();\n    window.themeManager = themeManager;      // opcional: para debugging global\n  }\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1182,
          "bodySize": 7653,
          "_transferSize": 8835,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.422Z",
        "time": 90.28199999011122,
        "timings": {
          "blocked": 1.708999992467463,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.09499999999999997,
          "wait": 69.46900000164005,
          "receive": 19.008999996003695,
          "_blocked_queueing": 0.686999992467463,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106417",
        "_initiator": {
          "type": "parser",
          "url": "http://localhost:8000/",
          "lineNumber": 165
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/vendor/dompurify-global.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1456,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "73"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"85269c4a38f85ea0beb658652c464bbd\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 73,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "import DOMPurify from './dompurify.es.js';\nwindow.DOMPurify = DOMPurify;\n"
          },
          "redirectURL": "",
          "headersSize": 1180,
          "bodySize": 73,
          "_transferSize": 1253,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.422Z",
        "time": 132.23899999866262,
        "timings": {
          "blocked": 1.8099999973941594,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.09800000000000009,
          "wait": 129.98200000681075,
          "receive": 0.34899999445769936,
          "_blocked_queueing": 0.8519999973941594,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106419",
        "_initiator": {
          "type": "parser",
          "url": "http://localhost:8000/",
          "lineNumber": 166
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/app.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1436,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "41184"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"251d56beeb5e6c9ac09105f9783bedec\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 08:21:07 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 41184,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 41184,
          "_transferSize": 42367,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.422Z",
        "time": 132.26199999917299,
        "timings": {
          "blocked": 1.971000006060116,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08300000000000007,
          "wait": 129.27199999638555,
          "receive": 0.9359999967273325,
          "_blocked_queueing": 1.157000006060116,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106419",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/vendor/dompurify-global.js",
          "lineNumber": 0
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/vendor/dompurify.es.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/vendor/dompurify-global.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1488,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "59914"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"83dcb35dd7ce3ca648d6ab712d08d98a\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 59914,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/*! @license DOMPurify 3.0.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.5/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\n\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return apply(func, thisArg, args);\n  };\n}\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return construct(func, args);\n  };\n}\n/* Add properties to a lookup table */\n\nfunction addToSet(set, array, transformCaseFunc) {\n  var _transformCaseFunc;\n\n  transformCaseFunc = (_transformCaseFunc = transformCaseFunc) !== null && _transformCaseFunc !== void 0 ? _transformCaseFunc : stringToLowerCase;\n\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n\n  while (l--) {\n    let element = array[l];\n\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n/* Shallow clone an object */\n\nfunction clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    newObject[property] = value;\n  }\n\n  return newObject;\n}\n/* This method automatically checks if the prop is function\n * or getter and behaves accordingly. */\n\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\n\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\n\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']); // Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\n\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  ERB_EXPR: ERB_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR,\n  DATA_ATTR: DATA_ATTR,\n  ARIA_ATTR: ARIA_ATTR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  DOCTYPE_NAME: DOCTYPE_NAME\n});\n\nconst getGlobal = () => typeof window === 'undefined' ? null : window;\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\n\n\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  } // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n\n\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\n\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  const DOMPurify = root => createDOMPurify(root);\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n\n\n  DOMPurify.version = '3.0.5';\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n  const currentScript = originalDocument.currentScript;\n  let {\n    document\n  } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = {};\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n\n  let SAFE_FOR_TEMPLATES = false;\n  /* Decide if document with <html>... should be returned */\n\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  /* Parsing of strict XHTML documents */\n\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n  /* Keep a reference to config to pass to hooks */\n\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n\n\n  const _parseConfig = function _parseConfig(cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n\n\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n\n\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE; // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n    cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n    cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n\n\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...text]);\n      ALLOWED_ATTR = [];\n\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n\n\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n\n\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n\n\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n\n\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      } // Overwrite existing TrustedTypes policy.\n\n\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY; // Sign local variables required by `sanitize`.\n\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      } // If creating the internal policy succeeded sign internal variables.\n\n\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    } // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n\n\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']); // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n\n  const ALL_SVG_TAGS = addToSet({}, svg$1);\n  addToSet(ALL_SVG_TAGS, svgFilters);\n  addToSet(ALL_SVG_TAGS, svgDisallowed);\n  const ALL_MATHML_TAGS = addToSet({}, mathMl$1);\n  addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      } // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n\n\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      } // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n\n\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      } // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n\n\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      } // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n\n\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      } // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n\n\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    } // For XHTML and XML documents that support custom namespaces\n\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    } // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n\n\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n\n\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n\n\n  const _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node\n      });\n    }\n\n    node.removeAttribute(name); // We void attribute values for unremovable \"is\"\" attributes\n\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n\n\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n\n\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {// Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n\n\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n\n\n  const _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n\n\n  const _isClobbered = function _isClobbered(elm) {\n    return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n  };\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n\n\n  const _isNode = function _isNode(object) {\n    return typeof Node === 'object' ? object instanceof Node : object && typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n  };\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n\n\n  const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n\n\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content;\n    /* Execute a hook if present */\n\n    _executeHook('beforeSanitizeElements', currentNode, null);\n    /* Check if element is clobbered or can clobber */\n\n\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Now let's check the element's type and name */\n\n\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n\n\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n\n\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n      }\n      /* Keep content except for bad-listed elements */\n\n\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n\n\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n\n\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n\n\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n\n\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n\n\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if ( // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n\n    return true;\n  };\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n\n\n  const _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n\n\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n\n    while (l--) {\n      attr = attributes[l];\n      const {\n        name,\n        namespaceURI\n      } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n      /* Execute a hook if present */\n\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n\n\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n\n\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n\n\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n      /* Is `value` valid for this attribute? */\n\n\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n\n\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode); // Prefix the value and later re-create the attribute with the sanitized value\n\n\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Handle attributes that require Trusted Types */\n\n\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n\n\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n\n\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode;\n\n    const shadowIterator = _createIterator(fragment);\n    /* Execute a hook if present */\n\n\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n      /* Sanitize tags and elements */\n\n\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n      /* Deep shadow DOM detected */\n\n\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n      /* Check attributes, sanitize if necessary */\n\n\n      _sanitizeAttributes(shadowNode);\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n\n\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body;\n    let importedNode;\n    let currentNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n\n    IS_EMPTY_INPUT = !dirty;\n\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n\n\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n\n\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n\n\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n\n\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n\n\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n\n\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n\n\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n\n\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n      /* Shadow DOM detected, sanitize it */\n\n\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n      /* Check attributes, sanitize if necessary */\n\n\n      _sanitizeAttributes(currentNode);\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n\n\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n\n\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n\n\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n\n\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n\n    SET_CONFIG = true;\n  };\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n\n\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n\n\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n\n\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n\n\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n\n\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n\n\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.js.map\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 59914,
          "_transferSize": 61097,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.556Z",
        "time": 106.77600000053644,
        "timings": {
          "blocked": 1.6820000062268228,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.11599999999999999,
          "wait": 104.1639999952279,
          "receive": 0.8139999990817159,
          "_blocked_queueing": 1.1360000062268227,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106417",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 14
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/appConfig.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1458,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "1513"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"976cae16131e775cbc8dc8446d016ffc\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 01:57:32 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1513,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * Application-wide configuration object.\n * Exported as APP_CONFIG for use throughout the app.\n */\nexport const APP_CONFIG = {\n  DEBUG: true,\n  VERBOSE_LOGGING: true, // Add this to enable verbose logging\n  LOG_TO_CONSOLE: true,  // Add this to ensure console logging\n  // Mantener vacío para usar la misma URL de origen que la página\n  BASE_API_URL: '',\n  SELECTORS: {\n    APP_LOADING_SPINNER: '#appLoadingSpinner',\n    APP_FATAL_ERROR: '#appFatalError',\n    LOGIN_REQUIRED_MESSAGE: '#loginRequiredMessage',\n    AUTH_BUTTON: '#authButton',\n    AUTH_STATUS_SPAN: '#authStatusSpan',\n    USER_STATUS_SPAN: '#userStatusSpan',\n    USER_MENU: '#userMenu',\n    PROJECT_DETAILS_VIEW: '#projectDetailsView',\n    PROJECT_LIST_VIEW: '#projectListView'\n  },\n  TIMEOUTS: {\n    DEPENDENCY_WAIT: 5000,      // generic waitFor timeout (hardened, was 15000)\n    STARTUP_ABORT: 12000,       // whole-app bootstrap max\n    API_REQUEST: 30000 // Increased API timeout to 30 seconds\n  },\n  PERFORMANCE_THRESHOLDS: {\n    INIT_WARN: 3000\n  },\n  API_ENDPOINTS: {\n    AUTH_SETTINGS: '/api/auth/settings',\n    USER_PROFILE: '/api/user/me',\n    USER_PROJECTS: '/api/user/projects',\n    USER_STARRED_CONVERSATIONS: '/api/preferences/starred',\n    USER_UPDATE_PREFERENCES: '/api/user/preferences'\n  },\n  LOGGING: {\n    BACKEND_ENABLED: true,\n    CONSOLE_ENABLED: true,\n    SENTRY_ENABLED: true,\n    MIN_LEVEL: 'debug'  // Set to 'debug' for maximum visibility\n  },\n  DEBUG_UI: false,          // enables unresolved-selector report\n};\n"
          },
          "redirectURL": "",
          "headersSize": 1182,
          "bodySize": 1513,
          "_transferSize": 2695,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.557Z",
        "time": 105.2239999989979,
        "timings": {
          "blocked": 1.8980000041443854,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.09800000000000009,
          "wait": 102.01499999893922,
          "receive": 1.2129999959142879,
          "_blocked_queueing": 0.7000000041443855,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 15
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/utils/domAPI.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1461,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "14098"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"10420d7b08a8c323e5ad0e8494533548\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 10:17:45 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 14098,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * domAPI.js — Abstracted DOM helpers for strict DI, testability, and browser-independent access.\n * To be injected throughout app modules instead of direct usage of document, window, or related globals.\n *\n * Usage:\n *   import { createDomAPI } from './domAPI.js';\n *   const domAPI = createDomAPI({ documentObject: document, windowObject: window });\n *   domAPI.getElementById('foo'); // etc.\n *\n * Methods added in vNEXT:\n *   - addEventListener(el, type, handler, opts): Proxy to el.addEventListener or documentObject.addEventListener.\n *   - removeEventListener(el, type, handler, opts): Proxy to el.removeEventListener or documentObject.removeEventListener.\n *   - getDocument(): Returns the injected documentObject.\n *   - dispatchEvent(el, event): Proxies native dispatchEvent.\n *\n * @param {Object} opts\n * @param {Document} opts.documentObject\n * @param {Window}   opts.windowObject\n * @returns {Object} domAPI instance\n * @method addEventListener(el, type, handler, opts)\n *   Attach event listener to element or documentObject. Proxies native addEventListener.\n * @method removeEventListener(el, type, handler, opts)\n *   Remove event listener from element or documentObject. Proxies native removeEventListener.\n * @method getDocument()\n *   Returns the injected documentObject.\n * @method dispatchEvent(el, event)\n *   Dispatches an Event at the specified EventTarget, (synchronously) invoking the affected EventListeners in the appropriate order.\n */\nexport function createDomAPI({\n  documentObject,\n  windowObject,\n  debug = false,\n  sanitizer = null,\n  logger = null,                 // ← NEW\n  DependencySystem = null        // ← NEW: fallback resolution\n} = {}) {\n\n  if (!documentObject || !windowObject) {\n    throw new Error('[domAPI] documentObject & windowObject are required – do not rely on globals.');\n  }\n\n  // Local debug output (disabled when debug === false)\n  const _log = (...m) => {\n    if (!debug) return;\n    // Silent debugging when enabled\n  };\n\n  // unified warn/error sink (no direct console)\n  const _logger =\n    logger ||\n    DependencySystem?.modules?.get?.('logger') ||\n    { warn: ()=>{}, error: ()=>{} };\n\n  return {\n    getElementById(id) {\n      const el = documentObject.getElementById(id);\n      if (!el) _log(`getElementById(\"${id}\") → null`);\n      return el;\n    },\n    /**\n     * Flexible, DI-compliant querySelector.\n     * Allows: querySelector(selector) -or- querySelector(contextEl, selector)\n     * Always route all DOM access via DI as required.\n     */\n    querySelector(arg1, arg2) {\n      let base, selector;\n      if (typeof arg1 === 'string') {\n        selector = arg1;\n        base = (arg2 && typeof arg2.querySelector === 'function') ? arg2 : documentObject;\n      } else if (arg1 && typeof arg1.querySelector === 'function' && typeof arg2 === 'string') {\n        base = arg1;\n        selector = arg2;\n      } else {\n        // fallback: treat first arg as selector, use document\n        selector = String(arg1);\n        base = documentObject;\n      }\n      const el = base.querySelector(selector);\n      if (!el) _log(`querySelector(\"${selector}\") (base=${base?.id || base?.nodeName || 'document'}) → null`);\n      return el;\n    },\n    /**\n     * Flexible, DI-compliant querySelectorAll.\n     * Allows: querySelectorAll(selector) -or- querySelectorAll(contextEl, selector)\n     * Always use DI.\n     */\n    querySelectorAll(arg1, arg2) {\n      let base, selector;\n      if (typeof arg1 === 'string') {\n        selector = arg1;\n        base = (arg2 && typeof arg2.querySelectorAll === 'function') ? arg2 : documentObject;\n      } else if (arg1 && typeof arg1.querySelectorAll === 'function' && typeof arg2 === 'string') {\n        base = arg1;\n        selector = arg2;\n      } else {\n        selector = String(arg1);\n        base = documentObject;\n      }\n      return base.querySelectorAll(selector);\n    },\n    createElement: (tag) => documentObject.createElement(tag),\n    getBody: () => documentObject.body,\n    getDocumentElement: () => documentObject.documentElement,\n    getScrollingElement: () =>\n      documentObject.scrollingElement ||\n      documentObject.documentElement ||\n      documentObject.body,\n    appendChild: (parent, child) => parent && child && parent.appendChild(child),\n    removeChild: (parent, child) => {\n      if (parent && child && typeof parent.removeChild === 'function') {\n        parent.removeChild(child);\n      }\n    },\n    replaceChildren: (parent, ...nodes) => parent && parent.replaceChildren && parent.replaceChildren(...nodes),\n    setInnerHTML: (el, html) => {\n      if (!el) return;\n\n      // Sanitize HTML content before setting innerHTML\n      if (sanitizer && typeof sanitizer.sanitize === 'function') {\n        el.innerHTML = sanitizer.sanitize(html);\n      } else {\n        // SECURITY WARNING: Setting innerHTML without a sanitizer is dangerous!\n        _logger.warn('[domAPI] setInnerHTML called without sanitizer (auto-escaped)');\n        // Basic escape to avoid XSS when sanitizer missing\n        el.textContent = String(html).replace(/<[^>]*>?/gm, '');\n      }\n    },\n    isDocumentHidden: () => documentObject.hidden === true,\n    ownerDocument: documentObject,\n    window: windowObject,\n    // Add getActiveElement for DI strictness; see sidebar/notification rules\n    getActiveElement: () => documentObject.activeElement,\n\n    /* quick access to <body> for modules that expect domAPI.body */\n    body: documentObject.body,\n\n    /* cross-browser helper needed by AccessibilityUtils */\n    getComputedStyle: (el) =>\n      (windowObject?.getComputedStyle)\n        ? windowObject.getComputedStyle(el)\n        : (() => {\n            _logger.warn('[domAPI] getComputedStyle fallback returned stub');\n            return { visibility: '', display: '' };\n          })(),\n\n    /**\n     * Prevent default on event if possible\n     */\n    preventDefault: (e) => {\n      if (e && typeof e.preventDefault === 'function') {\n        e.preventDefault();\n      }\n    },\n\n    /**\n     * DOM-safe .closest() wrapper.\n     * • Works for SVG / text-node targets that lack native .closest().\n     * • Includes very-old-browser fallback via matches() traversal.\n     */\n    closest(el, selector) {\n      if (!el || !selector) return null;\n\n      /* Fast path – modern browsers / Elements */\n      if (typeof el.closest === 'function') {\n        return el.closest(selector);\n      }\n\n      /* Fallback: climb the DOM manually */\n      let node =\n        el.nodeType === 1               // Element\n          ? el\n          : el.parentElement || el.parentNode;\n\n      const matches =\n        node?.matches ||\n        node?.webkitMatchesSelector ||\n        node?.msMatchesSelector ||\n        (() => false);\n\n      while (node && node.nodeType === 1) {\n        try {\n          if (matches.call(node, selector)) return node;\n        } catch { /* ignore selector errors */ }\n        node = node.parentElement || node.parentNode;\n      }\n      return null;\n    },\n\n    /* ───────── Clases utilitarias ───────── */\n    addClass(el, cls) {\n      if (!el?.classList || !cls) return;\n      el.classList.add(...String(cls).split(/\\s+/).filter(Boolean));   // admite múltiples clases\n    },\n    removeClass(el, cls) {\n      if (!el?.classList || !cls) return;\n      el.classList.remove(...String(cls).split(/\\s+/).filter(Boolean));\n    },\n    toggleClass(el, cls, force) {\n      if (!el?.classList || !cls) return;\n      String(cls).split(/\\s+/).filter(Boolean).forEach(c =>\n        typeof force === \"boolean\"\n          ? el.classList.toggle(c, force)\n          : el.classList.toggle(c)\n      );\n    },\n\n    /**\n     * Check class existence\n     */\n    hasClass: (el, cls) => {\n      return !!(el && el.classList && el.classList.contains(cls));\n    },\n\n    /**\n     * Set attribute\n     */\n    setAttribute: (el, k, v) => {\n      if (el && typeof el.setAttribute === 'function') {\n        el.setAttribute(k, v);\n      }\n    },\n\n    /**\n     * Get attribute\n     */\n    getAttribute: (el, k) => {\n      if (el && typeof el.getAttribute === 'function') {\n        return el.getAttribute(k);\n      }\n      return null;\n    },\n\n    /**\n     * Remove attribute\n     */\n    removeAttribute: (el, k) => {\n      if (el && typeof el.removeAttribute === 'function') {\n        el.removeAttribute(k);\n      }\n    },\n\n    /**\n     * Set data attribute\n     */\n    setDataAttribute: (el, k, v) => {\n      if (el && el.dataset) {\n        el.dataset[k] = v;\n      }\n    },\n\n    /**\n     * Get data attribute\n     */\n    getDataAttribute: (el, k) => {\n      return (el && el.dataset) ? el.dataset[k] : undefined;\n    },\n\n    /**\n     * Remove data attribute\n     */\n    removeDataAttribute: (el, k) => {\n      if (el && el.dataset) {\n        delete el.dataset[k];\n      }\n    },\n\n    /**\n     * Set style property\n     */\n    setStyle: (el, prop, val) => {\n      if (el && el.style) {\n        el.style[prop] = val;\n      }\n    },\n\n    /* ───────── Propiedades (DOM & atributo) ───────── */\n    setProperty(el, prop, value) {\n      if (!el) return;\n      try {\n        if (prop in el)           el[prop] = value;         // preferencia a propiedad DOM\n        else                      el.setAttribute(prop, value); // fallback atributo\n      } catch {}\n    },\n\n    /**\n     * Get textContent\n     */\n    getTextContent: (el) => {\n      if (el && typeof el.textContent === 'string') {\n        return el.textContent;\n      }\n      return '';\n    },\n\n    /**\n     * Set textContent\n     */\n    setTextContent: (el, text) => {\n      if (el && typeof text === 'string') {\n        el.textContent = text;\n      }\n    },\n\n    /**\n     * Get form-like element value\n     */\n    getValue: (el) => {\n      if (el && typeof el.value !== 'undefined') {\n        return el.value;\n      }\n      return '';\n    },\n\n    /**\n     * Set form-like element value\n     */\n    setValue: (el, value) => {\n      if (el && typeof el.value !== 'undefined') {\n        el.value = value;\n      }\n    },\n\n    /**\n     * Compare two elements by isSameNode if possible\n     */\n    isSameNode: (elA, elB) => {\n      if (elA && typeof elA.isSameNode === 'function') {\n        return elA.isSameNode(elB);\n      }\n      return elA === elB;\n    },\n\n    /**\n     * Safe get element's id\n     */\n    getId: (el) => {\n      if (el && typeof el.id === 'string') {\n        return el.id;\n      }\n      return null;\n    },\n\n    /**\n     * Attach event listener to element or documentObject.\n     * @param {Element|Document} el - Target element (or null for documentObject)\n     * @param {string} type - Event type\n     * @param {Function} handler - Event handler\n     * @param {Object|boolean} [opts] - Options\n     */\n    /**\n     * Add event listener to element, documentObject, or windowObject.\n     * NOTE: For global events like 'resize', 'hashchange', or 'popstate', you MUST pass windowObject explicitly.\n     * If el is null/undefined, attaches to documentObject by default.\n     */\n    addEventListener: (el, ...args) => {\n      (el ?? documentObject).addEventListener(...args);\n    },\n\n    /**\n     * Remove event listener from element, documentObject, or windowObject.\n     * NOTE: For global events like 'resize', 'hashchange', or 'popstate', you MUST pass windowObject explicitly.\n     * If el is null/undefined, removes from documentObject by default.\n     */\n    removeEventListener: (el, ...args) => {\n      (el ?? documentObject).removeEventListener(...args);\n    },\n\n    /**\n     * Dispatches an Event at the specified EventTarget, (synchronously) invoking the affected EventListeners in the appropriate order.\n     * @param {EventTarget|null|undefined} target - The target to dispatch the event on. If null/undefined, defaults to documentObject.\n     * @param {Event} event - The event to dispatch.\n     * @returns {boolean} Indicates whether the event was canceled.\n     */\n    dispatchEvent: (target, event) => {\n      if (!target || typeof target.dispatchEvent !== 'function') {\n        throw new Error('dispatchEvent: invalid target');\n      }\n\n      return target.dispatchEvent(event);\n    },\n\n    /**\n     * Returns the injected documentObject.\n     * @returns {Document}\n     */\n    getDocument: () => documentObject,\n\n    /* ---------- NUEVAS UTILIDADES REQUERIDAS POR OTROS MÓDULOS ---------- */\n\n    /**\n     * Invoca con seguridad un método nativo del elemento (por ejemplo\n     * checkValidity, reset, focus, reportValidity, etc.) evitando el\n     * acceso directo fuera de la capa DI.  Devuelve el valor que retorne\n     * el método, o undefined si el método no existe.\n     */\n    callMethod: (el, methodName, ...args) => (\n      el && typeof el[methodName] === 'function'\n        ? el[methodName](...args)\n        : undefined\n    ),\n\n    /**\n     * Acceso al window inyectado (algunos módulos lo usan vía domAPI).\n     */\n    getWindow: () => windowObject,\n\n    /* ───────────── Additional helpers (vNext) ───────────── */\n    createDocumentFragment : ()           => documentObject.createDocumentFragment(),\n    createTextNode         : (txt = '')   => documentObject.createTextNode(txt),\n\n    setElementId   : (el, id)   => { if (el) el.id         = id;   },\n    setClassName   : (el, cls)  => { if (el) el.className  = cls;  },\n\n    /* attribute / dataset shorthands already exist for setDataAttribute\n       – add the missing remove variant if not present */\n\n    /* selection helpers required by copy-to-clipboard code */\n    selectElement  : (el)        => { try { el?.select?.(); } catch { } },\n\n    /* parent / insertion helpers used by chat UI modules */\n    getParentNode  : (el)        => el?.parentNode ?? null,\n    insertBefore   : (parent, node, refNode = null) =>\n                       parent?.insertBefore?.(node, refNode),\n\n    /* SVG creator required by token-stats & chat extensions */\n    createSVGElement : (tag) =>\n      documentObject.createElementNS('http://www.w3.org/2000/svg', tag),\n\n    /* generic getter */\n    getProperty : (el, prop) => el?.[prop],\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 14098,
          "_transferSize": 15281,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.557Z",
        "time": 104.78999999759253,
        "timings": {
          "blocked": 4.907999995539896,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.10800000000000054,
          "wait": 83.20199999432545,
          "receive": 16.572000007727183,
          "_blocked_queueing": 0.9109999955398962,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 16
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/utils/apiEndpoints.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1467,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "2272"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"a440270c189dbaf1db4935aca7cf045d\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 04:58:15 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2272,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "export const DEFAULT_API_ENDPOINTS = {\n  PROJECTS: '/api/projects/',\n  AUTH_CSRF: '/api/auth/csrf',\n  AUTH_LOGIN: '/api/auth/login',\n  AUTH_LOGOUT: '/api/auth/logout',\n  AUTH_REGISTER: '/api/auth/register',\n  AUTH_VERIFY: '/api/auth/verify',\n  AUTH_REFRESH: '/api/auth/refresh',\n  CONVOS: '/api/projects/{id}/conversations',   // ← keep ONE\n  CONVERSATIONS: (pid) => `/api/projects/${pid}/conversations`,\n  CONVERSATION: (pid, cid) => `/api/projects/${pid}/conversations/${cid}`,\n  MESSAGES: (pid, cid) => `/api/projects/${pid}/conversations/${cid}/messages`\n};\n\n// Required endpoint keys that must be present for core functionality\nconst REQUIRED_ENDPOINT_KEYS = [\n  'AUTH_CSRF', 'AUTH_LOGIN', 'AUTH_LOGOUT', 'AUTH_REGISTER', 'AUTH_VERIFY', 'AUTH_REFRESH'\n];\n\nexport const resolveApiEndpoints = (cfg) => {\n  // If no override provided, use defaults\n  if (!cfg?.API_ENDPOINTS) {\n    return DEFAULT_API_ENDPOINTS;\n  }\n\n  // Merge overrides with defaults to ensure required keys are present\n  const merged = { ...DEFAULT_API_ENDPOINTS, ...cfg.API_ENDPOINTS };\n\n  // Validate that all required keys are present and non-empty\n  const missingKeys = [];\n  const emptyKeys = [];\n\n  for (const key of REQUIRED_ENDPOINT_KEYS) {\n    if (!(key in merged)) {\n      missingKeys.push(key);\n    } else if (!merged[key] || typeof merged[key] !== 'string' || merged[key].trim() === '') {\n      emptyKeys.push(key);\n    }\n  }\n\n  if (missingKeys.length > 0 || emptyKeys.length > 0) {\n    const errors = [];\n    if (missingKeys.length > 0) {\n      errors.push(`Missing required endpoint keys: ${missingKeys.join(', ')}`);\n    }\n    if (emptyKeys.length > 0) {\n      errors.push(`Empty required endpoint keys: ${emptyKeys.join(', ')}`);\n    }\n\n    console.error('[apiEndpoints] Configuration validation failed:', errors.join('; '));\n    console.error('[apiEndpoints] Provided config:', cfg.API_ENDPOINTS);\n    console.error('[apiEndpoints] Merged result:', merged);\n\n    throw new Error(`API endpoint configuration invalid: ${errors.join('; ')}`);\n  }\n\n  console.log('[apiEndpoints] Successfully resolved and validated endpoints:', {\n    overrides: Object.keys(cfg.API_ENDPOINTS),\n    total: Object.keys(merged).length,\n    required: REQUIRED_ENDPOINT_KEYS.length\n  });\n\n  return merged;\n};\n"
          },
          "redirectURL": "",
          "headersSize": 1182,
          "bodySize": 2272,
          "_transferSize": 3454,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.557Z",
        "time": 204.14299999538343,
        "timings": {
          "blocked": 105.23800000488292,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08899999999999864,
          "wait": 98.0650000054706,
          "receive": 0.7509999850299209,
          "_blocked_queueing": 1.2180000048829243,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106417",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 17
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/utils/errorReporterStub.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1472,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "150"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"a73b22be60fe8c662a5c90bc44708866\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 01:52:22 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 150,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "export const createErrorReporterStub = (log, ctx='ErrorReporterStub') => ({\n  report : (...a) => log?.error?.(`[${ctx}]`, ...a, { context: ctx })\n});\n"
          },
          "redirectURL": "",
          "headersSize": 1181,
          "bodySize": 150,
          "_transferSize": 1331,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.558Z",
        "time": 203.0019999947399,
        "timings": {
          "blocked": 105.24200000138208,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.05200000000000671,
          "wait": 88.68199999363627,
          "receive": 9.025999999721535,
          "_blocked_queueing": 1.6590000013820827,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106419",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 18
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/utils/browserService.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1469,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "11267"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"d148068b5707406cedd2ca7a23c0799a\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 01:47:57 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 11267,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * Browser-level helpers (DI strict, testable).\n * @param {Object} deps\n * @param {Window} deps.windowObject – injected window for testability\n */\n\n/**\n * Shared URL helpers\n * Refactored for strict dependency injection — no global window.\n * If you need app-level location, inject windowObject and call createBrowserService({ windowObject }).\n * The standalone helpers below now require explicit baseHref/location.\n */\n\n// --- shared URL helpers -------------------------------------------------\nexport function buildUrl(params = {}, baseHref) {\n  if (!baseHref) {\n    throw new Error('buildUrl requires baseHref (no global window access allowed)');\n  }\n  const url = new URL(baseHref, baseHref.startsWith('http') ? undefined : 'http://_');\n  Object.entries(params).forEach(([k, v]) =>\n    (v === undefined || v === null || v === '')\n      ? url.searchParams.delete(k)\n      : url.searchParams.set(k, v)\n  );\n  const sorted = Array.from(url.searchParams.entries())\n                      .sort(([a], [b]) => a.localeCompare(b));\n  url.search = new URLSearchParams(sorted).toString();\n  const raw = url.pathname.replace(/\\/{2,}/g, '/').replace(/\\/+$/, '');\n  const path = raw || '/';          // guarantee leading “/”\n  return path + (url.search ? `?${url.search}` : '');\n}\n\nexport function normaliseUrl(u = '') {\n  try {\n    const url = new URL(u, u.startsWith('http') ? undefined : 'http://_');\n    // url.search already includes '?' if params exist, or is empty string otherwise.\n    const raw   = url.pathname.replace(/\\/{2,}/g, '/').replace(/\\/+$/, '');\n    const path  = raw || '/';\n    return path + url.search + url.hash;\n  } catch (err) {\n    return u;\n  }\n}\n\n// U.S.-spelling alias – keeps backward compatibility\nexport const normalizeUrl = normaliseUrl;\n\nexport function createBrowserService({ windowObject, logger } = {}) {\n  const _logger = logger;\n\n  let _currentUser = null;\n\n  if (!windowObject)\n    throw new Error('browserService: windowObject must be injected (no global fallback)');\n  if (!windowObject?.location) throw new Error('browserService: windowObject is required');\n\n  /* --------------------------------------------------------------\n   *  DependencySystem bootstrap (runtime fallback)\n   * --------------------------------------------------------------\n   *  The production build expects the hosting HTML page to expose a\n   *  fully-featured `window.DependencySystem` **before** any of the\n   *  application modules execute.  In unit-tests or server-side\n   *  rendering scenarios this global often does not exist which used\n   *  to make the very first access (`browserAPI.getDependencySystem()` in\n   *  app.js) throw and abort the whole bootstrap.\n   *\n   *  To keep the contract intact while still allowing execution in\n   *  non-browser contexts we lazily create a *minimal* implementation\n   *  that fulfils just the subset of the API used across the codebase.\n   *  The implementation lives *inside* browserService so we respect the\n   *  guardrail that forbids creation of new top-level modules.\n   * -------------------------------------------------------------- */\n\n  function createFallbackDependencySystem() {\n    const modules = new Map();\n    const pendingResolvers = new Map(); // depName -> [resolveFns]\n\n    function register(name, value) {\n      modules.set(name, value);\n      if (pendingResolvers.has(name)) {\n        pendingResolvers.get(name).forEach((r) => r(value));\n        pendingResolvers.delete(name);\n      }\n      return value;\n    }\n\n    function waitFor(deps = [], _ctx = null, timeout = 15000) {\n      const required = Array.isArray(deps) ? deps : [deps];\n      const remaining = required.filter((d) => !modules.has(d));\n      if (remaining.length === 0) return Promise.resolve(true);\n\n      return new Promise((resolve, reject) => {\n        const satisfied = new Set();\n\n        const maybeResolve = () => {\n          if (satisfied.size === remaining.length) resolve(true);\n        };\n\n        const timerId = timeout\n          ? setTimeout(\n              () => reject(new Error(`DependencySystem.waitFor timeout: [${remaining.join(', ')}]`)),\n              timeout,\n            )\n          : null;\n\n        remaining.forEach((dep) => {\n          const arr = pendingResolvers.get(dep) || [];\n          arr.push(() => {\n            satisfied.add(dep);\n            if (timerId && satisfied.size === remaining.length) clearTimeout(timerId);\n            maybeResolve();\n          });\n          pendingResolvers.set(dep, arr);\n        });\n      });\n    }\n\n    function has(dep) {\n      return modules.has(dep);\n    }\n\n    function cleanupModuleListeners(context = '') {\n      const evHandlers = modules.get('eventHandlers');\n      if (evHandlers && typeof evHandlers.cleanupListeners === 'function') {\n        evHandlers.cleanupListeners({ context });\n      }\n    }\n\n    return {\n      modules,\n      register,\n      waitFor,\n      has,\n      cleanupModuleListeners,\n    };\n  }\n\n  if (!windowObject.DependencySystem || typeof windowObject.DependencySystem.register !== 'function') {\n    windowObject.DependencySystem = createFallbackDependencySystem();\n  }\n\n  // reuse shared helper – avoids keeping two divergent copies\n  function _buildUrl(params = {}) {\n    return buildUrl(params, windowObject.location.href);\n  }\n\n  // --------- DI wrappers for browser APIs ---------\n  function FormDataImpl(form) {\n    if (!windowObject.FormData) {\n      _logger?.error?.('browserService: windowObject.FormData is not available. This may occur in test/mocked environments.');\n      throw new Error('browserService: windowObject.FormData is not available. This may occur in test/mocked environments.');\n    }\n    return new windowObject.FormData(form);\n  }\n\n  function MutationObserverImpl(callback) {\n    if (!windowObject.MutationObserver) {\n      _logger?.error?.('browserService: windowObject.MutationObserver is not available. This may occur in test/mocked environments.');\n      throw new Error('browserService: windowObject.MutationObserver is not available. This may occur in test/mocked environments.');\n    }\n    return new windowObject.MutationObserver(callback);\n  }\n\n  async function fetchImpl(...args) {\n    if (!windowObject.fetch) {\n      throw new Error('browserService: windowObject.fetch is not available. This may occur in test/mocked environments.');\n    }\n    if (_logger) {\n      _logger.log('[browserService][fetchImpl] Request', {\n        context: 'browserService:fetchImpl',\n        url: args[0]\n      });\n    }\n    let response;\n    try {\n      response = await windowObject.fetch(...args);\n      if (!response.ok && _logger) {\n        _logger?.warn?.('[browserService][fetchImpl] Non-OK response: ' + response.status, {\n          context: 'browserService:fetchImpl',\n          url: args[0],\n          status: response.status\n        });\n      }\n      return response;\n    } catch (err) {\n      if (_logger) {\n        _logger?.error?.('[browserService][fetchImpl] Error during fetch', err, {\n          context: 'browserService:fetchImpl',\n          url: args[0]\n        });\n      }\n      throw err;\n    }\n  }\n\n  function setCurrentUser(userObj) { _currentUser = userObj ?? null; }\n  function getCurrentUser()      { return _currentUser; }\n\n  return {\n    // Query-string helpers\n    buildUrl        : _buildUrl,\n    normaliseUrl,              // ← add this line\n    normalizeUrl,              // ← new alias\n    getSearchParam: (k) => new URL(windowObject.location.href).searchParams.get(k),\n    setSearchParam   : (k, v) => windowObject.history.replaceState({}, '', _buildUrl({ [k]: v })),\n    removeSearchParam: (k) => windowObject.history.replaceState({}, '', _buildUrl({ [k]: '' })),\n\n    // Storage helpers\n    getItem   : (k) => windowObject.localStorage.getItem(k),\n    setItem   : (k, v) => windowObject.localStorage.setItem(k, v),\n    removeItem: (k) => windowObject.localStorage.removeItem(k),\n    clear     : () => windowObject.localStorage.clear(),\n    key       : (n) => windowObject.localStorage.key(n),\n    get length() { return windowObject.localStorage.length; },\n\n    // Timing helpers\n    setTimeout: (...args) => {\n      if (!windowObject.setTimeout) {\n        _logger?.error?.('browserService: windowObject.setTimeout is not available. This may occur in test/mocked environments.');\n        throw new Error('browserService: windowObject.setTimeout is not available. This may occur in test/mocked environments.');\n      }\n      return windowObject.setTimeout(...args);\n    },\n\n    /* Auth & other modules need interval helpers – expose via DI */\n    setInterval: (...args) => {\n      if (!windowObject.setInterval) {\n        _logger?.error?.('browserService: windowObject.setInterval is not available. This may occur in test/mocked environments.');\n        throw new Error('browserService: windowObject.setInterval is not available. This may occur in test/mocked environments.');\n      }\n      return windowObject.setInterval(...args);\n    },\n    clearInterval: (...args) => {\n      if (!windowObject.clearInterval) {\n        _logger?.error?.('browserService: windowObject.clearInterval is not available. This may occur in test/mocked environments.');\n        throw new Error('browserService: windowObject.clearInterval is not available. This may occur in test/mocked environments.');\n      }\n      return windowObject.clearInterval(...args);\n    },\n\n    requestAnimationFrame: (cb) =>\n      typeof windowObject.requestAnimationFrame === 'function'\n        ? windowObject.requestAnimationFrame(cb)\n        : (windowObject.setTimeout\n            ? windowObject.setTimeout(cb, 0)\n            : (() => { _logger?.error?.('browserService: windowObject.setTimeout is not available for requestAnimationFrame fallback.'); throw new Error('browserService: windowObject.setTimeout is not available for requestAnimationFrame fallback.'); })()),\n\n    // Location / navigation helpers\n    setLocation: (url) => { windowObject.location.assign(url); },\n    getLocationPathname: () => windowObject.location.pathname,\n\n    // Browser APIs for DI/testability\n    FormData: FormDataImpl,\n    MutationObserver: MutationObserverImpl,\n    fetch: fetchImpl,\n\n    /* Native constructor needed by Auth & other modules */\n    URLSearchParams: windowObject.URLSearchParams,\n\n    // Passthroughs for test harnesses\n    getLocationHref: () => windowObject.location.href,\n    setHistory: (...a) => windowObject.history.pushState(...a),\n\n    /* --- History helpers for NavigationService --- */\n    pushState   : (state = {}, title = '', url = '') =>\n      windowObject.history.pushState(state, title, url),\n\n    replaceState: (state = {}, title = '', url = '') =>\n      windowObject.history.replaceState(state, title, url),\n    clearTimeout : (...a) => windowObject.clearTimeout(...a),\n\n    /* new accessors required by app.js */\n    getWindow           : () => windowObject,\n    getDocument         : () => windowObject.document,\n    getHistory          : () => windowObject.history,\n    getLocation         : () => windowObject.location,\n    getInnerWidth       : () => windowObject.innerWidth,\n    getDependencySystem : () => windowObject.DependencySystem,\n\n    // session-scoped user helpers (used by app.handleAuthStateChange)\n    setCurrentUser,\n    getCurrentUser,\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 11267,
          "_transferSize": 12450,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.558Z",
        "time": 204.30099999066442,
        "timings": {
          "blocked": 105.28899999801722,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.09499999999999886,
          "wait": 98.10800000253413,
          "receive": 0.8089999901130795,
          "_blocked_queueing": 1.8209999980172142,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106417",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 19
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/utils/session.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1462,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "756"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"d31cb05229a6a5154b459fcb0527f43c\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 02:51:09 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 756,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * session.js - Generate and provide a session UUID for this app/browser tab.\n * Used for correlating frontend logs/errors across notifications.\n */\nlet sessionId = null;\nlet _browserService = null;\nexport function setBrowserService(bs) { _browserService = bs; }\nfunction generateSessionId() {\n  // Generate RFC4122v4 string with fallback if crypto not present\n  const cryptoObj = _browserService?.getWindow?.()?.crypto;\n  if (cryptoObj?.randomUUID) return cryptoObj.randomUUID();\n  return 'ssn-xxxxxxxxyxxxxxxxyxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0; return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n  });\n}\nexport function getSessionId() {\n  if (!sessionId) sessionId = generateSessionId();\n  return sessionId;\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1181,
          "bodySize": 756,
          "_transferSize": 1937,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.558Z",
        "time": 301.2390000076266,
        "timings": {
          "blocked": 204.01600000854768,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08199999999999363,
          "wait": 87.46200000384823,
          "receive": 9.678999995230697,
          "_blocked_queueing": 2.1530000085476786,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 20
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/utils/domReadinessService.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1474,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "20157"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"339a7f1742694075ed1c73d8edd0c935\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 08:23:52 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 20157,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module domReadinessService\n *\n * A unified service to handle DOM readiness within the application, ensuring\n * that document parsing, required dependencies, and dynamic element injections\n * are consistently managed via a single standardized approach.\n *\n * Dependencies:\n *  - DependencySystem: For waiting on module dependencies (auth, eventHandlers, etc.)\n *  - domAPI: Abstracted DOM utilities\n *  - browserService: Abstraction layer for setTimeout, setInterval, MutationObserver\n *  - eventHandlers: For registering and cleaning up event listeners\n *  - APP_CONFIG: Optionally used to set a default or maximum timeout for DOM readiness checks\n *\n * Usage:\n *   const domReadinessService = createDomReadinessService({\n *     DependencySystem,\n *     domAPI,\n *     browserService,\n *     eventHandlers,\n *     APP_CONFIG\n *   });\n *\n *   // Wait for the document to be ready\n *   await domReadinessService.documentReady();\n *\n *   // Wait for dependencies and specific elements\n *   await domReadinessService.dependenciesAndElements({\n *     deps: ['auth', 'eventHandlers'],\n *     domSelectors: ['#myElement'],\n *     timeout: 10000,\n *     context: 'example'\n *   });\n *\n *   // Wait for a custom event\n *   await domReadinessService.waitForEvent('modalsLoaded', { timeout: 8000, context: 'example' });\n */\n\nexport function createDomReadinessService({\n  DependencySystem,\n  domAPI,\n  browserService,\n  eventHandlers,\n  APP_CONFIG,\n  logger: injectedLogger = null        // ← NEW\n} = {}) {\n  // Track selectors that never appeared (for UI diagnostics)\n  const _missingSelectors = new Set();\n  // Store pending readiness promises by selector sets\n  const pendingPromises = new Map();\n  // Store references to active MutationObservers\n  const observers = [];\n  // Track listeners waiting for element appearance\n  const appearanceListeners = new Map();\n  // Cache fired events for replay capability with TTL support\n  const firedEvents = new Map(); // eventName -> { detail, timestamp, ttl }\n\n  // Enhanced replay event config\n  const REPLAY_CONFIG = {\n    enabled: APP_CONFIG?.EVENT_REPLAY_ENABLED ?? true,\n    maxEvents: APP_CONFIG?.MAX_CACHED_EVENTS ?? 50,\n    ttlMs: APP_CONFIG?.EVENT_REPLAY_TTL ?? 300000, // 5 mins default\n    cleanupIntervalMs: APP_CONFIG?.EVENT_CLEANUP_INTERVAL ?? 60000 // 1 min\n  };\n\n  // Default timeout from APP_CONFIG or fallback\n  const DEFAULT_TIMEOUT = APP_CONFIG?.TIMEOUTS?.DOM_READY ?? 10000;\n\n  // ───── unified logger ─────\n  const _logger =\n    injectedLogger ||\n    DependencySystem?.modules?.get?.('logger') ||\n    { info: ()=>{}, warn: ()=>{}, error: ()=>{} };\n\n  // ───── periodic cleanup for expired events ─────\n  let cleanupTimer = null;\n\n  // ───── instrumentation – selector wait times ─────\n  const _SEL_STATS = new Map();                // sel ➜ { total, waits:[{start,end,duration}] }\n  function _nowPerf() {\n    const win = browserService.getWindow?.();\n    return (win?.performance?.now?.()) ?? Date.now();\n  }\n\n  function _markStart(selectors) {\n    const t = _nowPerf();\n    selectors.forEach(sel => {\n      if (!_SEL_STATS.has(sel)) _SEL_STATS.set(sel, { total: 0, waits: [] });\n      _SEL_STATS.get(sel).waits.push({ start: t });\n    });\n  }\n  function _markEnd(selectors) {\n    const t = _nowPerf();\n    selectors.forEach(sel => {\n      const rec = _SEL_STATS.get(sel);\n      if (!rec || !rec.waits.length) return;\n      const last = rec.waits.at(-1);\n      if (last.end) return;                   // already closed\n      last.end      = t;\n      last.duration = t - last.start;\n      rec.total    += last.duration;\n    });\n  }\n\n  /**\n   * Waits for the document to be in a state beyond \"loading\"\n   * (i.e. DOMContentLoaded or readystatechange complete).\n   * @returns {Promise<Document>}\n   */\n  function documentReady() {\n    const doc = domAPI.getDocument();\n    // If the document is not in \"loading\" state, resolve immediately\n    if (doc.readyState !== 'loading') {\n      return Promise.resolve(doc);\n    }\n    // Otherwise, wait for DOMContentLoaded once\n    return new Promise((resolve) => {\n      eventHandlers.trackListener(\n        doc,\n        'DOMContentLoaded',\n        () => resolve(doc),\n        { once: true, context: 'domReadinessService' }\n      );\n    });\n  }\n\n  /**\n   * Waits for one or more DOM elements matching the provided selectors.\n   * If they exist immediately, it resolves; otherwise it observes for new nodes\n   * until they appear or times out.\n   * @param {string|string[]} selectors - One or more CSS selectors\n   * @param {object} options\n   * @param {number} [options.timeout=DEFAULT_TIMEOUT] - Time in ms before rejecting\n   * @param {boolean} [options.observeMutations=true] - Whether to watch dynamically inserted elements\n   * @param {string} [options.context='unknown'] - Descriptive context for error logs\n   * @returns {Promise<HTMLElement[]>}\n   */\n  function elementsReady(selectors, {\n    timeout = DEFAULT_TIMEOUT,\n    observeMutations = true,\n    context = 'unknown'\n  } = {}) {\n    const selectorArray = Array.isArray(selectors) ? selectors : [selectors];\n\n    _markStart(selectorArray);\n\n    // Quick check if all elements are already present\n    const alreadyPresent = selectorArray.every((sel) => domAPI.querySelector(sel) !== null);\n    if (alreadyPresent) {\n      return Promise.resolve(selectorArray.map((sel) => domAPI.querySelector(sel)));\n    }\n\n    // Create a unique key based on sorted selectors\n    const key = selectorArray.sort().join('|');\n\n    // If we already have a pending promise for these selectors, return it\n    if (pendingPromises.has(key)) {\n      return pendingPromises.get(key);\n    }\n\n    // Otherwise, create a new promise\n    const promise = new Promise((resolve, reject) => {\n      const startTime = _nowPerf();\n      // Step 1: Ensure the document is ready first\n      documentReady().then(() => {\n        // Check again in case the elements appeared during doc load\n        const nowPresent = selectorArray.map((sel) => domAPI.querySelector(sel));\n        if (nowPresent.every((el) => el !== null)) {\n          _markEnd(selectorArray);\n          _logger.info?.(\n            '[domReadinessService] selectors ready',\n            { selectors: selectorArray, duration: Math.round(_nowPerf() - startTime) }\n          );\n          return resolve(nowPresent);\n        }\n\n        // Setup a timeout for safety\n        const timeoutId = browserService.setTimeout(() => {\n          // Clean up from structures\n          pendingPromises.delete(key);\n          appearanceListeners.delete(key);\n\n          const missing = selectorArray.filter((sel) => domAPI.querySelector(sel) === null);\n          missing.forEach((sel) => _missingSelectors.add(sel));\n          _logger.warn?.(\n            '[domReadinessService] Timeout waiting for selectors',\n            { selectors: missing, context, waitedMs: timeout }\n          );\n          reject(\n            new Error(\n              `[domReadinessService] Timed out after ${timeout}ms for selectors: ${\n                missing.join(', ')\n              } (context: ${context}). Elements missing: [${missing.join(', ')}]`\n            )\n          );\n        }, timeout);\n\n        // If we want to observe DOM changes for newly added elements\n        if (observeMutations) {\n          appearanceListeners.set(key, {\n            selectors: selectorArray,\n            onAppear: () => {\n              const newAppear = selectorArray.map((sel) => domAPI.querySelector(sel));\n              if (newAppear.every((el) => el !== null)) {\n                // Clear the pending state\n                browserService.clearTimeout(timeoutId);\n                pendingPromises.delete(key);\n                appearanceListeners.delete(key);\n                _markEnd(selectorArray);\n                _logger.info?.(\n                  '[domReadinessService] selectors ready',\n                  { selectors: selectorArray, duration: Math.round(_nowPerf() - startTime) }\n                );\n                resolve(newAppear);\n              }\n            }\n          });\n          // Ensure at least one global observer is active\n          _ensureObserver();\n        } else {\n          // Fallback to a quick polling if we don't want to use observers\n          _pollForElements({\n            selectors: selectorArray,\n            timeoutId,\n            resolve\n          });\n        }\n      });\n    });\n\n    pendingPromises.set(key, promise);\n    return promise;\n  }\n\n  /**\n   * Helper to poll for elements (used when observeMutations=false).\n   * Checks from time to time until either we find our elements or the outer\n   * timeout triggers.\n   */\n  function _pollForElements({ selectors, timeoutId, resolve }) {\n    const intervalId = browserService.setInterval(() => {\n      const found = selectors.map((sel) => domAPI.querySelector(sel));\n      if (found.every((el) => el !== null)) {\n        browserService.clearInterval(intervalId);\n        browserService.clearTimeout(timeoutId);\n\n        // Also remove from pendingPromises since we've resolved\n        const key = selectors.sort().join('|');\n        pendingPromises.delete(key);\n        appearanceListeners.delete(key);\n\n        resolve(found);\n      }\n    }, 100);\n  }\n\n  /**\n   * Ensures we have at least one MutationObserver that watches for newly added elements,\n   * so we can process watchers in appearanceListeners.\n   */\n  function _ensureObserver() {\n    // If we've already attached at least one observer, skip\n    if (observers.length > 0) return;\n\n    // Create a MutationObserver to watch the entire body subtree\n    const MutationObserverImpl =\n      browserService.getWindow?.()?.MutationObserver;\n    if (!MutationObserverImpl) {\n      _logger.error('[domReadinessService] MutationObserver unavailable via DI',{context:'domReadinessService'});\n      return;\n    }\n\n    const observer = new MutationObserverImpl((mutations) => {\n      if (appearanceListeners.size === 0) return;\n      // Trigger each appearance listener to see if their elements are now present\n      appearanceListeners.forEach((listener) => {\n        listener.onAppear();\n      });\n    });\n\n    const bodyEl = domAPI.getBody(); // or docAPI.getDocument().body\n    if (!bodyEl) return; // fallback if somehow no body\n\n    observer.observe(bodyEl, {\n      childList: true,\n      subtree: true\n    });\n\n    observers.push(observer);\n  }\n\n  /**\n   * Waits for the specified dependencies in DependencySystem and for the specified\n   * DOM selectors, all within an optional timeout.\n   * @param {object} config\n   * @param {string[]} config.deps - Dependencies to wait for in the DI\n   * @param {string[]} config.domSelectors - DOM selectors to wait for\n   * @param {number} config.timeout - Timeout in ms\n   * @param {string} config.context - Debugging context\n   */\n  async function dependenciesAndElements({\n    deps = [],\n    domSelectors = [],\n    timeout = DEFAULT_TIMEOUT,\n    context = 'unknown'\n  } = {}) {\n    // First wait for needed dependencies\n    if (deps.length > 0) {\n      await DependencySystem.waitFor(deps, null, timeout);\n    }\n\n    // Then wait for any DOM elements\n    if (domSelectors.length > 0) {\n      try {\n        await elementsReady(domSelectors, { timeout, context });\n      } catch (err) {\n        domSelectors.forEach((sel) => _missingSelectors.add(sel));\n        throw err;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Cleanup expired events from cache\n   */\n  function cleanupExpiredEvents() {\n    if (!REPLAY_CONFIG.enabled) return;\n\n    const now = _nowPerf();\n    const initialSize = firedEvents.size;\n\n    for (const [eventName, eventData] of firedEvents.entries()) {\n      if (eventData.ttl && eventData.ttl < now) {\n        firedEvents.delete(eventName);\n        _logger.info?.(`[domReadinessService] Cleaned up expired event: ${eventName}`, {\n          eventName,\n          age: now - eventData.timestamp\n        });\n      }\n    }\n\n    if (firedEvents.size !== initialSize) {\n      _logger.info?.(`[domReadinessService] Cleanup removed ${initialSize - firedEvents.size} expired events`);\n    }\n  }\n\n  /**\n   * Start periodic cleanup if enabled\n   */\n  function startCleanupTimer() {\n    if (!REPLAY_CONFIG.enabled || cleanupTimer) return;\n\n    cleanupTimer = browserService.setInterval(() => {\n      cleanupExpiredEvents();\n    }, REPLAY_CONFIG.cleanupIntervalMs);\n  }\n\n  /**\n   * Emits a replay-able custom event that can be received by late listeners.\n   * Enhanced: TTL, maxEvents, fallback to standard, logs, eviction.\n   */\n  function emitReplayable(eventName, detail = {}) {\n    // Validate eventName\n    if (!eventName || typeof eventName !== 'string') {\n      _logger.error?.(`[domReadinessService] Invalid event name for emitReplayable`, { eventName, detail });\n      return;\n    }\n\n    if (!REPLAY_CONFIG.enabled) {\n      _logger.info?.(`[domReadinessService] Event replay disabled, emitting standard event: ${eventName}`);\n      const event = eventHandlers.createCustomEvent(eventName, { detail });\n      domAPI.dispatchEvent(domAPI.getDocument(), event);\n      return;\n    }\n\n    _logger.info?.(`[domReadinessService] Emitting replayable event: ${eventName}`, {\n      eventName,\n      detail,\n      currentCacheSize: firedEvents.size\n    });\n\n    // Enforce cache limit\n    if (firedEvents.size >= REPLAY_CONFIG.maxEvents) {\n      const oldestEvent = Array.from(firedEvents.entries())\n        .sort(([,a], [,b]) => a.timestamp - b.timestamp)[0];\n      if (oldestEvent) {\n        firedEvents.delete(oldestEvent[0]);\n        _logger.warn?.(`[domReadinessService] Evicted oldest cached event: ${oldestEvent[0]}`, {\n          evictedEvent: oldestEvent[0],\n          age: _nowPerf() - oldestEvent[1].timestamp\n        });\n      }\n    }\n\n    const now = _nowPerf();\n\n    firedEvents.set(eventName, {\n      detail,\n      timestamp: now,\n      ttl: now + REPLAY_CONFIG.ttlMs\n    });\n\n    // Start cleanup interval timer if not started\n    startCleanupTimer();\n\n    // Dispatch the event normally, with error catch\n    try {\n      const event = eventHandlers.createCustomEvent(eventName, { detail });\n      domAPI.dispatchEvent(domAPI.getDocument(), event);\n    } catch (err) {\n      _logger.error?.(`[domReadinessService] Failed to dispatch event: ${eventName}`, err, {\n        eventName,\n        detail\n      });\n    }\n  }\n\n  /**\n   * Wait for a specified custom event (e.g. \"modalsLoaded\"), with a time limit.\n   * If the event was already fired, returns immediately with cached data,\n   * handling TTL expiry. Synthetic event is created via eventHandlers.\n   * @param {string} eventName - The name of the event (e.g., 'modalsLoaded')\n   * @param {object} options\n   * @param {number} [options.timeout=DEFAULT_TIMEOUT] - Time in ms before rejecting\n   * @param {string} [options.context='unknown'] - Context for debugging\n   * @returns {Promise<Event>}\n   */\n  function waitForEvent(eventName, {\n    timeout = DEFAULT_TIMEOUT,\n    context = 'unknown'\n  } = {}) {\n    // Validate event name\n    if (!eventName || typeof eventName !== 'string') {\n      return Promise.reject(\n        new Error(`[domReadinessService] Invalid event name: ${eventName}`)\n      );\n    }\n\n    // Check if event was already fired (replay capability)\n    if (firedEvents.has(eventName)) {\n      const cachedEvent = firedEvents.get(eventName);\n\n      // Check if cached event has expired via TTL\n      if (cachedEvent.ttl && cachedEvent.ttl < _nowPerf()) {\n        firedEvents.delete(eventName);\n        _logger.warn?.(`[domReadinessService] Cached event \"${eventName}\" expired, waiting for new event`, {\n          eventName,\n          context,\n          expiredTimestamp: cachedEvent.timestamp\n        });\n      } else {\n        const age = _nowPerf() - cachedEvent.timestamp;\n        _logger.info?.(`[domReadinessService] Event \"${eventName}\" replayed from cache`, {\n          eventName,\n          context,\n          cachedDetail: cachedEvent.detail,\n          cachedTimestamp: cachedEvent.timestamp,\n          age\n        });\n\n        // Create a synthetic event with the cached detail, best-effort try/catch\n        try {\n          const syntheticEvent = eventHandlers.createCustomEvent(eventName, {\n            detail: cachedEvent.detail\n          });\n          return Promise.resolve(syntheticEvent);\n        } catch (err) {\n          _logger.error?.(`[domReadinessService] Failed to create synthetic event for \"${eventName}\"`, err, {\n            eventName,\n            context\n          });\n          // Fall through to normal event listening\n        }\n      }\n    }\n\n    _logger.info?.(`[domReadinessService] Waiting for event \"${eventName}\" (context: ${context})`);\n\n    return new Promise((resolve, reject) => {\n      // Start a timeout\n      const timeoutId = browserService.setTimeout(() => {\n        reject(\n          new Error(\n            `[domReadinessService] Timeout after ${timeout}ms waiting for event \"${eventName}\" (context: ${context})`\n          )\n        );\n      }, timeout);\n\n      // Listen for the event once\n      eventHandlers.trackListener(\n        domAPI.getDocument(),\n        eventName,\n        (evt) => {\n          browserService.clearTimeout(timeoutId);\n          _logger.info?.(`[domReadinessService] Event \"${eventName}\" received by listener`, {\n            eventName,\n            context,\n            detail: evt.detail\n          });\n          resolve(evt);\n        },\n        { once: true, context: 'domReadinessService' }\n      );\n    });\n  }\n\n  /**\n   * Get comprehensive event replay statistics\n   */\n  function getEventReplayStats() {\n    const stats = {\n      enabled: REPLAY_CONFIG.enabled,\n      totalCachedEvents: firedEvents.size,\n      maxEvents: REPLAY_CONFIG.maxEvents,\n      ttlMs: REPLAY_CONFIG.ttlMs,\n      events: {},\n      oldestEvent: null,\n      newestEvent: null,\n      expiredCount: 0\n    };\n\n    if (firedEvents.size === 0) return stats;\n\n    let oldest = Infinity;\n    let newest = 0;\n    const now = _nowPerf();\n\n    for (const [eventName, eventData] of firedEvents.entries()) {\n      const age = now - eventData.timestamp;\n      const isExpired = eventData.ttl && eventData.ttl < now;\n\n      if (isExpired) stats.expiredCount++;\n\n      stats.events[eventName] = {\n        timestamp: eventData.timestamp,\n        age,\n        expired: isExpired,\n        ttl: eventData.ttl,\n        hasDetail: !!eventData.detail,\n        detailKeys: eventData.detail ? Object.keys(eventData.detail) : []\n      };\n\n      if (eventData.timestamp < oldest) {\n        oldest = eventData.timestamp;\n        stats.oldestEvent = eventName;\n      }\n      if (eventData.timestamp > newest) {\n        newest = eventData.timestamp;\n        stats.newestEvent = eventName;\n      }\n    }\n\n    return stats;\n  }\n\n  /**\n   * Enhanced cleanup function\n   */\n  function destroy() {\n    // Stop cleanup timer\n    if (cleanupTimer) {\n      browserService.clearInterval(cleanupTimer);\n      cleanupTimer = null;\n    }\n\n    // Stop all mutation observers\n    observers.forEach((obs) => obs.disconnect());\n    observers.length = 0;\n\n    // Clear pending states\n    pendingPromises.clear();\n    appearanceListeners.clear();\n    firedEvents.clear();\n\n    // Remove any event listeners with the matching context\n    eventHandlers.cleanupListeners({ context: 'domReadinessService' });\n\n    _logger.info?.('[domReadinessService] Destroyed and cleaned up all resources');\n  }\n\n  function getSelectorTimings() {\n    const out = {};\n    _SEL_STATS.forEach((v, k) => { out[k] = v.total; });\n    return out;\n  }\n\n  function getMissingSelectors() {\n    return Array.from(_missingSelectors);\n  }\n\n  function getFiredEvents() {\n    return Array.from(firedEvents.keys());\n  }\n\n  // Additional helpers for replay/diagnostics/feature flagging\n  function isReplayEnabled() {\n    return REPLAY_CONFIG.enabled;\n  }\n\n  return {\n    documentReady,\n    elementsReady,\n    dependenciesAndElements,\n    waitForEvent,\n    emitReplayable,\n    destroy,\n    getSelectorTimings,\n    getMissingSelectors,\n    getFiredEvents,\n    getEventReplayStats,    // NEW: diagnostics\n    cleanupExpiredEvents,   // NEW: manual trigger\n    isReplayEnabled         // NEW: config check\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 20157,
          "_transferSize": 21340,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.558Z",
        "time": 302.43400001199916,
        "timings": {
          "blocked": 204.2100000090683,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.055999999999983174,
          "wait": 97.50300000335929,
          "receive": 0.6649999995715916,
          "_blocked_queueing": 2.262000009068288,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106419",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 21
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/utils/apiClient.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1464,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "5876"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"f44fba650fd64059f71379dfe69357fe\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 11:05:41 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 5876,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * apiClient.js — Handles API requests with deduplication, timeouts, CSRF, and JSON handling.\n *\n * Usage:\n *   import { createApiClient } from './apiClient.js';\n *   const apiClient = createApiClient({ ... });\n */\n\n/**\n * createApiClient\n * @param {Object} opts\n * @param {Object} opts.APP_CONFIG\n * @param {Object} opts.globalUtils\n * @param {Object} opts.getAuthModule\n * @param {Object} opts.browserService\n * @returns {Function} apiRequest(url, opts, skipCache)\n */\nexport function createApiClient({\n  APP_CONFIG,\n  globalUtils,\n  getAuthModule,\n  browserService\n}) {\n  const pending = new Map();\n  const BASE_URL = APP_CONFIG?.BASE_API_URL || '';\n\n  // Define the main request function\n  const mainApiRequest = async function apiRequest(url, opts = {}, skipCache = false) {\n    const { returnFullResponse = false, ...restOpts } = opts;\n    const method = (restOpts.method || \"GET\").toUpperCase();\n\n    if (!skipCache && method === \"GET\" && globalUtils.shouldSkipDedup(url)) {\n      skipCache = true;\n    }\n\n    const auth = getAuthModule?.();\n    let fullUrl = globalUtils.isAbsoluteUrl(url) ? url : `${BASE_URL}${url}`;\n\n    // Handle restOpts.params for GET requests\n    if (method === \"GET\" && restOpts.params && typeof restOpts.params === 'object') {\n      const queryParams = new browserService.URLSearchParams(restOpts.params)\n        .toString();\n      if (queryParams) {\n        fullUrl += (fullUrl.includes('?') ? '&' : '?') + queryParams;\n      }\n    }\n\n    let normUrl;\n    try {\n      normUrl = globalUtils.normaliseUrl(fullUrl);\n    } catch (err) {\n      normUrl = fullUrl; // Fallback to fullUrl if normalization fails\n    }\n\n    const bodyKey =\n      restOpts.body instanceof FormData\n        ? `[form-data-${Date.now()}]`\n        : globalUtils.stableStringify(restOpts.body || {});\n    const key = `${method}-${normUrl}-${bodyKey}`;\n\n    if (!skipCache && method === \"GET\" && pending.has(key)) {\n      return pending.get(key);\n    }\n\n    restOpts.headers = { Accept: \"application/json\", ...(restOpts.headers || {}) };\n    // Always send cookies unless caller over-rides\n    if (!('credentials' in restOpts)) restOpts.credentials = 'include';\n\n    // CSRF token injection\n    if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && auth?.getCSRFToken) {\n      const csrf = auth.getCSRFToken();\n      if (csrf) {\n        restOpts.headers[\"X-CSRF-Token\"] = csrf;\n      } else if (auth?.logger && typeof auth.logger.warn === \"function\") {\n        auth.logger.warn(\"[apiClient] Missing CSRF token for \" + normUrl, { context: \"apiClient:csrf\" });\n      }\n    }\n\n    // JSON stringify body if plain object (not FormData)\n    if (restOpts.body && typeof restOpts.body === \"object\" && !(restOpts.body instanceof FormData)) {\n      restOpts.headers[\"Content-Type\"] ??= \"application/json;charset=UTF-8\";\n      if (restOpts.headers[\"Content-Type\"].includes(\"application/json\")) {\n        try {\n          restOpts.body = JSON.stringify(restOpts.body);\n        } catch (err) {\n          return Promise.reject(new Error(\"Failed to serialize request body.\"));\n        }\n      }\n    }\n\n    // Timeout via AbortController (browserService/DI if available)\n    const AbortControllerImpl =\n      browserService.getWindow()?.AbortController\n      ?? (()=>{ throw new Error('[apiClient] AbortController unavailable via DI'); })();\n    const abortCtl = new AbortControllerImpl();\n    restOpts.signal = abortCtl.signal;\n    const apiTimeout = APP_CONFIG?.TIMEOUTS?.API_REQUEST || 15000;\n    const timer = browserService.setTimeout(\n      () => abortCtl.abort(new Error(`API Timeout (${apiTimeout}ms)`)),\n      apiTimeout,\n    );\n\n    const p = (async () => {\n      try {\n        if (!browserService?.fetch) throw new Error('[apiClient] browserService.fetch unavailable');\n        const resp = await browserService.fetch(normUrl, restOpts);\n\n        // ---------- NEW unified response handling ----------\n        const contentType = resp.headers.get('content-type') || '';\n        let payload = null;\n\n        if (resp.status !== 204) {                // 204 = No-Content\n          if (contentType.includes('application/json')) {\n            try { payload = await resp.json(); } catch { payload = null; }\n          } else {\n            try { payload = await resp.text(); } catch { payload = null; }\n          }\n        }\n\n        if (resp.ok) {                     // 2xx\n          if (returnFullResponse) {\n            return {\n              data   : payload,                       // may be null\n              status : resp.status,\n              headers: Object.fromEntries(resp.headers.entries())\n            };\n          }\n          return payload;                  // <- what callers will receive\n        }\n\n        // ----- non-OK: throw rich error object -----\n        // Preserve backend-provided details so callers can display them\n        const humanMsg =\n          (payload?.detail) ? String(payload.detail) :\n          (typeof payload === 'string') ? payload :\n          (payload?.message) ? String(payload.message) :\n          `HTTP ${resp.status}`;\n\n        const err = new Error(humanMsg);\n        err.status = resp.status;\n        err.data   = payload;          // keep full payload for callers\n        throw err;\n      } finally {\n        browserService.clearTimeout(timer);\n        if (method === \"GET\") pending.delete(key);\n      }\n    })();\n\n    if (!skipCache && method === \"GET\") pending.set(key, p);\n    return p;\n  };\n\n  // Convenience verbs required by other callers\n  mainApiRequest.post = (url, body = {}, opts = {}, skip = true) =>\n    mainApiRequest(url, { ...opts, method: 'POST', body }, skip);\n  mainApiRequest.get = (url, params = {}, opts = {}, skip = false) =>\n    mainApiRequest(url, { ...opts, method: 'GET',  params }, skip);\n\n  mainApiRequest.fetch = mainApiRequest; // Expose the main function as .fetch\n  return mainApiRequest;\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1182,
          "bodySize": 5876,
          "_transferSize": 7058,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.558Z",
        "time": 302.16099999961443,
        "timings": {
          "blocked": 204.21299999368284,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.044999999999987494,
          "wait": 97.01600000396465,
          "receive": 0.8870000019669533,
          "_blocked_queueing": 2.366999993682839,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106417",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 22
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/utils/htmlTemplateLoader.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1473,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "9482"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"034ca81bf179ccc53262f37a787d6f1e\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 08:20:08 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 9482,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * Creates an HTML template loader with injected dependencies for DOM manipulation, HTTP requests, and event handling.\n *\n * Returns an object with two methods:\n * - `loadTemplate`: Loads an external HTML template into a specified DOM container, optionally sanitizes it, and emits a custom event upon completion. If the template URL contains `'modals.html'`, also emits a `'modalsLoaded'` event with the result.\n * - `loadAppTemplates`: Sequentially loads multiple HTML templates based on an array of configuration objects, returning an array of results for each load attempt.\n *\n * @returns {{ loadTemplate: Function, loadAppTemplates: Function }} An object with methods to load single or multiple HTML templates.\n *\n * @throws {Error} If required dependencies are missing or invalid.\n */\nexport function createHtmlTemplateLoader({\n  DependencySystem,\n  domAPI,\n  sanitizer = null,\n  eventHandlers,\n  apiClient,\n  timerAPI,\n  domReadinessService = null,  // NEW: For replay-able events\n  logger = DependencySystem?.modules?.get?.('logger') || { warn: () => { } }\n} = {}) {\n  // Guardrail checks:\n  if (!DependencySystem) throw new Error('DependencySystem required by HtmlTemplateLoader');\n  if (!domAPI) throw new Error('domAPI required by HtmlTemplateLoader');\n  if (!eventHandlers || typeof eventHandlers.createCustomEvent !== 'function')\n    throw new Error('[HtmlTemplateLoader] eventHandlers.createCustomEvent required');\n  if (!apiClient || typeof apiClient.fetch !== 'function') {\n    throw new Error('[HtmlTemplateLoader] apiClient with a .fetch() method is required');\n  }\n  if (!timerAPI || typeof timerAPI.setTimeout !== 'function' || typeof timerAPI.clearTimeout !== 'function') {\n    throw new Error('[HtmlTemplateLoader] timerAPI with setTimeout/clearTimeout is required');\n  }\n\n  // ──────────────────────────────────────────────────────────────\n  // Native fetch shortcut (bypasses apiClient pre-processing).\n  // Will be used for \"pure\" static assets such as *.html, *.css, …\n  // It is derived from domAPI DI to remain test/environment safe.\n  // ──────────────────────────────────────────────────────────────\n  const _nativeFetch =\n    domAPI?.getWindow?.()?.fetch?.bind?.(domAPI.getWindow()) || null;\n\n  /**\n   * Helper function to emit events using replay capability if available\n   */\n  function emitEvent(eventName, detail) {\n    if (domReadinessService?.emitReplayable) {\n      logger.info?.(`[HtmlTemplateLoader] Emitting replayable event: ${eventName}`, { eventName, detail });\n      domReadinessService.emitReplayable(eventName, detail);\n    } else {\n      logger.info?.(`[HtmlTemplateLoader] Emitting standard event: ${eventName}`, { eventName, detail });\n      const evt = eventHandlers.createCustomEvent(eventName, { detail });\n      domAPI.dispatchEvent(domAPI.getDocument(), evt);\n    }\n  }\n\n  /**\n   * Loads an external HTML template into a specified DOM container and emits a custom event upon completion.\n   *\n   * Fetches the template from the given URL, injects its HTML into the target container, and optionally sanitizes the content if a sanitizer is available. Emits the specified event with success or failure details after the operation. If the URL contains \"modals.html\", also emits a \"modalsLoaded\" event with the same outcome.\n   *\n   * @param {Object} options - Template loading options.\n   * @param {string} options.url - The URL of the HTML template to load.\n   * @param {string} options.containerSelector - CSS selector for the DOM container to inject the template into.\n   * @param {string} [options.eventName='htmlTemplateLoaded'] - Name of the custom event to emit after loading.\n   * @param {number} [options.timeout=15000] - Timeout in milliseconds for the fetch request.\n   * @returns {Promise<boolean>} Resolves to true if the template was loaded and injected successfully; false otherwise.\n   *\n   * @remark\n   * If the container is not found or the fetch fails, the event is still dispatched with failure details. For templates with URLs containing \"modals.html\", a \"modalsLoaded\" event is always emitted in addition to the main event.\n   */\n  async function loadTemplate({\n    url,\n    containerSelector,\n    eventName = 'htmlTemplateLoaded',\n    timeout = 15_000 // default to 15s\n  } = {}) {\n    const isModalsHtml = url && url.includes('modals.html');\n    logger.info?.(`[HtmlTemplateLoader] Attempting to load template: ${url} into ${containerSelector}`, { url, containerSelector, eventName, isModalsHtml });\n\n    const container = domAPI.querySelector(containerSelector);\n    if (!container) {\n      logger.warn(`[HtmlTemplateLoader] containerSelector \"${containerSelector}\" not found in DOM. Template ${url} will not be injected.`);\n      // Dispatch event even if container is not found, so listeners are unblocked\n      emitEvent(eventName, { success: false, error: `Container ${containerSelector} not found` });\n\n      if (isModalsHtml) {\n        emitEvent('modalsLoaded', { success: false, error: `Container ${containerSelector} not found for modals.html` });\n      }\n      return false;\n    }\n\n    // Create a manual AbortController for this request\n    const controller = new AbortController();\n    // Use injected timerAPI instead of window\n    const tm = timerAPI.setTimeout(() => {\n      logger.warn(`[HtmlTemplateLoader] Timeout loading template: ${url}`, { url, timeout });\n      controller.abort();\n    }, timeout);\n\n    let success = false;\n    let errorInfo = null;\n    try {\n      logger.info?.(`[HtmlTemplateLoader] Fetching template: ${url}`, { url });\n\n      // Decide which fetch to use:\n      // • /static/… or any *.html → use browser/native fetch directly\n      // • otherwise → try apiClient.fetch first, then fallback\n      const looksStatic = url.startsWith('/static/') || url.endsWith('.html');\n      const primaryFetch = looksStatic && _nativeFetch ? _nativeFetch : apiClient.fetch;\n\n      let resp;\n      try {\n        resp = await primaryFetch(url, {\n          method: 'GET',\n          cache: 'no-store',\n          signal: controller.signal\n        });\n      } catch (primaryErr) {\n        // Fallback: if the first try used apiClient and we have native fetch\n        if (primaryFetch !== _nativeFetch && _nativeFetch) {\n          logger.warn('[HtmlTemplateLoader] Primary fetch failed, retrying with native fetch', { url });\n          resp = await _nativeFetch(url, {\n            method: 'GET',\n            cache: 'no-store',\n            signal: controller.signal\n          });\n        } else {\n          throw primaryErr;\n        }\n      }\n\n      if (!resp.ok) {\n        errorInfo = `HTTP ${resp.status}`;\n        throw new Error(errorInfo);\n      }\n\n      const html = await resp.text();\n      logger.info?.(`[HtmlTemplateLoader] Successfully fetched template: ${url}, preparing to inject. Length: ${html.length}`, { url });\n\n      // Always inject via domAPI to respect DI & built-in sanitiser\n      domAPI.setInnerHTML(container, html);\n      logger.info?.(`[HtmlTemplateLoader] Successfully injected template: ${url} into ${containerSelector}`, { url });\n      success = true;\n\n    } catch (err) {\n      errorInfo = errorInfo || err.message;\n      // Log the actual error for debugging\n      logger.error(`[HtmlTemplateLoader] Failed to load template from ${url}`, err, {\n        context: 'HtmlTemplateLoader.loadTemplate',\n        url,\n        containerSelector,\n        eventName\n      });\n      success = false;\n    } finally {\n      timerAPI.clearTimeout(tm);\n\n      // Emit main event using replay capability\n      emitEvent(eventName, { success, error: errorInfo, url });\n\n      // Special handling for modals.html - always emit modalsLoaded event\n      if (isModalsHtml) {\n        emitEvent('modalsLoaded', { success, error: errorInfo, url });\n      }\n    }\n\n    return success;\n  }\n\n  /**\n   * Orchestrates the loading of multiple HTML templates in sequence.\n   * Each template has its own timeout, container, etc.\n   */\n  async function loadAppTemplates(templateConfigs = []) {\n    if (!Array.isArray(templateConfigs) || templateConfigs.length === 0) {\n      return [];\n    }\n\n    const results = [];\n\n    for (const config of templateConfigs) {\n      if (!config.url || !config.containerSelector) {\n        results.push({\n          url: config.url,\n          success: false,\n          error: 'Invalid configuration'\n        });\n        continue;\n      }\n\n      const eventName = config.eventName ||\n        `templateLoaded:${config.url.split('/').pop()}`;\n      const tmo = config.timeout || 15000;\n\n      try {\n        const success = await loadTemplate({\n          url: config.url,\n          containerSelector: config.containerSelector,\n          eventName,\n          timeout: tmo\n        });\n\n        results.push({\n          url: config.url,\n          success,\n          eventNameEmitted: eventName\n        });\n\n      } catch (err) {\n        results.push({\n          url: config.url,\n          success: false,\n          error: err.message,\n          eventNameEmitted: eventName\n        });\n        // Dispatch event in case something is awaiting\n        emitEvent(eventName, { success: false, error: err.message });\n      }\n    }\n\n    return results;\n  }\n\n  return { loadTemplate, loadAppTemplates };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1182,
          "bodySize": 9482,
          "_transferSize": 10664,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.558Z",
        "time": 353.82200000458397,
        "timings": {
          "blocked": 301.7110000078911,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07000000000005002,
          "wait": 51.3600000062566,
          "receive": 0.6809999904362485,
          "_blocked_queueing": 2.323000007891096,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106419",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 23
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/init/serviceInit.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1465,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "6387"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"71cc19ab5a0b5eea032742d69cae9949\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 11:01:18 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 6387,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "import { resolveApiEndpoints } from '../utils/apiEndpoints.js';\nimport { createErrorReporterStub } from '../utils/errorReporterStub.js';\n\n/**\n * serviceInit.js\n * Factory for service registration logic extracted from app.js.\n *\n * Handles the complex service registration and wiring that was scattered\n * throughout app.js initialization.\n *\n * Guardrails:\n * - Factory export (createServiceInitializer)\n * - Strict DI: Accept all dependencies as factory arguments\n * - No import-time side effects\n * - All logging via injected logger\n */\n\nexport function createServiceInitializer({\n  DependencySystem,\n  domAPI,\n  browserServiceInstance,\n  eventHandlers,\n  domReadinessService,\n  logger,\n  sanitizer,\n  APP_CONFIG,\n  uiUtils,\n  globalUtils,\n  createFileUploadComponent,\n  createApiClient,\n  createAccessibilityEnhancements,\n  createNavigationService,\n  createHtmlTemplateLoader\n}) {\n  if (\n    !DependencySystem || !domAPI || !browserServiceInstance || !eventHandlers ||\n    !domReadinessService || !logger || !sanitizer || !APP_CONFIG\n  ) {\n    throw new Error('[serviceInit] Missing required dependencies for service initialization.');\n  }\n\n  // Helper: register only if not already present\n  function safeRegister(name, value) {\n    if (!DependencySystem?.modules?.has?.(name)) {\n      DependencySystem.register(name, value);\n    } else {\n      logger?.debug?.(`[serviceInit] \"${name}\" already registered – skipping`, { context: 'serviceInit:safeRegister' });\n    }\n  }\n\n  /**\n   * Register all basic services that were scattered in app.js\n   */\n  function registerBasicServices() {\n    try {\n      // Register core browser and DOM services\n      safeRegister('domAPI', domAPI);\n      safeRegister('browserAPI', browserServiceInstance);\n      safeRegister('browserService', browserServiceInstance);\n      safeRegister('storage', browserServiceInstance);\n      safeRegister('eventHandlers', eventHandlers);\n      safeRegister('domReadinessService', domReadinessService);\n\n      // Wire circular dependency with setter (post-construction)\n      eventHandlers.setDomReadinessService(domReadinessService);\n\n      // Register / reuse shared errorReporter\n      safeRegister(\n        'errorReporter',\n        DependencySystem.modules.get('errorReporter') ||\n        createErrorReporterStub(logger, 'serviceInit:ErrorReporterStub')\n      );\n\n      // Register utility services\n      if (uiUtils) safeRegister('uiUtils', uiUtils);\n      if (globalUtils) safeRegister('globalUtils', globalUtils);\n      safeRegister('sanitizer', sanitizer);\n      safeRegister('domPurify', sanitizer); // legacy alias\n\n      // Register file upload component factory\n      if (createFileUploadComponent) {\n        safeRegister('FileUploadComponent', createFileUploadComponent);\n      }\n\n      // Register API endpoints (only if not already provided)\n      const resolvedEndpoints = DependencySystem.modules.get('apiEndpoints') || resolveApiEndpoints(APP_CONFIG);\n      safeRegister('apiEndpoints', resolvedEndpoints);\n\n      // Log the full apiEndpoints map for rapid detection of bad overrides\n      logger.log('[serviceInit] API endpoints registered successfully:', {\n        endpointKeys: Object.keys(resolvedEndpoints),\n        endpointCount: Object.keys(resolvedEndpoints).length,\n        hasRequiredAuth: ['AUTH_CSRF', 'AUTH_LOGIN', 'AUTH_LOGOUT', 'AUTH_REGISTER', 'AUTH_VERIFY', 'AUTH_REFRESH'].every(key => resolvedEndpoints[key]),\n        context: 'serviceInit:registerBasicServices'\n      });\n\n      // Log individual endpoint mappings for debugging\n      logger.log('[serviceInit] Detailed endpoint mappings:', resolvedEndpoints, { context: 'serviceInit:registerBasicServices' });\n\n      logger.log('[serviceInit] Basic services registered', { context: 'serviceInit:registerBasicServices' });\n    } catch (err) {\n      logger.error('[serviceInit] Failed to register basic services', err, { context: 'serviceInit:registerBasicServices' });\n      throw err;\n    }\n  }\n\n  /**\n   * Create and register advanced services (API client, navigation, etc.)\n   */\n  function registerAdvancedServices() {\n    try {\n      // Create API client - declare at function scope for reuse\n      let apiRequest = null;\n      if (createApiClient && globalUtils) {\n        apiRequest = createApiClient({\n          APP_CONFIG,\n          globalUtils: {\n            shouldSkipDedup: globalUtils.shouldSkipDedup,\n            stableStringify: globalUtils.stableStringify,\n            normaliseUrl: globalUtils.normaliseUrl,\n            isAbsoluteUrl: globalUtils.isAbsoluteUrl\n          },\n          getAuthModule: () => DependencySystem.modules.get('auth'),\n          browserService: browserServiceInstance\n        });\n        DependencySystem.register('apiRequest', apiRequest);\n      }\n\n      // Create accessibility enhancements\n      if (createAccessibilityEnhancements) {\n        const accessibilityUtils = createAccessibilityEnhancements({\n          domAPI,\n          eventHandlers,\n          logger,\n          domReadinessService\n        });\n        DependencySystem.register('accessibilityUtils', accessibilityUtils);\n      }\n\n      // Create navigation service\n      if (createNavigationService) {\n        const navigationService = createNavigationService({\n          domAPI,\n          browserService: browserServiceInstance,\n          DependencySystem,\n          eventHandlers\n        });\n        DependencySystem.register('navigationService', navigationService);\n      }\n\n      // Create HTML template loader\n      if (createHtmlTemplateLoader) {\n        const htmlTemplateLoader = createHtmlTemplateLoader({\n          DependencySystem,\n          domAPI,\n          sanitizer,\n          eventHandlers,\n          apiClient: apiRequest, // Pass the 'apiRequest' instance as the 'apiClient' property\n          timerAPI: browserServiceInstance,\n          domReadinessService,  // NEW: Pass domReadinessService for replay capability\n          logger\n        });\n        DependencySystem.register('htmlTemplateLoader', htmlTemplateLoader);\n      }\n\n      logger.log('[serviceInit] Advanced services registered', { context: 'serviceInit:registerAdvancedServices' });\n    } catch (err) {\n      logger.error('[serviceInit] Failed to register advanced services', err, { context: 'serviceInit:registerAdvancedServices' });\n      throw err;\n    }\n  }\n\n  return {\n    registerBasicServices,\n    registerAdvancedServices\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1182,
          "bodySize": 6387,
          "_transferSize": 7569,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.559Z",
        "time": 353.33499999251217,
        "timings": {
          "blocked": 301.8810000013486,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06699999999995043,
          "wait": 50.57600000037348,
          "receive": 0.8109999907901511,
          "_blocked_queueing": 2.798000001348555,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 24
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/init/coreInit.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1462,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "11461"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"4a896cf33081f518da0398074a65f080\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 11:40:31 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 11461,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * coreInit.js\n * Factory for initializing core systems (modal manager, auth module, model config, chat manager, project manager, dashboard, etc).\n *\n * Guardrails:\n * - Factory export (createCoreInitializer)\n * - Strict DI: Accept all dependencies as factory arguments\n * - No import-time side effects\n * - No global/window/document usage directly\n * - All event/listener registration via injected eventHandlers\n * - All logging via injected logger\n * - Use domReadinessService for DOM waits\n */\n\nexport function createCoreInitializer({\n  DependencySystem,\n  domAPI,\n  browserService,\n  eventHandlers,\n  sanitizer,\n  logger,\n  APP_CONFIG,\n  domReadinessService\n}) {\n  if (\n    !DependencySystem || !domAPI || !browserService ||\n    !eventHandlers || !sanitizer || !logger || !APP_CONFIG || !domReadinessService\n  ) {\n    throw new Error('[coreInit] Missing required dependencies for core initialization.');\n  }\n\n  // Utility: Create or get chat manager\n  function createOrGetChatManager(apiRequest, modelConfig, projectDetailsComponent, app, apiEndpoints) {\n    const existing = DependencySystem.modules.get('chatManager');\n    if (existing) return existing;\n\n    const createChatManager = DependencySystem.modules.get('createChatManager');\n    if (!createChatManager) throw new Error('[coreInit] createChatManager factory not available in DI.');\n\n    const authModule = DependencySystem.modules.get('auth');\n    const cm = createChatManager({\n      DependencySystem,\n      apiRequest,\n      auth: authModule,\n      eventHandlers,\n      modelConfig,\n      projectDetailsComponent,\n      app,\n      domAPI,\n      domReadinessService,\n      logger,\n      navAPI: {\n        getSearch: () => browserService.getLocation().search,\n        getHref: () => browserService.getLocation().href,\n        pushState: (url, title = \"\") => browserService.pushState({}, title, url),\n        getPathname: () => browserService.getLocation().pathname\n      },\n      isValidProjectId: DependencySystem.modules.get('globalUtils').isValidProjectId,\n      isAuthenticated: () => !!authModule?.isAuthenticated?.(),\n      DOMPurify: DependencySystem.modules.get('sanitizer'),\n      apiEndpoints,\n      APP_CONFIG\n    });\n    DependencySystem.register('chatManager', cm);\n    return cm;\n  }\n\n  // Placeholder utility\n  function createPlaceholder(name) {\n    return {\n      state: { initialized: false },\n      initialize: async () => { },\n      show: () => { },\n      hide: () => { },\n      cleanup: () => { },\n      __placeholder: true,\n      toString() { return `[Placeholder ${name}]`; }\n    };\n  }\n\n  /**\n   * Main core systems initialization.\n   * Registers and initializes modalManager, auth module, logger, model config, chatManager,\n   * projectManager, projectDashboard, projectListComponent, projectDetailsComponent, etc.\n   */\n  async function initializeCoreSystems() {\n    logger.log('[coreInit][initializeCoreSystems] Starting', { context: 'coreInit' });\n\n    // Wait for minimal DOM readiness\n    await domReadinessService.dependenciesAndElements({\n      deps: ['domAPI'],\n      domSelectors: ['body'],\n      timeout: 10000,\n      context: 'coreInit:initializeCoreSystems'\n    });\n\n    // Get required factories from DependencySystem\n    const createModalManager = DependencySystem.modules.get('createModalManager');\n    if (!createModalManager) throw new Error('[coreInit] createModalManager factory not available in DI.');\n    const createAuthModule = DependencySystem.modules.get('createAuthModule');\n    if (!createAuthModule) throw new Error('[coreInit] createAuthModule factory not available in DI.');\n    const createProjectManager = DependencySystem.modules.get('createProjectManager');\n    if (!createProjectManager) throw new Error('[coreInit] createProjectManager factory not available in DI.');\n    const createModelConfig = DependencySystem.modules.get('createModelConfig');\n    if (!createModelConfig) throw new Error('[coreInit] createModelConfig factory not available in DI.');\n    const createProjectDashboard = DependencySystem.modules.get('createProjectDashboard');\n    if (!createProjectDashboard) throw new Error('[coreInit] createProjectDashboard factory not available in DI.');\n    const createProjectDetailsComponent = DependencySystem.modules.get('createProjectDetailsComponent');\n    if (!createProjectDetailsComponent) throw new Error('[coreInit] createProjectDetailsComponent factory not available in DI.');\n    const createProjectListComponent = DependencySystem.modules.get('createProjectListComponent');\n    if (!createProjectListComponent) throw new Error('[coreInit] createProjectListComponent factory not available in DI.');\n    const createProjectModal = DependencySystem.modules.get('createProjectModal');\n    if (!createProjectModal) throw new Error('[coreInit] createProjectModal factory not available in DI.');\n\n    const MODAL_MAPPINGS = DependencySystem.modules.get('MODAL_MAPPINGS');\n    const apiRequest = DependencySystem.modules.get('apiRequest');\n    const apiEndpoints = DependencySystem.modules.get('apiEndpoints');\n    const app = DependencySystem.modules.get('app');\n\n    // 1. ModalManager\n    const modalManager = createModalManager({\n      domAPI,\n      browserService,\n      eventHandlers,\n      DependencySystem,\n      modalMapping: MODAL_MAPPINGS,\n      domPurify: sanitizer\n    });\n    DependencySystem.register('modalManager', modalManager);\n\n    // 2. Auth module\n    const authModule = createAuthModule({\n      DependencySystem,\n      apiClient: apiRequest,\n      eventHandlers,\n      domAPI,\n      sanitizer,\n      APP_CONFIG,\n      modalManager,\n      apiEndpoints,\n      logger,\n      domReadinessService\n    });\n    DependencySystem.register('auth', authModule);\n\n    logger.log('[coreInit] auth module registered', { context: 'coreInit' });\n    // authModule.init() will be called by authInit.initializeAuthSystem() later in app.js\n\n    // 3. Model config\n    const modelConfigInstance = createModelConfig({\n      dependencySystem: DependencySystem,\n      domReadinessService: DependencySystem.modules.get('domReadinessService'),\n      eventHandler: eventHandlers,\n      storageHandler: DependencySystem.modules.get('storage'),\n      sanitizer: DependencySystem.modules.get('sanitizer')\n    });\n    DependencySystem.register('modelConfig', modelConfigInstance);\n\n    // 4. Pre-register projectListComponent and projectDetailsComponent (instantiate or placeholder)\n    if (!DependencySystem.modules.has('projectListComponent')) {\n      const plc = createProjectListComponent({\n        projectManager: null, // Will be set after projectManager is created\n        eventHandlers,\n        modalManager,\n        app,\n        router: DependencySystem.modules.get('navigationService'),\n        storage: DependencySystem.modules.get('storage'),\n        sanitizer: DependencySystem.modules.get('sanitizer'),\n        htmlSanitizer: DependencySystem.modules.get('sanitizer'),\n        apiClient: apiRequest,\n        domAPI,\n        domReadinessService,\n        browserService,\n        globalUtils: DependencySystem.modules.get('globalUtils'),\n        APP_CONFIG,\n        logger\n      });\n      DependencySystem.register('projectListComponent', plc);\n    }\n\n    if (!DependencySystem.modules.has('projectDetailsComponent')) {\n      const pdc = createProjectDetailsComponent({\n        projectManager: null, // Will be set after projectManager is created\n        eventHandlers,\n        modalManager,\n        FileUploadComponentClass: DependencySystem.modules.get('FileUploadComponent'),\n        domAPI,\n        sanitizer: DependencySystem.modules.get('sanitizer'),\n        app,\n        navigationService: DependencySystem.modules.get('navigationService'),\n        htmlTemplateLoader: DependencySystem.modules.get('htmlTemplateLoader'),\n        logger,\n        APP_CONFIG,\n        chatManager: null, // Will be set after chatManager is created\n        modelConfig: modelConfigInstance,\n        knowledgeBaseComponent: null,\n        apiClient: apiRequest,\n        domReadinessService\n      });\n      DependencySystem.register('projectDetailsComponent', pdc);\n    }\n\n    // 5. ChatManager\n    const projectDetailsComponent = DependencySystem.modules.get('projectDetailsComponent');\n    const chatManager = createOrGetChatManager(\n      apiRequest,\n      modelConfigInstance,\n      projectDetailsComponent,\n      app,\n      apiEndpoints\n    );\n\n    // 6. ProjectManager\n    const pmFactory = await createProjectManager({\n      DependencySystem,\n      chatManager,\n      app,\n      modelConfig: modelConfigInstance,\n      apiRequest,\n      apiEndpoints,\n      storage: DependencySystem.modules.get('storage'),\n      listenerTracker: {\n        add: (el, type, handler, description) =>\n          eventHandlers.trackListener(el, type, handler, { description, context: 'projectManager' }),\n        remove: () => eventHandlers.cleanupListeners({ context: 'projectManager' })\n      },\n      domAPI,\n      domReadinessService,\n      logger\n    });\n    const projectManager = pmFactory.instance;\n    eventHandlers.setProjectManager?.(projectManager);\n\n    // Update components with projectManager reference\n    const plc = DependencySystem.modules.get('projectListComponent');\n    if (plc && typeof plc.setProjectManager === 'function') {\n      plc.setProjectManager(projectManager);\n    }\n    if (projectDetailsComponent && typeof projectDetailsComponent.setProjectManager === 'function') {\n      projectDetailsComponent.setProjectManager(projectManager);\n    }\n    if (projectDetailsComponent && typeof projectDetailsComponent.setChatManager === 'function') {\n      projectDetailsComponent.setChatManager(chatManager);\n    }\n\n    // 7. EventHandlers init\n    if (eventHandlers?.init) {\n      await eventHandlers.init();\n      logger.log('[coreInit] eventHandlers initialization complete', { context: 'coreInit' });\n    }\n\n    // 8. ProjectDashboard\n    const projectDashboard = createProjectDashboard({\n      dependencySystem: DependencySystem,\n      domAPI,\n      browserService,\n      eventHandlers,\n      logger,\n      sanitizer,\n      APP_CONFIG,\n      domReadinessService\n    });\n    DependencySystem.register('projectDashboard', projectDashboard);\n\n    // 9. Project modal\n    const projectModal = createProjectModal({\n      DependencySystem,\n      eventHandlers,\n      domAPI,\n      browserService,\n      domPurify: sanitizer\n    });\n    DependencySystem.register('projectModal', projectModal);\n\n    // 10. Wait for modals to load (event-based or fallback)\n    let modalsLoadedSuccess = false;\n    const injected = domAPI.getElementById('modalsContainer')?.childElementCount > 0;\n    if (injected) {\n      modalsLoadedSuccess = true;\n    } else {\n      await new Promise((res) => {\n        eventHandlers.trackListener(\n          domAPI.getDocument(),\n          'modalsLoaded',\n          (e) => {\n            modalsLoadedSuccess = !!(e?.detail?.success);\n            res(true);\n          },\n          { once: true, description: 'modalsLoaded for coreInit', context: 'coreInit' }\n        );\n      });\n    }\n\n    // 11. modalManager.init\n    if (modalManager.init) {\n      try {\n        await modalManager.init();\n      } catch (err) {\n        logger.error('[coreInit] Error in modalManager.init', err, { context: 'coreInit:modalManager:init' });\n        throw err;\n      }\n    }\n\n    logger.log('[coreInit][initializeCoreSystems] Complete', { context: 'coreInit' });\n    return true;\n  }\n\n  return { initializeCoreSystems };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 11461,
          "_transferSize": 12644,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.559Z",
        "time": 352.7980000071693,
        "timings": {
          "blocked": 301.7089999971092,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.057999999999992724,
          "wait": 49.99400000096858,
          "receive": 1.037000009091571,
          "_blocked_queueing": 2.7209999971091747,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106591",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 25
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/init/uiInit.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1460,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "13429"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"c15dc41a72824890f808d18e3b9c8914\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 11:42:27 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13429,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * uiInit.js\n * Factory for initializing all UI components, event tracking, sidebar helpers, and late-phase visual enhancements.\n *\n * Guardrails:\n * - Factory export (createUIInitializer)\n * - Strict DI: All dependencies passed as arguments\n * - No top-level/side effect logic\n * - All DOM access via domAPI or domReadinessService\n * - All event/listener work via injected eventHandlers\n * - All logging via injected logger\n */\n\nexport function createUIInitializer({\n  DependencySystem,\n  domAPI,\n  browserService,\n  eventHandlers,\n  domReadinessService,\n  logger,\n  APP_CONFIG,\n  safeHandler,\n  sanitizer,\n  createProjectDetailsEnhancements,\n  createTokenStatsManager,\n  createKnowledgeBaseComponent,\n  apiRequest,\n  uiUtils\n}) {\n  if (\n    !DependencySystem || !domAPI || !browserService ||\n    !eventHandlers || !domReadinessService || !logger || !APP_CONFIG || !safeHandler\n  ) {\n    throw new Error('[uiInit] Missing required dependencies for UI initialization.');\n  }\n\n  let _uiInitialized = false;\n\n  async function setupSidebarControls() {\n    const navToggleBtn = domAPI.getElementById('navToggleBtn');\n    const closeSidebarBtn = domAPI.getElementById('closeSidebarBtn');\n    const doc = domAPI.getDocument();\n\n    function setSidebarOpen(open) {\n      const sidebar = domAPI.getElementById('mainSidebar');\n      // freeze / release background scroll\n      domAPI[open ? 'addClass' : 'removeClass'](doc.body, 'sidebar-open');\n      domAPI[open ? 'addClass' : 'removeClass'](doc.documentElement, 'sidebar-open');\n\n      // slide sidebar in/out\n      if (sidebar) {\n        domAPI[open ? 'addClass' : 'removeClass'](sidebar, 'translate-x-0');\n        domAPI[open ? 'removeClass' : 'addClass'](sidebar, '-translate-x-full');\n        sidebar.setAttribute('aria-hidden', String(!open));\n      }\n      // update toggle button ARIA\n      if (navToggleBtn) navToggleBtn.setAttribute('aria-expanded', String(open));\n    }\n\n    if (navToggleBtn) {\n      eventHandlers.trackListener(\n        navToggleBtn,\n        'click',\n        safeHandler(() => setSidebarOpen(navToggleBtn.getAttribute('aria-expanded') !== 'true'), 'navToggleBtn:toggleSidebar'),\n        { context: 'uiInit:sidebar', description: 'toggleSidebar' }\n      );\n    }\n    if (closeSidebarBtn) {\n      eventHandlers.trackListener(\n        closeSidebarBtn, 'click',\n        () => setSidebarOpen(false),\n        { context: 'uiInit:sidebar', description: 'closeSidebar' }\n      );\n    }\n\n    // Global escape key listener\n    eventHandlers.trackListener(\n      doc,\n      'keydown',\n      (e) => { if (e.key === 'Escape') setSidebarOpen(false); },\n      { context: 'uiInit:sidebar', description: 'escCloseSidebar' }\n    );\n  }\n\n  async function loadProjectTemplates() {\n    const htmlLoader = DependencySystem.modules.get('htmlTemplateLoader');\n    if (!htmlLoader?.loadTemplate) {\n      logger.error('[UIInit] htmlTemplateLoader.loadTemplate unavailable', { context: 'uiInit:loadTemplates' });\n      return;\n    }\n\n    try {\n      logger.log('[UIInit] Loading project templates', { context: 'uiInit:loadTemplates' });\n\n      // project_list.html\n      await htmlLoader.loadTemplate({\n        url: '/static/html/project_list.html',\n        containerSelector: '#projectListView',\n        eventName: 'projectListHtmlLoaded'\n      });\n\n      // project_details.html\n      await htmlLoader.loadTemplate({\n        url: '/static/html/project_details.html',\n        containerSelector: '#projectDetailsView',\n        eventName: 'projectDetailsHtmlLoaded'\n      });\n\n      logger.log('[UIInit] Project templates loaded successfully', { context: 'uiInit:loadTemplates' });\n    } catch (err) {\n      logger.error('[UIInit] Failed to load project templates', err, { context: 'uiInit:loadTemplates' });\n      throw err;\n    }\n  }\n\n  async function waitForModalReadiness() {\n    const modalMgr = DependencySystem.modules.get('modalManager');\n    if (modalMgr?.isReadyPromise) {\n      await Promise.race([\n        modalMgr.isReadyPromise(),\n        new Promise(res => browserService.getWindow().setTimeout(res, 8000))\n      ]).catch(() => {\n        logger.warn('[UIInit] ModalManager not ready after 8s – continuing', { context: 'uiInit' });\n      });\n    }\n  }\n\n  async function createAndRegisterUIComponents() {\n    logger.log('[UIInit] Creating and registering UI components', { context: 'uiInit:createAndRegisterUIComponents' });\n\n    // Project Details Enhancements - Create and register visual improvements\n    if (createProjectDetailsEnhancements) {\n      const projectDetailsEnhancementsInstance = createProjectDetailsEnhancements({\n        domAPI,\n        browserService,\n        eventHandlers,\n        domReadinessService,\n        logger,\n        sanitizer\n      });\n      DependencySystem.register('projectDetailsEnhancements', projectDetailsEnhancementsInstance);\n\n      // Initialize if available\n      if (projectDetailsEnhancementsInstance.initialize) {\n        await projectDetailsEnhancementsInstance.initialize().catch(err =>\n          logger.error('[UIInit] ProjectDetailsEnhancements init failed', err, { context: 'uiInit:projectDetailsEnhancements' })\n        );\n      }\n    }\n\n    // Token Stats Manager - Create and register token stats functionality\n    if (createTokenStatsManager) {\n      const tokenStatsManagerInstance = createTokenStatsManager({\n        apiClient: apiRequest,\n        domAPI,\n        eventHandlers,\n        browserService,\n        modalManager: DependencySystem.modules.get('modalManager'),\n        sanitizer,\n        logger,\n        projectManager: DependencySystem.modules.get('projectManager'),\n        app: DependencySystem.modules.get('app'),\n        chatManager: DependencySystem.modules.get('chatManager'),\n        domReadinessService\n      });\n      DependencySystem.register('tokenStatsManager', tokenStatsManagerInstance);\n    }\n\n    // Knowledge Base Component - Create and register if not already present\n    let knowledgeBaseComponentInstance = DependencySystem.modules.get('knowledgeBaseComponent');\n    if (!knowledgeBaseComponentInstance && createKnowledgeBaseComponent) {\n      try {\n        knowledgeBaseComponentInstance = createKnowledgeBaseComponent({\n          DependencySystem,\n          apiRequest,\n          projectManager: DependencySystem.modules.get('projectManager'),\n          uiUtils,\n          sanitizer: DependencySystem.modules.get('sanitizer')\n        });\n        DependencySystem.register('knowledgeBaseComponent', knowledgeBaseComponentInstance);\n      } catch (err) {\n        logger.warn('[UIInit] KnowledgeBaseComponent creation failed; falling back to placeholder.', { context: 'uiInit:createAndRegisterUIComponents', error: err?.message });\n        logger.error('[UIInit] KnowledgeBaseComponent creation failed', err, { context: 'uiInit:createAndRegisterUIComponents:KnowledgeBaseComponent' });\n        throw err;\n      }\n    }\n\n    // Project Details Component - Inject KnowledgeBaseComponent into it\n    const projectDetailsComponent = DependencySystem.modules.get('projectDetailsComponent');\n    if (projectDetailsComponent && knowledgeBaseComponentInstance) {\n      if (typeof projectDetailsComponent.setKnowledgeBaseComponent === 'function') {\n        projectDetailsComponent.setKnowledgeBaseComponent(knowledgeBaseComponentInstance);\n      } else {\n        logger.warn('[UIInit] projectDetailsComponent is missing setKnowledgeBaseComponent method.', { context: 'uiInit:createAndRegisterUIComponents' });\n      }\n    } else if (!projectDetailsComponent) {\n      logger.warn('[UIInit] projectDetailsComponent not found in DI. Cannot inject KBC.', { context: 'uiInit:createAndRegisterUIComponents' });\n    }\n\n    // Update ProjectDashboard references using the setter methods\n    const projectDashboardInstance = DependencySystem.modules.get('projectDashboard');\n    if (projectDashboardInstance) {\n      const pdcForDashboard = DependencySystem.modules.get('projectDetailsComponent');\n      const plcForDashboard = DependencySystem.modules.get('projectListComponent');\n\n      if (pdcForDashboard && typeof projectDashboardInstance.setProjectDetailsComponent === 'function') {\n        projectDashboardInstance.setProjectDetailsComponent(pdcForDashboard);\n      } else if (pdcForDashboard) {\n        logger.warn('[UIInit] projectDashboardInstance missing setProjectDetailsComponent method.', { context: 'uiInit:createAndRegisterUIComponents' });\n        // Fallback to direct assignment if setter is missing but component exists (less ideal)\n        if (projectDashboardInstance.components) projectDashboardInstance.components.projectDetails = pdcForDashboard;\n      }\n\n      if (plcForDashboard && typeof projectDashboardInstance.setProjectListComponent === 'function') {\n        projectDashboardInstance.setProjectListComponent(plcForDashboard);\n      } else if (plcForDashboard) {\n        logger.warn('[UIInit] projectDashboardInstance missing setProjectListComponent method.', { context: 'uiInit:createAndRegisterUIComponents' });\n        // Fallback\n        if (projectDashboardInstance.components) projectDashboardInstance.components.projectList = plcForDashboard;\n      }\n    } else {\n      logger.warn('[UIInit] projectDashboardInstance not found. Cannot set sub-components.', { context: 'uiInit:createAndRegisterUIComponents' });\n   }\n\n   // Initialize ProjectModal\n   const projectModalInstance = DependencySystem.modules.get('projectModal');\n   if (projectModalInstance && typeof projectModalInstance.init === 'function') {\n     try {\n       logger.log('[UIInit] Initializing ProjectModal instance.', { context: 'uiInit:createAndRegisterUIComponents' });\n       await projectModalInstance.init();\n     } catch (err) {\n       logger.error('[UIInit] ProjectModal initialization failed', err, { context: 'uiInit:projectModalInit' });\n       // Depending on severity, might want to throw or handle gracefully\n     }\n   } else {\n     logger.warn('[UIInit] ProjectModal instance or its init method not found in DI.', { context: 'uiInit:createAndRegisterUIComponents' });\n   }\n\n   logger.log('[UIInit] All UI components created and registered', { context: 'uiInit:createAndRegisterUIComponents' });\n }\n\n async function registerNavigationViews() {\n    const navigationService = DependencySystem.modules.get('navigationService');\n    if (!navigationService || typeof navigationService.registerView !== 'function') {\n      logger.warn('[UIInit] NavigationService not available or missing registerView method', { context: 'uiInit:registerNavigationViews' });\n      return;\n    }\n\n    try {\n      // Wait for project list elements to be ready\n      await domReadinessService.dependenciesAndElements({\n        domSelectors: ['#projectListContainer'],\n        timeout: APP_CONFIG.TIMEOUTS?.PROJECT_LIST_ELEMENTS ?? 5000,\n        context: 'uiInit:registerNavigationViews:projectListElements'\n      });\n\n      navigationService.registerView('projectList', {\n        selector: '#projectListView',\n        onActivate: async () => {\n          logger.log('[UIInit] Activating project list view', { context: 'uiInit:navigation:projectList' });\n          // Additional activation logic can go here\n        }\n      });\n\n      // Wait for project details elements to be ready\n      await domReadinessService.dependenciesAndElements({\n        domSelectors: ['#projectDetailsContainer'],\n        timeout: APP_CONFIG.TIMEOUTS?.PROJECT_DETAILS_ELEMENTS ?? 5000,\n        context: 'uiInit:registerNavigationViews:projectDetailsElements'\n      });\n\n      navigationService.registerView('projectDetails', {\n        selector: '#projectDetailsView',\n        onActivate: async () => {\n          logger.log('[UIInit] Activating project details view', { context: 'uiInit:navigation:projectDetails' });\n          // Additional activation logic can go here\n        }\n      });\n\n      logger.log('[UIInit] Navigation views registered', { context: 'uiInit:navigation' });\n    } catch (err) {\n      logger.error('[UIInit] Failed to register navigation views', err, { context: 'uiInit:registerNavigationViews' });\n      // Don't throw - this is not critical for app functionality\n    }\n  }\n\n  async function initializeUIComponents() {\n    if (_uiInitialized) {\n      return;\n    }\n\n    try {\n      logger.log('[UIInit] Starting UI component initialization', { context: 'uiInit:initializeUIComponents' });\n\n      // First, wait for critical DOM elements\n      await domReadinessService.dependenciesAndElements({\n        domSelectors: [\n          '#projectListView',     // contenedor que ya existe en el HTML base\n          '#projectDetailsView'   // idem\n        ],\n        timeout: 10000, // Adjusted timeout for clarity\n        context: 'uiInit:initializeUIComponents:domCheck'\n      });\n\n      // Setup sidebar functionality\n      await setupSidebarControls();\n\n      // Load templates\n      await loadProjectTemplates();\n\n      // Wait for modal readiness\n      await waitForModalReadiness();\n\n      // Create and register UI components\n      await createAndRegisterUIComponents();\n\n      // Register navigation views\n      await registerNavigationViews();\n\n      logger.log('[UIInit] UI component initialization completed successfully', { context: 'uiInit:initializeUIComponents' });\n      _uiInitialized = true;\n    } catch (err) {\n      logger.error('[UIInit] Error during UI initialization', err, { context: 'uiInit:initializeUIComponents' });\n      throw err;\n    }\n  }\n\n  return { initializeUIComponents };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 13429,
          "_transferSize": 14612,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.559Z",
        "time": 617.8019999933895,
        "timings": {
          "blocked": 2.7870000049006194,
          "dns": 0,
          "ssl": -1,
          "connect": 311.183,
          "send": 0.3779999999999859,
          "wait": 301.94299999355434,
          "receive": 1.5109999949345365,
          "_blocked_queueing": 2.7870000049006194,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106592",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 26
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/init/authInit.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1462,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "10794"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"632b930ba6d982bacd989a968f73f77c\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 06:54:06 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 10794,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * Creates an authentication initializer that manages authentication system setup, state change handling, and UI updates.\n *\n * This factory enforces strict dependency injection and provides methods to initialize authentication, respond to authentication state changes, render authentication-related UI elements, and force the display of the login modal.\n *\n * @returns {object} An object with methods: {@link initializeAuthSystem}, {@link handleAuthStateChange}, {@link renderAuthHeader}, and {@link forceShowLoginModal}.\n *\n * @throws {Error} If any required dependency is missing.\n */\n\nexport function createAuthInitializer({\n  DependencySystem,\n  domAPI,\n  eventHandlers,\n  logger,\n  sanitizer,\n  safeHandler,\n  domReadinessService,\n  APP_CONFIG\n}) {\n  if (\n    !DependencySystem || !domAPI || !eventHandlers ||\n    !logger || !sanitizer || !safeHandler || !domReadinessService || !APP_CONFIG\n  ) {\n    throw new Error('[authInit] Missing required dependencies for auth initialization.');\n  }\n\n  // Note: Local state for 'currentUser' has been removed.\n  // All currentUser information should be sourced from appModule.state.currentUser.\n\n  /**\n   * Initialize the authentication system\n   */\n  async function initializeAuthSystem() {\n    const auth = DependencySystem.modules.get('auth');\n    if (!auth?.init) {\n      throw new Error('[authInit] Auth module is missing or invalid.');\n    }\n\n    // Register auth event listeners before init\n    if (auth.AuthBus) {\n      logger.log('[authInit] Registering AuthBus listeners before auth.init');\n      eventHandlers.trackListener(\n        auth.AuthBus,\n        'authStateChanged',\n        (event) => {\n          logger.log('[authInit][AuthBus] Received authStateChanged', event?.detail);\n          handleAuthStateChange(event);\n        },\n        { description: '[authInit] AuthBus authStateChanged', context: 'authInit' }\n      );\n      eventHandlers.trackListener(\n        auth.AuthBus,\n        'authReady',\n        (event) => {\n          logger.log('[authInit][AuthBus] Received authReady', event?.detail);\n          handleAuthStateChange(event);\n        },\n        { description: '[authInit] AuthBus authReady', context: 'authInit' }\n      );\n    } else {\n      logger.warn('[authInit] No AuthBus instance for auth event registration');\n    }\n\n    try {\n      // auth.init() is responsible for verifying auth and calling broadcastAuth,\n      // which in turn calls appModule.setAuthState().\n      // So, appModule.state.isAuthenticated will be updated by auth.init() itself.\n      logger.log('[authInit] Calling auth.init()');\n      await auth.init();\n\n      renderAuthHeader(); // Ensure this renders based on the now canonical appModule.state\n      return true;\n    } catch (err) {\n      logger.error('[authInit] Auth system initialization failed', err, { context: 'authInit:init' });\n      throw err;\n    }\n  }\n\n  /**\n   * Responds to authentication state changes by updating UI and dependent modules.\n   *\n   * Reads the latest authentication state and user information from {@link appModule.state}, updates the authentication header, and notifies relevant modules of the new state. If the user is authenticated, attempts to navigate to the project list or load projects once the application is ready.\n   *\n   * @param {CustomEvent} event - The authentication state change event.\n   */\n  function handleAuthStateChange(event) {\n    // auth.js's broadcastAuth (via app.setAuthState) has already updated appModule.state\n    // before this event listener is triggered.\n    // This function now primarily reacts to that pre-established state.\n    const appModule = DependencySystem.modules.get('appModule');\n\n    logger.log('[authInit][handleAuthStateChange]', {\n      eventDetail: event?.detail,\n      appModuleState: JSON.stringify(appModule.state)\n    });\n\n    const isAuthenticated = appModule.state.isAuthenticated; // Read from canonical source\n    const user = appModule.state.currentUser; // Read from canonical source\n\n    // Local 'currentUser' variable removed.\n    // renderAuthHeader will now directly use appModule.state.\n\n    renderAuthHeader(); // Renders based on appModule.state\n\n    const chatManager = DependencySystem.modules.get('chatManager');\n    if (chatManager?.setAuthState) {\n      chatManager.setAuthState(isAuthenticated);\n    }\n    const projectManager = DependencySystem.modules.get('projectManager');\n    if (projectManager?.setAuthState) {\n      projectManager.setAuthState(isAuthenticated);\n    }\n\n    if (isAuthenticated) {\n      const navService = DependencySystem.modules.get('navigationService');\n      const appReadyDispatched = DependencySystem.modules.get('app')?._appReadyDispatched;\n      const readyNow = appReadyDispatched || appModule.state.isReady;\n\n      const proceed = () => {\n        if (navService?.navigateToProjectList) {\n          navService.navigateToProjectList().catch(() => {\n            // Error handled silently\n          });\n        } else if (projectManager?.loadProjects) {\n          projectManager.loadProjects('all').catch(() => {\n            // Error handled silently\n          });\n        }\n      };\n\n      if (readyNow) {\n        proceed();\n      } else {\n        domReadinessService.waitForEvent('app:ready', {\n          timeout: APP_CONFIG.TIMEOUTS?.APP_READY_WAIT ?? 30000,\n          context: 'authInit:handleAuthStateChange'\n        }).then(proceed).catch(() => {\n          // Error handled silently\n        });\n      }\n    }\n  }\n\n  /**\n   * Updates authentication-related UI elements in the header based on the current authentication state.\n   *\n   * Adjusts the visibility and content of login buttons, user menus, user initials, and status messages according to the user's authentication status and information from {@link appModule.state}. Attaches a logout handler to the logout button if present.\n   *\n   * @remark\n   * If {@link appModule} is not available in the dependency system, the function logs an error and exits without updating the UI.\n   */\n  function renderAuthHeader() {\n    try {\n      const appModule = DependencySystem.modules.get('appModule');\n      if (!appModule) {\n        logger.error('[authInit][renderAuthHeader] appModule not found in DI. Cannot render header accurately.');\n        return;\n      }\n      const isAuth = appModule.state.isAuthenticated;\n      const user = appModule.state.currentUser; // Use canonical source\n\n      logger.debug('[authInit][renderAuthHeader] Rendering auth header', { isAuth, user });\n\n      const authBtn = domAPI.getElementById('authButton');\n      const userMenu = domAPI.getElementById('userMenu');\n      const logoutBtn = domAPI.getElementById('logoutBtn');\n      const userInitialsEl = domAPI.getElementById('userInitials');\n      const authStatus = domAPI.getElementById('authStatus');\n      const userStatus = domAPI.getElementById('userStatus');\n\n      /* ── login-button / user-menu visibility ─────────────────── */\n      if (authBtn) {\n        if (isAuth) {\n          domAPI.addClass   (authBtn, 'hidden');\n          domAPI.setStyle   (authBtn, 'display', 'none');\n          domAPI.setAttribute(authBtn, 'hidden', 'hidden');\n        } else {\n          domAPI.removeClass(authBtn, 'hidden');\n          domAPI.setStyle   (authBtn, 'display', '');\n          domAPI.removeAttribute(authBtn, 'hidden');\n        }\n      }\n\n      if (userMenu) {\n        domAPI.toggleClass(userMenu, 'hidden', !isAuth);\n        domAPI.setStyle   (userMenu, 'display', isAuth ? '' : 'none');\n        isAuth\n          ? userMenu.removeAttribute?.('hidden')\n          : userMenu.setAttribute?.('hidden', 'hidden');\n      }\n\n      if (!isAuth) {\n        const orphan = domAPI.getElementById('headerLoginForm');\n        if (orphan) orphan.remove();\n      }\n\n      if (isAuth && userMenu && userInitialsEl) {\n        let initials = '?';\n        if (user?.name) { // Prefer user.name if available\n          initials = user.name.trim().split(/\\s+/).map(p => p[0]).join('').toUpperCase();\n        } else if (user?.username) { // Fallback to username\n          initials = user.username.trim().slice(0, 2).toUpperCase();\n        }\n        domAPI.setTextContent(userInitialsEl, initials);\n      } else if (userMenu && userInitialsEl) {\n        domAPI.setTextContent(userInitialsEl, ''); // Clear if not authenticated\n      }\n\n\n      if (authStatus) {\n        domAPI.setTextContent(authStatus, isAuth\n          ? (user?.username ? `Signed in as ${user.username}` : 'Authenticated')\n          : 'Not Authenticated'\n        );\n      }\n\n      if (userStatus) {\n        domAPI.setTextContent(userStatus, isAuth && user?.username\n          ? `Hello, ${user.name ?? user.username}` // Prefer user.name for greeting\n          : 'Offline'\n        );\n      }\n\n      if (logoutBtn) {\n        // Ensure listener is only attached once, or managed by eventHandlers.trackListener's internal tracking\n        // Assuming trackListener handles duplicates or provides a way to clear old ones if this is called multiple times.\n        const authMod = DependencySystem.modules.get('auth'); // Get authMod for logout\n        eventHandlers.trackListener(\n          logoutBtn,\n          'click',\n          safeHandler((e) => {\n            domAPI.preventDefault(e);\n            logger.debug('[authInit][renderAuthHeader] Logout button clicked.');\n            authMod?.logout?.().catch(err => logger.error('[authInit] Error during logout action from button:', err));\n          }, 'Auth logout button click'),\n          { description: 'Auth logout button click', context: 'authInit', once: false } // Ensure it can be clicked multiple times if needed\n        );\n      }\n    } catch (err) {\n      logger.error('[authInit][renderAuthHeader] Error during rendering', err, { context: 'authInit:renderAuthHeader' });\n      // Error handled silently\n    }\n  }\n\n  /**\n   * Utility function to force show login modal\n   */\n  function forceShowLoginModal() {\n    // Only show login modal if not authenticated\n    const authMod = DependencySystem.modules.get?.('auth');\n    if (authMod && !authMod.isAuthenticated?.()) {\n      // Open the modal using modalManager if available\n      const modalManager = DependencySystem.modules.get?.('modalManager');\n      if (modalManager && typeof modalManager.show === 'function') {\n        modalManager.show('login');\n      } else {\n        // Fallback: try the native dialog element directly\n        const doc = DependencySystem.modules.get('domAPI')?.getDocument?.();\n        const loginDlg = doc?.getElementById('loginModal');\n        if (loginDlg && typeof loginDlg.showModal === 'function') {\n          loginDlg.showModal();\n        }\n      }\n    }\n  }\n\n  return {\n    initializeAuthSystem,\n    handleAuthStateChange,\n    renderAuthHeader,\n    forceShowLoginModal\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 10794,
          "_transferSize": 11977,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.559Z",
        "time": 620.422000005207,
        "timings": {
          "blocked": 3.6799999947855246,
          "dns": 0.006000000000000005,
          "ssl": -1,
          "connect": 310.236,
          "send": 0.39100000000001955,
          "wait": 305.5440000010477,
          "receive": 0.5650000093737617,
          "_blocked_queueing": 3.100999994785525,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106593",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 27
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/init/appState.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1462,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "4114"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"9c3069dc0c6e9aaa2358a93867f93b4a\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 06:54:06 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4114,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * Creates an application state manager for centralized control of authentication, user information, and app lifecycle state.\n *\n * The returned module provides methods to update and query authentication status, user data, initialization progress, and lifecycle phase. All state changes are logged using the injected logger.\n *\n * @param {Object} options - Options object.\n * @param {Object} options.DependencySystem - Dependency injection system (required).\n * @param {Object} options.logger - Logger instance for structured logging (required).\n * @returns {Object} Application state manager with state properties and helper methods.\n *\n * @throws {Error} If either {@link DependencySystem} or {@link logger} is missing.\n */\n\nexport function createAppStateManager({ DependencySystem, logger }) {\n  if (!DependencySystem || !logger) {\n    throw new Error('[appState] Missing required dependencies for app state management.');\n  }\n\n  const appModule = {\n    state: {\n      isAuthenticated: false,\n      currentUser: null,\n      isReady: false, // True when app is fully initialized and safe for interaction\n      disableErrorTracking: false,\n      initialized: false, // True when the main init() sequence has completed (success or fail)\n      initializing: false, // True if init() is currently executing\n      currentPhase: 'idle' // e.g., 'idle', 'starting_init_process', 'initialized_idle', 'failed_idle'\n    },\n\n    // Method to update authentication-related state\n    setAuthState(newAuthState) {\n      const oldAuthState = {\n        isAuthenticated: this.state.isAuthenticated,\n        currentUser: this.state.currentUser ? { id: this.state.currentUser.id, username: this.state.currentUser.username } : null\n      };\n      const newAuthStateForLog = {\n        isAuthenticated: newAuthState.isAuthenticated,\n        currentUser: newAuthState.currentUser ? { id: newAuthState.currentUser.id, username: newAuthState.currentUser.username } : null\n      };\n      logger.info('[appState][setAuthState] Updating auth state.', {\n        oldAuthState,\n        newAuthState: newAuthStateForLog,\n        context: 'appState:setAuthState'\n      });\n      Object.assign(this.state, newAuthState);\n    },\n\n    // Method to update general app lifecycle state\n    setAppLifecycleState(newLifecycleState) {\n      const oldLifecycleStateForLog = {\n        isReady: this.state.isReady,\n        initialized: this.state.initialized,\n        initializing: this.state.initializing,\n        currentPhase: this.state.currentPhase\n      };\n      logger.info('[appState][setAppLifecycleState] Updating app lifecycle state.', {\n        oldLifecycleState: oldLifecycleStateForLog,\n        newLifecycleState,\n        context: 'appState:setAppLifecycleState'\n      });\n      Object.assign(this.state, newLifecycleState);\n\n      // If 'initialized' becomes true, set 'isReady' based on success/failure\n      if (newLifecycleState.initialized === true) {\n        if (this.state.currentPhase === 'initialized_idle') {\n          this.state.isReady = true;\n        } else if (this.state.currentPhase === 'failed_idle') {\n          this.state.isReady = false; // Explicitly false if init failed\n        }\n      } else if (Object.prototype.hasOwnProperty.call(newLifecycleState, 'isReady')) {\n        // Allow direct setting of isReady if needed\n        this.state.isReady = newLifecycleState.isReady;\n      }\n    },\n\n    // Helper method to get current authentication status\n    isAuthenticated() {\n      return this.state.isAuthenticated;\n    },\n\n    // Helper method to get current user\n    getCurrentUser() {\n      return this.state.currentUser;\n    },\n\n    // Helper method to check if app is ready\n    isAppReady() {\n      return this.state.isReady;\n    },\n\n    // Helper method to check if app is initialized\n    isInitialized() {\n      return this.state.initialized;\n    },\n\n    // Helper method to check if app is initializing\n    isInitializing() {\n      return this.state.initializing;\n    },\n\n    // Helper method to get current phase\n    getCurrentPhase() {\n      return this.state.currentPhase;\n    }\n  };\n\n  return appModule;\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1182,
          "bodySize": 4114,
          "_transferSize": 5296,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.560Z",
        "time": 706.7419999928159,
        "timings": {
          "blocked": 3.7779999920874836,
          "dns": 0.006000000000000005,
          "ssl": -1,
          "connect": 310.047,
          "send": 0.36299999999999955,
          "wait": 392.0800000023646,
          "receive": 0.46799999836366624,
          "_blocked_queueing": 3.1789999920874834,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 28
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/init/errorInit.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1463,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "3850"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"68427acd1a15579fde04de5c4b4cf63b\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 02:45:05 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3850,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * errorInit.js\n * Factory for global error handling setup.\n * \n * Handles global error and unhandled promise rejection setup for the application.\n * Sets up centralized error logging through the DI system.\n *\n * Guardrails:\n * - Factory export (createErrorInitializer)\n * - Strict DI: Accept all dependencies as factory arguments\n * - No import-time side effects\n * - All logging via injected logger\n */\n\nexport function createErrorInitializer({\n  DependencySystem,\n  browserService,\n  eventHandlers,\n  logger,\n  safeHandler\n}) {\n  if (\n    !DependencySystem || !browserService || !eventHandlers || !logger || !safeHandler\n  ) {\n    throw new Error('[errorInit] Missing required dependencies for error handling initialization.');\n  }\n\n  /**\n   * Setup global error handling for the application\n   */\n  function setupGlobalErrorHandling() {\n    try {\n      const window = browserService.getWindow();\n      if (!window) {\n        logger.warn('[errorInit] Window object not available, skipping error handler setup', { context: 'errorInit:setupGlobalErrorHandling' });\n        return;\n      }\n\n      // Centralised global-error listener via DI event system\n      eventHandlers.trackListener(\n        window,\n        'error',\n        (evt) => {\n          const {\n            message,\n            filename: source,\n            lineno,\n            colno,\n            error\n          } = evt;\n          const log = DependencySystem?.modules?.get?.('logger');\n          log?.error?.(\n            '[window.error]',\n            { message, source, lineno, colno, err: error?.stack || error },\n            { context: 'global.error' }\n          );\n        },\n        { context: 'errorInit', description: 'window error handler', passive: true }\n      );\n\n      // Track unhandled promise rejections\n      eventHandlers.trackListener(\n        window,\n        'unhandledrejection',\n        safeHandler(function (event) {\n          logger.error('[unhandledrejection]', event?.reason, { context: 'global.unhandledrejection' });\n          // Note: We don't prevent default to allow browser handling\n        }, 'global unhandledrejection'),\n        { context: 'errorInit' }\n      );\n\n      logger.log('[errorInit] Global error handling setup completed', { context: 'errorInit:setupGlobalErrorHandling' });\n    } catch (err) {\n      logger.error('[errorInit] Failed to setup global error handling', err, { context: 'errorInit:setupGlobalErrorHandling' });\n      throw err;\n    }\n  }\n\n  /**\n   * Setup specific error handlers for different error types\n   */\n  function setupSpecificErrorHandlers() {\n    try {\n      const window = browserService.getWindow();\n      if (!window) {\n        return;\n      }\n\n      // Setup additional error handling for specific scenarios if needed\n      // This is where we can add more specific error handling in the future\n\n      logger.log('[errorInit] Specific error handlers setup completed', { context: 'errorInit:setupSpecificErrorHandlers' });\n    } catch (err) {\n      logger.error('[errorInit] Failed to setup specific error handlers', err, { context: 'errorInit:setupSpecificErrorHandlers' });\n      throw err;\n    }\n  }\n\n  /**\n   * Initialize all error handling systems\n   */\n  function initializeErrorHandling() {\n    try {\n      logger.log('[errorInit] Starting error handling initialization', { context: 'errorInit:initializeErrorHandling' });\n\n      setupGlobalErrorHandling();\n      setupSpecificErrorHandlers();\n\n      logger.log('[errorInit] Error handling initialization completed', { context: 'errorInit:initializeErrorHandling' });\n    } catch (err) {\n      logger.error('[errorInit] Error handling initialization failed', err, { context: 'errorInit:initializeErrorHandling' });\n      throw err;\n    }\n  }\n\n  return {\n    setupGlobalErrorHandling,\n    setupSpecificErrorHandlers,\n    initializeErrorHandling\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1182,
          "bodySize": 3850,
          "_transferSize": 5032,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.560Z",
        "time": 438.34599999536294,
        "timings": {
          "blocked": 352.6689999988582,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06899999999995998,
          "wait": 84.94899999896438,
          "receive": 0.6589999975403771,
          "_blocked_queueing": 3.1989999988581985,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106419",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 38
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/utils/globalUtils.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1466,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "6583"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"1cc9afb15de6a1398e85ee23fc7fd209\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 03:22:00 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 6583,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 1182,
          "bodySize": 6583,
          "_transferSize": 7765,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.560Z",
        "time": 438.0890000029467,
        "timings": {
          "blocked": 352.76099999182577,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06999999999999318,
          "wait": 84.46699999799768,
          "receive": 0.7910000131232664,
          "_blocked_queueing": 3.8229999918257818,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106417",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 40
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/eventHandler.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1461,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "28958"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"35465b97b05482e807a68c6874a9c1df\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 05:14:41 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 28958,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module eventHandler\n * @description DI-strict, orchestrated UI event utility collection. Manages tracked event listeners\n * and provides common UI setup helpers like forms, modals, and collapsibles.\n * All notifications use the injected `notify` utility. No direct console or global DOM/Window access.\n *\n * @param {Object} deps - Dependencies injected via DI.\n * @param {Object} deps.app - Core application reference (optional, for app-specific logic like redirects).\n * @param {Object} deps.projectManager - Project Manager reference (optional, for project actions).\n * @param {Object} deps.modalManager - Modal Manager reference (optional, for modal actions).\n * @param {Object} deps.DependencySystem - Required. DI registry.\n * @param {Object} deps.domAPI - Required. DOM abstraction layer.\n * @param {Object} deps.browserService - Required. Browser abstraction (URL, storage, etc.).\n * @param {Object} deps.notify - Required. Context-aware notification utility.\n * @param {Object} deps.APP_CONFIG - Required. Application configuration object.\n * @param {Function} [deps.navigate] - Optional navigation function override.\n * @param {Object} [deps.storage] - Optional storage abstraction override (usually from browserService).\n * @param {Object} deps.errorReporter - Required error logging utility.\n * @param {Object} deps.logger - Required logging utility.\n * @param {Object} [deps.domReadinessService] - Readiness service (use setter for DI circularity).\n * @param {Object} [deps.timeAPI] - Optional timing API (defaults to performance.now).\n * @returns {Object} Event handler API { trackListener, cleanupListeners, delegate, etc. }\n */\n\nimport { debounce as globalDebounce, toggleElement as globalToggleElement } from './utils/globalUtils.js';\n\nexport function createEventHandlers({\n  app,\n  projectManager,\n  modalManager,\n  DependencySystem,\n  domAPI,\n  browserService,\n  APP_CONFIG,\n  navigate,\n  storage,\n  logger,           // STRICT: must be provided via DI\n  errorReporter,    // STRICT: must be provided via DI\n  domReadinessService // Optional, but if provided, must be validated\n} = {}) {\n  // === Dependency validation block (must be at the very top for pattern checker) ===\n  if (!DependencySystem) {\n    throw new Error('[eventHandler] Missing DependencySystem');\n  }\n  if (!domAPI) {\n    throw new Error('[eventHandler] Missing domAPI');\n  }\n  if (!browserService) {\n    throw new Error('[eventHandler] Missing browserService');\n  }\n  if (!APP_CONFIG) {\n    throw new Error('[eventHandler] Missing APP_CONFIG');\n  }\n  if (!logger) {\n    throw new Error('[eventHandler] Missing logger');\n  }\n  if (!errorReporter) {\n    throw new Error('[eventHandler] Missing errorReporter');\n  }\n  // domReadinessService is optional at factory, but required at init\n  // ================================================================\n  const MODULE = 'EventHandler';\n  let _domReadinessService = domReadinessService || null;\n  function setDomReadinessService(svc) { _domReadinessService = svc; }\n\n  logger.debug('[EventHandler] Factory initialized', {\n    MODULE,\n    version: '1.0',\n    appInjected: !!app,\n    context: MODULE\n  });\n  // We allow dynamic injection/update of projectManager\n  let _projectManager = projectManager;\n\n  // Singleton flags, preventing duplicate setup\n  let authButtonDelegationBound = false;\n\n  // Storage fallback\n  const storageBackend = storage || browserService;\n\n  function redirect(url) {\n    if (typeof navigate === 'function') {\n      navigate(url);\n    } else if (app && typeof app.navigate === 'function') {\n      app.navigate(url);\n    } else if (browserService && typeof browserService.setLocation === 'function') {\n      browserService.setLocation(url);\n    }\n  }\n\n  const trackedListeners = new Map();\n  const PRIORITY = { HIGH: 1, NORMAL: 5, LOW: 10 };\n\n  /**\n   * Central method to attach an event listener with bookkeeping for cleanup.\n   * @param {HTMLElement} element\n   * @param {string} type\n   * @param {Function} handler\n   * @param {Object} options\n   * @returns {Function|undefined} The wrapped handler, or undefined on failure\n   */\n  function trackListener(element, type, handler, options = {}) {\n    if (!element || typeof element.addEventListener !== 'function') return undefined;\n\n    const { capture = false, once = false, signal, passive } = options;\n    const nonPassive = ['click', 'submit', 'wheel', 'touchstart', 'touchmove', 'keydown', 'keypress', 'keyup'];\n    const finalOpts = { capture, once, signal, passive: typeof passive === 'boolean' ? passive : !nonPassive.includes(type) };\n\n    // bookkeeping (prevents duplicates)\n    const elMap = trackedListeners.get(element) || new Map();\n    const typeMap = elMap.get(type) || new Map();\n    if (!trackedListeners.has(element)) trackedListeners.set(element, elMap);\n    if (!elMap.has(type)) elMap.set(type, typeMap);\n    if (typeMap.has(handler))\n      return typeMap.get(handler).remove;        // always hand back the “unsubscribe”\n\n    let wrapped = (evt) => handler.call(element, evt);\n\n    if (finalOpts.once) {\n      // make sure our internal maps don’t leak after the handler fires\n      const _wrappedOnce = wrapped;\n      wrapped = (...a) => {\n        try { _wrappedOnce(...a); } finally {\n          // remove record from bookkeeping maps\n          browserService.setTimeout(() => untrackListener(element, type, handler), 0);\n        }\n      };\n    }\n\n    // domAPI is a required dependency, so domAPI.addEventListener should always be used.\n    domAPI.addEventListener(element, type, wrapped, finalOpts);\n\n    const remove = () => {               // función de des-registro\n      try {\n        untrackListener(element, type, handler);\n      } catch (err) {\n        logger.error(`[${MODULE}][trackListener][remove] Failed to untrackListener`, err, { context: MODULE, element, type });\n      }\n    };\n\n    typeMap.set(handler, {\n      wrappedHandler: wrapped,\n      options: finalOpts,\n      context: options.context,\n      remove: remove          // <- new\n    });\n\n    return remove;                       // ← ahora devolvemos la función “unsubscribe”\n  }\n\n  function toggleVisible(elementSelectorOrElement, show) {\n    const element =\n      typeof elementSelectorOrElement === 'string'\n        ? domAPI.querySelector(elementSelectorOrElement)\n        : elementSelectorOrElement;\n    return globalToggleElement(element, show, domAPI);\n  }\n\n  function setupCollapsible(toggleId, panelId, chevronId, onExpand) {\n    const toggleButton = domAPI.getElementById(toggleId);\n    const panel = domAPI.getElementById(panelId);\n    const chevron = chevronId ? domAPI.getElementById(chevronId) : null;\n\n    if (!toggleButton || !panel) {\n      return;\n    }\n\n    domAPI.setAttribute(toggleButton, 'role', 'button');\n    domAPI.setAttribute(toggleButton, 'aria-controls', panelId);\n    domAPI.setAttribute(toggleButton, 'aria-expanded', 'false');\n\n    const togglePanel = (expand) => {\n      domAPI.toggleClass(panel, 'hidden', !expand);\n      if (chevron) domAPI.setStyle(chevron, 'transform', expand ? 'rotate(180deg)' : 'rotate(0deg)');\n      domAPI.setAttribute(toggleButton, 'aria-expanded', String(expand));\n\n      if (expand && typeof onExpand === 'function') {\n        onExpand();\n      }\n\n      if (toggleId && storageBackend?.setItem) {\n        storageBackend.setItem(`${toggleId}_expanded`, String(expand));\n      }\n    };\n\n    let savedState = null;\n    if (toggleId && storageBackend?.getItem) {\n      savedState = storageBackend.getItem(`${toggleId}_expanded`);\n    }\n    togglePanel(savedState === 'true');\n\n    trackListener(\n      toggleButton,\n      'click',\n      () => {\n        const isCurrentlyExpanded = domAPI.getAttribute(toggleButton, 'aria-expanded') === 'true';\n        togglePanel(!isCurrentlyExpanded);\n      },\n      { description: `Toggle Collapsible ${toggleId}`, module: MODULE, context: 'collapsible', source: 'setupCollapsible' }\n    );\n  }\n\n  function setupModal(modalId, openBtnId, closeBtnId, onOpen, onClose) {\n    const modal = domAPI.getElementById(modalId);\n    const openBtn = openBtnId ? domAPI.getElementById(openBtnId) : null;\n    const closeBtn = closeBtnId ? domAPI.getElementById(closeBtnId) : null;\n\n    if (!modal) {\n      return { open: () => { }, close: () => { } };\n    }\n\n    const open = () => {\n      if (typeof onOpen === 'function') {\n        onOpen(modal);\n      }\n      if (modalManager?.show) {\n        modalManager.show(modalId);\n      } else if (typeof modal.showModal === 'function') {\n        modal.showModal();\n      } else {\n        domAPI.removeClass(modal, 'hidden');\n        domAPI.setAttribute(modal, 'open', 'true');\n      }\n    };\n\n    const close = () => {\n      if (modalManager?.hide) {\n        modalManager.hide(modalId);\n      } else if (typeof modal.close === 'function') {\n        modal.close();\n      } else {\n        domAPI.addClass(modal, 'hidden');\n        domAPI.removeAttribute(modal, 'open');\n      }\n      if (typeof onClose === 'function') {\n        onClose(modal);\n      }\n    };\n\n    if (openBtn) {\n      trackListener(openBtn, 'click', open, {\n        description: `Open Modal ${modalId}`,\n        module: MODULE,\n        context: 'modal',\n        source: 'setupModal'\n      });\n    }\n    if (closeBtn) {\n      trackListener(closeBtn, 'click', close, {\n        description: `Close Modal ${modalId} via Button`,\n        module: MODULE,\n        context: 'modal',\n        source: 'setupModal'\n      });\n    }\n\n    trackListener(\n      modal,\n      'keydown',\n      (e) => {\n        if (e.key === 'Escape') close();\n      },\n      { description: `Modal ESC Close ${modalId}`, module: MODULE, context: 'modal', source: 'setupModal' }\n    );\n\n    trackListener(\n      modal,\n      'click',\n      (e) => {\n        if (domAPI.isSameNode(e.target, modal)) close();\n      },\n      { description: `Modal Backdrop Close ${modalId}`, module: MODULE, context: 'modal', source: 'setupModal' }\n    );\n\n    return { open, close };\n  }\n\n  function setupForm(formId, submitHandler, options = {}) {\n    const form = domAPI.getElementById(formId);\n    if (!form) {\n      return;\n    }\n\n    const { validateBeforeSubmit = true, showLoadingState = true, resetOnSuccess = true } = options;\n\n    const handleSubmit = async (e) => {\n      domAPI.preventDefault(e); // Use domAPI to avoid direct event calls\n      if (domAPI.hasClass(form, 'submitting')) return;\n\n      // To be fully DI-compliant, form-specific methods should also be called via domAPI.\n      // This assumes domAPI is extended or provides a generic way to call element methods.\n      // e.g., domAPI.callMethod(form, 'checkValidity') or specific domAPI.checkFormValidity(form)\n      if (validateBeforeSubmit && typeof form.checkValidity === 'function') { // form.checkValidity is a direct DOM call\n        if (!domAPI.callMethod(form, 'checkValidity')) { // Assumed domAPI.callMethod or similar\n          if (typeof form.reportValidity === 'function') { // form.reportValidity is a direct DOM call\n            domAPI.callMethod(form, 'reportValidity'); // Assumed domAPI.callMethod or similar\n          }\n          return;\n        }\n      }\n\n      const submitBtn = domAPI.querySelector('[type=\"submit\"]', form);\n      if (showLoadingState && submitBtn) {\n        domAPI.addClass(form, 'submitting');\n        domAPI.setProperty(submitBtn, 'disabled', true);\n        domAPI.setDataAttribute(submitBtn, 'originalText', domAPI.getTextContent(submitBtn));\n        domAPI.setTextContent(submitBtn, 'Submitting...');\n      }\n\n      try {\n        // Use browserService.FormData if available (it's a required dep)\n        if (!browserService?.FormData)\n          throw new Error('[EventHandler][setupForm] browserService.FormData unavailable (strict DI)');\n        const formData = new browserService.FormData(form);\n        await submitHandler(formData, form);\n        if (resetOnSuccess && typeof form.reset === 'function') { // form.reset is a direct DOM call\n          domAPI.callMethod(form, 'reset'); // Assumed domAPI.callMethod or similar\n        }\n      } catch (error) {\n        if (options.onError) {\n          try {\n            options.onError(error);\n          } catch (err) {\n            logger.error(`[${MODULE}][setupForm][handleSubmit][onError]`, err, {\n              context: 'form-submit',\n              formId: form?.id || formId\n            });\n          }\n        }\n        logger.error(`[${MODULE}][setupForm][handleSubmit]`, error, {\n          context: 'form-submit',\n          formId: form?.id || formId\n        });\n      } finally {\n        if (showLoadingState) {\n          domAPI.removeClass(form, 'submitting');\n          if (submitBtn) {\n            domAPI.setProperty(submitBtn, 'disabled', false);\n            const originalText = domAPI.getDataAttribute(submitBtn, 'originalText');\n            if (originalText) {\n              domAPI.setTextContent(submitBtn, originalText);\n              domAPI.removeDataAttribute(submitBtn, 'originalText');\n            }\n          }\n        }\n      }\n    };\n\n    trackListener(form, 'submit', handleSubmit, {\n      passive: false,\n      description: `Form Submit ${formId}`,\n      module: MODULE,\n      context: 'form',\n      source: 'setupForm'\n    });\n  }\n\n  let initialized = false;\n  async function init() {\n    if (initialized) {\n      return this; // Return API object early\n    }\n\n    if (!_domReadinessService) {\n      throw new Error('[eventHandler.init] domReadinessService must be set via setDomReadinessService before calling init()');\n    }\n    const dependencyWaitTimeout = APP_CONFIG?.TIMEOUTS?.DEPENDENCY_WAIT ?? 10000;\n\n    // Ensure the DOM is fully loaded before initialization\n    await _domReadinessService.documentReady();\n\n    // Wait for core dependencies and the body to exist\n    await _domReadinessService.dependenciesAndElements({\n      deps: [\n        'app',\n        'auth',\n        'projectManager',\n        'modalManager',\n        'domAPI',\n        'browserService'\n      ],\n      domSelectors: ['body'],\n      timeout: dependencyWaitTimeout,\n      context: 'eventHandler.init'\n    });\n\n    // -- Strict document/body readiness\n    await _domReadinessService.documentReady();\n\n    // -- DOM event-dependent setup\n    const runDomDependentSetup = () => {\n      setupCommonElements();\n      setupNavigationElements();\n      setupContentElements();\n    };\n\n    runDomDependentSetup();\n\n    // -- Ensure modal HTML is loaded before waiting for #projectModalForm --\n    // Check multiple indicators: specific form, modals container, or wait for event\n    async function waitForModalsLoadedIfNeeded() {\n      // Fast path 1: if the specific form is already present\n      if (domAPI.getElementById('projectModalForm')) {\n        return;\n      }\n\n      // Fast path 2: if modals container has content (modals already loaded)\n      const modalsContainer = domAPI.getElementById('modalsContainer');\n      if (modalsContainer && domAPI.getProperty(modalsContainer, 'children').length > 0) {\n        // Modals are loaded, but maybe the specific form hasn't rendered yet\n        // Wait a short time for DOM to settle\n        await new Promise(resolve => browserService.setTimeout(resolve, 100));\n        return;\n      }\n\n      // Slow path: wait for 'modalsLoaded' event (only if modals aren't already loaded)\n      await new Promise((resolve, reject) => {\n        let resolved = false;\n        const timeout = browserService.setTimeout(() => {\n          if (!resolved) {\n            resolved = true;\n            reject(new Error(\"'modalsLoaded' event timeout waiting for modal HTML\"));\n          }\n        }, dependencyWaitTimeout);\n        trackListener(\n          domAPI.getDocument(),\n          'modalsLoaded',\n          () => {\n            if (!resolved) {\n              resolved = true;\n              browserService.clearTimeout(timeout);\n              resolve();\n            }\n          },\n          { once: true, description: \"Wait for modalsLoaded before #projectModalForm\", context: MODULE }\n        );\n      });\n    }\n\n    await waitForModalsLoadedIfNeeded();\n\n    // Now wait for the project modal form to appear\n    await _domReadinessService.elementsReady('#projectModalForm', {\n      timeout: dependencyWaitTimeout,\n      context: 'eventHandler.init:modalForm'\n    }).then(() => {\n      setupProjectModalForm();\n    }).catch((error) => {\n      logger.error(`[${MODULE}][init] elementsReady('#projectModalForm') failed`, error, { context: 'eventHandler.init:modalForm' });\n    });\n\n    // LOGIN BUTTON / MODAL HANDLING\n    function bindAuthButtonDelegate() {\n      if (authButtonDelegationBound) return;\n      let parentNode = domAPI.getElementById('header') || domAPI.getDocument();\n      const currentModalManager = modalManager || DependencySystem.modules.get('modalManager');\n      if (!currentModalManager || typeof currentModalManager.show !== 'function') {\n        return;\n      }\n      delegate(\n        parentNode,\n        'click',\n        '#authButton',\n        (e) => {\n          domAPI.preventDefault(e);\n          try {\n            currentModalManager.show('login');\n          } catch (error) {\n            logger.error(`[${MODULE}][bindAuthButtonDelegate]`, error, {\n              context: 'auth'\n            });\n          }\n        },\n        { description: 'Delegated Login Modal Show', context: 'auth', module: MODULE }\n      );\n      authButtonDelegationBound = true;\n    }\n\n    // Listen for requestLogin event\n    trackListener(\n      domAPI.getDocument(),\n      'requestLogin',\n      () => {\n        const currentModalManager = modalManager || DependencySystem.modules.get('modalManager');\n        if (currentModalManager && typeof currentModalManager.show === 'function') {\n          currentModalManager.show('login');\n        }\n      },\n      {\n        description: 'Show Login Modal (Global Event)',\n        context: 'auth',\n        module: MODULE,\n        source: 'requestLogin'\n      }\n    );\n\n    bindAuthButtonDelegate();\n\n    // Rebind after modalsLoaded\n    trackListener(\n      domAPI.getDocument(),\n      'modalsLoaded',\n      (event) => {\n        bindAuthButtonDelegate();\n        setupLoginModalTabs();\n      },\n      {\n        once: true,\n        description: 'Rebind login and setup tabs after modalsLoaded',\n        context: 'auth',\n        module: MODULE,\n        source: 'modalsLoaded'\n      }\n    );\n\n    // --- FAST-PATH: modals may already be injected before this listener is registered\n    if (domAPI.getElementById('modalsContainer')?.childElementCount > 0) {\n      setupLoginModalTabs();\n    }\n\n    initialized = true;\n    return this;\n  }\n\n  function setupCommonElements() {\n    const darkModeToggle = domAPI.getElementById('darkModeToggle');\n    if (darkModeToggle && !domAPI.getDataAttribute(darkModeToggle, 'ehBound')) {\n      trackListener(\n        darkModeToggle,\n        'click',\n        () => {\n          domAPI.toggleClass(domAPI.getDocument().documentElement, 'dark');\n          const isDark = domAPI.hasClass(domAPI.getDocument().documentElement, 'dark');\n          storageBackend.setItem('darkMode', isDark ? 'true' : 'false');\n        },\n        { description: 'Dark Mode Toggle', module: MODULE, context: 'ui', source: 'setupCommonElements' }\n      );\n      domAPI.setDataAttribute(darkModeToggle, 'ehBound', '1'); // marca como enlazado\n      // Initial dark mode state\n      if (storageBackend.getItem('darkMode') === 'true') {\n        domAPI.addClass(domAPI.getDocument().documentElement, 'dark');\n      }\n    }\n  }\n\n  function setupProjectModalForm() {\n    const pm = _projectManager || DependencySystem.modules.get('projectManager');\n    if (!pm) {\n      return;\n    }\n    setupForm(\n      'projectModalForm',\n      async (formData) => {\n        const data = Object.fromEntries(formData.entries());\n        if (data.max_tokens) data.max_tokens = parseInt(data.max_tokens, 10);\n        if (!data.name) {\n          throw new Error('Project name is required.');\n        }\n        await pm.saveProject(data.projectId, data);\n        modalManager?.hide?.('project');\n        pm.loadProjects?.('all');\n      },\n      {\n        resetOnSuccess: true,\n        onError: (err) => {\n          logger.error(`[${MODULE}][setupProjectModalForm] Error in project form submit`, err, { context: 'projectModalForm' });\n        }\n      }\n    );\n  }\n\n  function setupNavigationElements() {\n    const navLinks = domAPI.querySelectorAll('.nav-link');\n    navLinks.forEach((link) => {\n      if (!domAPI.getDataAttribute(link, 'ehBound')) {\n        trackListener(\n          link,\n          'click',\n          (e) => {\n            domAPI.preventDefault(e);\n            const href = domAPI.getAttribute(link, 'href');\n            if (href) redirect(href);\n          },\n          {\n            description: `Navigation Link: ${domAPI.getAttribute(link, 'href') || 'unknown'}`,\n            module: MODULE,\n            context: 'navigation',\n            source: 'setupNavigationElements'\n          }\n        );\n        domAPI.setDataAttribute(link, 'ehBound', '1');\n      }\n    });\n  }\n\n  function setupContentElements() {\n    const collapsibleToggles = domAPI.querySelectorAll('[data-collapsible-toggle]');\n    collapsibleToggles.forEach((toggle) => {\n      const panelId = domAPI.getDataAttribute(toggle, 'collapsible-toggle');\n      const chevronId = domAPI.getDataAttribute(toggle, 'collapsible-chevron');\n      if (panelId) {\n        setupCollapsible(domAPI.getId(toggle) || `gen-toggle-${panelId}`, panelId, chevronId);\n      }\n    });\n  }\n\n  function untrackListener(el, evt, handler) {\n    const elementMap = trackedListeners.get(el);\n    if (!elementMap) return;\n    const typeMap = elementMap.get(evt);\n    if (!typeMap || !typeMap.has(handler)) return;\n\n    const details = typeMap.get(handler);\n    try {\n      if (details.options.once &&\n        !(el && el.removeEventListener)) {\n        /* already auto-removed by the browser – just delete maps */\n        typeMap.delete(handler);\n        if (typeMap.size === 0) elementMap.delete(evt);\n        if (elementMap.size === 0) trackedListeners.delete(el);\n        return;\n      }\n      // domAPI is a required dependency, so domAPI.removeEventListener should always be used.\n      domAPI.removeEventListener(el, evt, details.wrappedHandler, details.options);\n      typeMap.delete(handler);\n      if (typeMap.size === 0) elementMap.delete(evt);\n      if (elementMap.size === 0) trackedListeners.delete(el);\n    } catch (error) {\n      logger.error(`[${MODULE}][untrackListener] Failed to remove event listener`, error, {\n        element: el,\n        evt,\n        handler,\n        context: details.context\n      });\n      errorReporter.report?.(error, { module: MODULE, evt, fn: 'untrackListener' });\n    }\n  }\n\n  function cleanupListeners(options = {}) {\n    const { context: cleanupContext, target: targetFilter } = options;\n\n    const entriesToRemove = [];\n\n    trackedListeners.forEach((elementMap, element) => {\n      if (targetFilter && element !== targetFilter) return;\n      elementMap.forEach((typeMap, type) => {\n        typeMap.forEach((details, originalHandler) => {\n          if (!cleanupContext || details.context === cleanupContext) {\n            try {\n              // domAPI is a required dependency, so domAPI.removeEventListener should always be used.\n              domAPI.removeEventListener(element, type, details.wrappedHandler, details.options);\n              entriesToRemove.push({ element, type, originalHandler });\n            } catch (error) {\n              logger.error(`[${MODULE}][cleanupListeners] Error removing event listener`, error, {\n                element, type, details, context: cleanupContext\n              });\n              errorReporter.report?.(error, { module: MODULE, evt: type, fn: 'cleanupListeners', context: cleanupContext });\n            }\n          }\n        });\n      });\n    });\n\n    // Remove them from the map\n    entriesToRemove.forEach(({ element, type, originalHandler }) => {\n      const elementMap = trackedListeners.get(element);\n      if (elementMap) {\n        const typeMap = elementMap.get(type);\n        if (typeMap) {\n          typeMap.delete(originalHandler);\n          if (typeMap.size === 0) {\n            elementMap.delete(type);\n          }\n        }\n        if (elementMap.size === 0) {\n          trackedListeners.delete(element);\n        }\n      }\n    });\n  }\n\n  function delegate(container, eventType, selector, handler, options = {}) {\n    const delegatedHandler = function (event) {\n      const target = domAPI.closest(event.target, selector);\n      if (target) {\n        handler.call(target, event, target);\n      }\n    };\n    return trackListener(container, eventType, delegatedHandler, {\n      ...options,\n      description: options.description || `Delegate ${eventType} on ${selector}`,\n      context: options.context || MODULE,\n      module: options.module || MODULE,\n      source: options.source || 'delegate'\n    });\n  }\n\n  function setupLoginModalTabs() {\n    const loginModal = domAPI.getElementById('loginModal');\n    if (!loginModal) {\n      return;\n    }\n\n    // Delegated listener for Login Tab\n    delegate(\n      loginModal,\n      'click',\n      '#modalLoginTab',\n      (event, tabElement) => {\n        const registerTabElement = domAPI.querySelector(loginModal, '#modalRegisterTab');\n        const loginPanel = domAPI.querySelector(loginModal, '#loginPanel');\n        const registerPanel = domAPI.querySelector(loginModal, '#registerPanel');\n\n        if (!registerTabElement || !loginPanel || !registerPanel) {\n          return;\n        }\n\n        domAPI.addClass(tabElement, 'tab-active');\n        domAPI.setAttribute(tabElement, 'aria-selected', 'true');\n        domAPI.removeClass(registerTabElement, 'tab-active');\n        domAPI.setAttribute(registerTabElement, 'aria-selected', 'false');\n        domAPI.removeClass(loginPanel, 'hidden');\n        domAPI.addClass(registerPanel, 'hidden');\n      },\n      { description: 'Switch to Login Tab (Delegated)', module: MODULE, context: 'authTabs' }\n    );\n\n    // Delegated listener for Register Tab\n    delegate(\n      loginModal,\n      'click',\n      '#modalRegisterTab',\n      (event, tabElement) => {\n        const loginTabElement = domAPI.querySelector(loginModal, '#modalLoginTab');\n        const loginPanel = domAPI.querySelector(loginModal, '#loginPanel');\n        const registerPanel = domAPI.querySelector(loginModal, '#registerPanel');\n\n        if (!loginTabElement || !loginPanel || !registerPanel) {\n          return;\n        }\n\n        // Defensive: Only act if element is truthy and has classList/setAttribute\n        if (tabElement && tabElement.classList) {\n          domAPI.addClass(tabElement, 'tab-active');\n          domAPI.setAttribute(tabElement, 'aria-selected', 'true');\n        }\n        if (loginTabElement && loginTabElement.classList) {\n          domAPI.removeClass(loginTabElement, 'tab-active');\n          domAPI.setAttribute(loginTabElement, 'aria-selected', 'false');\n        }\n        if (registerPanel && registerPanel.classList) {\n          domAPI.removeClass(registerPanel, 'hidden');\n        }\n        if (loginPanel && loginPanel.classList) {\n          domAPI.addClass(loginPanel, 'hidden');\n        }\n      },\n      { description: 'Switch to Register Tab (Delegated)', module: MODULE, context: 'authTabs' }\n    );\n  }\n\n  /**\n   * Creates a CustomEvent in a DI-compliant way.\n   * @param {string} type - The name of the event.\n   * @param {Object} [options={}] - Options for the CustomEvent (e.g., detail, bubbles, cancelable).\n   * @returns {CustomEvent|null} The created CustomEvent, or null if windowObject or CustomEvent API is not available.\n   */\n  function createCustomEvent(type, options = {}) {\n    const windowObject = browserService?.getWindow?.(); // browserService is in the factory's scope\n    if (!windowObject || typeof windowObject.CustomEvent !== 'function') {\n      // Depending on strictness, could throw an error or log via an injected logger if available\n      // For now, returning null or a simple object if CustomEvent is not polyfilled/available.\n      logger.warn(`[${MODULE}][createCustomEvent] Cannot create CustomEvent: windowObject or window.CustomEvent is not available.`, { context: MODULE });\n      return { type, detail: options.detail }; // Fallback to a plain object\n    }\n    return new windowObject.CustomEvent(type, options);\n  }\n\n  function cleanup() {\n    // Cleans up all event listeners and module state\n    cleanupListeners();\n    // You could add more explicit cleanup logic here if stateful singletons or intervals are added\n  }\n\n  return {\n    trackListener,\n    cleanupListeners,\n    delegate,\n    debounce: globalDebounce,\n    toggleVisible,\n    setupCollapsible,\n    setupModal,\n    setupForm,\n    init,\n    PRIORITY,\n    untrackListener,\n    createCustomEvent,\n    setProjectManager: (pm) => {\n      _projectManager = pm;\n    },\n    setDomReadinessService, // <-- add to API\n    DependencySystem,\n    cleanup, // Expose cleanup API per guardrail\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 28958,
          "_transferSize": 30141,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.560Z",
        "time": 437.8010000073118,
        "timings": {
          "blocked": 352.7720000009714,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.049999999999954525,
          "wait": 83.94900000689461,
          "receive": 1.029999999445863,
          "_blocked_queueing": 3.8930000009713694,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106417",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 41
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/auth.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1453,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "58051"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"2afb13232800f4d71ca7aa60d4c0aaf2\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 11:13:47 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 58051,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * Creates and returns a centralized authentication module with dependency injection.\n *\n * This factory function provides a complete authentication system, including login, logout, registration, session verification, CSRF token management, authenticated API requests, event broadcasting, and UI form integration. All external dependencies must be supplied via the `deps` object, ensuring strict modularity and testability.\n *\n * The returned module exposes methods for authentication actions, state queries, event handling, and diagnostics, and manages all authentication state and event wiring internally.\n *\n * @param {object} deps - Dependency injection object containing required services and configuration.\n * @returns {object} Public API for authentication operations, including methods for login, logout, registration, state verification, CSRF handling, event bus, and diagnostics.\n *\n * @throws {Error} If required dependencies or endpoint configurations are missing or invalid.\n *\n * @remark\n * All authentication logic, state, and event handling are encapsulated in this module. No authentication primitives exist outside this context. All previous modular primitives are removed.\n */\n\nexport function createAuthModule(deps) {\n  // === FACTORY GUARDRAIL: STRICT DI VALIDATION (No fallback, throw immediately, BEFORE destructuring) ===\n  if (!deps || typeof deps !== \"object\") {\n    throw new Error(\"[AuthModule] 'deps' DI object is required as argument to createAuthModule\");\n  }\n  if (!deps.apiClient) throw new Error(\"[AuthModule] DI param 'apiClient' is required.\");\n  if (!deps.logger) throw new Error(\"[AuthModule] DI param 'logger' is required.\");\n  if (!deps.domReadinessService) throw new Error(\"[AuthModule] DI param 'domReadinessService' is required.\");\n  if (!deps.eventHandlers) throw new Error(\"[AuthModule] DI param 'eventHandlers' is required.\");\n  if (!deps.domAPI) throw new Error(\"[AuthModule] DI param 'domAPI' is required.\");\n  if (!deps.sanitizer) throw new Error(\"[AuthModule] DI param 'sanitizer' is required.\");\n  if (!deps.apiEndpoints) throw new Error(\"[AuthModule] DI param 'apiEndpoints' is required.\");\n\n  // Validate that apiEndpoints contains all required auth endpoint keys\n  const requiredEndpoints = ['AUTH_CSRF', 'AUTH_LOGIN', 'AUTH_LOGOUT', 'AUTH_REGISTER', 'AUTH_VERIFY', 'AUTH_REFRESH'];\n  const missingEndpoints = requiredEndpoints.filter(key => !deps.apiEndpoints[key]);\n  if (missingEndpoints.length > 0) {\n    throw new Error(`[AuthModule] Missing required auth endpoints in apiEndpoints: ${missingEndpoints.join(', ')}. Available endpoints: ${Object.keys(deps.apiEndpoints).join(', ')}`);\n  }\n\n  // DependencySystem and modalManager may be undefined\n\n  const {\n    apiClient,\n    eventHandlers,\n    domAPI,\n    sanitizer,\n    modalManager,\n    apiEndpoints,\n    DependencySystem,\n    logger,\n    domReadinessService\n  } = deps;\n\n  // === safeHandler: For all event handlers (logging errors) ===\n  function safeHandler(handler, description) {\n    return (...args) => {\n      try {\n        return handler(...args);\n      } catch (err) {\n        logger.error(`[AuthModule][${description}] Handler exception`, err, { context: description });\n        throw err;\n      }\n    };\n  }\n\n  // --- bearer token storage ---------------------------------\n  let accessToken = null;           // stores latest JWT / bearer\n  let tokenType = 'Bearer';       // e.g. \"Bearer\"\n  let refreshToken = null;           // optional refresh token\n\n  // === 2) INTERNAL UTILITIES & HELPERS ===\n\n  function extendProps(target, props) {\n    if (target && props) Object.assign(target, props);\n  }\n  function applyStyles(target, styles) {\n    if (target && styles) Object.assign(target, styles);\n  }\n\n  // === 3) DOM/COOKIE & STATE MANAGEMENT ===\n\n  const authState = {\n    isAuthenticated: false,\n    username: null,\n    userObject: null,\n    isReady: false\n  };\n\n  const AuthBus = new EventTarget();\n\n  function readCookie(name) {\n    const doc = domAPI.getDocument?.();\n    if (!doc || typeof doc.cookie !== 'string') return null;\n    const cookieStr = doc.cookie;\n    if (!cookieStr) return null;\n    const m = cookieStr.match(\n      new RegExp('(?:^|;\\\\s*)' + name + '\\\\s*=\\\\s*([^;]+)')\n    );\n    return m ? decodeURIComponent(m[1]) : null;\n  }\n\n  function validateUsername(username) {\n    return typeof username === 'string' && /^[a-zA-Z0-9_.-]{3,32}$/.test(username);\n  }\n  function validatePassword(password) {\n    if (typeof password !== 'string' || password.length < 12) {\n      return { valid: false, message: 'Password must be at least 12 characters' };\n    }\n    const hasUpper = /[A-Z]/.test(password);\n    const hasLower = /[a-z]/.test(password);\n    const hasNumber = /\\d/.test(password);\n    const hasSpecial = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(password);\n    if (!hasUpper) return { valid: false, message: 'Password must contain an uppercase letter' };\n    if (!hasLower) return { valid: false, message: 'Password must contain a lowercase letter' };\n    if (!hasNumber) return { valid: false, message: 'Password must contain a number' };\n    if (!hasSpecial) return { valid: false, message: 'Password must contain a special character' };\n    return { valid: true };\n  }\n\n  // === 4) UI/FORM HELPERS ===\n  function setButtonLoading(btn, isLoading, loadingText = 'Saving...') {\n    if (!btn) return;\n    if (isLoading) {\n      btn.disabled = true;\n      btn.dataset.originalText = btn.textContent;\n      const htmlContent = `<span class=\"loading loading-spinner loading-xs\"></span> ${loadingText}`;\n      btn.innerHTML = sanitizer.sanitize(htmlContent);\n    } else {\n      btn.disabled = false;\n      if (btn.dataset.originalText) {\n        btn.textContent = btn.dataset.originalText;\n        delete btn.dataset.originalText;\n      }\n    }\n  }\n  function showError(el, msg) {\n    if (el) {\n      domAPI.setTextContent(el, msg);\n      domAPI.removeClass(el, 'hidden');\n    }\n  }\n  function hideError(el) {\n    if (el) {\n      domAPI.setTextContent(el, '');\n      domAPI.addClass(el, 'hidden');\n    }\n  }\n\n  // === 5) CSRF & TOKEN LOGIC ===\n  let csrfToken = '';\n  let csrfTokenPromise = null;\n  let _lastLoginTimestamp = 0;\n  function getCSRFToken() {\n    const current = readCookie('csrf_token');\n    if (current && current !== csrfToken) csrfToken = current;\n    if (current) {\n      logger.log('[DIAGNOSTIC][auth.js][getCSRFToken] using cookie value [masked]', { context: 'getCSRFToken' });\n    } else {\n      logger.log('[DIAGNOSTIC][auth.js][getCSRFToken] no CSRF cookie found', { context: 'getCSRFToken' });\n    }\n    return csrfToken;\n  }\n  async function fetchCSRFToken() {\n    if (!apiEndpoints.AUTH_CSRF) throw new Error('AUTH_CSRF endpoint missing in apiEndpoints');\n    const csrfUrl = apiEndpoints.AUTH_CSRF;\n    const url = csrfUrl.includes('?')\n      ? `${csrfUrl}&ts=${Date.now()}`\n      : `${csrfUrl}?ts=${Date.now()}`;\n    logger.log('[DIAGNOSTIC][auth.js][fetchCSRFToken] Fetching', url, { context: 'fetchCSRFToken' });\n    const data = await apiClient(url, {\n      method: 'GET',\n      headers: { Accept: 'application/json', 'Cache-Control': 'no-cache' },\n      credentials: 'include',\n      cache: 'no-store'\n    });\n    if (!data || !data.token) {\n      logger.error('[DIAGNOSTIC][auth.js][fetchCSRFToken] Missing or bad response:', data, { context: 'fetchCSRFToken' });\n      throw new Error('CSRF token missing');\n    }\n    logger.log('[DIAGNOSTIC][auth.js][fetchCSRFToken] Received CSRF token (masked)', { context: 'fetchCSRFToken' });\n    return data.token;\n  }\n  async function getCSRFTokenAsync(forceFetch = false) {\n    const cookieVal = readCookie('csrf_token');\n    if (!forceFetch && cookieVal) {\n      csrfToken = cookieVal;\n      return csrfToken;\n    }\n    if (csrfToken && !forceFetch) return csrfToken;\n    if (csrfTokenPromise) return csrfTokenPromise;\n    csrfTokenPromise = (async () => {\n      try {\n        const token = await fetchCSRFToken();\n        if (token) csrfToken = token;\n        return token;\n      } finally {\n        csrfTokenPromise = null;\n      }\n    })();\n    return csrfTokenPromise;\n  }\n\n  // === 6) AUTH REQUEST WRAPPER ===\n  function extendErrorWithStatus(error, message) {\n    if (!error.status) {\n      extendProps(error, {\n        status: 0,\n        data: { detail: message || 'Network/CORS issue' }\n      });\n    }\n  }\n  async function authRequest(endpoint, method, body = null) {\n    const headers = { Accept: 'application/json' };\n    const options = { method: method.toUpperCase(), headers, credentials: 'include' };\n    const isStateChanging =\n      !['GET', 'HEAD', 'OPTIONS'].includes(options.method) &&\n      endpoint !== apiEndpoints.AUTH_CSRF;\n    if (isStateChanging) {\n      const token = getCSRFToken() || (await getCSRFTokenAsync());\n      if (token) {\n        options.headers['X-CSRF-Token'] = token;\n        logger.log('[DIAGNOSTIC][auth.js][authRequest] Adding X-CSRF-Token header [masked] for', endpoint, { context: 'authRequest' });\n      } else {\n        logger.warn('[DIAGNOSTIC][auth.js][authRequest] No CSRF token found for state-changing request', endpoint, { context: 'authRequest' });\n      }\n    }\n    // Bearer-auth header when we already hold an access token\n    if (accessToken && !options.headers['Authorization']) {\n      options.headers['Authorization'] = `${tokenType} ${accessToken}`;\n    }\n    if (body) {\n      options.body = JSON.stringify(body);\n      options.headers['Content-Type'] = 'application/json';\n    }\n    try {\n      logger.log('[DIAGNOSTIC][auth.js][authRequest][REQUEST]', endpoint, options, { context: 'authRequest' });\n      const data = await apiClient(endpoint, options);\n      logger.log('[DIAGNOSTIC][auth.js][authRequest][RESPONSE]', endpoint, data, { context: 'authRequest' });\n      return data;\n    } catch (error) {\n      logger.error('[DIAGNOSTIC][auth.js][authRequest][ERROR]', endpoint, error, { context: 'authRequest' });\n      extendErrorWithStatus(error, error.message);\n      throw error;\n    }\n  }\n\n  // === 7) TOKEN REFRESH & CLEAR ===\n  let tokenRefreshInProgress = false;\n  let tokenRefreshPromise = null;\n  async function refreshTokens() {\n    if (tokenRefreshInProgress) return tokenRefreshPromise;\n    tokenRefreshInProgress = true;\n    tokenRefreshPromise = (async () => {\n      try {\n        await getCSRFTokenAsync();\n        const response = await authRequest(apiEndpoints.AUTH_REFRESH, 'POST');\n        // Store bearer tokens if present\n        if (response && response.access_token) {\n          accessToken = response.access_token;\n          tokenType = response.token_type || 'Bearer';\n          refreshToken = response.refresh_token || refreshToken;\n        }\n        return { success: true, response };\n      } catch (error) {\n        if (logger && logger.error) logger.error('[refreshTokens] error', error, { context: 'refreshTokens' });\n        if (error.status === 401) {\n          await clearTokenState({ source: 'refresh_401_error' });\n        }\n        throw error;\n      } finally {\n        tokenRefreshInProgress = false;\n        tokenRefreshPromise = null;\n      }\n    })();\n    return tokenRefreshPromise;\n  }\n  async function clearTokenState(options = { source: 'unknown' }) {\n    accessToken = null;\n    refreshToken = null;\n    broadcastAuth(false, null, `clearTokenState:${options.source}`);\n  }\n\n  /**\n   * Broadcasts authentication state changes to the application and updates relevant UI elements.\n   *\n   * If the authentication state or user object has changed, updates the internal state, synchronizes with the central app module if available, updates the user menu in the UI, and dispatches an `authStateChanged` event on both the `AuthBus` and the document.\n   *\n   * @param {boolean} authenticated - Whether the user is authenticated.\n   * @param {object|null} [userObject=null] - The current user object, or `null` if not authenticated.\n   * @param {string} [source='unknown'] - The source of the state change for diagnostic purposes.\n   *\n   * @remark\n   * If no change in authentication state or user object is detected, no events are dispatched and the UI is not updated.\n   */\n  function broadcastAuth(authenticated, userObject = null, source = 'unknown') {\n    // KILOCODE: Added detailed logging for broadcastAuth entry\n    logger.debug('[AuthModule][broadcastAuth] ENTRY:', { authenticated, userObjectIsNotNull: !!userObject, userObjectName: userObject?.username, source, currentAuthState: JSON.parse(JSON.stringify(authState)) });\n\n    logger.log('[DIAGNOSTIC][auth.js][broadcastAuth] called.', {\n      authenticated, userObject, source,\n      previousAuth: authState.isAuthenticated,\n      previousUserObject: authState.userObject\n    }, { context: 'broadcastAuth' });\n    const previousAuth = authState.isAuthenticated;\n    const previousUserObject = authState.userObject;\n    const changed =\n      authenticated !== previousAuth ||\n      JSON.stringify(userObject) !== JSON.stringify(previousUserObject);\n    authState.isAuthenticated = authenticated;\n    authState.userObject = userObject;\n    authState.username = userObject?.username || null;\n    if (changed) {\n      const appModuleRef = DependencySystem?.modules?.get('appModule');\n      if (appModuleRef && typeof appModuleRef.setAuthState === 'function') {\n          logger.info('[AuthModule][broadcastAuth] Updating appModule state.', {\n            authenticated,\n            userId: userObject?.id,\n            source,\n            context: 'broadcastAuth:appModuleUpdate'\n          });\n        appModuleRef.setAuthState({ isAuthenticated: authenticated, currentUser: userObject });\n      } else {\n          logger.warn('[AuthModule][broadcastAuth] appModuleRef.setAuthState not available. Cannot update central app state.', { source, context: 'broadcastAuth' });\n      }\n\n        // Event dispatching should happen AFTER appModule state is updated.\n        logger.log('[DIAGNOSTIC][auth.js][broadcastAuth] Broadcasting authStateChanged event', { source, authenticated, userId: userObject?.id, context: 'broadcastAuth:dispatchEvents' });\n\n      // Custom: Update username in header's userMenu for a single-line greeting. (No double \"Hello,\")\n      try {\n        const doc = domAPI.getDocument?.();\n        const userMenu = doc && doc.getElementById && doc.getElementById('userMenu');\n        if (userMenu) {\n          const usernameDisplay = userMenu.querySelector('#usernameDisplay');\n          const initialsSpan = userMenu.querySelector('#userInitials');\n          if (usernameDisplay && userObject?.username) {\n            // Only set username, do not prepend 'Hello,' (it's in markup)\n            usernameDisplay.textContent = userObject.username;\n          }\n          if (initialsSpan && userObject?.username) {\n            // Set user initials (e.g., \"AB\" for Alice Bob)\n            const initials = userObject.username.split(' ').map(n => n[0]).join('').substring(0, 2).toUpperCase();\n            initialsSpan.textContent = initials;\n          }\n        }\n      } catch (DOMerr) {\n        logger.error('[AuthModule][broadcastAuth] Could not update userMenu', DOMerr, { context: 'broadcastAuth' });\n      }\n      const eventDetail = {\n        authenticated,\n        user: userObject,\n        timestamp: Date.now(),\n        source\n      };\n      try {\n        logger.log('[DIAGNOSTIC][auth.js][broadcastAuth] Dispatching authStateChanged on AuthBus', eventDetail, { context: 'broadcastAuth' });\n        if (!eventHandlers.createCustomEvent) {\n          throw new Error('[AuthModule] eventHandlers.createCustomEvent is required to DI-create events for guardrail compliance.');\n        }\n        AuthBus.dispatchEvent(eventHandlers.createCustomEvent('authStateChanged', { detail: eventDetail }));\n      } catch (busErr) {\n        logger.error('[DIAGNOSTIC][auth.js][broadcastAuth] AuthBus dispatch failed', busErr, { context: 'broadcastAuth' });\n      }\n      try {\n        const doc = domAPI.getDocument();\n        if (doc) {\n          logger.log('[DIAGNOSTIC][auth.js][broadcastAuth] Dispatching authStateChanged on doc', { context: 'broadcastAuth' });\n          if (!eventHandlers.createCustomEvent) {\n            throw new Error('[AuthModule] eventHandlers.createCustomEvent is required to DI-create events for guardrail compliance.');\n          }\n          domAPI.dispatchEvent(\n            doc,\n            eventHandlers.createCustomEvent('authStateChanged', {\n              detail: {\n                ...eventDetail,\n                source: source + '_via_auth_module'\n              }\n            })\n          );\n        }\n      } catch (err) {\n        logger.error('[DIAGNOSTIC][auth.js][broadcastAuth] doc dispatch failed', err, { context: 'broadcastAuth' });\n      }\n    } else {\n      logger.log('[DIAGNOSTIC][auth.js][broadcastAuth] No auth/user change; not broadcasting', { context: 'broadcastAuth' });\n    }\n  }\n\n  // === 9) VERIFICATION, AUTO-REFRESH ===\n  let authCheckInProgress = false;\n  const AUTH_CONFIG = { VERIFICATION_INTERVAL: 300000 };\n  let verifyInterval = null;\n  /**\n   * Verifies the current authentication state by querying the backend and updates the application state accordingly.\n   *\n   * This function checks for authentication cookies and calls the backend verification endpoint to determine if the user is authenticated. It handles various response formats, including user objects and boolean flags, and updates the authentication state, user object, and broadcasts changes. On errors, it attempts token refresh for 401 responses, clears tokens for 500 or unhandled errors, and maintains state for network errors if cookies are present.\n   *\n   * @param {boolean} [forceVerify=false] - If true, forces verification even if a check is already in progress.\n   * @returns {Promise<boolean>} Resolves to true if the user is authenticated, false otherwise.\n   *\n   * @throws {Error} If the backend returns a non-JSON response when JSON is expected.\n   */\n  async function verifyAuthState(forceVerify = false) {\n    // Remove the early return that was causing issues with page refresh\n    // Always check auth state on page load/refresh regardless of recent login timestamp\n    if (authCheckInProgress && !forceVerify) {\n      logger.debug('[AuthModule][verifyAuthState] Verification already in progress and not forced. Returning current state.', { currentAuth: authState.isAuthenticated, context: 'verifyAuthState:inProgress' });\n      return authState.isAuthenticated;\n    }\n    authCheckInProgress = true;\n    logger.debug('[AuthModule][verifyAuthState] Starting verification.', { forceVerify, context: 'verifyAuthState:start' });\n\n    try {\n      const hasExistingCookies = publicAuth.hasAuthCookies();\n      if (!hasExistingCookies && !forceVerify) {\n        logger.info('[AuthModule][verifyAuthState] No auth cookies found and not forceVerify. Clearing state and broadcasting false.', { context: 'verifyAuthState:noCookies' });\n        await clearTokenState({ source: 'verify_no_auth_cookies_not_forced' });\n        broadcastAuth(false, null, 'verify_no_auth_cookies_not_forced');\n        return false;\n      }\n\n      logger.debug('[AuthModule][verifyAuthState] Proceeding to call AUTH_VERIFY endpoint.', { hasExistingCookies, forceVerify, context: 'verifyAuthState:apiCall' });\n      let response = await authRequest(apiEndpoints.AUTH_VERIFY, 'GET');\n\n      // Attempt to parse if response is a string (though apiClient should handle JSON)\n      if (typeof response === 'string') {\n        try {\n          response = JSON.parse(response);\n        } catch (parseErr) {\n          logger.warn('[AuthModule][verifyAuthState] API response was a string, failed to parse as JSON.', { responseString: response, error: parseErr.message, context: 'verifyAuthState:jsonParseError' });\n          // Depending on backend, an unparsable string might mean an error page or non-JSON success.\n          // For now, assume it's a failure if it's not parsable and was expected to be JSON.\n          // If backend sometimes sends non-JSON success, this needs adjustment.\n          throw new Error('Non-JSON response from AUTH_VERIFY');\n        }\n      }\n      logger.debug('[AuthModule][verifyAuthState] AUTH_VERIFY response received.', { response, context: 'verifyAuthState:apiResponse' });\n\n      // Enhanced response validation for user object\n      let userObject = null;\n      if (response && typeof response === 'object') {\n        // Common patterns for user object nesting or direct properties\n        if (response.user && typeof response.user === 'object' && response.user.id) {\n          userObject = response.user;\n          logger.debug('[AuthModule][verifyAuthState] User object found in response.user.', { userId: userObject.id, context: 'verifyAuthState:userObjSource' });\n        } else if (response.id && response.username) { // User object might be the response itself\n          userObject = response;\n          logger.debug('[AuthModule][verifyAuthState] User object is the response itself.', { userId: userObject.id, context: 'verifyAuthState:userObjSource' });\n        }\n      }\n\n      let finalUserObject = null;\n      if (userObject) {\n        const userIdFromObject = userObject.id || userObject.user_id || userObject.userId || userObject._id;\n        if (userIdFromObject) {\n          finalUserObject = { ...userObject, id: userIdFromObject }; // Ensure 'id' field is standardized\n          logger.debug('[AuthModule][verifyAuthState] Standardized user object.', { finalUserObject, context: 'verifyAuthState:userObjStandardized' });\n        } else {\n          logger.warn('[AuthModule][verifyAuthState] User object found but lacks a usable ID field.', { userObject, context: 'verifyAuthState:userObjNoId' });\n        }\n      }\n\n      // Primary condition: Valid user object with an ID means authenticated\n      if (finalUserObject?.id) {\n        logger.info('[AuthModule][verifyAuthState] Verification successful: Valid user object with ID found.', { username: finalUserObject.username, userId: finalUserObject.id, context: 'verifyAuthState:successWithUserObject' });\n        // KILOCODE: Added detailed logging before broadcast\n        logger.debug('[AuthModule][verifyAuthState] PRE-BROADCAST (user object):', { authenticated: true, userObject: JSON.parse(JSON.stringify(finalUserObject)), source: 'verify_success_with_user_id' });\n        broadcastAuth(true, finalUserObject, 'verify_success_with_user_id');\n        return true;\n      }\n\n      // Secondary condition: Check for boolean authentication flags if no complete user object\n      const truthy = (v) => v === true || v === 'true' || v === 1 || v === '1';\n      const isAuthenticatedByFlags =\n        truthy(response?.authenticated) || truthy(response?.is_authenticated) ||\n        truthy(response?.auth) || truthy(response?.isAuth); // Common flag names\n\n      if (isAuthenticatedByFlags) {\n        // If authenticated by flag but no user object, create a minimal one if username is available\n        const usernameFromResponse = response?.username || response?.user?.username;\n        const tempUserObj = usernameFromResponse ? { username: usernameFromResponse, id: `flag-auth-${Date.now()}` } : null;\n        logger.info('[AuthModule][verifyAuthState] Verification successful: Authenticated by boolean flag.', { username: tempUserObj?.username, context: 'verifyAuthState:successWithFlag' });\n        // KILOCODE: Added detailed logging before broadcast\n        logger.debug('[AuthModule][verifyAuthState] PRE-BROADCAST (flag):', { authenticated: true, userObject: JSON.parse(JSON.stringify(tempUserObj)), source: 'verify_success_via_flag' });\n        broadcastAuth(true, tempUserObj, 'verify_success_via_flag');\n        return true;\n      }\n\n      // If here, API response did not indicate authentication (no user object, no true flags)\n      logger.info('[AuthModule][verifyAuthState] Verification negative: API response does not indicate active authentication.', { response: JSON.parse(JSON.stringify(response)), context: 'verifyAuthState:negativeApiReponse' });\n      if (hasExistingCookies) {\n        logger.warn('[AuthModule][verifyAuthState] Stale Cookies: Auth cookies were present, but backend verification failed. Clearing token state.', { context: 'verifyAuthState:staleCookies' });\n        await clearTokenState({ source: 'verify_stale_cookies_after_api_check' });\n      } else {\n        await clearTokenState({ source: 'verify_negative_no_cookies_after_api_check' });\n      }\n      // KILOCODE: Added detailed logging before broadcast\n      logger.debug('[AuthModule][verifyAuthState] PRE-BROADCAST (negative API):', { authenticated: false, userObject: null, source: 'verify_negative_after_api_check' });\n      broadcastAuth(false, null, 'verify_negative_after_api_check');\n      return false;\n\n    } catch (error) {\n      logger.error('[AuthModule][verifyAuthState] Error during verification API call or processing.', { status: error.status, message: error.message, data: error.data ? JSON.parse(JSON.stringify(error.data)) : null, stack: error.stack, context: 'verifyAuthState:catchAllError' });\n\n      if (error.status === 500) {\n        logger.warn('[AuthModule][verifyAuthState] Server error (500). Clearing token state.', { context: 'verifyAuthState:error500' });\n        await clearTokenState({ source: 'verify_500_error' });\n        // KILOCODE: Added detailed logging before broadcast\n        logger.debug('[AuthModule][verifyAuthState] PRE-BROADCAST (500 error):', { authenticated: false, userObject: null, source: 'verify_500_error' });\n        broadcastAuth(false, null, 'verify_500_error');\n        return false;\n      }\n\n      if (error.status === 401) {\n        logger.info('[AuthModule][verifyAuthState] Unauthorized (401). Attempting token refresh.', { context: 'verifyAuthState:error401' });\n        try {\n          await refreshTokens();\n          logger.info('[AuthModule][verifyAuthState] Token refresh successful after 401. Re-verifying.', { context: 'verifyAuthState:postRefreshAttempt' });\n          return await verifyAuthState(true); // Force re-verification after refresh\n        } catch (refreshErr) {\n          logger.warn('[AuthModule][verifyAuthState] Token refresh failed after 401.', { error: refreshErr.message, context: 'verifyAuthState:refreshFailed' });\n          await clearTokenState({ source: 'refresh_failed_after_401_in_verify' });\n          // KILOCODE: Added detailed logging before broadcast\n          logger.debug('[AuthModule][verifyAuthState] PRE-BROADCAST (refresh failed):', { authenticated: false, userObject: null, source: 'refresh_failed_after_401_in_verify' });\n          broadcastAuth(false, null, 'refresh_failed_after_401_in_verify');\n          return false;\n        }\n      }\n\n      // For network errors (status 0 or no status) or other non-401/500 errors\n      const hasCookiesOnNetworkError = publicAuth.hasAuthCookies(); // Re-check, might have changed\n      if (hasCookiesOnNetworkError && (error.status === 0 || !error.status)) {\n        logger.warn('[AuthModule][verifyAuthState] Network error occurred, but auth cookies are present. Maintaining current auth state.', { errorMessage: error.message, currentAuth: authState.isAuthenticated, context: 'verifyAuthState:networkErrorWithCookies' });\n        // Do not change authState.isAuthenticated here; return existing state.\n        // The user might be temporarily offline but still \"logged in\".\n        return authState.isAuthenticated;\n      }\n\n      // For other errors where cookies might not be present or it's not a network error\n      logger.warn(`[AuthModule][verifyAuthState] Unhandled error (status: ${error.status || 'unknown'}). Clearing token state.`, { context: 'verifyAuthState:unhandledErrorClear' });\n      await clearTokenState({ source: `verify_unhandled_error_status_${error.status || 'unknown'}` });\n      // KILOCODE: Added detailed logging before broadcast\n      logger.debug('[AuthModule][verifyAuthState] PRE-BROADCAST (unhandled error):', { authenticated: false, userObject: null, source: `verify_unhandled_error_status_${error.status || 'unknown'}` });\n      broadcastAuth(false, null, `verify_unhandled_error_status_${error.status || 'unknown'}`);\n      return false;\n    } finally {\n      authCheckInProgress = false;\n    }\n  }\n\n  /**\n   * Attempts to log in a user with the provided credentials.\n   *\n   * Fetches a CSRF token, sends a login request to the backend, stores authentication tokens on success, and broadcasts the authenticated state. If the backend response does not include a user object, a provisional user is created for state broadcasting. Logs detailed diagnostics and clears token state on failure.\n   *\n   * @param {string} username - The username to authenticate.\n   * @param {string} password - The password for the user.\n   * @returns {Promise<Object>} The full API response from the login endpoint.\n   *\n   * @throws {Error} If the login attempt fails due to invalid credentials, network issues, or backend errors.\n   */\n\n  async function loginUser(username, password) {\n    logger.info('[AuthModule][loginUser] Attempting login.', { username: username, context: 'loginUser:start' });\n    try {\n      logger.log('[DIAGNOSTIC][auth.js][loginUser] Attempting login', username, { context: 'loginUser' });\n      await getCSRFTokenAsync();\n      const response = await authRequest(apiEndpoints.AUTH_LOGIN, 'POST', {\n        username: username.trim(),\n        password\n      });\n      logger.info('[AuthModule][loginUser] Login API response received.', { response, context: 'loginUser:apiResponse' });\n\n      if (response && response.access_token) {\n        accessToken = response.access_token;\n        tokenType = response.token_type || 'Bearer';\n        refreshToken = response.refresh_token || null;\n        logger.info('[AuthModule][loginUser] Access and refresh tokens stored from login response.', { context: 'loginUser:tokensStored' });\n      }\n\n      // Log cookie state after login attempt for diagnostics\n      try {\n        const doc = domAPI.getDocument?.();\n        if (doc && typeof doc.cookie === 'string') {\n          logger.debug('[AuthModule][loginUser] Cookies after login API call (contents masked for security).', { hasCookies: !!doc.cookie, context: 'loginUser:cookieCheck' });\n           if (!doc.cookie) {\n            logger.warn('[AuthModule][loginUser] No cookies seem to be set after login API call. Backend might not be setting session/CSRF cookies correctly.', { context: 'loginUser:noCookiesWarning' });\n          }\n        }\n      } catch (cookieErr) {\n        logger.warn('[AuthModule][loginUser] Error reading cookies after login.', { error: cookieErr.message, context: 'loginUser:cookieReadError' });\n      }\n\n      // Determine user object from response\n      let userObject = null;\n      if (response && typeof response === 'object') {\n        if (response.user && typeof response.user === 'object' && response.user.id) {\n            userObject = response.user;\n        } else if (response.id && response.username) {\n            userObject = response;\n        } else if (response.username) { // If only username is directly in response\n            userObject = { username: response.username, id: `login-temp-${Date.now()}`};\n        }\n      }\n\n      if (userObject?.id && userObject?.username) {\n        logger.info('[AuthModule][loginUser] Login successful. User object identified from response.', { userId: userObject.id, username: userObject.username, context: 'loginUser:successWithUserObject' });\n        broadcastAuth(true, userObject, 'login_success_with_user_object');\n      } else {\n        // If API indicates success (e.g. 200 OK) but no clear user object, broadcast with provisional user.\n        // This might happen if backend sends just a success message or JWT without user details.\n        logger.warn('[AuthModule][loginUser] Login API success, but user object not clearly identified in response. Broadcasting provisional auth.', { response, context: 'loginUser:successProvisional' });\n        const provisionalUser = { username: username.trim(), id: `provisional-${Date.now()}` };\n        broadcastAuth(true, provisionalUser, 'login_success_provisional_user_data');\n      }\n\n      _lastLoginTimestamp = Date.now();\n      return response; // Return full API response\n    } catch (error) {\n      logger.error('[AuthModule][loginUser] Login attempt failed.', { username: username, error: error.message, status: error.status, data: error.data, context: 'loginUser:error' });\n      await clearTokenState({ source: 'login_api_error' }); // Clear any partial token state on login failure\n      throw error; // Re-throw for form handler\n    }\n  }\n\n  /**\n   * Logs out the current user by clearing authentication tokens and broadcasting a logged-out state.\n   *\n   * Attempts to call the backend logout API endpoint, but ensures the user is logged out locally regardless of API errors.\n   */\n  async function logout() {\n    logger.info('[AuthModule][logout] Initiating logout process.', { context: 'logout:start' });\n    accessToken = null;\n    refreshToken = null;\n    // Broadcast logged-out state immediately\n    await clearTokenState({ source: 'logout_manual_clear' });\n    // clearTokenState calls broadcastAuth(false, null, ...)\n\n    try {\n      await getCSRFTokenAsync(); // Ensure CSRF is available if needed by logout endpoint\n      logger.debug('[AuthModule][logout] Attempting to call logout API endpoint.', { context: 'logout:apiCall' });\n      await authRequest(apiEndpoints.AUTH_LOGOUT, 'POST');\n      logger.info('[AuthModule][logout] Logout API call successful.', { context: 'logout:apiSuccess' });\n    } catch (err) {\n      // Log error but don't re-throw; user is already logged out on client-side.\n      logger.warn('[AuthModule][logout] Error calling logout API endpoint. User is already logged out locally.', { error: err.message, status: err.status, context: 'logout:apiError' });\n    }\n    logger.info('[AuthModule][logout] Logout process completed on client-side.', { context: 'logout:end' });\n  }\n\n  /**\n   * Registers a new user with the provided credentials.\n   *\n   * Validates that both username and password are present, then submits a registration request to the backend. After successful registration, forces authentication state verification to synchronize the client with the backend. Clears any partial authentication state and rethrows the error if registration fails.\n   *\n   * @param {Object} userData - The registration data containing at least a username and password.\n   * @returns {Object} The full API response from the registration endpoint.\n   *\n   * @throws {Error} If username or password is missing, or if the registration request fails.\n   */\n  async function registerUser(userData) {\n    if (!userData?.username || !userData?.password) {\n      logger.error('[AuthModule][registerUser] Username and password are required for registration.', { context: 'registerUser:validationError' });\n      throw new Error('Username and password required.');\n    }\n    const trimmedUsername = userData.username.trim();\n    logger.info('[AuthModule][registerUser] Attempting user registration.', { username: trimmedUsername, context: 'registerUser:start' });\n\n    try {\n      await getCSRFTokenAsync(); // Ensure CSRF token is fetched before POST request\n      const response = await authRequest(apiEndpoints.AUTH_REGISTER, 'POST', {\n        username: trimmedUsername,\n        password: userData.password // Assuming password validation happened in form\n      });\n      logger.info('[AuthModule][registerUser] Registration API call successful.', { response, context: 'registerUser:apiResponse' });\n\n      // After successful registration, typically backend auto-logins or requires login.\n      // Forcing verifyAuthState helps sync client with backend's post-registration state.\n      logger.debug('[AuthModule][registerUser] Triggering auth state verification after registration.', { context: 'registerUser:postVerify' });\n      await verifyAuthState(true);\n      return response; // Return full API response\n    } catch (error) {\n      logger.error('[AuthModule][registerUser] Registration failed.', { username: trimmedUsername, error: error.message, status: error.status, data: error.data, context: 'registerUser:error' });\n      await clearTokenState({ source: 'register_api_error' }); // Clear any partial state\n      throw error;\n    }\n  }\n\n  // === 11) FORM EVENT HANDLER SETUP ===\n  const registeredListeners = [];\n  function setupAuthForms() {\n    // #loginModalForm\n    const loginForm = domAPI.getElementById('loginModalForm');\n    if (loginForm && !loginForm._listenerAttached) {\n      loginForm._listenerAttached = true;\n      domAPI.setAttribute(loginForm, 'novalidate', 'novalidate');\n      domAPI.removeAttribute(loginForm, 'action');\n      domAPI.removeAttribute(loginForm, 'method');\n      const handler = async (e) => {\n        logger.log('[AuthModule] loginModalForm submit handler invoked. Event:', e, { context: 'loginModalForm' });\n        domAPI.preventDefault(e);\n        const errorEl = domAPI.getElementById('loginModalError');\n        hideError(errorEl);\n        const submitBtn = domAPI.querySelector('button[type=\"submit\"]', loginForm);\n        setButtonLoading(submitBtn, true, 'Logging in...');\n        const browserService = DependencySystem.modules.get('browserService');\n        if (!browserService || !browserService.FormData) {\n          throw new Error('[AuthModule] browserService.FormData is required for guardrail compliance. No global FormData fallback allowed.');\n        }\n        const formData = new browserService.FormData(loginForm);\n        const username = formData.get('username')?.trim();\n        const password = formData.get('password');\n        if (!username || !password) {\n          showError(errorEl, 'Username and password are required.');\n          setButtonLoading(submitBtn, false);\n          return;\n        }\n        if (!validateUsername(username)) {\n          showError(errorEl, 'Invalid username. Use 3-32 letters, numbers, or ._-');\n          setButtonLoading(submitBtn, false);\n          return;\n        }\n        const pwCheck = validatePassword(password);\n        if (!pwCheck.valid) {\n          showError(errorEl, pwCheck.message);\n          setButtonLoading(submitBtn, false);\n          return;\n        }\n        try {\n          await publicAuth.login(username, password);\n          if (modalManager?.hide) modalManager.hide('login');\n        } catch (error) {\n          logger.error('[loginModalForm][catch]', error, { context: 'loginModalForm' });\n          let msg = 'Login failed due to server error.';\n          if (error.status === 401) {\n            msg = 'Incorrect username or password.';\n          } else if (error.status === 400) {\n            msg = error.data?.detail || 'Invalid login request.';\n          } else {\n            msg = error.data?.detail || error.message || msg;\n          }\n          showError(errorEl, msg);\n        } finally {\n          setButtonLoading(submitBtn, false, 'Login');\n        }\n      };\n      registeredListeners.push(\n        eventHandlers.trackListener(loginForm, 'submit', safeHandler(handler, 'AuthModule:loginFormSubmit', logger), {\n          passive: false,\n          context: 'AuthModule:loginFormSubmit',\n          description: 'Login Form Submit'\n        })\n      );\n    }\n\n    // #registerModalForm\n    const registerForm = domAPI.getElementById('registerModalForm');\n    if (registerForm && !registerForm._listenerAttached) {\n      registerForm._listenerAttached = true;\n      domAPI.setAttribute(registerForm, 'novalidate', 'novalidate');\n      domAPI.removeAttribute(registerForm, 'action');\n      domAPI.removeAttribute(registerForm, 'method');\n      const handler = async (e) => {\n        domAPI.preventDefault(e);\n        const errorEl = domAPI.getElementById('registerModalError');\n        const submitBtn = domAPI.getElementById('registerModalSubmitBtn');\n        hideError(errorEl);\n        setButtonLoading(submitBtn, true, 'Registering...');\n        const browserService = DependencySystem.modules.get('browserService');\n        if (!browserService || !browserService.FormData) {\n          throw new Error('[AuthModule] browserService.FormData is required for guardrail compliance. No global FormData fallback allowed.');\n        }\n        const formData = new browserService.FormData(registerForm);\n        const username = formData.get('username')?.trim();\n        const password = formData.get('password');\n        const passwordConfirm = formData.get('passwordConfirm');\n        if (!username || !password || !passwordConfirm) {\n          showError(errorEl, 'All fields are required.');\n          setButtonLoading(submitBtn, false, 'Register');\n          return;\n        }\n        if (!validateUsername(username)) {\n          showError(errorEl, 'Invalid username. Use 3-32 letters, numbers, or ._-');\n          setButtonLoading(submitBtn, false, 'Register');\n          return;\n        }\n        const pwCheck = validatePassword(password);\n        if (!pwCheck.valid) {\n          showError(errorEl, pwCheck.message);\n          setButtonLoading(submitBtn, false, 'Register');\n          return;\n        }\n        if (password !== passwordConfirm) {\n          showError(errorEl, 'Passwords do not match.');\n          setButtonLoading(submitBtn, false, 'Register');\n          return;\n        }\n        try {\n          await publicAuth.register({ username, password });\n          if (modalManager?.hide) modalManager.hide('login');\n        } catch (error) {\n          logger.error('[registerModalForm][catch]', error, { context: 'registerModalForm' });\n          let msg = 'Registration failed due to server error.';\n          if (error.status === 409) {\n            msg = 'A user with that username already exists.';\n          } else if (error.status === 400) {\n            msg = error.data?.detail || 'Invalid registration data.';\n          } else {\n            msg = error.data?.detail || error.message || msg;\n          }\n          showError(errorEl, msg);\n        } finally {\n          setButtonLoading(submitBtn, false, 'Register');\n        }\n      };\n      registeredListeners.push(\n        eventHandlers.trackListener(registerForm, 'submit', safeHandler(handler, 'AuthModule:registerFormSubmit', logger), {\n          passive: false,\n          context: 'AuthModule:registerFormSubmit',\n          description: 'Register Form Submit'\n        })\n      );\n    }\n  }\n\n  /**\n   * Initializes the authentication module, setting up event listeners, CSRF protection, and initial authentication state.\n   *\n   * Waits for DOM readiness, attaches form handlers, ensures CSRF token availability with retries, verifies authentication state, and schedules periodic re-verification. Dispatches an `authReady` event upon completion and updates application state. Handles initialization errors by clearing tokens, broadcasting a logged-out state, and raising a fatal modal if CSRF setup fails.\n   *\n   * @returns {Promise<boolean>} Resolves to the result of the initial authentication verification.\n   *\n   * @throws {Error} If required dependencies for periodic verification are missing or if an unhandled error occurs during initialization.\n   */\n\n  async function init() {\n    // Wait for DOM/app readiness strictly via domReadinessService—no ad-hoc or legacy logic\n    // Prevent multiple initializations\n    if (authState.isReady) {\n      broadcastAuth(authState.isAuthenticated, authState.userObject, 'init_already_ready');\n      return authState.isAuthenticated;\n    }\n    setupAuthForms();\n    // modalsLoaded, DOM are both handled via the same readiness patterns\n    const doc = domAPI.getDocument();\n    if (doc && typeof eventHandlers.trackListener === \"function\") {\n      eventHandlers.trackListener(\n        doc,\n        'modalsLoaded',\n        safeHandler(function handleModalsLoadedTracked() {\n          eventHandlers.cleanupListeners({ context: 'AuthModule:modalsLoadedListener' });\n          setupAuthForms();\n          const browserServiceForTimeout = DependencySystem?.modules?.get('browserService');\n          if (!browserServiceForTimeout || typeof browserServiceForTimeout.setTimeout !== 'function') {\n            logger.error('[AuthModule] browserService.setTimeout is required for guardrail compliance (latePatchTimeout).', { context: 'modalsLoaded' });\n            return;\n          }\n          browserServiceForTimeout.setTimeout(() => {\n            const loginF = domAPI.getElementById('loginModalForm');\n            if (loginF) {\n              domAPI.removeAttribute(loginF, 'action');\n              domAPI.removeAttribute(loginF, 'method');\n              if (!loginF._listenerAttached) {\n                loginF._listenerAttached = true;\n                domAPI.setAttribute(loginF, 'novalidate', 'novalidate');\n                const lateHandler = async (e) => {\n                  domAPI.preventDefault(e);\n                  const errorEl = domAPI.getElementById('loginModalError');\n                  hideError(errorEl);\n                  const submitBtn = domAPI.querySelector('button[type=\"submit\"]', loginF);\n                  setButtonLoading(submitBtn, true, 'Logging in...');\n                  const browserService = DependencySystem.modules.get('browserService');\n                  if (!browserService || !browserService.FormData) {\n                    throw new Error('[AuthModule] browserService.FormData is required for guardrail compliance. No global FormData fallback allowed.');\n                  }\n                  const formData = new browserService.FormData(loginF);\n                  const username = formData.get('username')?.trim();\n                  const password = formData.get('password');\n                  if (!username || !password) {\n                    showError(errorEl, 'Username and password are required.');\n                    setButtonLoading(submitBtn, false);\n                    return;\n                  }\n                  if (!validateUsername(username)) {\n                    showError(errorEl, 'Invalid username. Use 3-32 letters, numbers, or ._-');\n                    setButtonLoading(submitBtn, false);\n                    return;\n                  }\n                  const pwCheck = validatePassword(password);\n                  if (!pwCheck.valid) {\n                    showError(errorEl, pwCheck.message);\n                    setButtonLoading(submitBtn, false);\n                    return;\n                  }\n                  try {\n                    await publicAuth.login(username, password);\n                    if (modalManager?.hide) modalManager.hide('login');\n                  } catch (error) {\n                    logger.error('[loginModalForm:latepatch][catch]', error, { context: 'loginModalForm:latepatch' });\n                    let msg = 'Login failed due to server error.';\n                    if (error.status === 401) {\n                      msg = 'Incorrect username or password.';\n                    } else if (error.status === 400) {\n                      msg = error.data?.detail || 'Invalid login request.';\n                    } else {\n                      msg = error.data?.detail || error.message || msg;\n                    }\n                    showError(errorEl, msg);\n                  } finally {\n                    setButtonLoading(submitBtn, false, 'Login');\n                  }\n                };\n                eventHandlers.trackListener(loginF, 'submit', safeHandler(lateHandler, 'AuthModule:loginFormSubmit:LATEPATCH_TRACKED', logger), {\n                  passive: false,\n                  context: 'AuthModule:loginFormSubmit:LATEPATCH_TRACKED',\n                  description: 'Login Form Late Patch Submit (tracked)'\n                });\n              }\n            }\n          }, 400);\n        }, 'AuthModule:modalsLoadedListener', logger),\n        {\n          passive: false,\n          context: 'AuthModule:modalsLoadedListener',\n          description: 'Track modalsLoaded via centralized handler'\n        }\n      );\n    }\n    try {\n      // CSRF retry logic: 3 attempts, user-visible modal on failure\n      let csrfFetched = false, lastError = null;\n      for (let attempt = 0; attempt < 3 && !csrfFetched; ++attempt) {\n        try {\n          await getCSRFTokenAsync(true);\n          csrfFetched = true;\n        } catch (csrfErr) {\n          lastError = csrfErr;\n          logger.error('[AuthModule] CSRF token fetch during init (retry attempt ' + (attempt + 1) + '):', csrfErr, { context: 'init' });\n        }\n      }\n      if (!csrfFetched) {\n        logger.error('[AuthModule] Failed to initialize CSRF after 3 attempts. Raising fatal modal.', lastError, { context: 'init' });\n        if (modalManager && typeof modalManager.show === 'function') {\n          modalManager.show('fatal', {\n            title: 'Startup Failure',\n            message: 'Could not fetch security token from the server after multiple attempts. Please check your connection or contact support.',\n            type: 'error',\n            context: 'CSRF_bootstrap'\n          });\n        }\n      }\n      let verified = false;\n      try {\n        verified = await verifyAuthState(true);\n      } catch (verifyErr) {\n        logger.error('[AuthModule] Error during init verifyAuthState:', verifyErr, { context: 'init' });\n        await clearTokenState({ source: 'init_verify_error' });\n        verified = false;\n      }\n\n      // Setup periodic verification\n      const browserService = DependencySystem.modules.get('browserService');\n      if (!browserService || typeof browserService.setInterval !== 'function') {\n        // This is a critical failure for long-term auth stability if not caught.\n        logger.error('[AuthModule][init] browserService.setInterval is NOT available. Periodic auth verification will NOT run.', { context: 'init:setIntervalMissing' });\n        throw new Error('[AuthModule] browserService.setInterval is required for periodic auth verification.');\n      }\n      if (verifyInterval) browserService.clearInterval(verifyInterval); // Clear existing if any (e.g. re-init)\n      verifyInterval = browserService.setInterval(() => {\n        if (!domAPI.isDocumentHidden?.() && authState.isAuthenticated) { // Check if document is visible\n          logger.debug('[AuthModule][init] Performing periodic auth verification.', { context: 'init:periodicVerify' });\n          verifyAuthState(false).catch((err) => {\n            // This catch is for the verifyAuthState call itself, not for errors during setInterval setup.\n            logger.warn('[AuthModule][init] Periodic verifyAuthState encountered an error (logged by verifyAuthState).', { error: err.message, context: 'init:periodicVerify:error' });\n          });\n        } else {\n          logger.debug('[AuthModule][init] Skipping periodic auth verification.', { isHidden: domAPI.isDocumentHidden?.(), isAuthenticated: authState.isAuthenticated, context: 'init:periodicVerifySkipped' });\n        }\n      }, AUTH_CONFIG.VERIFICATION_INTERVAL);\n      logger.info('[AuthModule][init] Periodic auth verification scheduled.', { interval: AUTH_CONFIG.VERIFICATION_INTERVAL, context: 'init' });\n\n      authState.isReady = true; // Mark auth module as ready\n      logger.info('[AuthModule][init] Auth module is now ready.', { context: 'init' });\n\n      // Dispatch authReady event\n      const readyEventDetail = {\n        authenticated: authState.isAuthenticated,\n        user: authState.userObject,\n        username: authState.username,\n        error: null, // No error at this stage of emitting 'authReady'\n        timestamp: Date.now(),\n        source: 'init_auth_module_ready'\n      };\n\n      if (!eventHandlers.createCustomEvent) {\n        logger.error('[AuthModule][init] eventHandlers.createCustomEvent is NOT available. Cannot dispatch authReady event.', { context: 'init:dispatchAuthReady' });\n      } else {\n        logger.debug('[AuthModule][init] Dispatching authReady event.', { detail: readyEventDetail, context: 'init:dispatchAuthReady' });\n        AuthBus.dispatchEvent(eventHandlers.createCustomEvent('authReady', { detail: readyEventDetail }));\n        try {\n          const doc = domAPI.getDocument();\n          if (doc) {\n            domAPI.dispatchEvent(doc, eventHandlers.createCustomEvent('authReady', { detail: readyEventDetail }));\n          }\n        } catch (docErr) {\n          logger.error('[AuthModule][init] Failed to dispatch authReady on document.', { error: docErr, context: 'init:dispatchAuthReady' });\n        }\n      }\n\n      // Final broadcast based on the state determined during init.\n      // This ensures appModule is updated if it wasn't already through verifyAuthState's broadcasts.\n      logger.debug('[AuthModule][init] Performing final broadcastAuth after init completion.', { authenticated: authState.isAuthenticated, context: 'init' });\n      broadcastAuth(authState.isAuthenticated, authState.userObject, 'init_final_broadcast');\n\n      return verified; // Return the result of the initial verification attempt\n    } catch (err) {\n      logger.error('[AuthModule][init] Unhandled error during initialization process.', { error: err, stack: err.stack, context: 'init:unhandledError' });\n      await clearTokenState({ source: 'init_unhandled_error' });\n      authState.isReady = true;\n      broadcastAuth(false, null, 'init_unhandled_error');\n      throw err;\n    }\n  }\n\n  function cleanup() {\n    if (DependencySystem && typeof DependencySystem.cleanupModuleListeners === 'function') {\n      DependencySystem.cleanupModuleListeners('AuthModule');\n    } else if (eventHandlers && typeof eventHandlers.cleanupListeners === 'function') {\n      eventHandlers.cleanupListeners({ context: 'AuthModule' });\n    }\n    registeredListeners.length = 0;\n    if (verifyInterval) {\n      const browserService = DependencySystem.modules.get('browserService');\n      if (!browserService || typeof browserService.clearInterval !== 'function') {\n        throw new Error('[AuthModule] browserService.clearInterval is required for guardrail compliance. No global clearInterval fallback allowed.');\n      }\n      browserService.clearInterval(verifyInterval);\n      verifyInterval = null;\n    }\n  }\n\n  // === 13) FETCH CURRENT USER ===\n  async function fetchCurrentUser() {\n    try {\n      const resp = await apiClient(apiEndpoints.AUTH_VERIFY, {\n        method: 'GET',\n        credentials: 'include',\n        headers: { Accept: 'application/json' }\n      });\n      if (!resp) {\n        const location = domAPI.getWindow()?.location;\n        const browserService = DependencySystem?.modules?.get('browserService');\n        const windowObj = browserService?.getWindow?.();\n        if (!windowObj || typeof windowObj.URLSearchParams !== 'function') {\n          logger.error('[AuthModule] window.URLSearchParams (via browserService.getWindow()) is required for guardrail compliance (fetchCurrentUser).', { context: 'fetchCurrentUser' });\n        }\n        const urlParams = location && windowObj?.URLSearchParams ? new windowObj.URLSearchParams(location.search) : null;\n        const hasLoginParams = urlParams && urlParams.has('username') && urlParams.has('password');\n        if (hasLoginParams) {\n          return {\n            username: urlParams.get('username'),\n            id: 'temp-id-' + Date.now()\n          };\n        }\n        return null;\n      }\n      let userToReturn = null;\n      if (resp.user && typeof resp.user === 'object') {\n        const userId = resp.user.id || resp.user.user_id || resp.user.userId || resp.user._id;\n        const username = resp.user.username || resp.user.name || resp.user.email;\n        if (userId || username) {\n          userToReturn = { ...resp.user, id: userId || ('user-' + Date.now()) };\n        }\n      } else if (resp.username) {\n        const userId = resp.id || resp.user_id || resp.userId || resp._id;\n        userToReturn = {\n          ...resp,\n          username: resp.username,\n          id: userId || ('user-' + Date.now())\n        };\n      } else if (resp.authenticated === true || resp.is_authenticated === true) {\n        userToReturn = {\n          id: 'auth-' + Date.now(),\n          username: 'user'\n        };\n      }\n      if (userToReturn) return userToReturn;\n      if (publicAuth.hasAuthCookies()) {\n        return {\n          username: 'authenticated-user',\n          id: 'cookie-auth-' + Date.now()\n        };\n      }\n      return null;\n    } catch (error) {\n      logger.error('[AuthModule][fetchCurrentUser][catch]', error, { context: 'fetchCurrentUser' });\n      return null;\n    }\n  }\n\n  // === 13.5) FETCH LIVE AUTH SETTINGS DIAGNOSTICS ===\n  async function fetchAuthSettingsDiagnostic() {\n    if (!apiEndpoints.AUTH_SETTINGS) {\n      logger.error('[AuthModule] No AUTH_SETTINGS endpoint provided in apiEndpoints', { context: 'fetchAuthSettingsDiagnostic' });\n      return;\n    }\n    try {\n      const settings = await apiClient(apiEndpoints.AUTH_SETTINGS, {\n        method: 'GET',\n        credentials: 'include',\n        headers: { Accept: 'application/json' }\n      });\n      logger.info('[AuthModule][fetchAuthSettingsDiagnostic] Backend config LIVE:', settings, { context: 'fetchAuthSettingsDiagnostic' });\n      return settings;\n    } catch (err) {\n      logger.error('[AuthModule][fetchAuthSettingsDiagnostic] Error fetching auth settings:', err, { context: 'fetchAuthSettingsDiagnostic' });\n      throw err;\n    }\n  }\n\n  // === 14) PUBLIC API EXPORT (FACTORY PATTERN) ===\n  const publicAuth = {\n    isAuthenticated: () => authState.isAuthenticated,\n    isReady: () => authState.isReady,\n    getCurrentUser: () => authState.username,\n    getCurrentUserObject: () => authState.userObject,\n    init,\n    login: loginUser,\n    logout,\n    register: registerUser,\n    verifyAuthState,\n    AuthBus,\n    getCSRFTokenAsync,\n    getCSRFToken,\n    hasAuthCookies: () => {\n      const doc = domAPI.getDocument?.();\n      if (!doc || typeof doc.cookie !== 'string') return false;\n      const cookieStr = doc.cookie || '';\n      return /(?:^|;\\s*)(access_token|refresh_token)=/.test(cookieStr);\n    },\n    cleanup,\n    fetchCurrentUser,\n    fetchAuthSettingsDiagnostic\n  };\n\n  return publicAuth;\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 58051,
          "_transferSize": 59234,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.560Z",
        "time": 569.6549999993294,
        "timings": {
          "blocked": 438.15900000419003,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06899999999995998,
          "wait": 130.3350000038082,
          "receive": 1.0919999913312495,
          "_blocked_queueing": 3.9240000041900203,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106419",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 42
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/chat.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1453,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "59771"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"0d07e9ddadf8ca480a2cc7e82e667a40\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 06:54:06 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 59771,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "import { createChatUIUtils } from \"./chat-ui-utils.js\";\n\n/**\n * @typedef {Object} DomAPI\n * @property {function(string): HTMLElement|null} querySelector\n * @property {function(string): HTMLElement|null} getElementById\n * @property {function(string): NodeListOf<HTMLElement>} querySelectorAll\n * @property {function(HTMLElement, HTMLElement): void} appendChild\n * @property {function(HTMLElement): HTMLElement[]} replaceChildren\n * @property {function(string): HTMLElement} createElement\n * @property {function(HTMLElement, string): void} removeChild\n * @property {function(HTMLElement, string): void} setInnerHTML\n * @property {function(): Document} getDocument\n * @property {function(HTMLElement, string): void} addClass\n * @property {function(HTMLElement, string): void} removeClass\n */\n\n/**\n * @typedef {Object} NavAPI\n * @property {function(): string} getSearch\n * @property {function(): string} getHref\n * @property {function(url: string): void} pushState\n * @property {function(): string} getPathname\n */\n\n/**\n * Creates and returns a chat manager for handling chat UI, conversation lifecycle, message sending, authentication, and project context changes.\n *\n * The returned chat manager provides methods to initialize the chat UI, manage conversations (create, load, delete), send messages with queueing and abort handling, update model configuration, set images for vision models, and clean up resources. It integrates with injected dependencies for API requests, DOM manipulation, navigation, event handling, logging, and configuration, and uses an event bus for chat-related events.\n *\n * @param {Object} deps - Dependency injection object containing required APIs, services, and configuration.\n * @returns {Object} Chat manager instance with methods: initialize, sendMessage, createNewConversation, loadConversation, deleteConversation, setImage, updateModelConfig, cleanup, and chatBus.\n *\n * @throws {Error} If required dependencies are missing from {@link deps}.\n *\n * @remark\n * The chat manager automatically responds to global authentication and project context changes, disabling or re-initializing the chat UI as needed. It requires valid authentication and project selection to function.\n */\n\nexport function createChatManager(deps = {}) {\n  const {\n    apiRequest,\n    app,\n    eventHandlers,\n    modelConfig,\n    projectDetailsComponent,\n    isValidProjectId,\n    isAuthenticated,\n    domAPI,\n    navAPI,\n    DOMPurify,\n    apiEndpoints,\n    domReadinessService,\n    logger,\n    DependencySystem,\n    APP_CONFIG                // ← NEW (DI)\n  } = deps;\n\n  // Dependency-injected global replacements with defaults\n  const {\n    clock = { now: () => performance.now() },\n    urlFactory = (base, search = {}) => {\n      const u = new URL(base, navAPI?.getHref?.() || \"/\");\n      Object.entries(search).forEach(([k, v]) => u.searchParams.set(k, v));\n      return u;\n    },\n    eventBusFactory = () => new EventTarget(),\n    URLSearchParams = globalThis.URLSearchParams,\n    DateCtor = globalThis.Date,\n  } = deps;\n\n  if (!apiRequest) throw new Error('Missing apiRequest in createChatManager');\n  if (!app) throw new Error('Missing app in createChatManager');\n  if (!isValidProjectId) throw new Error('Missing isValidProjectId in createChatManager');\n  if (!isAuthenticated) throw new Error('Missing isAuthenticated in createChatManager');\n  if (!DOMPurify) throw new Error('Missing DOMPurify in createChatManager');\n  if (!apiEndpoints) throw new Error('Missing apiEndpoints in createChatManager');\n  if (!domReadinessService) throw new Error('Missing domReadinessService in createChatManager');\n  if (!logger) throw new Error('Missing logger in createChatManager');\n  if (!APP_CONFIG) throw new Error('Missing APP_CONFIG in createChatManager');\n\n  // --- Dependency-injected global replacements with defaults (moved up) ---\n  const _domAPI = domAPI || createDefaultDomAPI();\n  const _navAPI = navAPI || createDefaultNavAPI();\n  const _EH = eventHandlers || createDefaultEventHandlers({ domReadinessService, logger });\n\n  // --- Chat UI Utilities (DI) ---\n  const chatUIUtils = createChatUIUtils({\n    logger,\n    domAPI,\n    DOMPurify,\n    eventHandlers: _EH,\n    domReadinessService\n  });\n\n  function safeHandler(fn, description) {\n    return (...args) => {\n      try {\n        return fn(...args);\n      } catch (err) {\n        logger.error(`[ChatManager][${description}]`, err, { context: 'chatManager' });\n        throw err;\n      }\n    };\n  }\n\n  // --- Live Token Estimation Logic ---\n  // (patch instance after construction, see after ChatManager)\n\n\n  function createDefaultDomAPI() {\n    throw new Error(\"[ChatManager] No domAPI provided. All DOM operations must be injected.\");\n  }\n  function createDefaultNavAPI() {\n    throw new Error(\"[ChatManager] No navAPI provided. All navigation operations must be injected.\");\n  }\n  function createDefaultEventHandlers({ domReadinessService, logger }) {\n    if (!domReadinessService) throw new Error('Missing domReadinessService in createDefaultEventHandlers');\n    if (!logger) throw new Error('Missing logger in createDefaultEventHandlers');\n    function trackListener() { throw new Error(\"[ChatManager] No eventHandlers.trackListener provided.\"); }\n    function untrackListener() { throw new Error(\"[ChatManager] No eventHandlers.untrackListener provided.\"); }\n    function cleanupListeners() { }\n    return { trackListener, untrackListener, cleanupListeners };\n  }\n  function getInjectedModelConfig(modelCfg) {\n    if (modelCfg) return modelCfg;\n    return {\n      getConfig: () => ({}),\n      updateConfig: () => { },\n      getModelOptions: () => [],\n      onConfigChange: () => { }\n    };\n  }\n\n  const CHAT_CONFIG = {\n    DEFAULT_MODEL: \"claude-3-sonnet-20240229\",\n    MAX_TOKENS: 4096,\n    THINKING_BUDGET: 16000,\n    REASONING_EFFORT: \"medium\",\n    MAX_IMAGE_SIZE: 4 * 1024 * 1024 // 4MB\n  };\n\n  class MessageQueue {\n    constructor() {\n      this.queue = [];\n      this.isProcessing = false;\n    }\n    add(task) {\n      return new Promise((resolve) => {\n        this.queue.push({ task, resolve });\n        this.process();\n      });\n    }\n    async process() {\n      if (this.isProcessing || this.queue.length === 0) return;\n      this.isProcessing = true;\n      const { task, resolve } = this.queue.shift();\n      try {\n        const controller = new AbortController();\n        const timeout = setTimeout(() => controller.abort(), 30000);\n        const result = await task(controller.signal);\n        clearTimeout(timeout);\n        resolve(result);\n      } finally {\n        this.isProcessing = false;\n        this.process();\n      }\n    }\n  }\n\n  class ChatManager {\n    _api(endpoint, opts = {}, ctx = 'chatManager') {\n      const { params, ...rest } = opts;\n      if (params && typeof params === 'object') {\n        const u = urlFactory(endpoint, params);\n        endpoint = String(u);\n      }\n      return this.apiRequest(endpoint,\n        { credentials: 'include', ...rest },\n        ctx);\n    }\n\n    constructor() {\n      this.apiRequest = apiRequest;\n      this.app = app;\n      this.modelConfigAPI = getInjectedModelConfig(modelConfig);\n      this.domAPI = _domAPI;\n      this.navAPI = _navAPI;\n      this.eventHandlers = _EH;\n      this.projectDetails = projectDetailsComponent;\n      this.isValidProjectId = isValidProjectId;\n      this.isAuthenticated = isAuthenticated;\n      this.DOMPurify = DOMPurify;\n      this.chatBus = eventBusFactory();\n      this.projectId = null;\n      this.currentConversationId = null;\n      this.isInitialized = false;\n      this.isLoading = false;\n      this.currentImage = null;\n      this.loadPromise = null;\n      this.currentRequestId = 0;\n      this.messageQueue = new MessageQueue();\n      this.container = null;\n      this.messageContainer = null;\n      this.inputField = null;\n      this.sendButton = null;\n      this.titleElement = null;\n      this.containerSelector = null;\n      this.messageContainerSelector = null;\n      this.inputSelector = null;\n      this.sendButtonSelector = null;\n      this.minimizeButtonSelector = null;\n      this._authChangeListener = null;\n      this.modelConfig = this.modelConfigAPI.getConfig();\n      this.DependencySystem = DependencySystem || undefined;\n      this.domReadinessService = domReadinessService;\n      this._uiAttached = false;\n      this.APP_CONFIG = APP_CONFIG;\n      this._appEventListenersAttached = false; // Flag to ensure app/auth listeners are attached once\n    }\n\n    /**\n     * Ensures UI utilities and methods are attached to the ChatManager instance.\n     * @private\n     */\n    _ensureUIAttached() {\n      if (!this._uiAttached) {\n        logger.info(\"[ChatManager][_ensureUIAttached] Attaching UI utilities\", { context: \"chatManager\" });\n        chatUIUtils.attachChatUI(this); // This injects UI methods onto `this`\n        this._uiAttached = true;\n      }\n    }\n    \n    _setupAppEventListeners() {\n      if (this._appEventListenersAttached) return;\n\n      logger.debug(`[ChatManager] Setting up AppBus/AuthBus event listeners.`, { context: \"chatManager\" });\n      const appBus = this.DependencySystem?.modules?.get('AppBus');\n      const auth = this.DependencySystem?.modules?.get('auth');\n\n      if (appBus) {\n        this.eventHandlers.trackListener(appBus, 'currentProjectChanged', \n          safeHandler(this._handleAppCurrentProjectChanged.bind(this), \"_handleAppCurrentProjectChanged\"), \n          { context: 'chatManagerAppEvents', description: 'ChatManager_AppBus_CurrentProjectChanged' });\n        logger.info(`[ChatManager] Subscribed to AppBus \"currentProjectChanged\".`, { context: \"chatManager\" });\n      } else {\n        logger.warn(`[ChatManager] AppBus not available. Cannot subscribe to \"currentProjectChanged\".`, { context: \"chatManager\" });\n      }\n\n      if (auth?.AuthBus) {\n         this.eventHandlers.trackListener(auth.AuthBus, \"authStateChanged\", \n          safeHandler(this._handleGlobalAuthStateChanged.bind(this), \"_handleGlobalAuthStateChanged\"),\n          { context: 'chatManagerAppEvents', description: \"ChatManager_AuthBus_AuthStateChanged\" });\n        logger.info(`[ChatManager] Subscribed to AuthBus \"authStateChanged\".`, { context: \"chatManager\" });\n      } else {\n        logger.warn(`[ChatManager] AuthBus not available. Cannot subscribe to \"authStateChanged\".`, { context: \"chatManager\" });\n      }\n      this._appEventListenersAttached = true;\n    }\n\n\n    /**\n     * Initialize the chat manager with optional UI selectors or overrides.\n     */\n    async initialize(options = {}) {\n      const _initStart = clock.now();\n      logger.info(`[ChatManager][initialize] Starting initialization. Project ID: ${options.projectId}`, { options, currentInternalPid: this.projectId, context: \"chatManager.initialize\" });\n\n      await this.domReadinessService.documentReady();\n\n      await domReadinessService.dependenciesAndElements({\n        deps: ['app', 'domAPI', 'eventHandlers', 'AppBus'], // Added AppBus\n        context: 'ChatManager.init:core'\n      });\n\n      await domReadinessService.dependenciesAndElements({\n        deps: ['auth'], // Auth is needed for AuthBus listener\n        context: 'ChatManager.init:auth'\n      });\n      const auth = app?.DependencySystem?.modules?.get('auth') || null;\n      \n      this._ensureUIAttached(); // Ensure UI methods are available early\n      this._setupAppEventListeners(); // Setup global event listeners if not already\n\n      this.containerSelector = options.containerSelector || this.containerSelector;\n      this.messageContainerSelector = options.messageContainerSelector || this.messageContainerSelector;\n      this.inputSelector = options.inputSelector || this.inputSelector;\n      this.sendButtonSelector = options.sendButtonSelector || this.sendButtonSelector;\n      this.titleSelector = options.titleSelector || this.titleSelector;\n      this.minimizeButtonSelector = options.minimizeButtonSelector || this.minimizeButtonSelector;\n\n      try {\n        if (!auth || !this.app.state.isAuthenticated) { // Check appModule state directly\n          const msg = \"User not authenticated. Cannot initialize ChatManager.\";\n          logger.warn(`[ChatManager][initialize] Auth check failed: ${msg}`, { context: \"chatManager.initialize\" });\n          this.projectDetails?.disableChatUI?.(\"Not authenticated\");\n          \n          // The global authStateChanged listener (_handleGlobalAuthStateChanged) should handle re-enabling if user logs in.\n          // The specific _authChangeListener for retrying init might be redundant if global listener is effective.\n          // For now, keeping it to see if it's needed for an initial load race condition.\n          if (!this._authChangeListener && auth?.AuthBus) {\n            this._authChangeListener = safeHandler(async (e) => {\n              logger.info(`[ChatManager][initialize] _authChangeListener triggered by authStateChanged. Authenticated: ${e.detail?.authenticated}`, { context: \"chatManager.initialize\" });\n              if (e.detail?.authenticated && (this.projectId || options.projectId) ) { // Ensure projectId is available\n                if (this._authChangeListener && auth?.AuthBus?.removeEventListener) { // Use optional chaining\n                    auth.AuthBus.removeEventListener('authStateChanged', this._authChangeListener);\n                    logger.debug(`[ChatManager][initialize] Removed temporary _authChangeListener.`, { context: \"chatManager.initialize\" });\n                }\n                this._authChangeListener = null; // Clear the listener\n                // Re-attempt initialization with the project ID that was intended.\n                const projectIdForRetry = options.projectId || this.projectId;\n                logger.info(`[ChatManager][initialize] Re-attempting initialization after auth. Project ID: ${projectIdForRetry}`, { context: \"chatManager.initialize\" });\n                await this.initialize({ ...options, projectId: projectIdForRetry });\n              }\n            }, \"authChangeListenerForRetry\");\n\n            this.eventHandlers.trackListener(\n              auth.AuthBus,\n              'authStateChanged',\n              this._authChangeListener,\n              {\n                context: 'chatManagerAuthRetryListener',\n                description: 'Auth state change listener for chat initialization retry (specific to init failure)'\n              }\n            );\n            logger.debug(`[ChatManager][initialize] Temporary _authChangeListener attached for re-init on auth.`, { context: \"chatManager.initialize\" });\n          }\n          throw new Error(msg);\n        }\n        \n        // Clear the temporary auth change listener if auth is now okay and it was previously set\n        if (this._authChangeListener && auth?.AuthBus) {\n            eventHandlers.untrackListener(auth.AuthBus, 'authStateChanged', this._authChangeListener);\n            logger.debug(`[ChatManager][initialize] Auth successful, removed temporary _authChangeListener.`, { context: \"chatManager.initialize\" });\n            this._authChangeListener = null;\n        }\n\n        const newProjectId = options.projectId;\n        logger.debug(`[ChatManager][initialize] Requested Project ID: ${newProjectId}, Current internal Project ID: ${this.projectId}`, { context: \"chatManager.initialize\" });\n\n        // If no new projectId is provided, and internal one exists, use that.\n        // This can happen if initialize is called to just refresh UI for current project.\n        const targetProjectId = this.isValidProjectId(newProjectId) ? newProjectId : this.projectId;\n\n        if (!this.isValidProjectId(targetProjectId)) {\n          const noProjectMsg = `No valid project ID for ChatManager. Provided: ${newProjectId}, Internal: ${this.projectId}`;\n          logger.error(`[ChatManager][initialize] ${noProjectMsg}`, { context: \"chatManager.initialize\" });\n          this.projectDetails?.disableChatUI?.(\"No project selected\");\n          throw new Error(noProjectMsg);\n        }\n        \n        // Project Switch Logic\n        if (this.isInitialized && this.projectId && this.projectId !== targetProjectId) {\n          logger.info(`[ChatManager][initialize] Project changed from ${this.projectId} to ${targetProjectId}. Clearing old project data.`, { context: \"chatManager.initialize\" });\n          this._clearProjectSpecificData(); // Clear conversation list, current conversation, messages\n        }\n        this.projectId = targetProjectId; // Set the new project ID\n\n        // UI Setup (ensure elements are present and events are bound)\n        await this._setupUIElements(); // Resolves DOM elements based on selectors\n        this.eventHandlers.cleanupListeners?.({ context: 'chatManager:UI' }); // Clear old UI listeners\n        this._setupEventListeners(); // Attach new listeners to potentially new elements\n\n        // If already initialized for this same project, could be a UI refresh or re-bind.\n        if (this.isInitialized && this.projectId === targetProjectId) {\n          logger.info(`[ChatManager][initialize] Already initialized for project ${this.projectId}. Re-checking conversation history / UI state.`, { context: \"chatManager.initialize\" });\n          // Potentially reload current conversation if needed, or ensure UI is consistent.\n          // _loadConversationHistory will handle loading last/URL-specified convo or creating new one.\n          if (this.currentConversationId) {\n            await this.loadConversation(this.currentConversationId); // Refresh current conversation view\n          } else {\n            await this._loadConversationHistory(); // Load history or new convo for current project\n          }\n          logger.info(`[ChatManager][initialize] Re-initialization for same project ${this.projectId} complete.`, { context: \"chatManager.initialize\" });\n          return true;\n        }\n        \n        // First time initialization for this project context (or after project switch)\n        logger.info(`[ChatManager][initialize] Initializing for project ${this.projectId}. Loading history.`, { context: \"chatManager.initialize\" });\n        await this._loadConversationHistory(); \n\n        this.isInitialized = true; // Mark as initialized AFTER history/convo load attempt\n\n        // Setup \"New Conversation\" button\n        const newConversationBtn = this.domAPI.getElementById(\"newConversationBtn\"); // Assuming global button for now\n        if (newConversationBtn) { // This button might be project-specific or global\n          newConversationBtn.classList.remove(\"hidden\");\n          // Ensure listener is only added once or managed correctly if this init is called multiple times\n          this.eventHandlers.cleanupListeners?.({ context: 'chatManagerNewConvoBtn' }); \n          this.eventHandlers.trackListener(\n            newConversationBtn,\n            \"click\",\n            safeHandler(async () => {\n              logger.debug(`[ChatManager] \"New Conversation\" button clicked. Current project: ${this.projectId}`, { context: \"chatManager\" });\n              try {\n                await this.createNewConversation(); // Uses this.projectId\n              } catch (err) {\n                logger.error(\"[ChatManager][New Conversation Button Click]\", { error: err, context: \"chatManager\" });\n                this._showErrorMessage(\"Failed to start new chat: \" + (err?.message || \"Unknown error\"));\n              }\n            }, \"NewConversationButtonClick\"),\n            { description: \"New Conversation Button\", context: \"chatManagerNewConvoBtn\" }\n          );\n        } else {\n            logger.debug(\"[ChatManager][initialize] New Conversation button not found.\", { context: \"chatManager.initialize\" });\n        }\n        \n        this.chatBus?.dispatchEvent(new CustomEvent('chatManagerReady', { detail: { projectId: this.projectId } }));\n        logger.info(`[ChatManager][initialize] Initialization successful for project ${this.projectId}. Duration: ${clock.now() - _initStart}ms`, { context: \"chatManager.initialize\" });\n        return true;\n\n      } catch (error) {\n        logger.error(`[ChatManager][initialize] Initialization failed for project ${options.projectId || this.projectId}.`, { error: error, context: \"chatManager.initialize\" });\n        this.isInitialized = false; // Ensure it's marked as not initialized on failure\n        const originalErrorMessage = this._extractErrorMessage(error);\n        // Specific error handling for KB missing\n        if (originalErrorMessage.toLowerCase().includes(\"project has no knowledge base\")) {\n          const specificMessage = \"Chat initialization failed: Project has no knowledge base. Please add one to enable chat.\";\n          this._showErrorMessage(specificMessage);\n          this.projectDetails?.disableChatUI?.(specificMessage);\n        } else if (!originalErrorMessage.includes(\"User not authenticated\")) { // Don't show generic if auth was the issue\n            this._showErrorMessage(`Chat error: ${originalErrorMessage}`);\n        }\n        return false;\n      }\n    }\n    \n    _clearProjectSpecificData() {\n        logger.info(`[ChatManager][_clearProjectSpecificData] Clearing data for project ${this.projectId}.`, { context: \"chatManager\" });\n        this.currentConversationId = null;\n        this.loadPromise = null; // Cancel any ongoing load for the old project\n        this.isLoading = false;\n        this._clearMessages();\n        this._clearConversationList(); // Assumes this method exists or is added via UI utils\n        if (this.titleElement) this.titleElement.textContent = \"Chat\"; // Reset title\n        // this.projectId itself will be updated by the calling context (e.g., _handleAppCurrentProjectChanged or initialize)\n    }\n\n    _handleAppCurrentProjectChanged(event) {\n      const newProject = event?.detail?.project;\n      const oldProjectId = this.projectId;\n      logger.info(`[ChatManager][_handleAppCurrentProjectChanged] Received. New: ${newProject?.id}, Old: ${oldProjectId}`, { detail: event.detail, context: \"chatManager\" });\n\n      if (newProject?.id && newProject.id !== oldProjectId) {\n        logger.info(`[ChatManager][_handleAppCurrentProjectChanged] Project changed to ${newProject.id}. Re-initializing chat.`, { context: \"chatManager\" });\n        // Cleanup old project listeners and state before re-initializing\n        this.eventHandlers.cleanupListeners?.({ context: 'chatManager:UI' }); // Clean UI specific listeners for the old project\n        this._clearProjectSpecificData(); // Clear data related to oldProjectId\n        this.isInitialized = false; // Mark as not initialized for the new project yet\n        \n        // Re-initialize for the new project. Pass along current UI selectors.\n        this.initialize({ \n            projectId: newProject.id,\n            containerSelector: this.containerSelector,\n            messageContainerSelector: this.messageContainerSelector,\n            inputSelector: this.inputSelector,\n            sendButtonSelector: this.sendButtonSelector,\n            titleSelector: this.titleSelector,\n            minimizeButtonSelector: this.minimizeButtonSelector\n        }).catch(err => logger.error(`[ChatManager][_handleAppCurrentProjectChanged] Error during re-initialization for new project ${newProject.id}`, { error: err, context: \"chatManager\" }));\n      } else if (!newProject && oldProjectId) {\n        logger.info(`[ChatManager][_handleAppCurrentProjectChanged] Project context cleared. Cleaning up chat for project ${oldProjectId}.`, { context: \"chatManager\" });\n        this._clearProjectSpecificData();\n        this.projectId = null;\n        this.isInitialized = false;\n        this.projectDetails?.disableChatUI?.(\"No project selected\");\n        if (this.inputField) this.inputField.disabled = true;\n        if (this.sendButton) this.sendButton.disabled = true;\n      }\n    }\n\n    _handleGlobalAuthStateChanged(event) {\n        const isAuthenticated = event?.detail?.authenticated;\n        logger.info(`[ChatManager][_handleGlobalAuthStateChanged] Received. Authenticated: ${isAuthenticated}`, { detail: event.detail, context: \"chatManager\" });\n\n        if (!isAuthenticated) {\n            logger.info(`[ChatManager][_handleGlobalAuthStateChanged] User logged out. Cleaning up chat.`, { context: \"chatManager\" });\n            this.cleanup(); // Full cleanup on logout\n            this.projectDetails?.disableChatUI?.(\"Logged out\");\n            if (this.inputField) this.inputField.disabled = true;\n            if (this.sendButton) this.sendButton.disabled = true;\n        } else {\n            // User logged in. If a projectId is already set (e.g. from URL or previous state),\n            // try to re-initialize. This might also be handled by a subsequent currentProjectChanged event.\n            logger.info(`[ChatManager][_handleGlobalAuthStateChanged] User authenticated.`, { currentProjectId: this.projectId, context: \"chatManager\" });\n            if (this.projectId && !this.isInitialized) { // If a project context exists but chat not initialized\n                logger.info(`[ChatManager][_handleGlobalAuthStateChanged] Attempting to re-initialize chat for project ${this.projectId} after auth.`, { context: \"chatManager\" });\n                this.initialize({ projectId: this.projectId }).catch(err => logger.error(`[ChatManager][_handleGlobalAuthStateChanged] Error re-initializing post-auth`, {error: err, context: \"chatManager\"}));\n            } else if (this.projectId && this.isInitialized) {\n                 if (this.inputField) this.inputField.disabled = false;\n                 if (this.sendButton) this.sendButton.disabled = false;\n            }\n        }\n    }\n    \n    cleanup() {\n      logger.info(`[ChatManager][cleanup] Cleaning up ChatManager for project ${this.projectId}.`, { context: \"chatManager\" });\n      this.eventHandlers.cleanupListeners?.({ context: \"chatManager:UI\" });\n      this.eventHandlers.cleanupListeners?.({ context: \"chatManager\" }); // General listeners for this manager instance\n      this.eventHandlers.cleanupListeners?.({ context: \"chatManagerNewConvoBtn\" });\n      this.eventHandlers.cleanupListeners?.({ context: 'chatManagerAuthRetryListener' });\n\n\n      // DO NOT clean up 'chatManagerAppEvents' here as they are global app/auth listeners\n      // and should persist for the lifetime of the chatManager instance,\n      // unless chatManager itself is being completely destroyed and removed from DI.\n      // If this cleanup is for project change, these global listeners should remain.\n      // If it's for full app shutdown, then they can be removed by a higher-level orchestrator.\n\n      const chatUIEnh = this.DependencySystem?.modules?.get?.('chatUIEnhancements');\n      chatUIEnh?.cleanup?.(); // Assuming this cleans up its own tracked listeners\n\n      this._clearProjectSpecificData();\n      this.projectId = null;\n      this.isInitialized = false;\n      // this.isGlobalMode = false; // If isGlobalMode is a relevant state\n      this._uiAttached = false; // Allow UI to re-attach on next init\n      \n      // Clear the specific auth listener if it's still active\n      const auth = this.DependencySystem?.modules?.get('auth');\n      if (this._authChangeListener && auth?.AuthBus?.removeEventListener) {\n        auth.AuthBus.removeEventListener('authStateChanged', this._authChangeListener);\n        logger.debug(`[ChatManager][cleanup] Removed temporary _authChangeListener.`, { context: \"chatManager\" });\n        this._authChangeListener = null;\n      }\n      logger.info(`[ChatManager][cleanup] Cleanup finished.`, { context: \"chatManager\" });\n    }\n\n    async loadConversation(conversationId) {\n      if (!conversationId) return false;\n      if (!this.isAuthenticated()) return false;\n      if (!this.isValidProjectId(this.projectId)) {\n        const errorMsg = `Invalid or missing project ID (${this.projectId}). Cannot load conversation.`;\n        logger.error(\"[ChatManager][loading conversation]\" + errorMsg, new Error(errorMsg), { context: \"chatManager\" });\n        this._showErrorMessage(\"Cannot load conversation: invalid/missing project ID.\");\n        return false;\n      }\n\n      // Update the current conversation ID in token stats manager\n      const tokenStatsManager = this.DependencySystem?.modules?.get('tokenStatsManager');\n      if (tokenStatsManager?.fetchConversationTokenStats) {\n        tokenStatsManager.fetchConversationTokenStats(conversationId);\n      }\n\n      const requestId = ++this.currentRequestId;\n      if (this.loadPromise) {\n        const result = await this.loadPromise;\n        return requestId === this.currentRequestId ? result : false;\n      }\n\n      this.isLoading = true;\n      this._showLoadingIndicator();\n\n      this.loadPromise = (async () => {\n        try {\n          this._clearMessages();\n\n          const [conversationResponse, messagesResponse] = await Promise.all([\n            this._api(apiEndpoints.CONVERSATION(this.projectId, conversationId), { method: \"GET\" }),\n            this._api(apiEndpoints.MESSAGES(this.projectId, conversationId), { method: \"GET\" })\n          ]);\n\n          const conversation =\n            conversationResponse?.data?.conversation\n            ?? conversationResponse?.data\n            ?? conversationResponse?.conversation\n            ?? conversationResponse;\n\n          if (!conversation?.id) {\n            throw new Error('Failed to fetch valid conversation details.');\n          }\n\n          const messages = messagesResponse.data?.messages || [];\n\n          this.currentConversationId = conversationId;\n          if (this.titleElement) {\n            this.titleElement.textContent = conversation.title || \"New Conversation\";\n          }\n          this._renderMessages(messages);\n          this._updateURLWithConversationId(conversationId);\n\n          // Update token stats for loaded conversation\n          const tokenStatsManager = this.DependencySystem?.modules?.get('tokenStatsManager');\n          if (tokenStatsManager?.fetchConversationTokenStats) {\n            tokenStatsManager.fetchConversationTokenStats(conversationId);\n          }\n\n          return true;\n        } catch (error) {\n          logger.error(\"[ChatManager][loading conversation]\", error, { context: \"chatManager\" });\n          return false;\n        } finally {\n          this.isLoading = false;\n          this._hideLoadingIndicator();\n          this.loadPromise = null;\n        }\n      })();\n\n      return this.loadPromise;\n    }\n\n    async createNewConversation(overrideProjectId) {\n      if (overrideProjectId) {\n        this.projectId = this.isValidProjectId(overrideProjectId) ? overrideProjectId : this.projectId;\n      }\n\n      if (!this.isAuthenticated()) {\n        throw new Error(\"Not authenticated\");\n      }\n      if (!this.isValidProjectId(this.projectId)) {\n        const errorMsg = `Invalid or missing project ID (${this.projectId}). Cannot create new conversation.`;\n        logger.error(\"[ChatManager][creating new conversation]\" + errorMsg, new Error(errorMsg), { context: \"chatManager\" });\n        this._showErrorMessage(errorMsg);\n        this.projectDetails?.disableChatUI?.(\"No valid project\");\n        throw new Error(errorMsg);\n      }\n\n      this._clearMessages();\n\n      try {\n        const cfg = this.modelConfigAPI.getConfig();\n        logger.info(`[ChatManager][createNewConversation] Using model config for new conversation. Model Name: ${cfg.modelName}`, { context: \"chatManager\", modelConfig: cfg });\n        const currentUser = this.app?.state?.currentUser || {};\n\n        const payload = {\n          title: `New Chat ${(new DateCtor()).toLocaleString()}`,\n          model_id: cfg.modelName || CHAT_CONFIG.DEFAULT_MODEL\n        };\n        if (currentUser.id) payload.user_id = currentUser.id;\n\n        const convoEndpoint = typeof apiEndpoints.CONVERSATIONS === 'function'\n          ? apiEndpoints.CONVERSATIONS(this.projectId)\n          : String(apiEndpoints.CONVERSATIONS).replace('{id}', this.projectId);\n\n        const response = await this._api(\n          convoEndpoint,\n          { method: \"POST\", body: payload, returnFullResponse: true }\n        );\n\n        // ------------------------------------------------------------------\n        // Robust response-shape normalisation\n        // ------------------------------------------------------------------\n        const headers = response?.headers || {};\n        let conversation =\n          response?.data?.conversation      // { data:{conversation:{…}} }\n          ?? response?.data                 // { data:{…} }\n          ?? response?.conversation         // { conversation:{…} }\n          ?? response                       // { …direct object… }\n          ?? {};\n\n        // If the object still wraps the actual convo in `conversation` key, unwrap it\n        if (conversation?.conversation && typeof conversation.conversation === 'object') {\n          conversation = conversation.conversation;\n        }\n\n        let convId =\n          conversation?.id ??\n          conversation?.conversation_id ??\n          conversation?.uuid ??\n          conversation?.conversationId ??\n          null;\n\n        // NEW ─ look at Location header if we still don’t have it\n        if (!convId && headers.location) {\n          const loc = headers.location;               // e.g. “…/conversations/<uuid>\"\n          convId = loc.split('/').filter(Boolean).pop();\n        }\n\n        // Normalise & fallback (old GET logic stays the same)\n        if (!convId) {\n          // fallback: try GET as before\n          const getResp = await this._api(\n            convoEndpoint,\n            { method: \"GET\", params: { limit: 1, sort: \"desc\" } }\n          );\n          const conversations =\n            getResp?.conversations                     // { conversations: [...] }\n            ?? getResp?.data?.conversations            // { data: { conversations: [...] } }\n            ?? (Array.isArray(getResp?.data)           // { data: [...] }\n              ? getResp.data\n              : Array.isArray(getResp)             // plain array response\n                ? getResp\n                : []);\n\n          if (conversations.length) {\n            const latest = conversations[0];\n            convId =\n              latest?.id ??\n              latest?.conversation_id ??\n              latest?.uuid ??\n              latest?.conversationId ??\n              null;\n\n            if (!conversation) conversation = latest;\n          }\n        }\n\n        if (!('id' in conversation) && convId) conversation = { ...(conversation || {}), id: convId };\n\n        this.currentConversationId = convId;\n        if (this.titleElement) {\n          this.titleElement.textContent = conversation.title || \"New Conversation\";\n        }\n        this._updateURLWithConversationId(convId);\n\n        const event = new CustomEvent('chat:conversationCreated', {\n          detail: {\n            conversationId: conversation.id,\n            projectId: this.projectId,\n            title: conversation.title\n          }\n        });\n        this.chatBus.dispatchEvent(event);\n\n        return conversation;\n      } catch (error) {\n        logger.error(\"[ChatManager][creating new conversation]\", error, { context: \"chatManager\" });\n        const errorMessage = this._extractErrorMessage(error);\n\n        if (errorMessage.includes(\"project has no knowledge base\".toLowerCase())) {\n          /* KB will be auto-created and ChatManager will be retried by\n             ProjectManager ⇒ do NOT disable the chat UI now. */\n          const msg = \"Project has no knowledge base. Creating one…\";\n          this._showErrorMessage(msg);\n        } else {\n          this._showErrorMessage(\"Failed to create conversation: \" + errorMessage);\n          this.projectDetails?.disableChatUI?.(\"Chat error: \" + errorMessage);\n        }\n        throw error;\n      }\n    }\n\n    async sendMessage(messageText) {\n      if (!messageText?.trim()) {\n        return;\n      }\n\n      return this.messageQueue.add(async (abortSignal) => {\n        if (!this.isAuthenticated()) {\n          return;\n        }\n        if (!this.isValidProjectId(this.projectId)) {\n          const errorMsg = `No valid project ID (${this.projectId}). Select a project before sending messages.`;\n          logger.error(\"[ChatManager][sending message]\" + errorMsg, new Error(errorMsg), { context: \"chatManager\" });\n          this._showErrorMessage(errorMsg);\n          this.projectDetails?.disableChatUI?.(\"No valid project\");\n          return;\n        }\n        if (!this.currentConversationId) {\n          try {\n            await this.createNewConversation();\n            if (!this.currentConversationId) {\n              return;\n            }\n          } catch (error) {\n            return;\n          }\n        }\n\n        this._showMessage(\"user\", messageText);\n        this._clearInputField();\n        this._showThinkingIndicator();\n\n        try {\n          const response = await this._sendMessageToAPI(messageText, abortSignal);\n          this._processAssistantResponse(response);\n\n          // Update token stats for the conversation after sending a message\n          const tokenStatsManager = this.DependencySystem?.modules?.get('tokenStatsManager');\n          if (tokenStatsManager?.fetchConversationTokenStats && this.currentConversationId) {\n            tokenStatsManager.fetchConversationTokenStats(this.currentConversationId);\n          }\n\n          return response.data;\n        } catch (error) {\n          logger.error(\"[ChatManager][sending message]\", error, { context: \"chatManager\" });\n          this._hideThinkingIndicator();\n\n          const msg = this._extractErrorMessage(error);\n          this._showErrorMessage(msg);\n\n          /* Only disable chat UI for unrecoverable conditions */\n          const critical =\n            msg.toLowerCase().includes(\"knowledge base\") ||\n            String(error?.status).startsWith(\"4\");          // auth / permission / missing KB\n\n          if (critical) {\n            this.projectDetails?.disableChatUI?.(\"Chat error: \" + msg);\n          }\n        }\n      });\n    }\n\n    async _sendMessageToAPI(messageText, abortSignal) {\n      const cfg = this.modelConfigAPI.getConfig();\n      const modelId = cfg.modelName || CHAT_CONFIG.DEFAULT_MODEL;   // required by API\n\n      // ---- body expected by backend ----\n      const userMsg = {\n        raw_text: messageText,\n        role: \"user\"\n      };\n\n      const payload = {\n        new_msg: userMsg,                   // dict → OK\n        vision_detail: cfg.visionDetail || \"auto\"\n      };\n\n      if (cfg.reasoningSummary) payload.reasoning_summary = cfg.reasoningSummary;\n      if (this.currentImage) {\n        this._validateImageSize();\n        payload.image_data = this.currentImage;\n        this.currentImage = null;\n      }\n      if (cfg.extendedThinking) {\n        payload.thinking = { type: \"enabled\", budget_tokens: cfg.thinkingBudget };\n      }\n      // Attach enable_web_search if present in config (frontend)\n      if (cfg.enable_web_search !== undefined) {\n        payload.enable_web_search = !!cfg.enable_web_search;\n      }\n\n      // Send model_id as query-parameter, body as JSON\n      return this._api(\n        apiEndpoints.MESSAGES(this.projectId, this.currentConversationId),\n        {\n          method: \"POST\",\n          params: { model_id: modelId },   // <-- added\n          body: payload,\n          signal: abortSignal\n        }\n      );\n    }\n\n    _validateImageSize() {\n      if (\n        typeof this.currentImage === \"string\" &&\n        /^data:image\\/(png|jpeg|webp|gif);base64,/i.test(this.currentImage)\n      ) {\n        const commaIdx = this.currentImage.indexOf(',');\n        const b64 = commaIdx !== -1 ? this.currentImage.slice(commaIdx + 1) : this.currentImage;\n        const sizeBytes = Math.floor((b64.length * 3) / 4);\n        if (sizeBytes > CHAT_CONFIG.MAX_IMAGE_SIZE) {\n          const errorMsg = `Image is too large (${(sizeBytes / (1024 * 1024)).toFixed(1)}MB). Max allowed: ${CHAT_CONFIG.MAX_IMAGE_SIZE / (1024 * 1024)}MB.`;\n          throw new Error(errorMsg);\n        }\n      }\n    }\n\n    _processAssistantResponse(response) {\n      this._hideThinkingIndicator();\n      if (response.data?.assistant_message) {\n        const { assistant_message, thinking, redacted_thinking } = response.data;\n        this._showMessage(\n          \"assistant\",\n          assistant_message.content,\n          null,\n          thinking,\n          redacted_thinking\n        );\n\n        // --- BEGIN: Token stats + truncation UI wiring ---\n        const uiStats = assistant_message.token_stats || response.data.token_stats || {};\n        const trunc = assistant_message.truncation_details || response.data.truncation_details || {};\n\n        // Set token counts if UI elements exist\n        if (this.domAPI.getElementById) {\n          if (uiStats) {\n            if (this.domAPI.getElementById('tokenStatInput')) this.domAPI.getElementById('tokenStatInput').textContent = uiStats.prompt_tokens_for_last_exchange || uiStats.prompt_tokens || \"0\";\n            if (this.domAPI.getElementById('tokenStatCompletion')) this.domAPI.getElementById('tokenStatCompletion').textContent = uiStats.completion_tokens_for_last_exchange || \"0\";\n            if (this.domAPI.getElementById('tokenStatContext')) this.domAPI.getElementById('tokenStatContext').textContent = uiStats.total_context_tokens_in_conversation || uiStats.current_tokens || \"0\";\n            if (this.domAPI.getElementById('tokenStatContextMax')) this.domAPI.getElementById('tokenStatContextMax').textContent = uiStats.max_context_tokens_for_model || \"0\";\n            if (this.domAPI.getElementById('tokenStatContextMessages')) this.domAPI.getElementById('tokenStatContextMessages').textContent = uiStats.message_count_in_context || \"0\";\n          }\n\n          // Handle UI truncation warning\n          const warningEl = this.domAPI.getElementById('truncationWarning');\n          if (warningEl) {\n            if (trunc && trunc.is_truncated) {\n              warningEl.textContent = `Context trimmed: ${trunc.messages_removed_count || 0} older msgs removed.`;\n              this.domAPI.removeClass(warningEl, 'hidden');\n            } else {\n              this.domAPI.addClass(warningEl, 'hidden');\n              warningEl.textContent = \"\";\n            }\n          }\n        }\n        // --- END: Token stats + truncation UI wiring ---\n\n      } else if (response.data?.assistant_error) {\n        const errMsg = this._extractErrorMessage(response.data.assistant_error);\n        throw new Error(errMsg);\n      }\n    }\n\n    async deleteConversation() {\n      if (!this.currentConversationId) {\n        return false;\n      }\n      if (!this.isAuthenticated()) {\n        return false;\n      }\n      if (!this.isValidProjectId(this.projectId)) {\n        const errorMsg = `Invalid or missing project ID (${this.projectId}). Cannot delete conversation.`;\n        logger.error(\"[ChatManager][deleting conversation]\" + errorMsg, new Error(errorMsg), { context: \"chatManager\" });\n        this._showErrorMessage(\"Cannot delete conversation: invalid/missing project ID.\");\n        return false;\n      }\n\n      // Confirm via DI modal from chatUIEnhancements\n      try {\n        const chatUIEnh = this.DependencySystem?.modules?.get?.('chatUIEnhancements');\n        let confirmDelete = true;\n        if (chatUIEnh?.confirmDeleteConversationModal) {\n          // Use titleElement for title if present\n          const convoTitle = this.titleElement?.textContent || undefined;\n          confirmDelete = await chatUIEnh.confirmDeleteConversationModal(convoTitle);\n        }\n        if (!confirmDelete) return false;\n\n        await this._api(\n          apiEndpoints.CONVERSATION(this.projectId, this.currentConversationId),\n          { method: \"DELETE\" }\n        );\n        this.currentConversationId = null;\n        this._clearMessages();\n        this._removeConversationIdFromURL();\n        return true;\n      } catch (error) {\n        logger.error(\"[ChatManager][deleting conversation]\", error, { context: \"chatManager\" });\n        return false;\n      }\n    }\n\n    setImage(base64Image) {\n      this.currentImage = base64Image;\n    }\n\n    updateModelConfig(config) {\n      logger.info(\"[ChatManager][updateModelConfig] Received config to update:\", config, { context: \"chatManager\" });\n      this.modelConfigAPI.updateConfig(config, { skipNotify: true });\n      this.modelConfig = this.modelConfigAPI.getConfig();\n      logger.info(`[ChatManager][updateModelConfig] Model config updated in chatManager. New modelName: ${this.modelConfig.modelName}`, { context: \"chatManager\", newConfig: this.modelConfig });\n    }\n\n    async _loadConversationHistory() {\n      if (!this.projectId) {\n        if (this.messageContainer) this._showMessage(\"system\", \"Please select a project to start chatting.\");\n        return;\n      }\n\n      const urlParams = new URLSearchParams(this.navAPI.getSearch());\n      const urlChatId = urlParams.get('chatId');\n\n      if (urlChatId) {\n        const loadedSuccessfully = await this.loadConversation(urlChatId);\n        if (loadedSuccessfully) {\n          return;\n        }\n        this._removeConversationIdFromURL();\n      }\n\n      try {\n        const responseData = await this._api(apiEndpoints.CONVERSATIONS(this.projectId), { method: 'GET', params: { limit: 1, sort: 'desc' } });\n        const conversations = responseData?.conversations || (Array.isArray(responseData) ? responseData : []);\n\n        if (conversations && conversations.length > 0) {\n          this.currentConversationId = conversations[0].id;\n          if (this.titleElement) this.titleElement.textContent = conversations[0].title || \"Conversation\";\n          await this._loadMessages(this.currentConversationId);\n          this._updateURLWithConversationId(this.currentConversationId);\n        } else {\n          await this.createNewConversation();\n        }\n      } catch (error) {\n        logger.error(\"[ChatManager][_loadConversationHistory]\", error, { context: \"chatManager\" });\n        await this.createNewConversation();\n      }\n    }\n\n    async _loadMessages(conversationId) {\n      if (!conversationId) {\n        return;\n      }\n      if (!this.messageContainer) {\n        return;\n      }\n      this._showLoadingIndicator();\n\n      try {\n        const response = await this._api(apiEndpoints.MESSAGES(this.projectId, conversationId), { method: 'GET' });\n        const messages = response?.messages || response?.data?.messages || response || [];\n\n        this._clearMessages();\n        messages.forEach(message => {\n          this._showMessage(message.role, message.content, message.id, message.thinking, message.redacted_thinking);\n        });\n        if (this.messageContainer) {\n          this.messageContainer.scrollTop = this.messageContainer.scrollHeight;\n        }\n      } catch (error) {\n        logger.error(\"[ChatManager][_loadMessages]\", error, { context: \"chatManager\" });\n        this._showErrorMessage('Failed to load messages. Please try again.');\n      } finally {\n        this._hideLoadingIndicator();\n      }\n    }\n\n    _updateURLWithConversationId(conversationId) {\n      const searchStr = this.navAPI.getSearch();\n      const urlParams = new URLSearchParams(searchStr);\n      if (urlParams.get(\"chatId\") !== conversationId) {\n        urlParams.set(\"chatId\", conversationId);\n        const basePath = this.navAPI.getPathname();\n        const newUrl = `${basePath}?${urlParams.toString()}`;\n        this.navAPI.pushState(newUrl);\n      }\n    }\n\n    _removeConversationIdFromURL() {\n      const searchStr = this.navAPI.getSearch();\n      const urlParams = new URLSearchParams(searchStr);\n      urlParams.delete(\"chatId\");\n      const basePath = this.navAPI.getPathname();\n      let newUrl = basePath;\n      const paramString = urlParams.toString();\n      if (paramString) {\n        newUrl += `?${paramString}`;\n      }\n      this.navAPI.pushState(newUrl);\n    }\n\n    _showLoadingIndicator() {\n      if (!this.messageContainer) {\n        return;\n      }\n      const indicator = this.domAPI.createElement(\"div\");\n      indicator.id = \"chatLoadingIndicator\";\n      indicator.className = \"loading-indicator\";\n      this.domAPI.setInnerHTML(\n        indicator,\n        `\n            <div class=\"loading-spinner\"></div>\n            <span>Loading conversation...</span>\n        `\n      );\n      this.domAPI.appendChild(this.messageContainer, indicator);\n    }\n\n    _hideLoadingIndicator() {\n      const indicator = this.domAPI.querySelector(\"#chatLoadingIndicator\");\n      if (indicator) {\n        indicator.remove();\n      }\n    }\n\n    _showThinkingIndicator() {\n      const chatUIEnhancements = this.DependencySystem?.modules?.get('chatUIEnhancements');\n      if (chatUIEnhancements && typeof chatUIEnhancements.showTypingIndicator === 'function') {\n        chatUIEnhancements.showTypingIndicator();\n        return;\n      }\n      if (!this.messageContainer) {\n        return;\n      }\n      const indicator = this.domAPI.createElement(\"div\");\n      indicator.id = \"thinkingIndicator\";\n      indicator.className = \"thinking-indicator\";\n      this.domAPI.setInnerHTML(\n        indicator,\n        `\n            <div class=\"thinking-dots\">\n                <span></span><span></span><span></span>\n            </div>\n            <span>Claude is thinking...</span>\n        `\n      );\n      this.domAPI.appendChild(this.messageContainer, indicator);\n      this.messageContainer.scrollTop = this.messageContainer.scrollHeight;\n    }\n\n    _hideThinkingIndicator() {\n      const chatUIEnhancements = this.DependencySystem?.modules?.get('chatUIEnhancements');\n      if (chatUIEnhancements && typeof chatUIEnhancements.hideTypingIndicator === 'function') {\n        chatUIEnhancements.hideTypingIndicator();\n        return;\n      }\n      const el = this.domAPI.querySelector(\"#thinkingIndicator\");\n      if (el) {\n        el.remove();\n      }\n    }\n\n    _showErrorMessage(message) {\n      if (!this.messageContainer) {\n        return;\n      }\n      const errorEl = this.domAPI.createElement(\"div\");\n      errorEl.className = \"error-message\";\n      this.domAPI.setInnerHTML(errorEl, `\n            <div class=\"error-icon\">\n              <svg viewBox=\"0 0 24 24\">\n                  <path d=\"M12 2C6.48 2 2\n                  6.48 2 12s4.48 10 10 10 10-4.48\n                  10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"></path>\n              </svg>\n            </div>\n            <div class=\"error-content\">\n              <h4>Error</h4>\n              <p>${this.DOMPurify.sanitize(message)}</p>\n            </div>\n      `);\n      this.domAPI.appendChild(this.messageContainer, errorEl);\n      this.messageContainer.scrollTop = this.messageContainer.scrollHeight;\n    }\n\n    _clearMessages() {\n      if (this.messageContainer) {\n        this.domAPI.replaceChildren(this.messageContainer);\n      }\n    }\n\n    _extractErrorMessage(err) {\n      if (typeof err?.data === 'string') return err.data;\n      if (typeof err?.response?.data === 'string') return err.response.data;\n      if (err?.data?.message) return String(err.data.message);\n      if (err?.response?.data?.message) return String(err.response.data.message);\n      if (err?.data?.detail) return String(err.data.detail);\n      if (err?.response?.data?.detail) return String(err.response.data.detail);\n      if (err?.detail) return String(err.detail);\n      if (!err) return \"Unknown error occurred\";\n      if (typeof err === \"string\") return err;\n      if (err.message) return err.message;\n      try {\n        return JSON.stringify(err);\n      } catch (jsonErr) {\n        logger.error(\"[ChatManager][_extractErrorMessage]\", jsonErr, { context: 'chatManager' });\n        return \"Unknown error object\";\n      }\n    }\n\n    _handleError(context, error) {\n      // This method is intentionally left empty but we keep it for external compatibility.\n      // Now all errors are logged via logger.error(...) in catch blocks.\n    }\n\n    _renderMessages(messages) {\n      if (!messages || !Array.isArray(messages) || !this.messageContainer) {\n        return;\n      }\n\n      this._clearMessages();\n      messages.forEach(message => {\n        this._showMessage(\n          message.role,\n          message.content,\n          message.id,\n          message.thinking,\n          message.redacted_thinking\n        );\n      });\n\n      if (this.messageContainer) {\n        this.messageContainer.scrollTop = this.messageContainer.scrollHeight;\n      }\n    }\n\n    async _setupUIElements() {\n      await domReadinessService.elementsReady(\n        [\n          this.containerSelector,\n          this.messageContainerSelector,\n          this.inputSelector,\n          this.sendButtonSelector\n        ],\n        {\n          timeout: this.APP_CONFIG?.TIMEOUTS?.CHAT_UI_READY ?? 8000,\n          context: \"chatManager::_setupUIElements\"\n        }\n      );\n\n      this.container = this.domAPI.querySelector(this.containerSelector);\n      this.messageContainer = this.domAPI.querySelector(this.messageContainerSelector);\n      this.inputField = this.domAPI.querySelector(this.inputSelector);\n      this.sendButton = this.domAPI.querySelector(this.sendButtonSelector);\n      this.titleElement = this.titleSelector\n        ? this.domAPI.querySelector(this.titleSelector)\n        : null;\n      this.minimizeButton = this.minimizeButtonSelector\n        ? this.domAPI.querySelector(this.minimizeButtonSelector)\n        : null;\n\n      if (!this.container || !this.messageContainer ||\n        !this.inputField || !this.sendButton) {\n        throw new Error(\"[ChatManager] Chat UI elements not found. Check selectors/template.\");\n      }\n\n      this.domAPI.removeClass(this.container, \"hidden\");\n\n      return true;\n    }\n\n    _setupEventListeners() {\n      this.eventHandlers.cleanupListeners?.({ context: \"chatManager:UI\" });\n      const ctx = { context: \"chatManager:UI\" };\n      const chatUIEnhancements = this.DependencySystem?.modules?.get('chatUIEnhancements');\n\n      // Prefer centralized enhancements' event wiring if available\n      if (chatUIEnhancements && typeof chatUIEnhancements.attachEventHandlers === 'function') {\n        chatUIEnhancements.attachEventHandlers({\n          inputField: this.inputField,\n          sendButton: this.sendButton,\n          messageContainer: this.messageContainer,\n          onSend: (txt) => this.sendMessage(txt).catch(() => { })\n        });\n      } else {\n        if (this.sendButton) {\n          this.eventHandlers.trackListener(\n            this.sendButton,\n            \"click\",\n            safeHandler(() => {\n              const txt = this.inputField?.value ?? \"\";\n              this.sendMessage(txt).catch(() => { });\n            }, \"sendBtnClick\"),\n            ctx\n          );\n        }\n\n        if (this.inputField) {\n          this.eventHandlers.trackListener(\n            this.inputField,\n            \"keydown\",\n            safeHandler((e) => {\n              if (e.key === \"Enter\" && !e.shiftKey) {\n                e.preventDefault();\n                const txt = this.inputField.value;\n                this.sendMessage(txt).catch(() => { });\n              }\n            }, \"inputEnter\"),\n            ctx\n          );\n        }\n      }\n\n      if (this.minimizeButton && this.container) {\n        this.eventHandlers.trackListener(\n          this.minimizeButton,\n          \"click\",\n          safeHandler(() => {\n            this.container.classList.toggle(\"hidden\");\n          }, \"minimiseClick\"),\n          ctx\n        );\n      }\n      return true;\n    }\n  }\n\n  const instance = new ChatManager();\n\n  // --- Live Token Estimation Logic ---\n  // Add debounced event listener to input field after UI setup\n  // (called from initialize or _setupUIElements)\n  instance._estimateCurrentInputTokens = async function () {\n    // Only proceed if inputField, projectId, currentConversationId are set\n    if (!this.inputField || !this.projectId || !this.currentConversationId) return;\n    const currentInputText = this.inputField.value;\n    if (!currentInputText.trim()) {\n      const liveTokenCountEl = this.domAPI.getElementById && this.domAPI.getElementById('liveTokenCount');\n      if (liveTokenCountEl) liveTokenCountEl.textContent = \"0\";\n      // Update token stats manager if available\n      const tokenStatsManager = this.DependencySystem?.modules?.get('tokenStatsManager');\n      if (tokenStatsManager?.setInputTokenCount) {\n        tokenStatsManager.setInputTokenCount(0);\n      }\n      return;\n    }\n    // Debounced call to backend endpoint for token estimation\n    try {\n      const resp = await this.apiRequest(\n        `/api/projects/${this.projectId}/conversations/${this.currentConversationId}/estimate-tokens`,\n        { method: \"POST\", body: { current_input: currentInputText } }\n      );\n      const est = (resp && resp.estimated_tokens_for_input !== undefined)\n        ? resp.estimated_tokens_for_input\n        : (resp && resp.data && resp.data.estimated_tokens_for_input) || null;\n      const liveTokenCountEl = this.domAPI.getElementById && this.domAPI.getElementById('liveTokenCount');\n      if (liveTokenCountEl && est !== null) liveTokenCountEl.textContent = String(est);\n\n      // Update token stats manager if available\n      const tokenStatsManager = this.DependencySystem?.modules?.get('tokenStatsManager');\n      if (tokenStatsManager?.setInputTokenCount && est !== null) {\n        tokenStatsManager.setInputTokenCount(est);\n      }\n    } catch (e) {\n      logger.error(\"[ChatManager][_estimateCurrentInputTokens] Token estimation failed\", e, { context: \"chatManager\" });\n      const liveTokenCountEl = this.domAPI.getElementById && this.domAPI.getElementById('liveTokenCount');\n      if (liveTokenCountEl) liveTokenCountEl.textContent = \"N/A\";\n    }\n  };\n\n  // Attach debounced token estimator to chat input after UI is ready\n  const addLiveTokenEstimationListener = (managerInstance) => {\n    // Only if input field and required fields present\n    if (\n      managerInstance.inputField &&\n      typeof managerInstance.inputField.addEventListener === \"function\" &&\n      typeof managerInstance._estimateCurrentInputTokens === \"function\"\n    ) {\n      // Simple debounce helper, only attach ONCE\n      if (!managerInstance._liveTokenListenerAttached) {\n        let debounceTimeout = null;\n        managerInstance.inputField.addEventListener(\"input\", function () {\n          clearTimeout(debounceTimeout);\n          debounceTimeout = setTimeout(() => {\n            try {\n              managerInstance._estimateCurrentInputTokens();\n            } catch (e) {\n              logger.error(\"[ChatManager][addLiveTokenEstimationListener] Debounced estimation failed\", e, { context: \"chatManager\" });\n            }\n          }, 400);\n        });\n        managerInstance._liveTokenListenerAttached = true;\n      }\n    }\n  };\n\n  // Patch chat manager initialize to add live token estimation wireup\n  const origInit = instance.initialize.bind(instance);\n  instance.initialize = async function (...args) {\n    const out = await origInit(...args);\n    // Try to wire up after UI elements are available\n    if (this.inputField) {\n      addLiveTokenEstimationListener(this);\n    } else {\n      // Fallback: try again after _setupUIElements\n      const origSetup = this._setupUIElements?.bind(this);\n      if (origSetup) {\n        this._setupUIElements = async (...a) => {\n          const z = await origSetup(...a);\n          addLiveTokenEstimationListener(this);\n          return z;\n        };\n      }\n    }\n    return out;\n  };\n\n  return {\n    initialize: instance.initialize.bind(instance),\n    sendMessage: instance.sendMessage.bind(instance),\n    createNewConversation: instance.createNewConversation.bind(instance),\n    loadConversation: instance.loadConversation.bind(instance),\n    deleteConversation: instance.deleteConversation.bind(instance),\n    setImage: instance.setImage.bind(instance),\n    updateModelConfig: instance.updateModelConfig.bind(instance),\n    cleanup: instance.cleanup.bind(instance),\n    chatBus: instance.chatBus\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 59771,
          "_transferSize": 60954,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.560Z",
        "time": 569.5579999883194,
        "timings": {
          "blocked": 438.0439999901382,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07200000000000273,
          "wait": 130.59400000214112,
          "receive": 0.8479999960400164,
          "_blocked_queueing": 3.8609999901382253,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 43
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/projectManager.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1463,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "41999"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"aa0dc85fe814c34c70228bd46258b67e\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 06:54:06 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 41999,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "// Refactored to comply with factory export, pure imports, domReadinessService usage, event bus for module events,\n// and logger-based error handling per guardrails. No top-level logic is executed here; all initialization occurs inside createProjectManager.\n\n// ----------------------------------------------------------------------------\n// 1) Provide a top-level export for isValidProjectId (cannot export from inside a function)\n// ----------------------------------------------------------------------------\nexport function isValidProjectId(id) {\n  if (id == null) return false;\n  const idStr = String(id).trim();\n  const uuidLike = /^[0-9a-f-]{32,36}$/i.test(idStr);\n  const numeric = /^\\d+$/.test(idStr);\n  return uuidLike || numeric;\n}\n\n// ----------------------------------------------------------------------------\n// 2) Primary factory export: createProjectManager\n/**\n * Factory function that creates and configures a ProjectManager instance for managing projects and related resources.\n *\n * The returned object includes the ProjectManager instance, a cleanup method, and utility functions for normalizing project responses, extracting resource lists, and retrying asynchronous operations with backoff.\n *\n * @returns {Object} An object containing:\n *   - `instance`: The ProjectManager instance.\n *   - `cleanup`: Function to destroy the instance and clean up listeners.\n *   - `normalizeProjectResponse`: Utility to normalize project server responses.\n *   - `extractResourceList`: Utility to extract resource arrays from API responses.\n *   - `retryWithBackoff`: Utility to retry async functions with exponential backoff.\n *\n * @throws {Error} If required dependencies (`DependencySystem`, `domReadinessService`, or `logger`) are missing.\n *\n * @remark\n * The ProjectManager instance is registered with the DependencySystem under the name `'projectManager'`.\n */\nexport function createProjectManager({\n  DependencySystem,\n  domReadinessService,\n  logger,\n  timer,\n  ...otherDeps\n} = {}) {\n  if (!DependencySystem) {\n    throw new Error('[createProjectManager] Missing DependencySystem');\n  }\n  if (!domReadinessService) {\n    throw new Error('[createProjectManager] Missing domReadinessService');\n  }\n  if (!logger) {\n    throw new Error('[createProjectManager] Missing logger');\n  }\n\n  const MODULE = 'ProjectManager';\n\n  function normalizeProjectResponse(res) {\n    let data = Array.isArray(res)\n      ? res[0]\n      : res?.data?.id\n        ? res.data\n        : res?.id\n          ? res\n          : null;\n    if (data) {\n      data = { ...data, id: String(data.id ?? data.uuid ?? data.project_id ?? data.projectId ?? '').trim() };\n      // Robust frontend field mapping for key project details\n      data.name =\n        data.name ??\n        data.title ??\n        data.project_name ??\n        \"\";\n      data.description =\n        data.description ??\n        data.details ??\n        data.project_description ??\n        \"\";\n      data.goals =\n        data.goals ??\n        data.project_goals ??\n        \"\";\n      data.customInstructions =\n        data.customInstructions ??\n        data.instructions ??\n        data.custom_instructions ??\n        data.project_instructions ??\n        \"\";\n    }\n    if (!isValidProjectId(data?.id)) {\n      throw new Error('Invalid project ID in server response');\n    }\n    return data;\n  }\n\n  function extractResourceList(res, keys = ['projects', 'conversations', 'files', 'artifacts']) {\n    for (const k of keys) {\n      if (Array.isArray(res?.[k])) return res[k];\n      if (Array.isArray(res?.data?.[k])) return res.data[k];\n      if (res?.[k]?.id) return [res[k]];\n      if (res?.data?.[k]?.id) return [res.data[k]];\n    }\n    if (Array.isArray(res?.data)) return res.data;\n    if (Array.isArray(res)) return res;\n    if (res?.id) return [res];\n    return [];\n  }\n\n  async function retryWithBackoff(fn, maxRetries, timerRef) {\n    let attempt = 0;\n    while (true) {\n      try {\n        return await fn();\n      } catch (err) {\n        logger.error('[ProjectManager][retryWithBackoff-fn]', err, { context: MODULE });\n        // rethrow if 4xx not 429 or if we exceeded max retries\n        if (\n          err &&\n          err.status &&\n          ((err.status >= 400 && err.status < 500 && err.status !== 429) || err.status === 405)\n        ) {\n          throw err;\n        }\n        if (++attempt > maxRetries) {\n          throw err;\n        }\n        await new Promise((r) => timerRef(r, 1000 * attempt));\n      }\n    }\n  }\n\n  class ProjectManager {\n    constructor({\n      app,\n      chatManager,\n      DependencySystem,\n      logger,\n      modelConfig = null,\n      listenerTracker = null,\n      timer: timerFunc = typeof setTimeout === 'function' ? setTimeout : (cb) => cb(),\n      storage = { setItem: () => {}, getItem: () => null },\n      apiEndpoints,\n      apiRequest = null,\n      browserService = null,\n      domReadinessService,\n      domAPI = null\n    } = {}) {\n      if (!DependencySystem) {\n        throw new Error('DependencySystem required');\n      }\n      if (!apiEndpoints) {\n        throw new Error('apiEndpoints required');\n      }\n      if (!domReadinessService) {\n        throw new Error('[createProjectManager] Missing domReadinessService');\n      }\n\n      this.moduleName = MODULE;\n      this.logger = logger;\n      this.DependencySystem = DependencySystem;\n      this.domReadinessService = domReadinessService;\n\n      this.app = app ?? DependencySystem.modules.get('app');\n      this.chatManager = chatManager ?? DependencySystem.modules.get('chatManager');\n      this.modelConfig = modelConfig ?? DependencySystem.modules.get('modelConfig');\n      this.timer = timerFunc;\n      this.storage = storage;\n      this.apiRequest = apiRequest ?? this.app?.apiRequest;\n      this.browserService =\n        browserService ?? DependencySystem.modules.get?.('browserService') ?? null;\n      this.domAPI = domAPI ?? DependencySystem.modules.get('domAPI') ?? null;\n\n      // Instead of dispatching to DOM, maintain an EventTarget bus\n      this.eventBus = new EventTarget();\n\n      // track listeners if provided\n      if (!listenerTracker) {\n        const ev = DependencySystem.modules.get('eventHandlers');\n        if (!ev?.trackListener) {\n          throw new Error('eventHandlers.trackListener missing');\n        }\n        listenerTracker = {\n          add: (t, e, h, dsc) => ev.trackListener(t, e, h, { description: dsc, context: MODULE }),\n          remove: () => ev.cleanupListeners?.({ context: MODULE })\n        };\n      }\n      this.listenerTracker = listenerTracker;\n\n      this._loadingProjects = false;\n      this._loadProjectsDebounceTimer = null;\n      this._DEBOUNCE_DELAY = 300;\n      this._activeProjectId = null; // Internal tracking of the current project ID\n\n      this.apiEndpoints = apiEndpoints;\n      this._CONFIG = {\n        PROJECTS: apiEndpoints.PROJECTS || '/api/projects/',\n        DETAIL: apiEndpoints.DETAIL || '/api/projects/{id}/',\n        STATS: apiEndpoints.STATS || '/api/projects/{id}/stats/',\n        FILES: apiEndpoints.FILES || '/api/projects/{id}/files/',\n        CONVOS: apiEndpoints.CONVOS || '/api/projects/{id}/conversations/',\n        ARTIFACTS: apiEndpoints.ARTIFACTS || '/api/projects/{id}/artifacts/',\n        KB_LIST_URL_TEMPLATE:\n          apiEndpoints.KB_LIST_URL_TEMPLATE || '/api/projects/{id}/knowledge-bases/',\n        KB_DETAIL_URL_TEMPLATE:\n          apiEndpoints.KB_DETAIL_URL_TEMPLATE || '/api/projects/{id}/knowledge-bases/{kb_id}/',\n        ARCHIVE: apiEndpoints.ARCHIVE || '/api/projects/{id}/archive/',\n        FILE_DETAIL: apiEndpoints.FILE_DETAIL || '/api/projects/{id}/files/{file_id}/',\n        FILE_DOWNLOAD: apiEndpoints.FILE_DOWNLOAD || '/api/projects/{id}/files/{file_id}/download/',\n        ARTIFACT_DOWNLOAD:\n          apiEndpoints.ARTIFACT_DOWNLOAD || '/api/projects/{id}/artifacts/{artifact_id}/download/'\n      };\n    }\n\n    _req(url, opts = {}, contextLabel = 'n/a') {\n      if (typeof this.apiRequest !== 'function') {\n        throw new Error('[ProjectManager] apiRequest missing');\n      }\n      /* Always include cookies so authenticated calls reach the server.\n         Merge with caller-supplied opts without overwriting them.          */\n      const mergedOpts =\n        opts && typeof opts === 'object'\n          ? { credentials: 'include', ...opts }\n          : { credentials: 'include' };\n\n      return this.apiRequest(url, mergedOpts, contextLabel);\n    }\n\n    _emit(event, detail) {\n      /* dispatch on local bus (keeps module-internal listeners) */\n      this.eventBus.dispatchEvent(new CustomEvent(event, { detail }));\n\n      /* additionally broadcast to the global document so other components\n         (e.g. ProjectListComponent, ProjectDashboard) that listen on\n         document receive the same updates. All DOM access goes through\n         the DI-provided domAPI to respect guardrails. */\n      try {\n        if (this.domAPI?.getDocument) {\n          const doc = this.domAPI.getDocument();\n          if (doc) {\n            /* use DependencySystem-provided eventHandlers.createCustomEvent\n               when available, else fall back to new CustomEvent               */\n            const evh = this.DependencySystem?.modules?.get?.('eventHandlers');\n            const domEvt = evh?.createCustomEvent\n              ? evh.createCustomEvent(event, { detail })\n              : new CustomEvent(event, { detail });\n\n            this.domAPI.dispatchEvent(doc, domEvt);\n          }\n        }\n      } catch (err) {\n        /* non-fatal: log and continue */\n        this.logger?.warn?.(`[ProjectManager] failed to rebroadcast \"${event}\"`, err, {\n          context: this.moduleName\n        });\n      }\n    }\n\n    _authOk(failEvent, extraDetail = {}) {\n      const appModule = this.DependencySystem?.modules?.get('appModule');\n      if (appModule?.state?.isAuthenticated) {\n        logger.debug(`[${MODULE}][_authOk] Auth check passed via appModule.state.`, { context: MODULE });\n        return true;\n      }\n      // Fallback to direct auth module check if appModule isn't definitive yet or for robustness\n      const auth = this.DependencySystem?.modules?.get?.('auth');\n      if (auth?.isAuthenticated?.()) {\n        logger.debug(`[${MODULE}][_authOk] Auth check passed via auth.isAuthenticated().`, { context: MODULE });\n        return true;\n      }\n      logger.warn(`[${MODULE}][_authOk] Auth check failed. Emitting ${failEvent}.`, { failEvent, extraDetail, context: MODULE });\n      this._emit(failEvent, { error: 'auth_required', ...extraDetail });\n      return false;\n    }\n\n    _handleErr(eventName, err, fallback, extra = {}) {\n      this._emit(eventName, { error: err?.message, ...extra });\n      return fallback;\n    }\n\n    async loadProjects(filter = 'all') {\n      if (this._loadProjectsDebounceTimer) {\n        clearTimeout(this._loadProjectsDebounceTimer);\n      }\n      return new Promise((resolve) => {\n        this._loadProjectsDebounceTimer = this.timer.call(null, async () => {\n          if (this._loadingProjects) {\n            resolve(this.projects || []);\n            return;\n          }\n          if (!this._authOk('projectsLoaded', { filter })) {\n            resolve([]);\n            return;\n          }\n          this._loadingProjects = true;\n          this._emit('projectsLoading', { filter });\n          try {\n            let baseUrl;\n            if (typeof this.apiEndpoints.USER_PROJECTS === 'function') {\n              baseUrl = this.apiEndpoints.USER_PROJECTS();\n            } else if (this.apiEndpoints.USER_PROJECTS) {\n              baseUrl = this.apiEndpoints.USER_PROJECTS;\n            } else if (typeof this.apiEndpoints.PROJECTS === 'function') {\n              baseUrl = this.apiEndpoints.PROJECTS();\n            } else {\n              baseUrl = this.apiEndpoints.PROJECTS || this._CONFIG.PROJECTS;\n            }\n\n            if (typeof baseUrl === 'string' && !baseUrl.endsWith('/') && !baseUrl.includes('?')) {\n              baseUrl += '/';\n            }\n            const origin = this.browserService?.getLocation?.().origin || '';\n            const urlObj = new URL(baseUrl, origin);\n            if (filter && filter !== 'all') {\n              urlObj.searchParams.set('filter', filter);\n            } else {\n              urlObj.searchParams.delete('filter');\n            }\n            const res = await this._req(String(urlObj), undefined, 'loadProjects');\n            const list = extractResourceList(res, ['projects']);\n            this.projects = list;\n            this._emit('projectsLoaded', { projects: list, filter });\n            resolve(list);\n          } catch (err) {\n            logger.error('[ProjectManager][loadProjects]', err, { context: MODULE });\n            resolve(this._handleErr('projectsLoaded', err, []));\n          } finally {\n            this._loadingProjects = false;\n          }\n        }, this._DEBOUNCE_DELAY);\n      });\n    }\n\n    async loadProjectDetails(id) {\n      if (!isValidProjectId(id)) {\n        throw new Error('Invalid projectId');\n      }\n      if (!this.app || !this.app.state || !this.app.state.currentUser) {\n        this._emit('projectDetailsError', { error: 'User not authenticated', status: 403 });\n        return null;\n      }\n      if (!this._authOk('projectDetailsError', { id })) {\n        return null;\n      }\n      let detailUrlTemplate;\n      if (typeof this.apiEndpoints.DETAIL === 'function') {\n        detailUrlTemplate = null;\n      } else {\n        detailUrlTemplate = String(this.apiEndpoints.DETAIL || this._CONFIG.DETAIL);\n      }\n      let detailUrl;\n      if (detailUrlTemplate) {\n        if (\n          detailUrlTemplate.includes('{id}') &&\n          !detailUrlTemplate.endsWith('/') &&\n          detailUrlTemplate.substring(detailUrlTemplate.indexOf('{id}') + '{id}'.length).length === 0\n        ) {\n          detailUrlTemplate += '/';\n        }\n        detailUrl = detailUrlTemplate.replace('{id}', id);\n      } else if (typeof this.apiEndpoints.DETAIL === 'function') {\n        detailUrl = this.apiEndpoints.DETAIL(id);\n      } else {\n        throw new Error('Invalid DETAIL endpoint configuration');\n      }\n\n      try {\n        const detailRes = await this._req(detailUrl, undefined, 'loadProjectDetails');\n        const currentProjectObj = normalizeProjectResponse(detailRes);\n\n        // Race condition check: Only update global state if the loaded project is still the active one.\n        const globalCurrentProjectId = this.app?.getCurrentProject?.()?.id;\n        if (globalCurrentProjectId === id) {\n          this.logger.info(`[${MODULE}][loadProjectDetails] Setting current project in app state.`, { projectId: id, context: MODULE });\n          this.app.setCurrentProject(currentProjectObj); // This will trigger AppBus 'currentProjectChanged'\n        } else {\n          this.logger.warn(`[${MODULE}][loadProjectDetails] Global current project changed (${globalCurrentProjectId}) while loading details for ${id}. Not updating global state.`, { context: MODULE });\n          // Decide if we should still emit 'projectLoaded' on local bus or a different event.\n          // For now, let's assume other components will react to AppBus 'currentProjectChanged'.\n          // If this component specifically needs to signal it loaded 'an old project', add custom event.\n          this._emit('projectDetailsLoadedForStaleId', { loadedProject: currentProjectObj, currentGlobalProjectId: globalCurrentProjectId, context: MODULE });\n          return currentProjectObj; // Return the loaded data, but don't make it the global current\n        }\n        \n        this._emit('projectLoaded', currentProjectObj); // Emit on local bus\n\n        if (currentProjectObj.archived) {\n          this._emit('projectArchivedNotice', { id: currentProjectObj.id });\n          return { ...currentProjectObj };\n        }\n\n        let kbLoadResult = { status: 'fulfilled', value: null };\n        if (currentProjectObj && currentProjectObj.knowledge_base_id) {\n          try {\n            const kbValue = await this.loadProjectKnowledgeBase(\n              currentProjectObj.id,\n              currentProjectObj.knowledge_base_id\n            );\n            kbLoadResult = { status: 'fulfilled', value: kbValue };\n          } catch (kbError) {\n            logger.error('[ProjectManager][loadProjectDetails-kbError]', kbError, { context: MODULE });\n            kbLoadResult = { status: 'rejected', reason: kbError };\n          }\n        } else {\n          this._emit('projectKnowledgeBaseLoaded', { id, knowledgeBase: null });\n        }\n\n        const otherResourcesPromises = [\n          this.loadProjectStats(id),\n          this.loadProjectFiles(id),\n          this.loadProjectConversations(id),\n          this.loadProjectArtifacts(id)\n        ];\n        const otherResults = await Promise.allSettled(otherResourcesPromises);\n        const [stats, files, convos, artifacts] = otherResults;\n\n        const allResults = [kbLoadResult, stats, files, convos, artifacts];\n        const criticalErrors = allResults\n          .filter((r) => r.status === 'rejected')\n          .map((r) => r.reason);\n        if (criticalErrors.length > 0) {\n          this._emit('projectDetailsLoadError', { id, errors: criticalErrors });\n        }\n\n        this._emit('projectDetailsFullyLoaded', { projectId: currentProjectObj.id });\n        return { ...currentProjectObj };\n      } catch (err) {\n        logger.error('[ProjectManager][loadProjectDetails]', err, { context: MODULE });\n        const userId = this.app?.state?.currentUser?.id || null;\n        const status = err?.status || err?.response?.status;\n        const endpoint = detailUrl;\n        const backendDetail = err?.detail || err?.response?.data?.detail || err?.response?.detail;\n        this._handleErr('projectDetailsError', err, null, {\n          projectId: id,\n          userId,\n          status,\n          endpoint,\n          backendDetail,\n          originalError: err\n        });\n        if (status === 404) {\n          this._emit('projectNotFound', { id });\n        }\n        return null;\n      }\n    }\n\n    async loadProjectKnowledgeBase(projectId, knowledgeBaseId) {\n      if (!knowledgeBaseId) {\n        this._emit('projectKnowledgeBaseLoaded', { id: projectId, knowledgeBase: null });\n        return null;\n      }\n      try {\n        const url = this._CONFIG.KB_DETAIL_URL_TEMPLATE\n          .replace('{id}', projectId)\n          .replace('{kb_id}', knowledgeBaseId);\n        const res = await this._req(url, undefined, 'loadProjectKnowledgeBase');\n        const kb = res?.data || res;\n        if (!kb || !kb.id) {\n          this._emit('projectKnowledgeBaseLoaded', { id: projectId, knowledgeBase: null });\n          return null;\n        } else {\n          this._emit('projectKnowledgeBaseLoaded', { id: projectId, knowledgeBase: kb });\n          return kb;\n        }\n      } catch (err) {\n        logger.error('[ProjectManager][loadProjectKnowledgeBase]', err, { context: MODULE });\n        this._emit('projectKnowledgeBaseLoaded', { id: projectId, knowledgeBase: null });\n        throw err;\n      }\n    }\n\n    async loadProjectStats(id) {\n      try {\n        const res = await this._req(\n          this._CONFIG.STATS.replace('{id}', id),\n          undefined,\n          'loadProjectStats'\n        );\n        const stats = res?.data ?? {};\n        this._emit('projectStatsLoaded', { id, ...stats });\n        return stats;\n      } catch (err) {\n        logger.error('[ProjectManager][loadProjectStats]', err, { context: MODULE });\n        return this._handleErr('projectStatsError', err, {});\n      }\n    }\n\n    async loadProjectFiles(id) {\n      try {\n        const res = await this._req(\n          this._CONFIG.FILES.replace('{id}', id),\n          undefined,\n          'loadProjectFiles'\n        );\n        const files = extractResourceList(res, ['files', 'file']) ?? [];\n        this._emit('projectFilesLoaded', { id, files });\n        return files;\n      } catch (err) {\n        logger.error('[ProjectManager][loadProjectFiles]', err, { context: MODULE });\n        return this._handleErr('projectFilesError', err, []);\n      }\n    }\n\n    async loadProjectConversations(id) {\n      try {\n        const res = await this._req(\n          this._CONFIG.CONVOS.replace('{id}', id),\n          undefined,\n          'loadProjectConversations'\n        );\n        const conversations = extractResourceList(res, ['conversations']) ?? [];\n        this._emit('projectConversationsLoaded', { id, conversations });\n        return conversations;\n      } catch (err) {\n        logger.error('[ProjectManager][loadProjectConversations]', err, { context: MODULE });\n        return this._handleErr('projectConversationsError', err, []);\n      }\n    }\n\n    async loadProjectArtifacts(id) {\n      try {\n        const res = await this._req(\n          this._CONFIG.ARTIFACTS.replace('{id}', id),\n          undefined,\n          'loadProjectArtifacts'\n        );\n        const artifacts = extractResourceList(res, ['artifacts']) ?? [];\n        this._emit('projectArtifactsLoaded', { id, artifacts });\n        return artifacts;\n      } catch (err) {\n        logger.error('[ProjectManager][loadProjectArtifacts]', err, { context: MODULE });\n        return this._handleErr('projectArtifactsError', err, []);\n      }\n    }\n\n    async saveProject(id, payload) {\n      if (!this._authOk('projectSaveError', { id })) throw new Error('auth');\n      const isUpdate = Boolean(id);\n      const url = isUpdate ? this._CONFIG.DETAIL.replace('{id}', id) : this._CONFIG.PROJECTS;\n      const method = isUpdate ? 'PATCH' : 'POST';\n      try {\n        const res = await this._req(url, { method, body: payload }, 'saveProject');\n        const proj = res?.data ?? res;\n        this._emit(isUpdate ? 'projectUpdated' : 'projectCreated', proj);\n        return proj;\n      } catch (err) {\n        logger.error('[ProjectManager][saveProject]', err, { context: MODULE });\n        this._handleErr('projectSaveError', err, null, {\n          method: 'saveProject',\n          endpoint: url\n        });\n        throw err;\n      }\n    }\n\n    async deleteProject(id) {\n      if (!this._authOk('projectDeleteError', { id })) throw new Error('auth');\n      try {\n        await this._req(\n          this._CONFIG.DETAIL.replace('{id}', id),\n          { method: 'DELETE' },\n          'deleteProject'\n        );\n        if (this.currentProject?.id === id) {\n          this.currentProject = null;\n        }\n        this._emit('projectDeleted', { id });\n      } catch (err) {\n        logger.error('[ProjectManager][deleteProject]', err, { context: MODULE });\n        this._handleErr('projectDeleteError', err, null, {\n          method: 'deleteProject',\n          endpoint: this._CONFIG.DETAIL.replace('{id}', id)\n        });\n        throw err;\n      }\n    }\n\n    async toggleArchiveProject(id) {\n      if (!this._authOk('projectArchiveToggled', { id })) throw new Error('auth');\n      try {\n        const res = await this._req(\n          this._CONFIG.ARCHIVE.replace('{id}', id),\n          { method: 'PATCH' },\n          'toggleArchiveProject'\n        );\n        this._emit('projectArchiveToggled', {\n          id,\n          archived: res?.archived ?? !this.currentProject?.archived\n        });\n        return res;\n      } catch (err) {\n        logger.error('[ProjectManager][toggleArchiveProject]', err, { context: MODULE });\n        this._handleErr('projectArchiveToggled', err, null, {\n          method: 'toggleArchiveProject',\n          endpoint: this._CONFIG.ARCHIVE.replace('{id}', id)\n        });\n        throw err;\n      }\n    }\n\n    async createConversation(projectId, opts = {}) {\n      try {\n        this.storage.setItem?.('selectedProjectId', projectId);\n        return await this.chatManager.createNewConversation(projectId, opts);\n      } catch (origErr) {\n        logger.error('[ProjectManager][createConversation]', origErr, { context: MODULE });\n        let finalErr = origErr;\n        const msg = String(origErr?.message ?? '').toLowerCase();\n        if (msg.includes('no knowledge base')) {\n          try {\n            await this._ensureKnowledgeBase(projectId);\n            return await this.chatManager.createNewConversation(projectId, opts);\n          } catch (retryErr) {\n            logger.error('[ProjectManager][createConversation-retryErr]', retryErr, { context: MODULE });\n            finalErr = retryErr;\n          }\n        }\n        this._handleErr('conversationCreateError', finalErr, null, {\n          source: 'createConversation',\n          detail: { projectId }\n        });\n        throw finalErr;\n      }\n    }\n\n    // Get projectId from several possible sources for conversation/context flow robustness\n    _getEffectiveProjectId() {\n      // Priority order: this.currentProjectId, this.currentProject?.id, app.getCurrentProject().id, app.getProjectId(), browserService location param\n      const candidates = [\n        this.currentProjectId,\n        this.currentProject?.id,\n        (this.app?.getCurrentProject && this.app.getCurrentProject()?.id),\n        (this.app?.getProjectId && this.app.getProjectId())\n      ];\n      for (const id of candidates) {\n        if (isValidProjectId(id)) return id;\n      }\n      // Fallback: extract from URL if browserService provides it\n      const urlSearch = this.browserService?.getLocation?.().search;\n      if (urlSearch) {\n        try {\n          const params = new URLSearchParams(urlSearch);\n          const candidate = params.get('project');\n          if (isValidProjectId(candidate)) return candidate;\n        } catch {\n          // Ignore URL parsing errors for robustness (URL may be malformed or not present)\n        }\n      }\n      return null;\n    }\n\n    async getConversation(conversationId) {\n      if (!this._authOk('conversationLoadError', { conversationId })) {\n        throw new Error('auth');\n      }\n      const projectId = this._getEffectiveProjectId();\n      if (!isValidProjectId(projectId)) {\n        this._handleErr('conversationLoadError', new Error('No valid project context'), null, {\n          source: 'getConversation',\n          detail: { conversationId }\n        });\n        throw new Error('No valid project context');\n      }\n      try {\n        const endpoint = `/api/projects/${projectId}/conversations/${conversationId}/`;\n        const res = await this._req(endpoint, undefined, 'getConversation');\n        const convo = res?.conversation;\n        if (!convo || !convo.id) {\n          throw new Error('Invalid conversation data received');\n        }\n        return convo;\n      } catch (err) {\n        logger.error('[ProjectManager][getConversation]', err, { context: MODULE });\n        this._handleErr('conversationLoadError', err, null, {\n          source: 'getConversation',\n          detail: { conversationId, projectId }\n        });\n        throw err;\n      }\n    }\n\n    async deleteProjectConversation(projectId, conversationId) {\n      try {\n        this.storage.setItem?.('selectedProjectId', projectId);\n        await this.chatManager.deleteConversation(conversationId);\n        return true;\n      } catch (err) {\n        logger.error('[ProjectManager][deleteProjectConversation]', err, { context: MODULE });\n        this._handleErr('deleteProjectConversationError', err, null, {\n          source: 'deleteProjectConversation',\n          detail: { conversationId, projectId }\n        });\n        throw err;\n      }\n    }\n\n    // getCurrentProject is now synchronous and does not block on app:ready.\n    getCurrentProject() {\n      if (this.app && typeof this.app.getCurrentProject === 'function') {\n        const proj = this.app.getCurrentProject();\n        // this.logger.debug(`[${MODULE}][getCurrentProject] Fetched from app.getCurrentProject()`, { projectId: proj?.id, context: MODULE });\n        return proj;\n      }\n      this.logger.warn(`[${MODULE}][getCurrentProject] app.getCurrentProject is not available.`, { context: MODULE });\n      return null;\n    }\n\n    // This method is for when ProjectManager ITSELF decides to change the project.\n    // It updates the global state via app.setCurrentProject.\n    // For reacting to external changes, it should listen to AppBus.\n    setCurrentProject(project) {\n      if (!project || !project.id) {\n        this.logger.warn(`[${MODULE}][setCurrentProject] Invalid project object provided.`, { project, context: MODULE });\n        return null;\n      }\n      this.logger.info(`[${MODULE}][setCurrentProject] Called to set project globally.`, { projectId: project.id, context: MODULE });\n      this._activeProjectId = project.id; // Update internal tracker\n      this.storage?.setItem?.('selectedProjectId', project.id);\n\n      if (this.app && typeof this.app.setCurrentProject === 'function') {\n        this.logger.debug(`[${MODULE}][setCurrentProject] Calling app.setCurrentProject().`, { projectId: project.id, context: MODULE });\n        this.app.setCurrentProject(project); // This will trigger AppBus event\n      } else {\n        this.logger.warn(`[${MODULE}][setCurrentProject] app.setCurrentProject is not available. Cannot set project globally.`, { context: MODULE });\n        // If app.setCurrentProject is not available, we might need to manually emit on local bus\n        // but the design implies app.setCurrentProject is the primary way.\n        this._emit('currentProjectChanged', { project }); // Local emit if global fails\n      }\n      return project;\n    }\n\n    async prepareFileUploads(projectId, fileList) {\n      const validatedFiles = [];\n      const invalidFiles = [];\n      for (const file of fileList) {\n        if (file.size > 30000000) {\n          invalidFiles.push({ file, reason: 'Max size exceeded (30MB)' });\n        } else {\n          validatedFiles.push({ file });\n        }\n      }\n      return { validatedFiles, invalidFiles };\n    }\n\n    async uploadFileWithRetry(projectId, { file }, maxRetries = 3) {\n      return retryWithBackoff(\n        async () => {\n          const formData = new FormData();\n          formData.append('file', file);\n          formData.append('projectId', projectId);\n          await this._req(\n            `/api/projects/${projectId}/files/`,\n            { method: 'POST', body: formData },\n            'uploadFileWithRetry'\n          );\n          return true;\n        },\n        maxRetries,\n        this.timer\n      );\n    }\n\n    async deleteFile(projectId, fileId) {\n      if (!this._authOk('projectFileDeleteError', { projectId, fileId })) {\n        throw new Error('auth');\n      }\n      const url = this._CONFIG.FILE_DETAIL.replace('{id}', projectId).replace('{file_id}', fileId);\n      return this._req(url, { method: 'DELETE' }, 'deleteFile');\n    }\n\n    async _ensureKnowledgeBase(projectId) {\n      if (!projectId) return null;\n      const listUrl = this._CONFIG.KB_LIST_URL_TEMPLATE.replace('{id}', projectId);\n      try {\n        const res = await this._req(listUrl, undefined, '_ensureKnowledgeBase:list');\n        const items = Array.isArray(res?.data) ? res.data : Array.isArray(res) ? res : [];\n        const active = items.find((kb) => kb && kb.is_active !== false);\n        if (active) return active;\n      } catch (listError) {\n        logger.error('[ProjectManager][_ensureKnowledgeBase:listError]', listError, { context: MODULE });\n        this._emit('projectKnowledgeBaseWarning', {\n          projectId,\n          message: `No active knowledge base found: ${listError?.message || 'Unknown error'}`\n        });\n      }\n      try {\n        const payload = {\n          name: 'Project Knowledge Base',\n          embedding_model: 'all-MiniLM-L6-v2',\n          is_active: true\n        };\n        const createRes = await this._req(\n          listUrl,\n          { method: 'POST', body: payload },\n          '_ensureKnowledgeBase:create'\n        );\n        const kbData = createRes?.data ?? createRes;\n        this._emit('projectKnowledgeBaseCreated', {\n          projectId,\n          knowledgeBaseId: kbData?.id,\n          message: `Created new knowledge base for project ${projectId}`\n        });\n        return kbData;\n      } catch (createError) {\n        logger.error('[ProjectManager][_ensureKnowledgeBase:createError]', createError, { context: MODULE });\n        this._emit('projectKnowledgeBaseError', {\n          projectId,\n          error: createError,\n          message: `Failed to create knowledge base for project ${projectId}: ${\n            createError?.message || 'Unknown error'\n          }`\n        });\n        throw createError;\n      }\n    }\n\n    async downloadFile(projectId, fileId) {\n      const url = this._CONFIG.FILE_DOWNLOAD.replace('{id}', projectId).replace('{file_id}', fileId);\n      return this._req(url, undefined, 'downloadFile');\n    }\n\n    async downloadArtifact(projectId, artifactId) {\n      const url = this._CONFIG.ARTIFACT_DOWNLOAD.replace('{id}', projectId).replace('{artifact_id}', artifactId);\n      return this._req(url, undefined, 'downloadArtifact');\n    }\n\n    async createProject(projectData) {\n      const response = await this._req(\n        this._CONFIG.PROJECTS,\n        { method: 'POST', body: projectData },\n        'createProject'\n      );\n      const project = response.data || response;\n      if (!project || !project.id) {\n        throw new Error('Invalid project response');\n      }\n      const ensureConversation = async () => {\n        const hasConvo =\n          (Array.isArray(project.conversations) && project.conversations.length > 0) ||\n          Number(project.conversation_count) > 0;\n        if (hasConvo) return project.conversations?.[0];\n        return await this.createDefaultConversation(project.id);\n      };\n      const conversation = await ensureConversation();\n      if (conversation) {\n        project.conversations = [conversation];\n        project.conversation_count = 1;\n      }\n      this._emit('projectCreated', project);\n      this._emit('projectConversationsLoaded', { id: project.id, conversations: project.conversations });\n      return project;\n    }\n\n    async createDefaultConversation(projectId) {\n      try {\n        const response = await this._req(\n          `/api/projects/${projectId}/conversations/`,\n          {\n            method: 'POST',\n            body: {\n              title: 'Default Conversation',\n              model_id:\n                this.modelConfig?.getConfig?.()?.modelName || 'claude-3-sonnet-20240229'\n            }\n          },\n          'createDefaultConversation'\n        );\n        const conversation =\n          response?.data?.conversation || response?.data || response?.conversation || response;\n        if (!conversation || !conversation.id) {\n          throw new Error('Failed to create default conversation');\n        }\n        return conversation;\n      } catch (err) {\n        logger.error('[ProjectManager][createDefaultConversation]', err, { context: MODULE });\n        return null;\n      }\n    }\n\n    async retryWithBackoff(fn, maxRetries = 3) {\n      return retryWithBackoff(fn, maxRetries, this.timer);\n    }\n\n    async initialize() {\n      this.logger.info(`[${MODULE}] Initializing...`, { context: MODULE });\n      await this.domReadinessService.dependenciesAndElements({\n        deps: ['app', 'auth', 'AppBus', 'eventHandlers'], // Ensure AppBus and eventHandlers are available for listeners\n        timeout: 30000,\n        context: `${MODULE}_dependenciesAndElements_wait1`\n      });\n      this.logger.debug(`[${MODULE}] Core dependencies (app, auth, AppBus, eventHandlers) ready.`, { context: MODULE });\n\n      const auth = this.DependencySystem.modules.get('auth');\n      const appModule = this.DependencySystem.modules.get('appModule');\n\n      if (auth && !auth.isReady()) {\n        this.logger.info(`[${MODULE}] Auth module not ready yet, waiting for authReady event.`, { context: MODULE });\n        await new Promise(resolve => {\n            this.listenerTracker.add(auth.AuthBus, 'authReady', () => {\n                this.logger.info(`[${MODULE}] Received authReady event.`, { context: MODULE });\n                resolve();\n            }, 'ProjectManager_AuthReadyListener', { once: true });\n        });\n      }\n      this.logger.info(`[${MODULE}] Auth module is ready. Current appModule auth state: ${appModule?.state?.isAuthenticated}`, { context: MODULE });\n      \n      this._setupEventListeners();\n\n      // Initialize with current project if already set in app state\n      const initialProject = this.app?.getCurrentProject?.();\n      if (initialProject?.id) {\n        this.logger.info(`[${MODULE}] Initial project found from app state. Setting active project ID.`, { projectId: initialProject.id, context: MODULE });\n        this._activeProjectId = initialProject.id;\n        // Optionally, load project details or list if required on init and project exists\n        // For now, deferring to explicit calls or UI-triggered loads.\n      } else {\n         this.logger.info(`[${MODULE}] No initial project found from app state.`, { context: MODULE });\n      }\n      \n      this.logger.info(`[${MODULE}] Initialization complete.`, { context: MODULE });\n      return true;\n    }\n\n    _setupEventListeners() {\n      this.logger.debug(`[${MODULE}] Setting up event listeners.`, { context: MODULE });\n      const appBus = this.DependencySystem.modules.get('AppBus');\n      const authBus = this.DependencySystem.modules.get('auth')?.AuthBus;\n\n      if (appBus) {\n        this.listenerTracker.add(appBus, 'currentProjectChanged', this._handleCurrentProjectChanged.bind(this), 'ProjectManager_AppBus_CurrentProjectChanged');\n        this.logger.debug(`[${MODULE}] Subscribed to AppBus \"currentProjectChanged\".`, { context: MODULE });\n      } else {\n        this.logger.warn(`[${MODULE}] AppBus not available. Cannot subscribe to \"currentProjectChanged\".`, { context: MODULE });\n      }\n\n      if (authBus) {\n        this.listenerTracker.add(authBus, 'authStateChanged', this._handleAuthStateChanged.bind(this), 'ProjectManager_AuthBus_AuthStateChanged');\n        this.logger.debug(`[${MODULE}] Subscribed to AuthBus \"authStateChanged\".`, { context: MODULE });\n      } else {\n        this.logger.warn(`[${MODULE}] AuthBus not available. Cannot subscribe to \"authStateChanged\".`, { context: MODULE });\n      }\n    }\n\n    _handleCurrentProjectChanged(event) {\n      const newProject = event?.detail?.project;\n      const oldProject = event?.detail?.previousProject;\n      this.logger.info(`[${MODULE}] Received \"currentProjectChanged\" event via AppBus.`, {\n        newProjectId: newProject?.id,\n        oldProjectId: oldProject?.id,\n        context: MODULE\n      });\n      if (newProject?.id && newProject.id !== this._activeProjectId) {\n        this.logger.debug(`[${MODULE}] Updating internal active project ID to ${newProject.id}.`, { context: MODULE });\n        this._activeProjectId = newProject.id;\n        // Clear any data specific to the old project, IF projectManager caches such details.\n        // For example, if this.projects was a list of files for ONLY the _activeProjectId, clear it.\n        // Currently, loadProjects fetches all projects, so it's less of an issue for the main list.\n        // However, if specific details like current project's files, stats etc., were cached directly\n        // on `this`, they would need clearing here.\n        // Example: if (this.detailedFilesCache?.projectId !== newProject.id) this.detailedFilesCache = null;\n\n        // Optionally, trigger a reload of project-specific data if this component is responsible\n        // for displaying details of the active project.\n        // e.g., if it maintained a this.detailedProjectObject, it might call this.loadProjectDetails(newProject.id);\n        // For now, this manager primarily provides methods; UI components would drive reloads.\n\n      } else if (!newProject?.id) {\n        this.logger.info(`[${MODULE}] Current project cleared (null). Updating internal active ID.`, { context: MODULE });\n        this._activeProjectId = null;\n        // Clear project-specific cached data\n      }\n    }\n\n    _handleAuthStateChanged(event) {\n      const isAuthenticated = event?.detail?.authenticated;\n      this.logger.info(`[${MODULE}] Received \"authStateChanged\" event. Authenticated: ${isAuthenticated}`, { detail: event?.detail, context: MODULE });\n      if (!isAuthenticated) {\n        this.logger.info(`[${MODULE}] User is now unauthenticated. Clearing cached projects list and active project ID.`, { context: MODULE });\n        this.projects = []; // Clear cached list of all projects\n        this._activeProjectId = null;\n        // Emit an event that project data has been cleared due to auth change, if other parts rely on this.\n        this._emit('projectDataClearedDueToAuth', { reason: 'User unauthenticated' });\n      } else {\n        // User is now authenticated. We might want to trigger a reload of projects.\n        // However, UI components or app.js init flow typically handle initial loads post-auth.\n        // Only trigger if projectManager is expected to proactively refresh its list on login.\n        this.logger.debug(`[${MODULE}] User is now authenticated. Project list can be reloaded if necessary.`, { context: MODULE });\n        // Example: this.loadProjects(); // If proactive reload is desired.\n      }\n    }\n\n    destroy() {\n      this.logger.info(`[${MODULE}] Destroying and cleaning up listeners.`, { context: MODULE });\n      this.listenerTracker?.remove?.(); // Cleans up listeners tracked via eventHandlers\n      if (this._loadProjectsDebounceTimer) {\n        clearTimeout(this._loadProjectsDebounceTimer);\n      }\n    }\n  }\n\n  // ----------------------------------------------------------------------------\n  // 4) Instantiate manager and expose cleanup in the returned object\n  // ----------------------------------------------------------------------------\n  const fullDeps = {\n    DependencySystem,\n    domReadinessService,\n    logger,\n    timer,\n    ...otherDeps\n  };\n  const instance = new ProjectManager(fullDeps);\n  DependencySystem.register?.('projectManager', instance);\n\n  function cleanup() {\n    instance.destroy();\n  }\n\n  return {\n    instance,\n    cleanup,\n    normalizeProjectResponse,\n    extractResourceList,\n    retryWithBackoff\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 41999,
          "_transferSize": 43182,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.560Z",
        "time": 569.0880000038305,
        "timings": {
          "blocked": 438.02699999420065,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06499999999999773,
          "wait": 129.5620000043828,
          "receive": 1.4340000052470714,
          "_blocked_queueing": 3.8729999942006543,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 44
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/modalManager.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1461,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "39345"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"b26b36a36c919969939ddc95b3120bd7\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 08:36:36 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 39345,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "import { MODAL_MAPPINGS } from './modalConstants.js';\n\n/**\n * Provides methods to show/hide mapped modals, handle scroll lock,\n * manages <dialog> elements (or fallback), and tracks event cleanup.\n */\nclass ModalManager {\n  /**\n   * @constructor\n   * @param {Object} opts - Dependencies config object.\n   * @param {Object} [opts.eventHandlers]\n   * @param {Object} [opts.DependencySystem]\n   * @param {Object} [opts.domAPI]\n   * @param {Object} [opts.browserService]\n   * @param {Object} [opts.modalMapping]\n   * @param {Object} [opts.domPurify]\n   * @param {Object} [opts.logger]\n   * @param {Object} [opts.errorReporter]\n   */\n  constructor({\n    eventHandlers,\n    domAPI,\n    browserService,\n    DependencySystem,\n    modalMapping,\n    domPurify,\n    logger,            // New: injectable logger\n    errorReporter      // New: injectable error reporting\n  } = {}) {\n    this.DependencySystem = DependencySystem || undefined;\n    this.eventHandlers =\n      eventHandlers ||\n      this.DependencySystem?.modules?.get?.('eventHandlers') ||\n      undefined;\n    this.domAPI = domAPI || this.DependencySystem?.modules?.get?.('domAPI');\n    if (!this.domAPI) {\n      throw new Error('[ModalManager] domAPI DI not provided');\n    }\n    this.browserService =\n      browserService ||\n      this.DependencySystem?.modules?.get?.('browserService');\n    if (!this.browserService) {\n      throw new Error('[ModalManager] browserService DI not provided');\n    }\n    this.modalMappings =\n      modalMapping ||\n      this.DependencySystem?.modules?.get?.('modalMapping') ||\n      MODAL_MAPPINGS;\n    this.domPurify =\n      domPurify ||\n      this.DependencySystem?.modules?.get?.('domPurify') ||\n      this.DependencySystem?.modules?.get?.('sanitizer') ||\n      null;\n\n    // logger and errorReporter DI pattern\n    this.logger =\n      logger ||\n      this.DependencySystem?.modules?.get?.('logger') ||\n      { error: () => {}, warn: () => {}, info: () => {}, log: () => {}, debug: () => {} };\n    this.errorReporter =\n      errorReporter ||\n      this.DependencySystem?.modules?.get?.('errorReporter') ||\n      { report: () => {} };\n    this.app = this.DependencySystem?.modules?.get?.('app') || null;\n\n    // ─── Deferred “fully-ready” promise ─────────────────────────\n    this._readyResolve = null;\n    this._readyReject  = null;\n    this._readyPromise = new Promise((res, rej) => {\n      this._readyResolve = res;\n      this._readyReject  = rej;\n    });\n\n    this.activeModal = null;\n    this._scrollLockY = undefined;\n\n    this.logger.debug?.('[ModalManager] constructed', { withApp: !!this.app }); // Changed to debug\n  }\n\n  isReadyPromise() { return this._readyPromise; }\n\n  _isDebug() {\n    return !!this.app?.config?.debug;\n  }\n\n  _manageBodyScroll(enableScroll) {\n    const scrollingEl = this.domAPI.getScrollingElement();\n    if (!enableScroll) {\n      this._scrollLockY = scrollingEl.scrollTop;\n      this.domAPI.getBody().style.position = 'fixed';\n      this.domAPI.getBody().style.top = `-${this._scrollLockY}px`;\n      this.domAPI.getBody().style.width = '100vw';\n      this.domAPI.getBody().style.overflow = 'hidden';\n      this.domAPI.getDocumentElement().style.overflow = 'hidden';\n    } else {\n      this.domAPI.getBody().style.position = '';\n      this.domAPI.getBody().style.top = '';\n      this.domAPI.getBody().style.width = '';\n      this.domAPI.getBody().style.overflow = '';\n      this.domAPI.getDocumentElement().style.overflow = '';\n      if (this._scrollLockY !== undefined) {\n        scrollingEl.scrollTop = this._scrollLockY;\n        this._scrollLockY = undefined;\n      }\n    }\n  }\n\n  _showModalElement(modalEl) {\n    const modalId = modalEl.id || 'unknown_modal_id';\n    this.logger.debug?.(`[ModalManager] Showing modal element: #${modalId}`, { modalId });\n    if (typeof modalEl.showModal === 'function') {\n      modalEl.showModal();\n      modalEl.style.zIndex = '9999';\n      this._manageBodyScroll(false);\n    } else {\n      modalEl.classList.remove('hidden');\n      modalEl.style.display = 'flex';\n      modalEl.style.zIndex = '9999';\n      modalEl.setAttribute('open', 'true');\n      this._manageBodyScroll(false);\n    }\n  }\n\n  _hideModalElement(modalEl) {\n    const modalId = modalEl.id || 'unknown_modal_id';\n    this.logger.debug?.(`[ModalManager] Hiding modal element: #${modalId}`, { modalId });\n    if (typeof modalEl.close === 'function') {\n      modalEl.close();\n    } else {\n      modalEl.classList.add('hidden');\n      modalEl.style.display = 'none';\n      modalEl.removeAttribute('open');\n    }\n    this._manageBodyScroll(true);\n  }\n\n  _onDialogClose(modalId) {\n    // Find the modalName for this modalId for robust activeModal clearing\n    let modalNameForId = null;\n    if (this.modalMappings) {\n      for (const [name, id] of Object.entries(this.modalMappings)) {\n        if (id === modalId) {\n          modalNameForId = name;\n          break;\n        }\n      }\n    }\n    if (this.activeModal === modalNameForId) {\n      this.activeModal = null;\n      this._manageBodyScroll(true);\n      this.logger.debug?.(`[ModalManager] Dialog ${modalId} (${modalNameForId || 'unknown'}) closed via 'close' event, activeModal cleared.`);\n    }\n  }\n\n  _registerAvailableModals() {\n    if (!this.modalMappings || typeof this.modalMappings !== 'object') {\n      this.logger.warn?.('[ModalManager] _registerAvailableModals: No modalMappings available to register.');\n      return;\n    }\n    let registeredCount = 0;\n    let notFoundCount = 0;\n    this.logger.debug?.(`[ModalManager] _registerAvailableModals: Starting registration for ${Object.keys(this.modalMappings).length} mapped modals.`);\n\n    Object.entries(this.modalMappings).forEach(([modalName, modalId]) => {\n      const modalEl = this.domAPI.getElementById(modalId);\n      if (!modalEl) {\n        this.logger.warn?.(`[ModalManager] _registerAvailableModals: Modal element #${modalId} for \"${modalName}\" not found in DOM.`);\n        notFoundCount++;\n        return;\n      }\n\n      // For <dialog> elements, listen to the native 'close' event\n      if (modalEl.tagName === 'DIALOG' && typeof this.eventHandlers?.trackListener === 'function') {\n        this.eventHandlers.trackListener(\n          modalEl,\n          'close',\n          () => this._onDialogClose(modalId), // Pass modalId to handler\n          {\n            description: `Dialog close event for ${modalId}`,\n            context: 'modalManager',\n            source: 'ModalManager._registerAvailableModals'\n          }\n        );\n      }\n\n      // For generic close buttons within modals\n      const closeButtons = this.domAPI.querySelectorAll('[data-modal-dismiss], .modal-close-button', modalEl);\n      closeButtons.forEach(button => {\n        if (typeof this.eventHandlers?.trackListener === 'function') {\n          this.eventHandlers.trackListener(\n            button,\n            'click',\n            (e) => {\n              e.preventDefault();\n              this.hide(modalName); // Use modalName for hiding\n            },\n            {\n              description: `Close button click for modal ${modalName} (${modalId})`,\n              context: 'modalManager',\n              source: 'ModalManager._registerAvailableModals'\n            }\n          );\n        }\n      });\n      this.logger.debug?.(`[ModalManager] _registerAvailableModals: Successfully registered modal: ${modalName} (#${modalId})`);\n      registeredCount++;\n    });\n    this.logger.info?.(`[ModalManager] _registerAvailableModals: Finished. Registered ${registeredCount} modals. ${notFoundCount} modals not found in DOM.`);\n  }\n\n  async init() {\n    this.logger.info?.('[ModalManager] init() called.');\n    try {\n      const depSys = this.DependencySystem;\n      if (!depSys) {\n        this.logger.error?.('[ModalManager] init: DependencySystem missing.');\n        throw new Error('[ModalManager] DependencySystem missing in init');\n      }\n\n      const domReadinessService = depSys.modules?.get('domReadinessService');\n      if (!domReadinessService) {\n        this.logger.error?.('[ModalManager] init: domReadinessService missing from DI.');\n        throw new Error('[ModalManager] Missing domReadinessService in DI. Make sure it is registered.');\n      }\n\n      this.logger.debug?.('[ModalManager] init: Awaiting core dependencies (eventHandlers, domAPI).');\n      await domReadinessService.dependenciesAndElements({\n        deps: ['eventHandlers', 'domAPI'],\n        timeout: 5000, \n        context: 'modalManager.init:coreDeps'\n      });\n      this.logger.debug?.('[ModalManager] init: Core dependencies ready.');\n\n      this.logger.debug?.('[ModalManager] init: Awaiting body element readiness.');\n      await domReadinessService.dependenciesAndElements({\n        deps: [],\n        domSelectors: ['body'],\n        timeout: 5000,\n        context: 'modalManager.init:bodyReady'\n      });\n      this.logger.debug?.('[ModalManager] init: Body element ready.');\n\n      /* ----------------------------------------------------------\n         Eager-load modals template if it is not yet in the DOM.\n         This guarantees that the required 'modalsLoaded' event\n         will fire, allowing init() to proceed without timing out.\n      ---------------------------------------------------------- */\n      try {\n        const container = this.domAPI.getElementById('modalsContainer');\n        const modalsAlreadyInjected =\n          !!(container && container.children && container.children.length > 0);\n\n        const htmlTemplateLoader =\n          this.DependencySystem?.modules?.get?.('htmlTemplateLoader');\n\n        if (!modalsAlreadyInjected && htmlTemplateLoader?.loadTemplate) {\n          this.logger.info?.(\n            '[ModalManager] init: Loading /static/html/modals.html template eagerly.'\n          );\n\n          // Fire-and-forget; `loadTemplate` will dispatch the\n          //   `modalsLoaded` event on success (or even on error),\n          //   which is what this.init() waits for next.\n          htmlTemplateLoader\n            .loadTemplate({\n              url: '/static/html/modals.html',\n              containerSelector: '#modalsContainer',\n              eventName: 'modalsLoaded'\n            })\n            .catch((err) =>\n              this.logger.warn?.(\n                '[ModalManager] init: Failed to load modals.html',\n                err,\n                { context: 'modalManager' }\n              )\n            );\n        }\n      } catch (err) {\n        this.logger.warn?.(\n          '[ModalManager] init: Unexpected error during eager modals load',\n          err,\n          { context: 'modalManager' }\n        );\n      }\n\n      this.logger.info?.(\"[ModalManager] init: Waiting for 'modalsLoaded' event...\");\n      // CRITICAL CHANGE: Strict wait for modalsLoaded.\n      // If modals.html fails to load or the event doesn't fire, ModalManager init will fail.\n      const modalsLoadedEventData = await domReadinessService.waitForEvent('modalsLoaded', {\n        timeout: 15000, // Increased timeout to 15s for modals.html loading\n        context: 'modalManager.init:waitForModalsLoaded'\n      });\n\n      if (!modalsLoadedEventData?.detail?.success) {\n        const errorMsg = modalsLoadedEventData?.detail?.error || 'modalsLoaded event reported failure or missing success flag';\n        this.logger.error?.(`[ModalManager] init: 'modalsLoaded' event indicated failure. Error: ${errorMsg}`, { eventDetail: modalsLoadedEventData?.detail });\n        throw new Error(`[ModalManager] 'modalsLoaded' event reported failure: ${errorMsg}`);\n      }\n      this.logger.info?.(\"[ModalManager] init: 'modalsLoaded' event received and indicates success.\");\n      \n      // The one-time listener for 'modalsLoaded' to re-scan is removed as we now strictly await it.\n      // If it was necessary due to late injection by other means, that's a separate issue.\n      // For now, assume modals.html load is the sole trigger for 'modalsLoaded'.\n\n      this.logger.debug?.('[ModalManager] init: Registering available modals after modalsLoaded.');\n      this._registerAvailableModals();\n\n      const doc = this.domAPI.getDocument();\n      this.domAPI.dispatchEvent(\n        doc,\n        new CustomEvent('modalmanager:initialized', { detail: { success: true } })\n      );\n      this.logger.info?.('[ModalManager] init() completed successfully. ModalManager is ready.');\n      this._readyResolve?.(true);\n    } catch (err) {\n      this.logger.error?.('[ModalManager] init() failed catastrophically.', err, { context: 'modalManager.init' });\n      this._readyReject?.(err); // Reject the promise\n      // No rethrow here, error is reported via promise.\n      // If rethrow is desired, ensure calling initializers (coreInit/uiInit) handle it.\n    }\n  }\n\n  destroy() {\n    if (!this.eventHandlers?.cleanupListeners) {\n      return;\n    }\n    this.eventHandlers.cleanupListeners({ context: 'modalManager' });\n  }\n\n  validateModalMappings(modalMapping) {\n    Object.entries(modalMapping).forEach(([key, modalId]) => {\n      const elements = this.domAPI.querySelectorAll(`#${modalId}`);\n      if (elements.length === 0) {\n        this.logger.error?.(`[ModalManager][validateModalMappings] No modal element found for modalId '${modalId}' (mapping key '${key}')`);\n        this.errorReporter.report?.(new Error('Modal element not found'), { module: 'ModalManager', modalId, mappingKey: key, fn: 'validateModalMappings' });\n      } else if (elements.length > 1) {\n        this.logger.warn?.(`[ModalManager][validateModalMappings] Multiple modal elements found for modalId '${modalId}' (mapping key '${key}'). IDs must be unique.`);\n        this.errorReporter.report?.(new Error('Duplicate modal element IDs'), { module: 'ModalManager', modalId, mappingKey: key, fn: 'validateModalMappings' });\n      }\n    });\n  }\n\n  async show(modalName, options = {}) {\n    this.logger.debug?.(`[ModalManager] show() called for modal: ${modalName}`, { modalName, options });\n\n    // CRITICAL CHANGE: Await readiness before proceeding\n    try {\n      this.logger.debug?.(`[ModalManager] show(${modalName}): Awaiting manager readiness (isReadyPromise).`);\n      await this.isReadyPromise(); // Ensures init() completed successfully\n      this.logger.debug?.(`[ModalManager] show(${modalName}): Manager is ready.`);\n    } catch (err) {\n      this.logger.error?.(`[ModalManager] show(${modalName}): ModalManager not ready or its initialization failed. Cannot show modal.`, { error: err, modalName });\n      this.errorReporter.report?.(err, { module: 'ModalManager', fn: 'show', modalName, reason: 'ManagerNotReadyOrInitFailed' });\n      return false; // Cannot proceed if manager isn't ready\n    }\n\n    // --- Ensure the injected modals container is visible -----------------\n    const containerEl = this.domAPI.getElementById('modalsContainer');\n    if (containerEl) {\n      this.domAPI.removeClass(containerEl, 'hidden');\n      containerEl.removeAttribute?.('hidden');\n      if (containerEl.style.display === 'none') containerEl.style.display = '';\n    } else {\n      // This might not be a critical error if modals are directly in body, but good to log.\n      this.logger.warn?.(`[ModalManager] show(${modalName}): #modalsContainer element not found. Modals might not display correctly if they rely on this container.`, { modalName });\n    }\n\n    if (this.app?.isInitializing && !options.showDuringInitialization) {\n      this.logger.warn?.(`[ModalManager] show(${modalName}): Attempt to show modal during app initialization (and !options.showDuringInitialization). Aborting.`, { modalName });\n      return false;\n    }\n\n    const modalId = this.modalMappings[modalName];\n    if (!modalId) {\n      this.logger.warn?.(`[ModalManager] show(${modalName}): Modal name not found in mappings. Cannot show.`, { modalName });\n      return false;\n    }\n    this.logger.debug?.(`[ModalManager] show(${modalName}): Found modalId \"${modalId}\" in mappings.`);\n\n    const modalEl = this.domAPI.getElementById(modalId);\n    if (!modalEl) {\n      this.logger.warn?.(`[ModalManager] show(${modalName}): Modal element with ID \"${modalId}\" NOT FOUND in DOM. Cannot show. This is unexpected if init was successful.`, { modalName, modalId });\n      return false; \n    }\n    this.logger.debug?.(`[ModalManager] show(${modalName}): Found modal element for ID \"${modalId}\". Proceeding to show.`);\n\n    // Dynamic content for error modal\n    if (modalName === 'error') {\n      const titleEl   = modalEl.querySelector('#errorModalTitle');\n      const messageEl = modalEl.querySelector('#errorModalMessage');\n      if (titleEl   && options.title)   titleEl.textContent   = options.title;\n      if (messageEl && options.message) messageEl.textContent = options.message;\n      this.logger.debug?.(`[ModalManager] show(${modalName}): Populated error modal content.`, { title: options.title });\n    }\n\n    this._showModalElement(modalEl);\n    this.activeModal = modalName;\n    this.logger.info?.(`[ModalManager] Successfully shown modal: ${modalName} (#${modalId})`);\n    return true;\n  }\n\n  async confirmAction(options) {\n    this.logger.debug?.('[ModalManager] confirmAction() called.', { options });\n\n    // CRITICAL CHANGE: Await readiness before proceeding (as it calls show())\n    try {\n      this.logger.debug?.('[ModalManager] confirmAction: Awaiting manager readiness (isReadyPromise).');\n      await this.isReadyPromise();\n      this.logger.debug?.('[ModalManager] confirmAction: Manager is ready.');\n    } catch (err) {\n      this.logger.error?.('[ModalManager] confirmAction: ModalManager not ready or its initialization failed. Cannot show confirmation.', { error: err });\n      this.errorReporter.report?.(err, { module: 'ModalManager', fn: 'confirmAction', reason: 'ManagerNotReadyOrInitFailed' });\n      // Optionally call options.onCancel() or throw, depending on desired behavior\n      if (typeof options.onCancel === 'function') {\n        options.onCancel(); // Simulate cancellation as modal cannot be shown\n      }\n      return; // Cannot proceed\n    }\n\n    const modalName = 'confirm';\n    const modalId = this.modalMappings[modalName];\n    if (!modalId) {\n      this.logger.warn?.('[ModalManager] confirmAction: Confirm modal \"confirm\" not found in mappings.');\n      return; // Cannot proceed\n    }\n\n    const modalEl = this.domAPI.getElementById(modalId);\n    if (!modalEl) {\n      this.logger.warn?.(`[ModalManager] confirmAction: Confirm modal element with ID \"${modalId}\" NOT FOUND in DOM.`);\n      return; // Cannot proceed\n    }\n\n    const titleEl = modalEl.querySelector('h3');\n    const messageEl = modalEl.querySelector('p');\n    const confirmBtn = modalEl.querySelector('#confirmActionBtn');\n    const cancelBtn = modalEl.querySelector('#cancelActionBtn');\n\n    if (titleEl) {\n      titleEl.textContent = options.title || 'Confirm?';\n    }\n    if (messageEl) {\n      messageEl.textContent = options.message || '';\n    }\n    if (confirmBtn) {\n      confirmBtn.textContent = options.confirmText || 'Confirm';\n      confirmBtn.className = `btn ${options.confirmClass || 'btn-primary'}`;\n    }\n    if (cancelBtn) {\n      cancelBtn.textContent = options.cancelText || 'Cancel';\n    }\n\n    function replaceWithClone(btn) {\n      const newBtn = btn.cloneNode(true);\n      btn.parentNode.replaceChild(newBtn, btn);\n      return newBtn;\n    }\n    const newConfirmBtn = confirmBtn ? replaceWithClone(confirmBtn) : null;\n    const newCancelBtn = cancelBtn ? replaceWithClone(cancelBtn) : null;\n\n    const confirmHandler = () => {\n      this.hide(modalName);\n      if (typeof options.onConfirm === 'function') {\n        options.onConfirm();\n      }\n    };\n    const cancelHandler = () => {\n      this.hide(modalName);\n      if (typeof options.onCancel === 'function') {\n        options.onCancel();\n      }\n    };\n\n    if (this.eventHandlers?.trackListener) {\n      if (newConfirmBtn) {\n        this.eventHandlers.trackListener(newConfirmBtn, 'click', confirmHandler, {\n          description: 'Confirm Modal Confirm Click',\n          context: 'modalManager',\n          source: 'ModalManager.confirmAction'\n        });\n      }\n      if (newCancelBtn) {\n        this.eventHandlers.trackListener(newCancelBtn, 'click', cancelHandler, {\n          description: 'Confirm Modal Cancel Click',\n          context: 'modalManager',\n          source: 'ModalManager.confirmAction'\n        });\n      }\n    } else {\n      throw new Error('[ModalManager] eventHandlers.trackListener is required for confirmAction');\n    }\n\n    this.show(modalName, {\n      showDuringInitialization: options.showDuringInitialization,\n    });\n  }\n\n  hide(modalName) {\n    const modalId = this.modalMappings[modalName];\n    if (!modalId) {\n      this.logger.warn?.(`[ModalManager] hide(${modalName}): Modal name not found in mappings. Cannot hide.`, { modalName });\n      return;\n    }\n    const modalEl = this.domAPI.getElementById(modalId);\n    if (!modalEl) {\n      this.logger.warn?.(`[ModalManager] hide(${modalName}): Modal element with ID \"${modalId}\" NOT FOUND in DOM. Cannot hide.`, { modalName, modalId });\n      return;\n    }\n    this._hideModalElement(modalEl); // This logs internally\n    if (this.activeModal === modalName) {\n      this.activeModal = null;\n      this.logger.debug?.(`[ModalManager] hide(${modalName}): Modal hidden and activeModal cleared.`);\n    } else {\n      this.logger.debug?.(`[ModalManager] hide(${modalName}): Modal hidden. It was not the active modal (activeModal was ${this.activeModal}).`);\n    }\n  }\n}\n\n/**\n * A dedicated class for handling the project creation/editing modal.\n */\nclass ProjectModal {\n  /**\n   * @constructor\n   * @param {Object} opts\n   *   @param {Object} [opts.projectManager]\n   *   @param {Object} [opts.eventHandlers]\n   *   @param {Object} [opts.DependencySystem]\n   *   @param {Object} [opts.domAPI]\n   *   @param {Object} [opts.domPurify]\n   *   @param {Object} [opts.domReadinessService] -- injected readiness service\n   *   @param {Object} [opts.logger]\n   *   @param {Object} [opts.errorReporter]\n   */\n  constructor({ projectManager, eventHandlers, DependencySystem, domAPI, domPurify, domReadinessService, logger, errorReporter } = {}) {\n    this.DependencySystem = DependencySystem || undefined;\n\n    this.eventHandlers =\n      eventHandlers ||\n      this.DependencySystem?.modules?.get?.('eventHandlers') ||\n      undefined;\n    this.projectManager =\n      projectManager ||\n      this.DependencySystem?.modules?.get?.('projectManager') ||\n      undefined;\n    this.domAPI = domAPI || this.DependencySystem?.modules?.get?.('domAPI');\n    if (!this.domAPI) {\n      throw new Error('[ProjectModal] domAPI DI not provided');\n    }\n\n    this.domPurify =\n      domPurify ||\n      this.DependencySystem?.modules?.get?.('domPurify') ||\n      this.DependencySystem?.modules?.get?.('sanitizer') ||\n      null;\n\n    this.domReadinessService =\n      domReadinessService ||\n      this.DependencySystem?.modules?.get?.('domReadinessService') ||\n      null;\n\n    if (!this.domReadinessService) {\n      throw new Error('[ProjectModal] domReadinessService DI not provided');\n    }\n\n    this.logger =\n      logger ||\n      this.DependencySystem?.modules?.get?.('logger') ||\n      { error: () => {}, warn: () => {}, info: () => {}, log: () => {}, debug: () => {} };\n    this.errorReporter =\n      errorReporter ||\n      this.DependencySystem?.modules?.get?.('errorReporter') ||\n      { report: () => {} };\n\n    this.modalElement = null;\n    this.formElement = null;\n    this.isOpen = false;\n    this.currentProjectId = null;\n\n    this.logger.info?.('[ProjectModal] constructed'); // Changed to info for better visibility\n  }\n\n  _isDebug() {\n    const app = this.DependencySystem?.modules?.get?.('app');\n    return !!app?.config?.debug;\n  }\n\n  _showModalElement() {\n    if (typeof this.modalElement.showModal === 'function') {\n      this.modalElement.showModal();\n    } else {\n      this.modalElement.classList.remove('hidden');\n      this.modalElement.style.display = 'flex';\n      this.modalElement.setAttribute('open', 'true');\n    }\n  }\n\n  _hideModalElement() {\n    if (typeof this.modalElement.close === 'function') {\n      this.modalElement.close();\n    } else {\n      this.modalElement.classList.add('hidden');\n      this.modalElement.style.display = 'none';\n      this.modalElement.removeAttribute('open');\n    }\n  }\n\n  _setButtonLoading(btn, isLoading, loadingText = 'Saving...') {\n    if (!btn) return;\n    if (isLoading) {\n      btn.disabled = true;\n      btn.dataset.originalText = btn.textContent;\n      const html = `<span class=\"loading loading-spinner loading-xs\"></span> ${loadingText}`;\n      if (this.domPurify && typeof this.domPurify.sanitize === 'function') {\n        btn.innerHTML = this.domPurify.sanitize(html);\n      } else {\n        btn.textContent = loadingText;\n      }\n    } else {\n      btn.disabled = false;\n      if (btn.dataset.originalText) {\n        btn.textContent = btn.dataset.originalText;\n        delete btn.dataset.originalText;\n      }\n    }\n  }\n\n  /**\n   * Await readiness of modal DOM elements via domReadinessService.\n   * This method must be called and awaited before interacting with modal DOM.\n   */\n  async init() {\n    this.logger.info?.('[ProjectModal] init() called.');\n    try {\n      // This relies on modals.html (containing #projectModal) already being loaded.\n      // ModalManager's init should ensure this before ProjectModal.init is typically called.\n      this.logger.debug?.('[ProjectModal] init: Awaiting DOM elements #projectModal and #projectModalForm.');\n      await this.domReadinessService.dependenciesAndElements({\n        domSelectors: ['#projectModal', '#projectModalForm'],\n        timeout: 7000, // Increased timeout slightly, assuming modals.html is loaded\n        context: 'projectModal.init:awaitElements'\n      });\n      this.logger.debug?.('[ProjectModal] init: DOM elements wait completed.');\n\n      this.modalElement = this.domAPI.getElementById('projectModal');\n      this.formElement = this.domAPI.getElementById('projectModalForm');\n\n      if (!this.modalElement) {\n        this.logger.error?.('[ProjectModal] init: #projectModal element NOT FOUND in DOM after domReadinessService wait. This is critical.');\n        throw new Error('[ProjectModal] #projectModal element not found on init.');\n      }\n      if (!this.formElement) {\n        this.logger.error?.('[ProjectModal] init: #projectModalForm element NOT FOUND in DOM after domReadinessService wait. This is critical.');\n        throw new Error('[ProjectModal] #projectModalForm element not found on init.');\n      }\n      this.logger.debug?.('[ProjectModal] init: #projectModal and #projectModalForm elements successfully found.');\n\n      this.setupEventListeners(); // Internal logging within this method\n\n      if (typeof this.domAPI.dispatchEvent === 'function' && this.modalElement) {\n        this.domAPI.dispatchEvent(\n          this.modalElement,\n          new CustomEvent('projectModal:ready', { detail: { success: true } })\n        );\n      }\n      this.logger.info?.('[ProjectModal] init() completed successfully.');\n    } catch (err) {\n      this.logger.error?.('[ProjectModal] init() failed.', err, { context: 'projectModal.init' });\n      this.errorReporter.report?.(err, { module: 'ProjectModal', fn: 'init', reason: 'DomElementsOrListenersFailed' });\n      throw err; // Re-throw so callers (e.g., UI initializer) know init failed\n    }\n  }\n\n  destroy() {\n    if (!this.eventHandlers?.cleanupListeners) {\n      return;\n    }\n    this.eventHandlers.cleanupListeners({ context: 'projectModal' });\n  }\n\n  openModal(project = null) {\n    if (!this.modalElement) {\n      this.logger.warn?.('[ProjectModal] openModal: modalElement is null (likely init failed). Cannot open.');\n      return;\n    }\n    this.logger.debug?.(`[ProjectModal] openModal called. Project: ${project ? project.id : 'new'}`, { project });\n\n    if (this.formElement) {\n      this.formElement.reset();\n      this.logger.debug?.('[ProjectModal] openModal: Form reset.');\n    } else {\n      this.logger.warn?.('[ProjectModal] openModal: formElement is null. Cannot reset form.');\n    }\n\n    const titleEl = this.modalElement.querySelector('#projectModalTitle');\n    if (titleEl) {\n      titleEl.textContent = project ? 'Edit Project' : 'Create Project';\n    } else {\n      this.logger.warn?.('[ProjectModal] openModal: #projectModalTitle element not found.');\n    }\n\n    if (project) {\n      this.currentProjectId = project.id;\n      this.logger.debug?.(`[ProjectModal] openModal: Populating form for editing project ID: ${this.currentProjectId}`);\n      const idInput = this.modalElement.querySelector('#projectModalIdInput');\n      const nameInput = this.modalElement.querySelector('#projectModalNameInput');\n      const descInput = this.modalElement.querySelector('#projectModalDescInput');\n      const goalsInput = this.modalElement.querySelector('#projectModalGoalsInput');\n      const maxTokensInput = this.modalElement.querySelector('#projectModalMaxTokensInput');\n\n      if (idInput) idInput.value = project.id || ''; else this.logger.warn?.('[ProjectModal] openModal: #projectModalIdInput not found.');\n      if (nameInput) nameInput.value = project.name || ''; else this.logger.warn?.('[ProjectModal] openModal: #projectModalNameInput not found.');\n      if (descInput) descInput.value = project.description || ''; else this.logger.warn?.('[ProjectModal] openModal: #projectModalDescInput not found.');\n      if (goalsInput) goalsInput.value = project.goals || ''; else this.logger.warn?.('[ProjectModal] openModal: #projectModalGoalsInput not found.');\n      if (maxTokensInput) maxTokensInput.value = project.max_tokens || ''; else this.logger.warn?.('[ProjectModal] openModal: #projectModalMaxTokensInput not found.');\n    } else {\n      this.currentProjectId = null;\n      this.logger.debug?.('[ProjectModal] openModal: Clearing form for new project.');\n      const idEl = this.modalElement.querySelector('#projectModalIdInput');\n      if (idEl) {\n        idEl.value = ''; // Ensure hidden ID field is cleared for new projects\n      } else {\n        this.logger.warn?.('[ProjectModal] openModal: #projectModalIdInput not found for clearing.');\n      }\n      // Explicitly clear other fields for new project scenario\n      const nameInput = this.modalElement.querySelector('#projectModalNameInput');\n      if (nameInput) nameInput.value = '';\n      const descInput = this.modalElement.querySelector('#projectModalDescInput');\n      if (descInput) descInput.value = '';\n      const goalsInput = this.modalElement.querySelector('#projectModalGoalsInput');\n      if (goalsInput) goalsInput.value = '';\n      const maxTokensInput = this.modalElement.querySelector('#projectModalMaxTokensInput');\n      if (maxTokensInput) maxTokensInput.value = '';\n\n    }\n\n    this._showModalElement(); // Internal logging for show\n    this.isOpen = true;\n    this.logger.info?.(`[ProjectModal] Modal opened. Mode: ${project ? 'edit' : 'create'}, Project ID: ${this.currentProjectId || 'N/A'}`);\n  }\n\n  setupEventListeners() {\n    if (!this.modalElement) {\n       this.logger.warn?.('[ProjectModal] setupEventListeners: modalElement is null. Cannot set up common listeners.');\n       // If modalElement is null, formElement is also likely null or irrelevant.\n       return;\n    }\n    if (!this.formElement) {\n      this.logger.warn?.('[ProjectModal] setupEventListeners: formElement is null. Cannot set up form submit listener.');\n      // Proceed to set up modal-specific listeners like ESC and backdrop if modalElement exists\n    }\n    \n    this.logger.debug?.('[ProjectModal] Setting up event listeners.');\n\n    if (this.formElement) {\n      const submitHandler = async (e) => {\n        // e.preventDefault() is called in handleSubmit\n        await this.handleSubmit(e);\n      };\n      this._bindEvent(\n        this.formElement,\n        'submit',\n        submitHandler,\n        'ProjectModal form submit', // More specific description\n        { passive: false } \n      );\n    }\n\n    const cancelBtn = this.modalElement.querySelector('#projectCancelBtn');\n    if (cancelBtn) {\n      const cancelHandler = (e) => {\n        e.preventDefault();\n        this.logger.debug?.('[ProjectModal] Cancel button clicked.');\n        this.closeModal();\n      };\n      this._bindEvent(cancelBtn, 'click', cancelHandler, 'ProjectModal Cancel button click');\n    } else {\n      this.logger.warn?.('[ProjectModal] setupEventListeners: Cancel button #projectCancelBtn not found in #projectModal.');\n    }\n\n    // Listen on document for ESC key for wider capture, e.g., if focus is not directly in modal\n    const escHandler = (e) => {\n      if (e.key === 'Escape' && this.isOpen) {\n        this.logger.debug?.('[ProjectModal] ESC key pressed while modal is open, closing modal.');\n        this.closeModal();\n      }\n    };\n    this._bindEvent(\n      this.domAPI.ownerDocument, // Changed from this.modalElement for broader scope if modal loses focus\n      'keydown',\n      escHandler,\n      'ProjectModal Document ESC key handler'\n    );\n\n    // Click on backdrop (dialog element itself) to close, if it's a <dialog>\n    // For non-<dialog> fallbacks, this might need CSS to make the backdrop clickable.\n    const backdropHandler = (e) => {\n      // Check if the click is directly on the dialog/modalElement itself\n      if (e.target === this.modalElement && this.isOpen) {\n        this.logger.debug?.('[ProjectModal] Backdrop clicked (e.target is modalElement), closing modal.');\n        this.closeModal();\n      }\n    };\n    this._bindEvent(\n      this.modalElement, // Listener on the modal itself\n      'click',\n      backdropHandler,\n      'ProjectModal backdrop click handler'\n    );\n    this.logger.debug?.('[ProjectModal] Event listeners setup completed.');\n  }\n\n  closeModal() {\n    if (!this.modalElement) {\n      this.logger.warn?.('[ProjectModal] closeModal: modalElement is null. Cannot close.');\n      return;\n    }\n    if (!this.isOpen) {\n      this.logger.debug?.('[ProjectModal] closeModal: Modal is already closed or was never opened.');\n      return;\n    }\n    this._hideModalElement(); // Internal logging for hide\n    this.isOpen = false;\n    const closedProjectId = this.currentProjectId; // Capture before resetting\n    this.currentProjectId = null;\n    this.logger.info?.(`[ProjectModal] Modal closed. Was for Project ID: ${closedProjectId || 'N/A'}`);\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault(); // Always prevent default for form submission via JS\n    if (!this.formElement) {\n      this.logger.warn?.('[ProjectModal] handleSubmit: formElement is null. Cannot process submission.');\n      return;\n    }\n    this.logger.debug?.('[ProjectModal] handleSubmit: Form submission initiated.');\n\n    const saveBtn = this.modalElement.querySelector('#projectSaveBtn');\n    if (!saveBtn) {\n        this.logger.warn?.('[ProjectModal] handleSubmit: Save button #projectSaveBtn not found. UI update for loading state will fail.');\n    }\n\n    try {\n      const formData = new FormData(this.formElement);\n      const projectData = {\n        name: formData.get('name')?.trim() || '', // Ensure trimmed\n        description: formData.get('description') || '',\n        goals: formData.get('goals') || '',\n        max_tokens: formData.get('maxTokens') || null\n      };\n      // projectId from hidden input for existing projects, or null/empty for new.\n      // this.currentProjectId is set when opening for an existing project.\n      const projectIdFromForm = formData.get('projectId'); \n      const idToSave = projectIdFromForm || this.currentProjectId; // Prefer form ID if available, else currentProjectId\n\n      this.logger.debug?.(`[ProjectModal] handleSubmit: Project data extracted. Name: \"${projectData.name}\", Form ID: \"${projectIdFromForm}\", Current Edit ID: \"${this.currentProjectId}\", Effective ID for save: \"${idToSave}\"`);\n\n      if (!projectData.name) { // Check after trim\n        this.logger.warn?.('[ProjectModal] handleSubmit: Project name is empty after trim. Aborting save.');\n        // TODO: Implement user-facing validation feedback (e.g., highlight field, show message)\n        this.errorReporter.report?.(new Error('Validation: Project name empty'), {\n            module: 'ProjectModal', fn: 'handleSubmit', validationError: true, field: 'name'\n        });\n        if (saveBtn) this._setButtonLoading(saveBtn, false); // Reset button if validation fails early\n        return;\n      }\n\n      if (saveBtn) this._setButtonLoading(saveBtn, true, 'Saving...');\n      this.logger.info?.(`[ProjectModal] handleSubmit: Attempting to save project. ID: ${idToSave || '(new project)'}, Name: \"${projectData.name}\"`);\n\n      await this.saveProject(idToSave, projectData); // Use idToSave (could be null for new project)\n      \n      this.logger.info?.(`[ProjectModal] handleSubmit: Project save successful. ID: ${idToSave || '(new project after save)'}, Name: \"${projectData.name}\"`);\n      this.closeModal();\n\n    } catch (err) {\n      this.logger.error?.('[ProjectModal][handleSubmit] Error during project save operation:', err, { projectId: this.currentProjectId, formData: Object.fromEntries(new FormData(this.formElement)) });\n      this.errorReporter.report?.(err, { module: 'ProjectModal', fn: 'handleSubmit', currentProjectId: this.currentProjectId });\n      // TODO: Show error to user within the modal (e.g., a toast or message area in the modal)\n    } finally {\n      // Ensure button loading state is always reset, even if saveBtn was not found initially (though less likely)\n      if (saveBtn) this._setButtonLoading(saveBtn, false);\n      this.logger.debug?.('[ProjectModal] handleSubmit: Submission process finished.');\n    }\n  }\n\n  async saveProject(projectId, projectData) {\n    if (!this.projectManager) {\n      throw new Error('[ProjectModal] projectManager not available (not injected)');\n    }\n    await this.projectManager.saveProject(projectId, projectData);\n  }\n\n  setLoading(isLoading) {\n    const saveBtn = this.modalElement.querySelector('#projectSaveBtn');\n    const cancelBtn = this.modalElement.querySelector('#projectCancelBtn');\n    if (saveBtn) {\n      saveBtn.disabled = isLoading;\n      saveBtn.classList.toggle('loading', isLoading);\n    }\n    if (cancelBtn) {\n      cancelBtn.disabled = isLoading;\n    }\n  }\n\n  _bindEvent(element, type, handler, description, options = {}) {\n    if (this.eventHandlers?.trackListener) {\n      this.eventHandlers.trackListener(element, type, handler, {\n        description,\n        context: 'projectModal',\n        source: 'ProjectModal._bindEvent',\n        ...options\n      });\n    } else {\n      throw new Error('[ProjectModal] eventHandlers.trackListener is required');\n    }\n  }\n}\n\n/**\n * Create a single ModalManager instance using the classes above.\n */\nexport function createModalManager({\n  eventHandlers,\n  domAPI,\n  browserService,\n  DependencySystem,\n  modalMapping,\n  domPurify\n} = {}) {\n  return new ModalManager({\n    eventHandlers,\n    domAPI,\n    browserService,\n    DependencySystem,\n    modalMapping,\n    domPurify\n  });\n}\n\n/**\n * Returns an instance of ProjectModal class.\n */\nexport function createProjectModal({\n  projectManager,\n  eventHandlers,\n  DependencySystem,\n  domAPI,\n  domPurify,\n  domReadinessService\n} = {}) {\n  return new ProjectModal({\n    projectManager,\n    eventHandlers,\n    DependencySystem,\n    domAPI,\n    domPurify,\n    domReadinessService\n  });\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 39345,
          "_transferSize": 40528,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.561Z",
        "time": 668.1830000015907,
        "timings": {
          "blocked": 569.4539999970859,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06700000000000728,
          "wait": 97.30900000485121,
          "receive": 1.352999999653548,
          "_blocked_queueing": 3.9459999970858917,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106417",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 45
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/modelConfig.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1460,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "27559"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"7d252f1c5ce7100230f8868e908b3d6e\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 27559,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * modelConfig.js\n *\n * Key checklist points enforced:\n *  1. No top-level logic; all code in factory or internal functions.\n *  2. Strict dependency injection (no direct global usage).\n *  3. Pure imports, no side effects at import time.\n *  4. All DOM and app readiness handled via domReadinessService (await ...).\n *  5. All logs go through the injected logger with context.\n *  6. Provide a dedicated EventTarget for broadcasting module events, but still\n *     use eventHandler.trackListener(...) / eventHandler.dispatchEvent(...).\n */\n\nexport function createModelConfig({\n  dependencySystem,\n  domReadinessService,\n  eventHandler,\n  storageHandler,\n  sanitizer,\n  scheduleTask,\n  logger\n} = {}) {\n  // The entire module is wrapped inside this factory to avoid top-level side effects.\n  const MODULE_CONTEXT = \"ModelConfig\";\n\n  // Provide a local logger using fallback no-ops.\n  const localLogger = logger || {\n    info: () => { },\n    error: () => { },\n    warn: () => { },\n  };\n\n  // Validate required dependencies\n  if (!dependencySystem) {\n    localLogger.error(`[${MODULE_CONTEXT}][constructor] Missing dependencySystem`, null, {\n      context: MODULE_CONTEXT,\n    });\n    throw new Error(\"[ModelConfig] dependencySystem is required\");\n  }\n  if (!domReadinessService || typeof domReadinessService.dependenciesAndElements !== \"function\") {\n    localLogger.error(\n      `[${MODULE_CONTEXT}][constructor] Missing or invalid domReadinessService`,\n      null,\n      { context: MODULE_CONTEXT }\n    );\n    throw new Error(\"[ModelConfig] domReadinessService is required for readiness gating.\");\n  }\n  if (!eventHandler) {\n    localLogger.error(`[${MODULE_CONTEXT}][constructor] Missing eventHandler`, null, {\n      context: MODULE_CONTEXT,\n    });\n    throw new Error(\"[ModelConfig] eventHandler is required\");\n  }\n  if (!storageHandler) {\n    localLogger.error(`[${MODULE_CONTEXT}][constructor] Missing storageHandler`, null, {\n      context: MODULE_CONTEXT,\n    });\n    throw new Error(\"[ModelConfig] storageHandler is required\");\n  }\n  if (!sanitizer || typeof sanitizer.sanitize !== \"function\") {\n    localLogger.error(`[${MODULE_CONTEXT}][constructor] Missing or invalid sanitizer`, null, {\n      context: MODULE_CONTEXT,\n    });\n    throw new Error(\"[ModelConfig] sanitizer with sanitize() is required\");\n  }\n\n  // Dedicated module event bus object. We rely on eventHandler for adding/removing listeners,\n  // rather than calling addEventListener directly.\n  const busTarget = new EventTarget();\n\n  function dispatchEventToBus(api, eventName, detailObj) {\n    // Use eventHandler's dispatchEvent if available, otherwise fallback\n    if (typeof api.evts.dispatchEvent === \"function\") {\n      api.evts.dispatchEvent(busTarget, new CustomEvent(eventName, { detail: detailObj }), {\n        context: MODULE_CONTEXT,\n        source: `busEvent:${eventName}`,\n      });\n    } else {\n      // fallback\n      busTarget.dispatchEvent(new CustomEvent(eventName, { detail: detailObj }));\n    }\n  }\n\n  function setupDependencies() {\n    const ds = dependencySystem;\n    const fallbackEventHandler = {\n      trackListener: () => { },\n      untrackListener: () => { },\n      cleanupListeners: () => { },\n      dispatchEvent: null,\n    };\n    const evts = eventHandler || fallbackEventHandler;\n    const blankStorage = {\n      getItem: () => null,\n      setItem: () => { },\n    };\n    const store = storageHandler || blankStorage;\n    const safe = (html) => sanitizer.sanitize(html);\n    const delayed = scheduleTask || ((fn, ms) => setTimeout(fn, ms));\n\n    return { ds, evts, store, safe, delayed, log: localLogger };\n  }\n\n  function buildState(api) {\n    const rawModelName = api.store.getItem(\"modelName\") || \"claude-3-sonnet-20240229\";\n    return {\n      modelName: rawModelName,\n      provider: api.store.getItem(\"provider\") || \"anthropic\",\n      maxTokens: parseInt(api.store.getItem(\"maxTokens\") || \"4096\", 10),\n      reasoningEffort: api.store.getItem(\"reasoningEffort\") || \"medium\",\n      reasoningSummary: api.store.getItem(\"reasoningSummary\") || \"concise\",\n      visionEnabled: api.store.getItem(\"visionEnabled\") === \"true\",\n      visionDetail: api.store.getItem(\"visionDetail\") || \"auto\",\n      visionImage: null,\n      extendedThinking: api.store.getItem(\"extendedThinking\") === \"true\",\n      thinkingBudget: parseInt(api.store.getItem(\"thinkingBudget\") || \"16000\", 10),\n      customInstructions: api.store.getItem(\"globalCustomInstructions\") || \"\",\n      // NEW: web search checkbox state (default false)\n      enable_web_search: api.store.getItem(\"enableWebSearch\") === \"true\",\n      azureParams: {\n        maxCompletionTokens: parseInt(api.store.getItem(\"azureMaxCompletionTokens\") || \"5000\", 10),\n        reasoningEffort: api.store.getItem(\"azureReasoningEffort\") || \"medium\",\n        visionDetail: api.store.getItem(\"azureVisionDetail\") || \"auto\",\n      },\n    };\n  }\n\n  /**\n   * Use eventHandler.trackListener(...) with context for all event listeners.\n   */\n  function registerListener(api, el, evt, handler, opts = {}) {\n    const optionsWithContext = {\n      ...opts,\n      context: MODULE_CONTEXT,\n      module: MODULE_CONTEXT,\n      source: opts.source || opts.description || `event_${evt}`,\n    };\n    api.evts.trackListener(el, evt, handler, optionsWithContext);\n  }\n\n  /**\n   * Cleanup all listeners registered by this module.\n   */\n  function cleanup(api) {\n    if (typeof api.evts.cleanupListeners === \"function\") {\n      api.evts.cleanupListeners({ context: MODULE_CONTEXT });\n    }\n  }\n\n  function clampInt(val, min, max, fallback) {\n    if (val === undefined || val === null || isNaN(val)) return fallback;\n    return Math.max(min, Math.min(max, parseInt(val, 10)));\n  }\n\n  function getModelOptions() {\n    return [\n      {\n        id: \"claude-3-opus-20240229\",\n        name: \"Claude 3 Opus\",\n        provider: \"anthropic\",\n        maxTokens: 200000,\n        supportsVision: false,\n      },\n      {\n        id: \"claude-3-sonnet-20240229\",\n        name: \"Claude 3 Sonnet\",\n        provider: \"anthropic\",\n        maxTokens: 200000,\n        supportsVision: false,\n      },\n      // Azure OpenAI Models\n      {\n        id: \"o1\",\n        name: \"Azure o1 Reasoning\",\n        provider: \"azure\",\n        maxTokens: 100000,\n        supportsVision: true,\n      },\n      {\n        id: \"o3\",\n        name: \"Azure o3 Reasoning\",\n        provider: \"azure\",\n        maxTokens: 100000,\n        supportsVision: false,\n      },\n      {\n        id: \"o3-mini\",\n        name: \"Azure o3-mini Reasoning\",\n        provider: \"azure\",\n        maxTokens: 100000,\n        supportsVision: false,\n      },\n      {\n        id: \"gpt-4.1\",\n        name: \"GPT-4.1\",\n        provider: \"azure\",\n        maxTokens: 4096,\n        supportsVision: false,\n      },\n      {\n        id: \"gpt-4.1-mini\",\n        name: \"GPT-4.1 Mini\",\n        provider: \"azure\",\n        maxTokens: 4096,\n        supportsVision: false,\n      },\n      {\n        id: \"gpt-4o\",\n        name: \"GPT-4o\",\n        provider: \"azure\",\n        maxTokens: 128000,\n        supportsVision: true,\n      }\n    ];\n  }\n\n  function getConfig(state) {\n    // Diagnostic logging: log every time getConfig is called and what config it returns\n    localLogger.info(`[${MODULE_CONTEXT}][getConfig] Returning config:`, { ...state }, { context: MODULE_CONTEXT });\n    return { ...state };\n  }\n\n  /**\n   * Instead of directly busTarget.addEventListener, we use eventHandler.trackListener.\n   */\n  function onConfigChange(api, callback) {\n    const listener = (evt) => {\n      if (evt.detail) callback(evt.detail);\n    };\n    registerListener(api, busTarget, \"modelConfigChanged\", listener, {\n      description: \"modelConfigBus onConfigChange\",\n    });\n  }\n\n  function setStateFromConfig(state, config) {\n    // Diagnostic logging: state and config before mutation\n    localLogger.info(`[${MODULE_CONTEXT}][setStateFromConfig] Updating state. Current:`, { ...state }, \"New:\", { ...config }, { context: MODULE_CONTEXT });\n    Object.assign(state, {\n      modelName: config.modelName || state.modelName,\n      provider: config.provider || state.provider,\n      maxTokens: clampInt(config.maxTokens, 100, 100000, state.maxTokens),\n      reasoningEffort: config.reasoningEffort || state.reasoningEffort,\n      reasoningSummary: config.reasoningSummary || state.reasoningSummary,\n      visionEnabled:\n        config.visionEnabled !== undefined ? config.visionEnabled : state.visionEnabled,\n      visionDetail: config.visionDetail || state.visionDetail,\n      extendedThinking:\n        config.extendedThinking !== undefined\n          ? config.extendedThinking\n          : state.extendedThinking,\n      thinkingBudget: clampInt(config.thinkingBudget, 2048, 32000, state.thinkingBudget),\n      customInstructions:\n        config.customInstructions !== undefined\n          ? config.customInstructions\n          : state.customInstructions,\n      enable_web_search:\n        config.enable_web_search !== undefined\n          ? !!config.enable_web_search\n          : state.enable_web_search,\n      azureParams: {\n        maxCompletionTokens: clampInt(\n          config.azureParams?.maxCompletionTokens,\n          1000,\n          10000,\n          state.azureParams.maxCompletionTokens\n        ),\n        reasoningEffort: config.azureParams?.reasoningEffort || state.azureParams.reasoningEffort,\n        visionDetail: config.azureParams?.visionDetail || state.azureParams.visionDetail,\n      },\n    });\n  }\n\n  function persistConfig(api, state) {\n    api.store.setItem(\"modelName\", state.modelName);\n    api.store.setItem(\"provider\", state.provider);\n    api.store.setItem(\"maxTokens\", state.maxTokens.toString());\n    api.store.setItem(\"reasoningEffort\", state.reasoningEffort);\n    api.store.setItem(\"reasoningSummary\", state.reasoningSummary);\n    api.store.setItem(\"visionEnabled\", state.visionEnabled.toString());\n    api.store.setItem(\"visionDetail\", state.visionDetail);\n    api.store.setItem(\"extendedThinking\", state.extendedThinking.toString());\n    api.store.setItem(\"thinkingBudget\", state.thinkingBudget.toString());\n    api.store.setItem(\"globalCustomInstructions\", state.customInstructions);\n    api.store.setItem(\"enableWebSearch\", state.enable_web_search ? \"true\" : \"false\");\n    api.store.setItem(\n      \"azureMaxCompletionTokens\",\n      state.azureParams.maxCompletionTokens.toString()\n    );\n    api.store.setItem(\"azureReasoningEffort\", state.azureParams.reasoningEffort);\n    api.store.setItem(\"azureVisionDetail\", state.azureParams.visionDetail);\n  }\n\n  function notifyChatManager(api, state) {\n    const chatManager = api.ds?.modules?.get?.(\"chatManager\");\n    if (chatManager?.updateModelConfig) {\n      chatManager.updateModelConfig({ ...state });\n    }\n  }\n\n  function updateModelConfig(api, state, config, opts = {}) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    const loadingEl =\n      domAPI && typeof domAPI.getElementById === \"function\"\n        ? domAPI.getElementById(\"modelConfigLoading\")\n        : null;\n    if (loadingEl) loadingEl.classList.remove(\"hidden\");\n\n    // Diagnostic logging: log received config and old state\n    api.log.info(`[${MODULE_CONTEXT}][updateModelConfig] Attempting to update. Received config:`, { ...config }, { context: MODULE_CONTEXT });\n    api.log.info(`[${MODULE_CONTEXT}][updateModelConfig] Current state BEFORE update:`, { ...state }, { context: MODULE_CONTEXT });\n\n    setStateFromConfig(state, config);\n    persistConfig(api, state);\n\n    // Diagnostic logging: log state AFTER update\n    api.log.info(`[${MODULE_CONTEXT}][updateModelConfig] Persisted config. Current state AFTER update:`, { ...state }, {\n      context: MODULE_CONTEXT,\n      updatedState: { ...state }\n    });\n\n    if (!opts.skipNotify) {\n      api.log.info(`[${MODULE_CONTEXT}][updateModelConfig] Notifying chat manager`, null, {\n        context: MODULE_CONTEXT,\n      });\n      notifyChatManager(api, state);\n      // Fire the bus event only if notification is allowed (no recursion)\n      dispatchEventToBus(api, \"modelConfigChanged\", { ...state });\n      api.log.info(`[${MODULE_CONTEXT}][updateModelConfig] modelConfigChanged event dispatched`, null, {\n        context: MODULE_CONTEXT,\n        updatedState: state,\n      });\n    }\n\n    updateModelDisplay(api, state);\n\n    api.delayed(() => {\n      if (loadingEl) loadingEl.classList.add(\"hidden\");\n    }, 100);\n  }\n\n  // ---------- UI Setup ----------\n  function initializeUI(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    setupModelDropdown(api, state);\n    setupMaxTokensUI(api, state);\n    setupVisionUI(api, state);\n    setupReasoningSummaryUI(api, state);\n    setupExtendedThinkingUI(api, state);\n    setupCustomInstructionsUI(api, state);\n\n    // NEW: Enable Web Search Checkbox UI\n    const webSearchConfigPanel = domAPI.getElementById(\"webSearchConfigPanel\")\n      || domAPI.getElementById(\"modelConfigPanel\")\n      || domAPI.getElementById(\"modelSidebarPanel\")\n      || null;\n    if (webSearchConfigPanel) {\n      const outerDiv = domAPI.createElement(\"div\");\n      outerDiv.className = \"form-control mb-2\";\n      const label = domAPI.createElement(\"label\");\n      label.className = \"label cursor-pointer\";\n      const labelText = domAPI.createElement(\"span\");\n      labelText.className = \"label-text\";\n      labelText.textContent = \"Enable Web Search\";\n      const input = domAPI.createElement(\"input\");\n      input.type = \"checkbox\";\n      input.id = \"enableWebSearch\";\n      input.className = \"toggle toggle-primary\";\n      input.checked = state.enable_web_search;\n      // Track with event handler\n      registerListener(\n        api,\n        input,\n        \"change\",\n        () => {\n          updateModelConfig(api, state, { enable_web_search: input.checked });\n        },\n        { description: \"web search toggle change\" }\n      );\n      label.appendChild(labelText);\n      label.appendChild(input);\n      outerDiv.appendChild(label);\n      webSearchConfigPanel.appendChild(outerDiv);\n    }\n\n    updateModelDisplay(api, state);\n\n    // Another internal event dispatch\n    dispatchEventToBus(api, \"modelconfig:initialized\", { success: true });\n  }\n\n  function setupReasoningSummaryUI(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n    const container = domAPI.getElementById(\"reasoningSummaryContainer\");\n    if (!container) return;\n\n    container.textContent = \"\";\n\n    const label = domAPI.createElement(\"label\");\n    label.htmlFor = \"reasoningSummarySelect\";\n    label.className = \"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\";\n    label.textContent = \"Reasoning Summary:\";\n\n    const select = domAPI.createElement(\"select\");\n    select.id = \"reasoningSummarySelect\";\n    select.className = \"select select-bordered select-xs w-full\";\n    [\"concise\", \"detailed\"].forEach((opt) => {\n      const o = domAPI.createElement(\"option\");\n      o.value = opt;\n      o.textContent = opt.charAt(0).toUpperCase() + opt.slice(1);\n      select.appendChild(o);\n    });\n    select.value = state.reasoningSummary;\n\n    registerListener(\n      api,\n      select,\n      \"change\",\n      () => {\n        updateModelConfig(api, state, { reasoningSummary: select.value });\n      },\n      { description: \"reasoning summary select\" }\n    );\n\n    container.appendChild(label);\n    container.appendChild(select);\n  }\n\n  function setupModelDropdown(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n    const sel = domAPI.getElementById(\"modelSelect\");\n    if (!sel) return;\n\n    sel.textContent = \"\";\n    const opts = getModelOptions();\n    opts.forEach((m) => {\n      const opt = domAPI.createElement(\"option\");\n      opt.value = m.id;\n      opt.textContent = m.name;\n      sel.appendChild(opt);\n    });\n    sel.value = state.modelName;\n\n    registerListener(\n      api,\n      sel,\n      \"change\",\n      () => {\n        const selectedModel = getModelOptions().find((m) => m.id === sel.value);\n        updateModelConfig(api, state, {\n          modelName: sel.value,\n          provider: selectedModel?.provider || \"unknown\",\n        });\n        setupVisionUI(api, state);\n        updateModelDisplay(api, state);\n      },\n      { description: \"model dropdown change\" }\n    );\n  }\n\n  function setupMaxTokensUI(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n    const container = domAPI.getElementById(\"maxTokensContainer\");\n    if (!container) return;\n\n    container.textContent = \"\";\n    const currentVal = state.maxTokens || 4096;\n\n    const slider = domAPI.createElement(\"input\");\n    slider.type = \"range\";\n    slider.min = \"100\";\n    slider.max = \"100000\";\n    slider.value = currentVal;\n    slider.className = \"w-full mt-2 range range-xs\";\n\n    const display = domAPI.createElement(\"div\");\n    display.className = \"text-sm text-gray-600 dark:text-gray-400\";\n    display.textContent = `${currentVal} tokens`;\n\n    registerListener(\n      api,\n      slider,\n      \"input\",\n      (e) => {\n        const t = parseInt(e.target.value, 10);\n        display.textContent = `${t} tokens`;\n        updateModelConfig(api, state, { maxTokens: t });\n      },\n      { description: \"maxTokens slider input\" }\n    );\n\n    container.append(slider, display);\n  }\n\n  function setupVisionUI(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n    const panel = domAPI.getElementById(\"visionPanel\");\n    if (!panel) return;\n\n    const supportsVision = getModelOptions().find((m) => m.id === state.modelName)?.supportsVision;\n    panel.classList.toggle(\"hidden\", !supportsVision);\n    if (!supportsVision) {\n      panel.textContent = \"\";\n      return;\n    }\n\n    panel.textContent = \"\";\n\n    const toggle = domAPI.createElement(\"input\");\n    toggle.type = \"checkbox\";\n    toggle.id = \"visionToggle\";\n    toggle.className = \"toggle toggle-sm mr-2\";\n    toggle.checked = state.visionEnabled;\n\n    const label = domAPI.createElement(\"label\");\n    label.htmlFor = \"visionToggle\";\n    label.className = \"text-sm cursor-pointer\";\n    label.textContent = \"Enable Vision\";\n\n    const wrapper = domAPI.createElement(\"div\");\n    wrapper.className = \"flex items-center\";\n    wrapper.append(toggle, label);\n\n    registerListener(\n      api,\n      toggle,\n      \"change\",\n      () => {\n        updateModelConfig(api, state, { visionEnabled: toggle.checked });\n      },\n      { description: \"vision toggle check\" }\n    );\n\n    panel.appendChild(wrapper);\n  }\n\n  function setupExtendedThinkingUI(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const toggle = domAPI.getElementById(\"extendedThinkingToggle\");\n    const budgetSelect = domAPI.getElementById(\"thinkingBudget\");\n    const panel = domAPI.getElementById(\"extendedThinkingPanel\");\n    if (!toggle || !budgetSelect || !panel) return;\n\n    toggle.checked = state.extendedThinking;\n    budgetSelect.value = state.thinkingBudget.toString();\n    panel.classList.toggle(\"hidden\", !state.extendedThinking);\n\n    registerListener(\n      api,\n      toggle,\n      \"change\",\n      () => {\n        const isChecked = toggle.checked;\n        panel.classList.toggle(\"hidden\", !isChecked);\n        updateModelConfig(api, state, { extendedThinking: isChecked });\n      },\n      { description: \"extended thinking toggle change\" }\n    );\n\n    registerListener(\n      api,\n      budgetSelect,\n      \"change\",\n      () => {\n        updateModelConfig(api, state, {\n          thinkingBudget: parseInt(budgetSelect.value, 10),\n        });\n      },\n      { description: \"thinking budget select change\" }\n    );\n  }\n\n  function setupCustomInstructionsUI(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const textarea = domAPI.getElementById(\"globalCustomInstructions\");\n    const saveButton = domAPI.getElementById(\"saveGlobalInstructions\");\n    if (!textarea || !saveButton) return;\n\n    textarea.value = state.customInstructions;\n\n    registerListener(\n      api,\n      saveButton,\n      \"click\",\n      () => {\n        updateModelConfig(api, state, { customInstructions: textarea.value });\n      },\n      { description: \"save global custom instructions\" }\n    );\n  }\n\n  function updateModelDisplay(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const modelNameEl = domAPI.getElementById(\"currentModelName\");\n    const maxTokensEl = domAPI.getElementById(\"currentMaxTokens\");\n    const reasoningEl = domAPI.getElementById(\"currentReasoning\");\n    const visionStatusEl = domAPI.getElementById(\"visionEnabledStatus\");\n\n    if (modelNameEl) {\n      const modelOption = getModelOptions().find((m) => m.id === state.modelName);\n      modelNameEl.textContent = modelOption ? modelOption.name : state.modelName;\n    }\n    if (maxTokensEl) {\n      maxTokensEl.textContent = state.maxTokens.toString();\n    }\n    if (reasoningEl) {\n      reasoningEl.textContent = state.reasoningEffort || \"N/A\";\n    }\n    if (visionStatusEl) {\n      const modelSupportsVision = getModelOptions().find((m) => m.id === state.modelName)?.supportsVision;\n      if (modelSupportsVision) {\n        visionStatusEl.textContent = state.visionEnabled ? \"Enabled\" : \"Disabled\";\n      } else {\n        visionStatusEl.textContent = \"Not Supported\";\n      }\n    }\n  }\n\n  /**\n   * Render a quick config UI into a given container.\n   */\n  function renderQuickConfig(api, state, container) {\n    if (!container) return;\n    container.textContent = \"\";\n\n    api.delayed(() => {\n      try {\n        buildModelSelectUI(api, state, container);\n        buildMaxTokensUI(api, state, container);\n        buildVisionToggleIfNeeded(api, state, container);\n        dispatchEventToBus(api, \"modelConfigRendered\", { containerId: container.id });\n      } catch (error) {\n        api.log.error(`[${MODULE_CONTEXT}][renderQuickConfig] Error building config UI`, error, {\n          context: MODULE_CONTEXT,\n        });\n        // Re-throw to ensure we follow the \"any exception thrown or caught must be re-logged\"\n        // (then re-thrown)\n        throw error;\n      }\n    }, 0);\n  }\n\n  function buildModelSelectUI(api, state, container) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const modelLabel = domAPI.createElement(\"label\");\n    modelLabel.htmlFor = `quickModelSelect-${container.id}`;\n    modelLabel.className = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\";\n    modelLabel.textContent = \"Model:\";\n\n    const modelSelect = domAPI.createElement(\"select\");\n    modelSelect.id = `quickModelSelect-${container.id}`;\n    modelSelect.className = \"select select-bordered select-sm w-full mb-2\";\n\n    getModelOptions().forEach((opt) => {\n      const option = domAPI.createElement(\"option\");\n      option.value = opt.id;\n      option.text = opt.name;\n      modelSelect.appendChild(option);\n    });\n    modelSelect.value = state.modelName;\n\n    registerListener(\n      api,\n      modelSelect,\n      \"change\",\n      () => {\n        const selectedModel = getModelOptions().find((m) => m.id === modelSelect.value);\n        updateModelConfig(api, state, {\n          modelName: modelSelect.value,\n          provider: selectedModel?.provider || \"unknown\",\n        });\n        const visionContainer = container.querySelector(\".quick-vision-container\");\n        if (visionContainer) {\n          visionContainer.remove();\n          buildVisionToggleIfNeeded(api, state, container);\n        }\n      },\n      { description: `quick config model select for ${container.id}` }\n    );\n\n    container.appendChild(modelLabel);\n    container.appendChild(modelSelect);\n  }\n\n  function buildMaxTokensUI(api, state, container) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const maxTokensDiv = domAPI.createElement(\"div\");\n    maxTokensDiv.className = \"my-2 flex flex-col\";\n\n    const maxTokensLabel = domAPI.createElement(\"label\");\n    maxTokensLabel.htmlFor = `quickMaxTokens-${container.id}`;\n    maxTokensLabel.className = \"text-xs font-medium text-gray-700 dark:text-gray-300 mb-1\";\n    maxTokensLabel.textContent = \"Max Tokens:\";\n\n    const maxTokensValue = domAPI.createElement(\"span\");\n    maxTokensValue.className = \"ml-1 text-xs text-gray-500 dark:text-gray-400\";\n    maxTokensValue.textContent = state.maxTokens;\n\n    const maxTokensInput = domAPI.createElement(\"input\");\n    maxTokensInput.id = `quickMaxTokens-${container.id}`;\n    maxTokensInput.type = \"range\";\n    maxTokensInput.min = \"100\";\n    maxTokensInput.max = \"100000\";\n    maxTokensInput.value = state.maxTokens;\n    maxTokensInput.className = \"range range-xs\";\n\n    registerListener(\n      api,\n      maxTokensInput,\n      \"input\",\n      (e) => {\n        const val = parseInt(e.target.value, 10);\n        maxTokensValue.textContent = val;\n        updateModelConfig(api, state, { maxTokens: val });\n      },\n      { description: `quick config maxTokens slider for ${container.id}` }\n    );\n\n    const labelAndValue = domAPI.createElement(\"div\");\n    labelAndValue.className = \"flex justify-between items-center\";\n    labelAndValue.append(maxTokensLabel, maxTokensValue);\n    maxTokensDiv.append(labelAndValue, maxTokensInput);\n    container.appendChild(maxTokensDiv);\n  }\n\n  function buildVisionToggleIfNeeded(api, state, container) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const model = getModelOptions().find((m) => m.id === state.modelName);\n    if (!model?.supportsVision) return;\n\n    const visionDiv = domAPI.createElement(\"div\");\n    visionDiv.className = \"mt-2 flex items-center quick-vision-container\";\n\n    const toggle = domAPI.createElement(\"input\");\n    toggle.type = \"checkbox\";\n    toggle.id = `quickVisionToggle-${container.id}`;\n    toggle.className = \"toggle toggle-xs mr-2\";\n    toggle.checked = state.visionEnabled;\n\n    const toggleLabel = domAPI.createElement(\"label\");\n    toggleLabel.htmlFor = `quickVisionToggle-${container.id}`;\n    toggleLabel.className = \"text-xs cursor-pointer\";\n    toggleLabel.textContent = \"Enable Vision\";\n\n    registerListener(\n      api,\n      toggle,\n      \"change\",\n      () => {\n        updateModelConfig(api, state, { visionEnabled: toggle.checked });\n      },\n      { description: `quick config vision toggle for ${container.id}` }\n    );\n\n    visionDiv.append(toggle, toggleLabel);\n    container.appendChild(visionDiv);\n  }\n\n  // Build and return the final public module object (the factory's product).\n  const moduleBuild = (function buildModule() {\n    const api = setupDependencies();\n    const state = buildState(api);\n\n    const modelApi = {\n      getConfig: () => getConfig(state),\n      updateConfig: (cfg, opts = {}) => updateModelConfig(api, state, cfg, opts),\n      getModelOptions,\n      onConfigChange: (cb) => onConfigChange(api, cb),\n      initializeUI: () => initializeUI(api, state),\n      renderQuickConfig: (container) => renderQuickConfig(api, state, container),\n      cleanup: () => cleanup(api),\n      initWithReadiness: async () => {\n        // We rely entirely on the DI-provided domReadinessService for readiness gating.\n        await api.ds.modules.get(\"domReadinessService\").dependenciesAndElements([\"app\", \"domAPI\"]);\n        initializeUI(api, state);\n      },\n      // Provide a handle for advanced usage if another module wants to manually track or dispatch\n      // events. This ensures no direct global usage of addEventListener.\n      getEventBus: () => busTarget,\n    };\n\n    return modelApi;\n  })();\n\n  return moduleBuild;\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 27559,
          "_transferSize": 28742,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.561Z",
        "time": 667.8759999922477,
        "timings": {
          "blocked": 569.4759999967525,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.05099999999993088,
          "wait": 96.53199999883213,
          "receive": 1.8169999966630712,
          "_blocked_queueing": 3.987999996752478,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106419",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 46
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/projectDashboard.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1465,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "43660"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"856357a3f67fce28fd014e0950036269\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 08:33:12 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 43660,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * projectDashboard.js\n *\n * A fully remediated implementation of the ProjectDashboard, enforcing:\n * - Factory function export\n * - Strict DI & no top-level logic\n * - Pure imports\n * - Logging via DI logger\n * - HTML sanitization\n * - DOM readiness only via domReadinessService\n * - Single event bus for custom events\n * - Navigation via navigationService\n */\n\nexport function createProjectDashboard(deps) {\n  // ─────────────────────────────────────────────────────────────────────────\n  // 1) Validate dependencies upfront\n  // ─────────────────────────────────────────────────────────────────────────\n  if (!deps || typeof deps !== 'object') {\n    throw new Error('[createProjectDashboard] A dependencies object is required.');\n  }\n\n  const {\n    dependencySystem,\n    domAPI,\n    browserService,\n    eventHandlers,\n    domReadinessService,\n    logger,\n    sanitizer,\n    APP_CONFIG\n  } = deps;\n\n  if (!dependencySystem) {\n    throw new Error('[createProjectDashboard] Missing dependency: dependencySystem');\n  }\n  if (!domAPI) {\n    throw new Error('[createProjectDashboard] Missing dependency: domAPI');\n  }\n  if (!browserService) {\n    throw new Error('[createProjectDashboard] Missing dependency: browserService');\n  }\n  if (!eventHandlers) {\n    throw new Error('[createProjectDashboard] Missing dependency: eventHandlers');\n  }\n  if (!domReadinessService) {\n    throw new Error('[createProjectDashboard] Missing dependency: domReadinessService');\n  }\n\n  if (!logger) {\n    throw new Error('[createProjectDashboard] logger dependency is required for observability');\n  }\n  if (!sanitizer) {\n    throw new Error('[createProjectDashboard] sanitizer dependency is required');\n  }\n  if (!APP_CONFIG) {\n    throw new Error('[createProjectDashboard] APP_CONFIG dependency is required');\n  }\n\n  // ─────────────────────────────────────────────────────────────────────────\n  // 2) Local event bus for the ProjectDashboard (avoid global doc events)\n  // ─────────────────────────────────────────────────────────────────────────\n  const dashboardBus = new EventTarget();\n\n  // ─────────────────────────────────────────────────────────────────────────\n  // 3) Class Definition: wrapped entirely inside the factory\n  //    (no top-level logic)\n  // ─────────────────────────────────────────────────────────────────────────\n  class ProjectDashboard {\n    constructor() {\n      // Basic DI references\n      this.dependencySystem = dependencySystem;\n      this.domAPI = domAPI;\n      this.browserService = browserService;\n      this.domReadinessService = domReadinessService;\n      this.eventHandlers = eventHandlers;\n      this.logger = logger;\n      this.sanitizer = sanitizer;\n      this.dashboardBus = dashboardBus;\n\n      // Modules retrieved from dependencySystem\n      this.getModule = (key) => {\n        const module = this.dependencySystem.modules.get(key);\n        if (!module) {\n          logger.error('[ProjectDashboard][getModule]', `Missing required module \"${key}\"`, { context: 'projectDashboard' });\n          throw new Error(`[ProjectDashboard] Module \"${key}\" not found`);\n        }\n        return module;\n      };\n\n      try {\n        this.app = this.getModule('app');\n        this.projectManager = this.getModule('projectManager');\n        this.auth = this.getModule('auth');\n        this.navigationService = this.getModule('navigationService');\n      } catch (err) {\n        logger.error('[ProjectDashboard][constructor]', err, { context: 'projectDashboard' });\n        throw err;\n      }\n\n      // Components\n      this.components = {\n        projectList: this.getModuleSafe('projectListComponent'),\n        projectDetails: this.getModuleSafe('projectDetailsComponent')\n      };\n\n      // Additional checks\n      this._verifyRequiredMethods();\n\n      // Internal state\n      this.state = {\n        currentView: null,\n        initialized: false,\n        _aborted: false\n      };\n      this._viewsRegistered = false;\n      this._unsubs = [];\n\n      // Register minimal \"stub\" views first to avoid \"unregistered view\" errors\n      this._ensureNavigationViews();\n\n      // Listen for auth state changes on AuthBus\n      const authBus = this.auth?.AuthBus;\n      if (!authBus || typeof authBus.addEventListener !== 'function') {\n        logger.error('[ProjectDashboard][constructor]', 'AuthBus with addEventListener not found', { context: 'projectDashboard' });\n        throw new Error('[ProjectDashboard] AuthBus is required for auth state tracking.');\n      }\n\n      const safeAuthHandler = this._wrapHandler(\n        this._onAuthStateChanged.bind(this),\n        'authStateChangedGlobal'\n      );\n      const unsub = this.eventHandlers.trackListener(\n        authBus,\n        'authStateChanged',\n        safeAuthHandler,\n        { context: 'projectDashboard' }\n      );\n      if (typeof unsub === 'function') this._unsubs.push(unsub);\n    }\n\n    /**\n     * Attempt to get a module from the system, but return null if missing.\n     * Logs a warning instead of throwing.\n     */\n    getModuleSafe(key) {\n      const mod = this.dependencySystem.modules.get(key);\n      if (!mod) {\n        logger.error('[ProjectDashboard][getModuleSafe]', `Optional module \"${key}\" not found`, { context: 'projectDashboard' });\n        return null;\n      }\n      return mod;\n    }\n\n    /**\n     * Verifies that essential modules and methods exist.\n     */\n    _verifyRequiredMethods() {\n      if (!this.eventHandlers?.trackListener) {\n        logger.error('[ProjectDashboard][constructor]', 'EventHandlers.trackListener is missing', { context: 'projectDashboard' });\n        throw new Error('[ProjectDashboard] eventHandlers.trackListener is required');\n      }\n      if (!this.browserService) {\n        throw new Error('[ProjectDashboard] browserService is required');\n      }\n      if (!this.domAPI) {\n        throw new Error('[ProjectDashboard] domAPI is required for DOM manipulation');\n      }\n    }\n\n    /**\n     * Utility: wrap any event handler so that errors get logged properly.\n     */\n    _wrapHandler(handlerFn, description) {\n      return (...args) => {\n        try {\n          return handlerFn(...args);\n        } catch (err) {\n          logger.error(`[ProjectDashboard][${description}]`, err, {\n            context: 'projectDashboard'\n          });\n          throw err;\n        }\n      };\n    }\n\n    /**\n     * Public method: Initialize the ProjectDashboard\n     */\n    async initialize() {\n      if (this.state.initialized) {\n        return true; // Already done\n      }\n\n      const initStartTime = Date.now();\n      try {\n        /*\n         * IMPORTANT: Do **not** block ProjectDashboard initialization on the\n         * global `app:ready` event.  The dashboard itself is created and\n         * initialized from within `initializeUIComponents()` *before* the\n         * main app orchestrator emits `app:ready`.  Waiting here would cause\n         * a circular dependency:\n         *   1. App.init → initializeUIComponents → ProjectDashboard.initialize()\n         *   2. ProjectDashboard.initialize() waits for `app:ready`\n         *   3. App.init needs initializeUIComponents to finish before it can\n         *      progress to the phase that emits `app:ready` ➔ dead-lock\n         *\n         * Instead we perform a fast synchronous check.  If the `appModule`\n         * already reports `state.isReady` we treat the app as ready; if not\n         * we continue without waiting—the dashboard listens to later auth and\n         * navigation events and will hydrate views on demand.\n         */\n        const appModule = this.dependencySystem.modules.get('appModule');\n        if (!appModule?.state?.isReady) {\n          logger.debug?.('[ProjectDashboard] Proceeding before app:ready (bootstrap phase).', { context: 'projectDashboard' });\n        }\n\n        // Check authentication (read from app.state or auth module)\n        // Lack of authentication at this stage is **not** an error – the user may\n        // simply be visiting the landing page before logging in.  Treat it as a\n        // normal control-flow branch and surface as a warning-level log instead\n        // of an error to avoid noisy error tracking alerts.\n\n        if (!this.auth?.isAuthenticated?.()) {\n          logger.warn('[ProjectDashboard][initialize] User not authenticated – dashboard initialisation deferred until login.', { context: 'projectDashboard' });\n\n          // Re-use the same handler that reacts to AuthBus updates so visual\n          // feedback (login required message, hidden main content, etc.) is\n          // consistent across eager and event-driven code-paths.\n          this._onAuthStateChanged({ detail: { authenticated: false } });\n\n          return false;\n        }\n\n        // Ensure required DOM elements are ready\n        await domReadinessService.dependenciesAndElements({\n          deps: ['app'],\n          domSelectors: ['#mainContent'],\n          context: 'ProjectDashboard_Init'\n        });\n\n        // Initialize sub-components\n        await this._initializeComponents();\n        this._setupEventListeners();\n        this._registerNavigationViews();\n\n        // Si el usuario ya está autenticado, mostrar la vista de proyectos\n        if (this.auth?.isAuthenticated?.()) {\n          try {\n            await this.showProjectList();\n          } catch (err) {\n            this.logger.error('[ProjectDashboard][initialize] showProjectList failed', err, { context: 'projectDashboard' });\n          }\n        }\n\n        // Mark initialized\n        this.state.initialized = true;\n        const initDuration = Date.now() - initStartTime;\n\n        // Dispatch an internal event on the local bus\n        this.dashboardBus.dispatchEvent(\n          new CustomEvent('projectDashboardInitialized', {\n            detail: {\n              success: true,\n              timestamp: Date.now(),\n              duration: initDuration\n            }\n          })\n        );\n        return true;\n      } catch (err) {\n        logger.error('[ProjectDashboard][initialize]', err, { context: 'projectDashboard' });\n        this.state.initialized = false;\n        const initDuration = Date.now() - initStartTime;\n\n        this.dashboardBus.dispatchEvent(\n          new CustomEvent('projectDashboardInitialized', {\n            detail: {\n              success: false,\n              error: err,\n              errorMessage: err?.message,\n              timestamp: Date.now(),\n              duration: initDuration\n            }\n          })\n        );\n        return false;\n      }\n    }\n\n    /**\n     * Cleanup method for unsubscribing from events, etc.\n     */\n    cleanup() {\n      // Unsubscribe from any tracked listeners\n      if (this._unsubs?.length) {\n        this._unsubs.forEach((unsub) => {\n          try {\n            unsub?.();\n          } catch (err) {\n            logger.error('[ProjectDashboard][cleanup]', err, { context: 'projectDashboard' });\n          }\n        });\n        this._unsubs = [];\n      }\n\n      // Use eventHandlers cleanup\n      if (this.eventHandlers?.cleanupListeners) {\n        this.eventHandlers.cleanupListeners({ context: 'projectDashboard' });\n      }\n\n      // Detach any local-bus listeners and null-out the bus\n      this.dashboardBus?.dispatchEvent(new Event('dashboardDestroyed'));\n      this.dashboardBus = null;\n\n      // Cleanup readiness service if applicable\n      if (typeof this.domReadinessService.destroy === 'function') {\n        try {\n          this.domReadinessService.destroy();\n        } catch (err) {\n          logger.error('[ProjectDashboard][_initializeComponents:detailsTemplate]', err, {\n            context: 'projectDashboard'\n          });\n        }\n      }\n    }\n\n    /**\n     * Show the list of projects.\n     */\n    async showProjectList() {\n      try {\n        await domReadinessService.dependenciesAndElements({\n          deps: ['app'],\n          domSelectors: ['#projectListView'],\n          context: 'ProjectDashboard_showList'\n        });\n\n        this.state.currentView = 'list';\n        this.app.setCurrentProject?.(null); // usage depends on your app interface\n        this.browserService.removeSearchParam?.('project');\n        this.browserService.removeSearchParam?.('chatId');\n\n        // Toggle UI\n        this._setView({ showList: true, showDetails: false });\n        if (this.components.projectDetails) {\n          this.components.projectDetails.hide?.();\n        }\n\n        // Initialize projectList component if not already\n        if (this.components.projectList && !this.components.projectList.state?.initialized) {\n          try {\n            await this.components.projectList.initialize();\n          } catch (err) {\n            logger.error('[ProjectDashboard][showProjectList:initializeList]', err, { context: 'projectDashboard' });\n            return;\n          }\n        }\n\n        this.components.projectList?.show();\n        this._loadProjects();\n      } catch (err) {\n        logger.error('[ProjectDashboard][showProjectList]', err && err.stack ? err.stack : err, {\n          context: 'projectDashboard'\n        });\n      }\n    }\n\n    /**\n     * Show details for a given project (by object or ID).\n     */\n    async showProjectDetails(projectObjOrId) {\n      let project = null;\n      let projectId = null;\n      const currentLoadId = Symbol('loadId');\n      this._lastLoadId = currentLoadId;\n\n      try {\n        // Determine if argument is an object or a string\n        if (typeof projectObjOrId === 'object' && projectObjOrId?.id) {\n          project = projectObjOrId;\n          projectId = projectObjOrId.id;\n        } else if (typeof projectObjOrId === 'string') {\n          projectId = projectObjOrId;\n        } else {\n          await this.showProjectList();\n          return false;\n        }\n\n        // Initialize projectDetails component if needed\n        if (this.components.projectDetails && !this.components.projectDetails.state?.initialized) {\n          try {\n            await this.components.projectDetails.initialize();\n          } catch (err) {\n            logger.error('[ProjectDashboard][showProjectDetails:initializeDetails]', err, { context: 'projectDashboard' });\n            throw err;\n          }\n        }\n\n        // If no project object supplied, load from projectManager\n        if (!project) {\n          if (this.auth?.isAuthenticated?.() && this.projectManager?.loadProjectDetails) {\n            project = await this.projectManager.loadProjectDetails(projectId);\n            if (!project) {\n              await this.showProjectList();\n              return false;\n            }\n          } else {\n            await this.showProjectList();\n            return false;\n          }\n        }\n\n        if (this._lastLoadId !== currentLoadId) {\n          // Another load took place, cancel\n          return false;\n        }\n\n        // Switch UI to details and render via component show()\n        this._setView({ showList: false, showDetails: true });\n        this.components.projectList?.hide?.();\n        await this.components.projectDetails?.show?.({ projectId });\n\n        // Post success: set search param, handle default conversation, dispatch events\n        return this._postProjectDetailsSuccess(project, projectId, typeof projectObjOrId === 'object');\n      } catch (err) {\n        logger.error('[ProjectDashboard][showProjectDetails:outerCatch]', err, { context: 'projectDashboard' });\n        await this.showProjectList();\n        return false;\n      }\n    }\n\n    /**\n     * Post success logic after showing project details\n     */\n    _postProjectDetailsSuccess(project, projectId, wasFullObject) {\n      this.browserService.setSearchParam?.('project', projectId);\n      this.state.currentView = 'details';\n\n      // If project has conversations, set the first as default in search param\n      if (Array.isArray(project.conversations) && project.conversations.length > 0) {\n        const conv = project.conversations[0];\n        if (conv?.id) {\n          this.browserService.setSearchParam?.('chatId', conv.id);\n        }\n      }\n\n      // Optionally dispatch 'projectLoaded' if we originally had the full object\n      if (wasFullObject && project?.id) {\n        this.dashboardBus.dispatchEvent(\n          new CustomEvent('projectLoaded', { detail: project })\n        );\n      }\n\n      // Initialize chat manager if available\n      const chatManager = this.getModuleSafe('chatManager');\n      if (chatManager && typeof chatManager.initialize === 'function') {\n        Promise.resolve(chatManager.initialize({ projectId })).catch((err) => {\n          logger.error('[ProjectDashboard][_postProjectDetailsSuccess:chatManager]', err, {\n            context: 'projectDashboard'\n          });\n        });\n      }\n\n      return true;\n    }\n\n    /**\n     * Load the list of projects from the projectManager\n     */\n    _loadProjects() {\n      if (this.state._aborted) {\n        return;\n      }\n\n      const isAuthed =\n        this.app?.state?.isAuthenticated ||\n        (typeof this.auth?.isAuthenticated === 'function' && this.auth.isAuthenticated());\n\n      if (!isAuthed) {\n        // Wait a bit and retry if user logs in\n        this.browserService.setTimeout(() => {\n          if (this.auth?.isAuthenticated?.()) {\n            this._loadProjects();\n          }\n        }, 500);\n        return;\n      }\n\n      if (!this.projectManager || typeof this.projectManager.loadProjects !== 'function') {\n        return;\n      }\n\n      this.browserService.setTimeout(() => this._executeProjectLoad(), 100);\n    }\n\n    /**\n     * Actually call projectManager.loadProjects\n     */\n    _executeProjectLoad() {\n      if (this.state._aborted) {\n        return;\n      }\n      this.projectManager\n        .loadProjects('all')\n        .then(() => {\n          // success, no direct log needed unless debugging\n        })\n        .catch((err) => {\n          logger.error('[ProjectDashboard][_executeProjectLoad]', err, { context: 'projectDashboard' });\n        });\n    }\n\n    /**\n     * Setup centralized event listeners with safe handlers\n     */\n    _setupEventListeners() {\n      const doc = this.domAPI.getDocument();\n      const add = (target, event, handler, opts = {}) => {\n        if (!this.eventHandlers?.trackListener) {\n          logger.error('[ProjectDashboard][_setupEventListeners]', 'Missing trackListener', { context: 'projectDashboard' });\n          throw new Error('[ProjectDashboard] eventHandlers.trackListener is required');\n        }\n      const safeHandler = this._wrapHandler(handler, `Evt_${event}`);\n      const optionsWithContext = { ...opts, context: 'projectDashboard' };\n      // trackListener _already_ stores its own removal; capture the returned unsub if provided.\n      const maybeUnsub = this.eventHandlers.trackListener(\n        target,\n        event,\n        safeHandler,\n        optionsWithContext\n      );\n      if (typeof maybeUnsub === 'function') {\n        this._unsubs.push(maybeUnsub);\n      }\n      };\n\n      // Example events: define as needed\n      add(doc, 'projectsLoaded', this._handleProjectsLoaded.bind(this), {\n        description: 'Dashboard: projectsLoaded'\n      });\n      add(doc, 'projectLoaded', this._handleProjectLoaded.bind(this), {\n        description: 'Dashboard: projectLoaded'\n      });\n      add(doc, 'projectStatsLoaded', this._handleProjectStatsLoaded.bind(this), {\n        description: 'Dashboard: projectStatsLoaded'\n      });\n      add(doc, 'projectFilesLoaded', this._handleFilesLoaded.bind(this), {\n        description: 'Dashboard: projectFilesLoaded'\n      });\n      add(doc, 'projectArtifactsLoaded', this._handleArtifactsLoaded.bind(this), {\n        description: 'Dashboard: projectArtifactsLoaded'\n      });\n      add(doc, 'projectNotFound', this._handleProjectNotFound.bind(this), {\n        description: 'Dashboard: projectNotFound'\n      });\n      add(doc, 'projectCreated', this._handleProjectCreated.bind(this), {\n        description: 'Dashboard: projectCreated'\n      });\n      add(doc, 'authStateChanged', this._handleAuthStateChange.bind(this), {\n        description: 'Dashboard: authStateChanged(global)'\n      });\n      add(doc, 'auth:stateChanged', this._handleAuthStateChange.bind(this), {\n        description: 'Dashboard: auth:stateChanged(global)'\n      });\n      add(doc, 'projectDeleted', this._handleProjectDeleted.bind(this), {\n        description: 'Dashboard: projectDeleted'\n      });\n    }\n\n    // ───────────────────────────────────────────────────────────────────────────\n    //  Event handlers\n    // ───────────────────────────────────────────────────────────────────────────\n\n    _handleProjectsLoaded(e) {\n      const { projects = [], error = false, message } = e.detail || {};\n      if (error) {\n        if (this.components.projectList?._showErrorState) {\n          // Provide some user feedback\n          this.components.projectList._showErrorState(message || 'Failed to load projects');\n        }\n        return;\n      }\n      // Render projects\n      this.browserService.requestAnimationFrame(() => {\n        this.components.projectList?.renderProjects?.({ projects });\n      });\n    }\n\n    _handleProjectLoaded(e) {\n      const project = e.detail;\n      (async () => {\n        try {\n          await this.domReadinessService.dependenciesAndElements({\n            deps: ['app'],\n            domSelectors: [],\n            context: 'ProjectDashboard_appReady'\n          });\n          this.app.setCurrentProject?.(project || null);\n        } catch (err) {\n          logger.error('[ProjectDashboard][_handleProjectLoaded]', err, {\n            context: 'projectDashboard'\n          });\n        }\n      })();\n      this.browserService.requestAnimationFrame(() => {\n        this.components.projectDetails?.renderProject?.(project);\n      });\n    }\n\n    _handleProjectStatsLoaded(e) {\n      const stats = e.detail;\n      this.browserService.requestAnimationFrame(() => {\n        this.components.projectDetails?.renderStats?.(stats);\n      });\n    }\n\n    _handleFilesLoaded(e) {\n      const { files } = e.detail || {};\n      this.browserService.requestAnimationFrame(() => {\n        this.components.projectDetails?.renderFiles?.(files);\n      });\n    }\n\n    _handleArtifactsLoaded(e) {\n      const { artifacts } = e.detail || {};\n      this.browserService.requestAnimationFrame(() => {\n        this.components.projectDetails?.renderArtifacts?.(artifacts);\n      });\n    }\n\n    _handleProjectNotFound(e) {\n      const { projectId } = e.detail || {};\n      this.state.currentProject = null;\n      const detailsView = this.domAPI.getElementById('projectDetailsView');\n      if (detailsView) {\n        detailsView.classList.add('hidden');\n        detailsView.style.display = 'none';\n      }\n      this.showProjectList();\n    }\n\n    _handleProjectCreated(e) {\n      const project = e.detail;\n      if (project?.id) {\n        // Possibly schedule post-creation events\n        this.browserService.setTimeout(() => {\n          const pId = project.id;\n          // Fire some \"rendered\" events\n          const events = [\n            'projectStatsRendered',\n            'projectFilesRendered',\n            'projectConversationsRendered',\n            'projectArtifactsRendered',\n            'projectKnowledgeBaseRendered'\n          ];\n          events.forEach((evName) => {\n            this.dashboardBus.dispatchEvent(\n              new CustomEvent(evName, { detail: { projectId: pId } })\n            );\n          });\n        }, 3000);\n      }\n      this.showProjectDetails(project);\n      this.browserService.setItem?.('selectedProjectId', project.id);\n    }\n\n    _handleAuthStateChange(event) {\n      const { authenticated } = event.detail || {};\n      this.browserService.requestAnimationFrame(() => {\n        const loginRequiredMessage = this.domAPI.getElementById('loginRequiredMessage');\n        const mainContent = this.domAPI.getElementById('mainContent');\n        const projectListView = this.domAPI.getElementById('projectListView');\n        const projectDetailsView = this.domAPI.getElementById('projectDetailsView');\n\n        if (!authenticated) {\n          if (loginRequiredMessage) loginRequiredMessage.classList.remove('hidden');\n          if (mainContent) mainContent.classList.add('hidden');\n          if (projectListView) projectListView.classList.add('hidden');\n          if (projectDetailsView) projectDetailsView.classList.add('hidden');\n          this.state._aborted = true;\n        } else {\n          this.state._aborted = false;\n          if (loginRequiredMessage) loginRequiredMessage.classList.add('hidden');\n          if (mainContent) mainContent.classList.remove('hidden');\n          this.state.currentView = 'list';\n          this.state.currentProject = null;\n          this.browserService.removeSearchParam?.('project');\n\n          if (projectListView) {\n            projectListView.classList.remove('hidden', 'opacity-0');\n            projectListView.style.display = '';\n            void projectListView.offsetHeight;\n          }\n          if (projectDetailsView) projectDetailsView.classList.add('hidden');\n\n          // If components not initialized, do so\n          const isProjectListInited = this.components.projectList?.state?.initialized;\n          if (!isProjectListInited) {\n            this._initializeComponents()\n              .then(() => {\n                this.components.projectList?.show();\n                this._loadProjects();\n              })\n              .catch((err) => {\n                logger.error('[ProjectDashboard][_handleAuthStateChange]', err, {\n                  context: 'projectDashboard'\n                });\n              });\n          } else {\n            this.components.projectList?.show();\n            this.components.projectDetails?.hide();\n            this.browserService.setTimeout(() => {\n              this._loadProjects();\n              this.browserService.setTimeout(() => {\n                const plv = this.domAPI.getElementById('projectListView');\n                if (plv) {\n                  plv.classList.remove('opacity-0');\n                  plv.style.display = '';\n                  plv.classList.remove('hidden');\n                }\n              }, 100);\n            }, 300);\n          }\n        }\n      });\n    }\n\n    /**\n     * Separate from global auth changes: local auth event\n     */\n    _onAuthStateChanged(e) {\n      const { authenticated } = e.detail || {};\n      if (!authenticated) {\n        this.state._aborted = true;\n        const loginMsg = this.domAPI.getElementById('loginRequiredMessage');\n        const mainCnt = this.domAPI.getElementById('mainContent');\n        if (loginMsg) loginMsg.classList.remove('hidden');\n        if (mainCnt) mainCnt.classList.add('hidden');\n        return;\n      }\n      this.state._aborted = false;\n      this.initialize().catch((err) => {\n        logger.error('[ProjectDashboard][_onAuthStateChanged]', err, { context: 'projectDashboard' });\n      });\n    }\n\n    _handleProjectDeleted(e) {\n      const { projectId } = e.detail || {};\n      (async () => {\n        try {\n          await this.domReadinessService.dependenciesAndElements({\n            deps: ['app'],\n            domSelectors: [],\n            context: 'ProjectDashboard_appReady'\n          });\n          const currentProject = this.app?.getCurrentProject?.();\n          if (currentProject?.id === projectId) {\n            await this.showProjectList();\n          } else {\n            if (this.state.currentView === 'list') {\n              this._loadProjects();\n            }\n          }\n        } catch (err) {\n          logger.error('[ProjectDashboard][_handleProjectDeleted]', err, { context: 'projectDashboard' });\n        }\n      })();\n    }\n\n    /**\n     * Ensure main views are at least stub-registered.\n     */\n    _ensureNavigationViews() {\n      if (this._viewsRegistered || !this.navigationService?.registerView) return;\n      try {\n        this.navigationService.registerView('projectList', {\n          show : async () => {                       // delegate to real logic\n            try { await this.showProjectList(); } catch {\n              // Ignore navigation failures to keep dashboard robust (view not found, etc.)\n              return false;\n            }\n            return true;\n          },\n          hide : async () => {\n            try { this.components.projectList?.hide?.(); } catch {\n              // Ignore errors during hide - likely uninitialized, no critical error\n            }\n            return true;\n          }\n        });\n      } catch (err) {\n        // ignore duplicate navigation view registration\n      }\n\n      try {\n        this.navigationService.registerView('projectDetails', {\n          show : async (params = {}) => {\n            const { projectId, activeTab, conversationId } = params;\n            if (!projectId) return false;\n            try {\n              await this.showProjectDetails(projectId);\n              if (activeTab && this.components.projectDetails?.switchTab) {\n                this.components.projectDetails.switchTab(activeTab);\n              }\n              // (optional) handle conversationId here if needed\n            } catch (err) {\n              // if initialization or nav failed, do not proceed\n              return false;\n            }\n            return true;\n          },\n          hide : async () => {\n            try { this.components.projectDetails?.hide?.(); } catch (err) {\n              // ignore errors during component hide\n            }\n            return true;\n          }\n        });\n      } catch (err) {\n        // ignore duplicate navigation view registration\n      }\n      this._viewsRegistered = true;\n    }\n\n    /**\n     * Register final show/hide for projectList & projectDetails.\n     */\n    _registerNavigationViews() {\n      if (!this.navigationService?.registerView) return;\n      try {\n        // projectList\n        this.navigationService.registerView('projectList', {\n          show: async () => {\n            await this.showProjectList();\n            return true;\n          },\n          hide: async () => {\n            this.components.projectList?.hide?.();\n            return true;\n          }\n        });\n      } catch (err) {\n        logger.error('[ProjectDashboard][_registerNavigationViews:projectList]', err, {\n          context: 'projectDashboard'\n        });\n      }\n\n      try {\n        // projectDetails\n        this.navigationService.registerView('projectDetails', {\n          show: async (params = {}) => {\n            const { projectId, conversationId, activeTab } = params;\n            if (!projectId) {\n              this.navigationService.navigateTo('projectList');\n              return false;\n            }\n            // Switch UI\n            this._setView({ showList: false, showDetails: true });\n            if (!this.components.projectDetails) {\n              this.navigationService.navigateTo('projectList');\n              return false;\n            }\n\n            await this.components.projectDetails.show({ projectId, activeTab });\n            let projectToRender = null;\n            if (typeof this.projectManager?.loadProjectDetails === 'function') {\n              try {\n                projectToRender = await this.projectManager.loadProjectDetails(projectId);\n} catch (error) {\n      logger.error('[ProjectDashboard][detailsViewShow:loadProjectDetails]', error, {\n        context: 'projectDashboard'\n      });\n      // If load fails, an event may be dispatched that triggers showProjectList\n      return false;\n    }\n            }\n            if (!projectToRender) {\n              // Possibly a 404\n              this.navigationService.navigateTo('projectList');\n              return false;\n            }\n\n            // Render the project\n            this.components.projectDetails.renderProject?.(projectToRender);\n            // Possibly load conversation\n            if (conversationId && this.components.projectDetails.loadConversation) {\n              this.components.projectDetails.switchTab?.(activeTab || 'conversations');\n              await this.components.projectDetails.loadConversation(conversationId);\n            } else if (activeTab && this.components.projectDetails.switchTab) {\n              this.components.projectDetails.switchTab(activeTab);\n            }\n            return true;\n          },\n          hide: async () => {\n            this.components.projectDetails?.hide?.();\n            return true;\n          }\n        });\n      } catch (err) {\n        logger.error('[ProjectDashboard][_registerNavigationViews:projectDetails]', err, {\n          context: 'projectDashboard'\n        });\n      }\n    }\n\n    /**\n     * Initialize sub-components, waiting for relevant DOM elements.\n     */\n    async _initializeComponents() {\n      // Reload references in case new modules arrived\n      this.components.projectList = this.components.projectList || this.getModuleSafe('projectListComponent');\n      this.components.projectDetails =\n        this.components.projectDetails || this.getModuleSafe('projectDetailsComponent');\n\n      // ------------------------------------------------------------------\n      // 1) Wait for Project-Details template if it hasn’t already been loaded\n      // ------------------------------------------------------------------\n      const detailsTemplateAlreadyLoaded = (() => {\n        try {\n          // Fast heuristics: component reports templateLoaded OR DOM element exists\n          if (this.components.projectDetails?.state?.templateLoaded) return true;\n          const detailsViewEl = this.domAPI.getElementById('projectDetailsView');\n          return !!(detailsViewEl && detailsViewEl.childElementCount > 0);\n        } catch {\n          return false;\n        }\n      })();\n\n      if (!detailsTemplateAlreadyLoaded) {\n        try {\n          await this.domReadinessService.waitForEvent('projectDetailsTemplateLoaded', {\n            timeout: 8000,\n            context: 'ProjectDashboard_template'\n          });\n        } catch (err) {\n          // This is non-fatal; log as warn to avoid noisy error reporting\n          logger.warn('[ProjectDashboard][_initializeComponents:detailsTemplate] Event timeout – continuing', {\n            err: err?.message || err,\n            context: 'projectDashboard'\n          });\n        }\n      }\n\n      // ------------------------------------------------------------------\n      // 2) Wait for Project-List template if it hasn’t already been loaded\n      // ------------------------------------------------------------------\n      const listTemplateAlreadyLoaded = (() => {\n        try {\n          if (this.components.projectList?.state?.templateLoaded) return true;\n          const listViewEl = this.domAPI.getElementById('projectListView');\n          return !!(listViewEl && listViewEl.childElementCount > 0);\n        } catch {\n          return false;\n        }\n      })();\n\n      if (!listTemplateAlreadyLoaded) {\n        try {\n          await this.domReadinessService.waitForEvent('projectListHtmlLoaded', {\n            timeout: 8000,\n            context: 'ProjectDashboard_template'\n          });\n        } catch (err) {\n          logger.warn('[ProjectDashboard][_initializeComponents:listTemplate] Event timeout – continuing', {\n            err: err?.message || err,\n            context: 'projectDashboard'\n          });\n        }\n      }\n\n      // Initialise child components only once the app is fully ready to avoid\n      // premature waits for the `app:ready` event inside their own logic.\n      // Always attempt to initialize ProjectListComponent; do not block on appIsReady\n      if (this.components.projectList && !this.components.projectList.state?.initialized) {\n        try {\n          await this.domReadinessService.dependenciesAndElements({\n            domSelectors: ['#projectListView'],\n            timeout: 5000,\n            context: 'ProjectDashboard_InitProjectList'\n          });\n          await this.components.projectList.initialize();\n        } catch (err) {\n          logger.error('[ProjectDashboard][_initializeComponents:projectList]', err, {\n            context: 'projectDashboard'\n          });\n        }\n      }\n\n      // Retain appIsReady check for details, as details may depend on full app config\n      const appIsReady = this.dependencySystem.modules.get('appModule')?.state?.isReady === true;\n      if (appIsReady && this.components.projectDetails && !this.components.projectDetails.state?.initialized) {\n        try {\n          await this.domReadinessService.dependenciesAndElements({\n            domSelectors: ['#projectDetailsView'],\n            timeout: 5000,\n            context: 'ProjectDashboard_InitProjectDetails'\n          });\n          await this.components.projectDetails.initialize();\n        } catch (err) {\n          logger.error('[ProjectDashboard][_initializeComponents:projectDetails]', err, {\n            context: 'projectDashboard'\n          });\n        }\n      } else if (!appIsReady) {\n        logger.debug?.('[ProjectDashboard] Skipping early ProjectDetailsComponent initialization – waiting for app:ready.', {\n          context: 'projectDashboard'\n        });\n      }\n    }\n\n    /**\n     * Core helper to toggle list vs. details in the DOM\n     */\n    _setView({ showList, showDetails }) {\n      if (this.state._aborted) return;\n\n      // Hide login message\n      const loginMessage = this.domAPI.getElementById('loginRequiredMessage');\n      if (loginMessage) this.domAPI.toggleClass(loginMessage, 'hidden', true);\n      const mainContent = this.domAPI.getElementById('mainContent');\n      if (mainContent) this.domAPI.toggleClass(mainContent, 'hidden', false);\n\n      // List view controlling\n      const listView = this.domAPI.getElementById('projectListView');\n      if (listView) {\n        this.domAPI.toggleClass(listView, 'hidden', !showList);\n        this.domAPI.toggleClass(listView, 'opacity-0', !showList);\n        this.domAPI.setStyle(listView, 'display', showList ? '' : 'none');\n      }\n\n      // Details\n      const detailsView = this.domAPI.getElementById('projectDetailsView');\n      if (detailsView) {\n        this.domAPI.toggleClass(detailsView, 'hidden', !showDetails);\n        this.domAPI.toggleClass(detailsView, 'opacity-0', !showDetails);\n        this.domAPI.setStyle(detailsView, 'display', showDetails ? 'flex' : 'none');\n      }\n    }\n\n    /**\n     * Example method for safely inserting HTML from server:\n     */\n    _insertTemplate(containerEl, incomingHtml) {\n      // Must sanitize per guardrails\n      containerEl.innerHTML = this.sanitizer.sanitize(incomingHtml);\n    }\n  } // End of ProjectDashboard class\n\n  // ─────────────────────────────────────────────────────────────────────────\n  // 4) Instantiate the dashboard & return with a cleanup() method\n  // ─────────────────────────────────────────────────────────────────────────\n  const dashboard = new ProjectDashboard();\n\n  // ==== Speculative/Eager Project Details Template Loading (wait for container) ====\n  // Try to find htmlTemplateLoader in dependency system and trigger load\n  try {\n    const htmlTemplateLoader =\n      dependencySystem?.modules?.get?.('htmlTemplateLoader') ||\n      (dashboard.components.projectDetails && dashboard.components.projectDetails.htmlTemplateLoader);\n    if (htmlTemplateLoader?.loadTemplate) {\n      const drs = dependencySystem?.modules?.get?.('domReadinessService');\n\n      const loadDetailsTemplate = () =>\n        htmlTemplateLoader.loadTemplate({\n          url: '/static/html/project_details.html',\n          containerSelector: '#projectDetailsView',\n          eventName: 'projectDetailsTemplateLoaded'\n        });\n\n      /* Ensure #projectDetailsView exists before loading template */\n      if (drs?.elementsReady) {\n        drs.elementsReady('#projectDetailsView', {\n          timeout: 8000,\n          context: 'ProjectDashboard::detailsTplContainer'\n        })\n        .then(loadDetailsTemplate)\n        .catch(loadDetailsTemplate);          // fallback – still attempt\n      } else {\n        loadDetailsTemplate().catch(() => {});\n      }\n    }\n  } catch (err) {\n    logger.warn('[ProjectDashboard] Unable to fire-and-forget details template load', err, { context: 'projectDashboard' });\n  }\n\n  // ==== Speculative/Eager Project List Template Loading (wait for container) ====\n  try {\n    const htmlTemplateLoader =\n      dependencySystem?.modules?.get?.('htmlTemplateLoader');\n\n    if (htmlTemplateLoader?.loadTemplate) {\n      const drs = dependencySystem?.modules?.get?.('domReadinessService');\n\n      const loadListTemplate = () =>\n        htmlTemplateLoader.loadTemplate({\n          url: '/static/html/project_list.html',\n          containerSelector: '#projectListView',\n          eventName: 'projectListHtmlLoaded'\n        });\n\n      /* Ensure #projectListView exists before loading template */\n      if (drs?.elementsReady) {\n        drs.elementsReady('#projectListView', {\n          timeout: 8000,\n          context: 'ProjectDashboard::listTplContainer'\n        })\n        .then(loadListTemplate)\n        .catch(loadListTemplate);      // fallback – still attempt\n      } else {\n        loadListTemplate().catch(() => {});\n      }\n    }\n  } catch (err) {\n    logger.warn(\n      '[ProjectDashboard] Unable to fire-and-forget list template load',\n      err,\n      { context: 'projectDashboard' }\n    );\n  }\n\n  function cleanup() {\n    dashboard.cleanup();\n  }\n\n  // Return an API exposing .initialize() and .cleanup(), plus any additional\n  // methods you want to make publicly accessible\n  return {\n    initialize: dashboard.initialize.bind(dashboard),\n    showProjectList: dashboard.showProjectList.bind(dashboard),\n    showProjectDetails: dashboard.showProjectDetails.bind(dashboard),\n    cleanup: dashboard.cleanup.bind(dashboard),\n    // Optionally expose the local bus if needed:\n    dashboardBus: dashboard.dashboardBus,\n    setProjectListComponent: (component) => {\n      if (dashboard.components) dashboard.components.projectList = component;\n      else dashboard.logger.warn('[ProjectDashboard] Components object not ready for projectList', { context: 'projectDashboard'});\n    },\n    setProjectDetailsComponent: (component) => {\n      if (dashboard.components) dashboard.components.projectDetails = component;\n      else dashboard.logger.warn('[ProjectDashboard] Components object not ready for projectDetails', { context: 'projectDashboard'});\n    }\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 43660,
          "_transferSize": 44843,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.561Z",
        "time": 668.1410000019241,
        "timings": {
          "blocked": 569.4779999898356,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07899999999995089,
          "wait": 97.55199999741376,
          "receive": 1.0320000146748498,
          "_blocked_queueing": 4.160999989835545,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106591",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 47
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/projectListComponent.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1469,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "35752"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"bf547b36afa4a716c6e24132d205be91\""
            },
            {
              "name": "last-modified",
              "value": "Thu, 22 May 2025 20:34:17 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 35752,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 35752,
          "_transferSize": 36935,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.561Z",
        "time": 708.489999989979,
        "timings": {
          "blocked": 616.3499999925643,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.09100000000000819,
          "wait": 91.58399999279061,
          "receive": 0.4650000046240166,
          "_blocked_queueing": 4.340999992564321,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106592",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 48
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/projectDetailsComponent.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1472,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "35547"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"76790e25a5a36ba5004ccba8d1b1d799\""
            },
            {
              "name": "last-modified",
              "value": "Thu, 22 May 2025 21:25:17 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 35547,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 35547,
          "_transferSize": 36730,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.561Z",
        "time": 720.3100000042468,
        "timings": {
          "blocked": 619.0309999942622,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.10099999999999909,
          "wait": 100.4760000051632,
          "receive": 0.702000004821457,
          "_blocked_queueing": 4.388999994262122,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106417",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 49
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/knowledgeBaseComponent.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1471,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "33630"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"80e4aad1510212cbc5adfbba3057fefb\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 06:54:06 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 33630,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module knowledgeBaseComponent\n * @description Refactored factory: NO global document/window. All DOM and event wiring via DI.\n */\n\nimport { createKnowledgeBaseSearchHandler } from './knowledgeBaseSearchHandler.js';\nimport { createKnowledgeBaseManager } from './knowledgeBaseManager.js';\n\nconst MODULE = \"KnowledgeBaseComponent\";\n/**\n * Creates and returns a knowledge base UI component instance with full lifecycle management.\n *\n * This factory function resolves all required dependencies via the provided options or dependency injection system, validates their presence, and constructs a knowledge base component that manages UI rendering, event handling, authentication state, and project context changes. The returned component exposes methods for initialization, rendering, and cleanup, and integrates with injected services for DOM manipulation, event tracking, and logging.\n *\n * @param {Object} [options={}] - Configuration and dependency injection options.\n * @returns {KnowledgeBaseComponentWithDestroy} An instance of the knowledge base component with destroy capability.\n *\n * @throws {Error} If required dependencies such as `DependencySystem`, `logger`, `sanitizer`, `app`, `projectManager`, `eventHandlers`, `uiUtils`, `modalManager`, or `domAPI` are missing or invalid.\n */\nexport function createKnowledgeBaseComponent(options = {}) {\n  // --- Dependency Resolution ---\n  if (!options.DependencySystem) throw new Error(\"DependencySystem is required for KnowledgeBaseComponent\");\n  const DS = options.DependencySystem;\n  const getDep = (name) => name in options ? options[name] : DS.modules.get(name);\n\n  const sanitizer = getDep(\"sanitizer\");\n  const app = getDep(\"app\");\n  const projectManager = getDep(\"projectManager\");\n  const eventHandlers = getDep(\"eventHandlers\");\n  const uiUtils = getDep(\"uiUtils\") || getDep(\"uiUtilsInstance\");\n  const modalManager = getDep(\"modalManager\");\n  const domAPI = getDep(\"domAPI\");\n  const domReadinessService = getDep(\"domReadinessService\");\n  const logger = getDep(\"logger\"); // Ensure logger is fetched for constructor scope if needed early\n\n  if (!domReadinessService)\n    throw new Error(`[${MODULE}] requires 'domReadinessService' DI`);\n  if (!logger)\n    throw new Error(`[${MODULE}] requires 'logger' DI`);\n  if (!sanitizer || typeof sanitizer.sanitize !== 'function')\n    throw new Error(`[${MODULE}] requires 'sanitizer' (object with .sanitize).`);\n  if (!app || !projectManager || !eventHandlers || !uiUtils || !modalManager) {\n    throw new Error(\n      `[${MODULE}] requires 'app', 'projectManager', 'eventHandlers', 'uiUtils', and 'modalManager' dependencies.`\n    );\n  }\n  if (!domAPI) throw new Error(`${MODULE} requires 'domAPI' abstraction for DOM access.`);\n\n  // --- Element Selectors (resolution deferred to init) ---\n  const elRefs = options.elRefs || {}; // For externally provided elements\n  // Removed reqEl function from factory scope. It will be part of _initElements.\n  const elementSelectors = { // Renamed from 'elements'\n    container: \"knowledgeTab\", // Store selectors (strings)\n    activeSection: \"knowledgeStatus\",\n    inactiveSection: \"knowledgeBaseInactive\",\n    statusBadge: \"kbStatusBadge\",\n    searchInput: \"knowledgeSearchInput\",\n    searchButton: \"searchKnowledgeBtn\",\n    resultsContainer: \"knowledgeResults\",\n    resultsSection: \"knowledgeResults\",\n    noResultsSection: \"noResults\",\n    topKSelect: \"knowledgeTopK\",\n    kbToggle: \"knowledgeBaseEnabled\",\n    reprocessButton: \"reprocessFilesBtn\",\n    setupButton: \"setupKnowledgeBaseBtn\",\n    settingsButton: \"knowledgeBaseSettingsBtn\",\n    kbNameDisplay: \"knowledgeBaseName\",\n    kbModelDisplay: \"knowledgeBaseModelDisplay\",\n    kbVersionDisplay: \"knowledgeBaseVersionDisplay\",\n    kbLastUsedDisplay: \"knowledgeBaseLastUsedDisplay\",\n    settingsModal: \"knowledgeBaseSettingsModal\",\n    settingsForm: \"knowledgeBaseForm\",\n    cancelSettingsBtn: \"cancelKnowledgeBaseFormBtn\",\n    deleteKnowledgeBaseBtn: \"deleteKnowledgeBaseBtn\",\n    modelSelect: \"knowledgeBaseModelSelect\",\n    resultModal: \"knowledgeResultModal\",\n    resultTitle: \"knowledgeResultTitle\",\n    resultSource: \"knowledgeResultSource\",\n    resultScore: \"knowledgeResultScore\",\n    resultContent: \"knowledgeResultContent\",\n    useInChatBtn: \"useInChatBtn\",\n    knowledgeBaseFilesSection: \"knowledgeBaseFilesSection\",\n    knowledgeBaseFilesListContainer: \"knowledgeBaseFilesListContainer\",\n    kbGitHubAttachedRepoInfo: \"kbGitHubAttachedRepoInfo\",\n    kbAttachedRepoUrlDisplay: \"kbAttachedRepoUrlDisplay\",\n    kbAttachedRepoBranchDisplay: \"kbAttachedRepoBranchDisplay\",\n    kbDetachRepoBtn: \"kbDetachRepoBtn\",\n    kbGitHubAttachForm: \"kbGitHubAttachForm\",\n    kbGitHubRepoUrlInput: \"kbGitHubRepoUrlInput\",\n    kbGitHubBranchInput: \"kbGitHubBranchInput\",\n    kbGitHubFilePathsTextarea: \"kbGitHubFilePathsTextarea\",\n    kbAttachRepoBtn: \"kbAttachRepoBtn\",\n    knowledgeFileCount: \"knowledgeFileCount\",\n    knowledgeChunkCount: \"knowledgeChunkCount\",\n    knowledgeFileSize: \"knowledgeFileSize\",\n  };\n\n  const validateUUID = app.validateUUID;\n  const apiRequest = app.apiRequest;\n  const config = {\n    maxConcurrentProcesses: options.maxConcurrentProcesses || 3,\n    searchDebounceTime: options.searchDebounceTime || 300,\n    minQueryLength: options.minQueryLength || 2,\n    maxQueryLength: options.maxQueryLength || 500,\n  };\n\n  function _safeSetInnerHTML(el, html) {\n    if (!el) return;\n    domAPI.setInnerHTML(el, html);\n  }\n\n  class KnowledgeBaseComponent {\n    constructor() {\n      this.app = app;\n      this.projectManager = projectManager;\n      this.eventHandlers = eventHandlers;\n      this.uiUtils = uiUtils;\n      this.apiRequest = apiRequest;\n      this.validateUUID = validateUUID;\n      this.config = config;\n      this.modalManager = modalManager;\n      this.domAPI = domAPI;\n      this.getDep = getDep;\n      this.DependencySystem = DS;\n      this.domReadinessService = domReadinessService;\n      this.logger = logger; // Store logger instance\n\n      this.elementSelectors = elementSelectors;\n      this.elements = {};\n      this.elRefs = elRefs; // Store elRefs passed in options for _initElements\n      this.state = {\n        knowledgeBase: null,\n        isSearching: false,\n        searchCache: new Map(),\n        fileProcessingQueue: [],\n        activeProcesses: 0,\n        lastHealthCheck: null,\n        authState: null,\n        isInitialized: false,\n      };\n\n      this.formatBytes = uiUtils.formatBytes;\n      this.formatDate = uiUtils.formatDate;\n      this.fileIcon = uiUtils.fileIcon;\n      this.scheduler = getDep(\"scheduler\") || { setTimeout, clearTimeout };\n\n      // Provide all cb/utilities needed by manager/searchHandler\n      this._safeSetInnerHTML = _safeSetInnerHTML;\n      this._setButtonLoading = function(btn, isLoading, loadingText = \"Saving...\") {\n        if (!btn) return;\n        if (isLoading) {\n          btn.disabled = true;\n          btn.dataset.originalText = btn.textContent;\n          _safeSetInnerHTML(btn, `<span class=\"loading loading-spinner loading-xs\"></span> ${loadingText}`);\n        } else {\n          btn.disabled = false;\n          if (btn.dataset.originalText) {\n            btn.textContent = btn.dataset.originalText;\n            delete btn.dataset.originalText;\n          }\n        }\n      };\n\n      // Add utility methods needed by manager\n      this._showInactiveState = this._showInactiveState.bind(this);\n      this._updateStatusIndicator = this._updateStatusIndicator.bind(this);\n      this._updateStatusAlerts = this._updateStatusAlerts.bind(this);\n      this._updateUploadButtonsState = this._updateUploadButtonsState.bind(this);\n      this.renderKnowledgeBaseInfo = this.renderKnowledgeBaseInfo.bind(this);\n\n      // For model/validation logic\n      this._debounce = this._debounce.bind(this);\n\n      this.searchHandler = createKnowledgeBaseSearchHandler(this);\n      this.manager = createKnowledgeBaseManager(this);\n\n      // this._bindEventHandlers(); // Call this after _initElements in initialize\n    }\n\n    _initElements() {\n      const OPTIONAL_KEYS = new Set([\n        'activeSection','inactiveSection','statusBadge',\n        'kbToggle','reprocessButton','setupButton','settingsButton',\n        'kbNameDisplay','kbModelDisplay','kbVersionDisplay','kbLastUsedDisplay',\n        'knowledgeBaseFilesSection','knowledgeBaseFilesListContainer',\n        'kbGitHubAttachedRepoInfo','kbAttachedRepoUrlDisplay',\n        'kbAttachedRepoBranchDisplay','kbDetachRepoBtn',\n        'kbGitHubAttachForm','kbGitHubRepoUrlInput',\n        'kbGitHubBranchInput','kbGitHubFilePathsTextarea','kbAttachRepoBtn',\n        'kbModelDisplay', 'kbVersionDisplay', 'kbLastUsedDisplay',\n        'kbGitHubAttachedRepoInfo', 'kbAttachedRepoUrlDisplay',\n        'kbAttachedRepoBranchDisplay', 'kbDetachRepoBtn',\n        'kbNameDisplay', // extend later if needed\n        'knowledgeFileCount', 'knowledgeChunkCount', 'knowledgeFileSize',\n        'noResultsSection'      // ← add this line\n      ]);\n      const reqEl = (key, selector) => {\n        // Prioritize elRefs if provided for a key\n        const el = this.elRefs[key] || this.domAPI.getElementById(selector);\n        if (!el && !OPTIONAL_KEYS.has(key)) {\n          throw new Error(`[${MODULE}] Missing required element/ref: ${key} (${selector})`);\n        }\n        return el;          // may be null for optional keys\n      };\n\n      for (const key in this.elementSelectors) {\n        // Remap legacy 'knowledgeNoResults' property everywhere to 'noResultsSection'\n        const selector = this.elementSelectors[key];\n        const sel = typeof selector === 'string'\n          ? (selector.startsWith('#') || selector.startsWith('.')\n              ? selector\n              : `#${selector}`)\n          : selector;\n        this.elements[key === \"noResultsSection\" ? \"noResultsSection\" : key] = this.elRefs[key] || this.domAPI.querySelector(sel);\n      }\n    }\n\n    async initialize(isVisible, kbData = null, projectId = null) {\n      // Build selector list and keep only existing elements to avoid\n      // false time-outs when the mobile template omits some IDs\n      const allSelectors = Object.values(this.elementSelectors)\n        .filter(Boolean)\n        .map(sel => (sel.startsWith('#') || sel.startsWith('.')) ? sel : `#${sel}`);\n\n      const presentSelectors = allSelectors.filter(sel => this.domAPI.querySelector(sel));\n\n      // Always ensure the main container participates\n      if (this.domAPI.querySelector('#knowledgeTab') && !presentSelectors.includes('#knowledgeTab')) {\n        presentSelectors.push('#knowledgeTab');\n      }\n      \n      this.logger.info(`[${MODULE}] Initializing. Received isVisible: ${isVisible}, kbData ID: ${kbData?.id}, projectId: ${projectId}`, { context: MODULE });\n\n      await this.domReadinessService.dependenciesAndElements({\n        domSelectors: presentSelectors,\n        deps: ['auth', 'AppBus'], // Ensure auth and AppBus are ready for listeners\n        context: MODULE + '::initializeDOM',\n        timeout: this.app?.APP_CONFIG?.TIMEOUTS?.COMPONENT_ELEMENTS_READY ?? 8000\n      });\n      this.logger.debug(`[${MODULE}] DOM elements and core deps (auth, AppBus) ready.`, { context: MODULE });\n      \n      try {\n        this._initElements();\n        this._bindEventHandlers(); // Bind handlers after elements are initialized\n      } catch (error) {\n        this.logger.error(`[${MODULE}] Failed to initialize elements or bind handlers: ${error.message}`, { error, context: MODULE });\n        this.domAPI.dispatchEvent(\n          this.domAPI.getDocument(),\n          new CustomEvent('knowledgebasecomponent:initialized', { detail: { success: false, error } })\n        );\n        this.elements.container?.classList.add(\"hidden\");\n        return;\n      }\n\n      const auth = this.DependencySystem.modules.get('auth');\n      if (auth && !auth.isReady()) {\n          this.logger.info(`[${MODULE}] Auth module not ready yet, waiting for authReady event.`, { context: MODULE });\n          await new Promise(resolve => {\n              this.eventHandlers.trackListener(auth.AuthBus, 'authReady', () => {\n                  this.logger.info(`[${MODULE}] Received authReady event during init.`, { context: MODULE });\n                  resolve();\n              }, { once: true, context: MODULE, description: 'KB_Init_AuthReady' });\n          });\n      }\n      this.logger.info(`[${MODULE}] Auth module is now ready. App authenticated: ${this.app.state.isAuthenticated}`, { context: MODULE });\n\n      if (!this.app.state.isAuthenticated) {\n          this.logger.warn(`[${MODULE}] User not authenticated. Showing inactive state and hiding component.`, { context: MODULE });\n          this._showInactiveState();\n          this.elements.container?.classList.add(\"hidden\");\n          this.domAPI.dispatchEvent(\n            this.domAPI.getDocument(),\n            new CustomEvent('knowledgebasecomponent:initialized', { detail: { success: true, message: 'Initialized but hidden due to auth state.' } })\n          );\n          return;\n      }\n      \n      // If already initialized and just a visibility change, handle and return.\n      if (this.state.isInitialized && this.elements.container) {\n          this.logger.debug(`[${MODULE}] Already initialized. Setting visibility: ${isVisible}`, { context: MODULE });\n          this.elements.container.classList.toggle(\"hidden\", !isVisible);\n          this.elements.container.classList.toggle(\"pointer-events-none\", !isVisible);\n          // If becoming visible and kbData or projectId provided, refresh.\n          if (isVisible && (kbData || projectId)) {\n             await this.renderOrClear(kbData, projectId);\n          }\n          return;\n      }\n\n      this.state.isInitialized = true;\n      this.logger.info(`[${MODULE}] First-time initialization logic running.`, { context: MODULE });\n\n      await this.renderOrClear(kbData, projectId);\n\n      if (this.elements.container) {\n        this.elements.container.classList.toggle(\"hidden\", !isVisible);\n        this.elements.container.classList.toggle(\"pointer-events-none\", !isVisible);\n      }\n\n      this.domAPI.dispatchEvent(\n        this.domAPI.getDocument(),\n        new CustomEvent('knowledgebasecomponent:initialized', { detail: { success: true } })\n      );\n      this.logger.info(`[${MODULE}] Initialization complete. Final visibility: ${isVisible}`, { context: MODULE });\n    }\n\n    async renderOrClear(kbData, projectId) {\n      if (kbData) {\n        this.logger.debug(`[${MODULE}] Rendering with provided kbData.`, { kbId: kbData.id, projectId, context: MODULE });\n        await this.renderKnowledgeBaseInfo(kbData, projectId);\n      } else if (projectId) {\n        this.logger.debug(`[${MODULE}] No kbData, but projectId ${projectId} provided. Attempting to load KB via manager.`, { context: MODULE });\n        // This implies manager should fetch if only projectId is given.\n        // For now, KBM's loadKnowledgeBase is called by projectManager, not directly by component on project change without kbData.\n        // So, if kbData is null here, it means no KB exists or it shouldn't be shown.\n        this._showInactiveState(); // Show inactive if no explicit kbData\n         this.domAPI.dispatchEvent(\n            this.domAPI.getDocument(),\n            new CustomEvent('projectKnowledgeBaseRendered', { detail: { projectId } })\n          );\n      } else {\n        this.logger.debug(`[${MODULE}] No kbData or projectId. Showing inactive state.`, { context: MODULE });\n        this._showInactiveState();\n      }\n    }\n\n    _bindEventHandlers() {\n      this.logger.debug(`[${MODULE}] Binding event handlers.`, { context: MODULE });\n      const EH = this.eventHandlers;\n      const DA = this.domAPI;\n      const MODULE_CONTEXT = MODULE; // Defined at the top of the factory\n\n      const addListener = (elRef, type, fn, opts = {}) => {\n        const element = typeof elRef === 'string' ? this.elements[elRef] : elRef;\n        if (element) {\n          EH.trackListener(element, type, fn, { ...opts, context: MODULE_CONTEXT, description: opts.description || `${elRef}_${type}` });\n        } else {\n          this.logger.warn(`[${MODULE}] Element ref \"${elRef}\" not found for listener type \"${type}\".`, { context: MODULE_CONTEXT });\n        }\n      };\n      \n      // Search UI\n      addListener(\"searchButton\", \"click\", () => this.searchHandler.triggerSearch());\n      addListener(\"searchInput\", \"input\", (e) => this.searchHandler.debouncedSearch(e.target.value));\n      addListener(\"searchInput\", \"keyup\", (e) => { if (e.key === \"Enter\") this.searchHandler.triggerSearch(); });\n      addListener(\"resultModal\", \"keydown\", (e) => this.searchHandler.handleResultModalKeydown(e));\n\n      // Management UI\n      addListener(\"kbToggle\", \"change\", (e) => this.manager.toggleKnowledgeBase(e.target.checked));\n      addListener(\"reprocessButton\", \"click\", () => {\n        const pid = this._getCurrentProjectId();\n        if (pid) this.manager.reprocessFiles(pid); else this.logger.warn(`[${MODULE}] Reprocess clicked but no current project ID found.`, { context: MODULE_CONTEXT });\n      });\n\n      const showModalHandler = () => this.manager.showKnowledgeBaseModal();\n      addListener(\"setupButton\", \"click\", showModalHandler);\n      addListener(\"settingsButton\", \"click\", showModalHandler);\n      addListener(\"settingsForm\", \"submit\", (e) => this.manager.handleKnowledgeBaseFormSubmit(e));\n      addListener(\"cancelSettingsBtn\", \"click\", () => this.manager.hideKnowledgeBaseModal());\n      addListener(\"deleteKnowledgeBaseBtn\", \"click\", () => this.manager.handleDeleteKnowledgeBase());\n      addListener(\"modelSelect\", \"change\", () => this.manager.validateSelectedModelDimensions());\n      \n      // GitHub integration\n      addListener(\"kbAttachRepoBtn\", \"click\", () => this.manager.handleAttachGitHubRepo());\n      addListener(\"kbDetachRepoBtn\", \"click\", () => this.manager.handleDetachGitHubRepo());\n\n      // Listen to AppBus for currentProjectChanged\n      const appBus = this.DependencySystem.modules.get('AppBus');\n      if (appBus) {\n        EH.trackListener(appBus, 'currentProjectChanged', this._handleAppCurrentProjectChanged.bind(this), \n          { context: MODULE, description: 'KBComponent_AppBus_CurrentProjectChanged' });\n        this.logger.debug(`[${MODULE}] Subscribed to AppBus \"currentProjectChanged\".`, { context: MODULE });\n      } else {\n        this.logger.error(`[${MODULE}] AppBus not available. Cannot subscribe to \"currentProjectChanged\". Critical for functionality.`, { context: MODULE });\n      }\n\n      // Listen to AuthBus for authStateChanged (more direct than document)\n      const auth = this.DependencySystem.modules.get('auth');\n      if (auth?.AuthBus) {\n         EH.trackListener(auth.AuthBus, \"authStateChanged\", (e) => {\n            this.logger.debug(`[${MODULE}] AuthBus authStateChanged event received.`, { detail: e.detail, context: MODULE_CONTEXT });\n            this._handleAuthStateChange(e.detail?.authenticated);\n        }, { description: \"KB AuthBus authStateChanged Listener\", context: MODULE_CONTEXT });\n        this.logger.debug(`[${MODULE}] Subscribed to AuthBus \"authStateChanged\".`, { context: MODULE });\n      } else {\n        // Fallback to document listener if AuthBus isn't available (though it should be via DI)\n        this.logger.warn(`[${MODULE}] AuthBus not available. Falling back to document listener for \"authStateChanged\".`, { context: MODULE });\n        addListener(this.domAPI.getDocument(), \"authStateChanged\", (e) => {\n            this._handleAuthStateChange(e.detail?.authenticated);\n        }, { description: \"KB Document authStateChanged Listener (Fallback)\", context: MODULE_CONTEXT });\n      }\n    }\n    \n    _handleAppCurrentProjectChanged(event) {\n      const newProject = event?.detail?.project;\n      const oldProject = event?.detail?.previousProject; // May be useful for cleanup\n      this.logger.info(`[${MODULE}] Event \"currentProjectChanged\" received via AppBus.`, {\n        newProjectId: newProject?.id,\n        oldProjectId: oldProject?.id,\n        currentInternalKBProjectId: this.state.knowledgeBase?.project_id,\n        context: MODULE\n      });\n\n      if (newProject?.id && newProject.id !== this.state.knowledgeBase?.project_id) {\n        this.logger.info(`[${MODULE}] New project selected (${newProject.id}). Resetting KB view. Manager will load new KB.`, { context: MODULE });\n        // Reset UI to prepare for new project's KB.\n        // The actual fetching of KB data is expected to be triggered by an orchestrator (e.g. projectDetailsComponent)\n        // which would call this.initialize() or this.manager.loadKnowledgeBase()\n        // For now, simply clear and show inactive.\n        this._showInactiveState(); \n        this.state.knowledgeBase = null; // Clear internal KB state\n        // It is assumed another component (like projectDetailsComponent) will call this.initialize()\n        // with the new project's KB data or trigger manager.loadKnowledgeBase().\n        // If this component should be fully autonomous, it would call:\n        // this.manager.loadKnowledgeBase(newProject.id);\n      } else if (!newProject && this.state.knowledgeBase) {\n        this.logger.info(`[${MODULE}] Project context cleared. Resetting KB view.`, { context: MODULE });\n        this._showInactiveState();\n        this.state.knowledgeBase = null;\n      }\n    }\n\n    _getCurrentProjectId() {\n      if (typeof this.app.getProjectId === \"function\") {\n        const pid = this.app.getProjectId();\n        if (this.validateUUID(pid)) return pid;\n      }\n      const cur = this.projectManager.currentProject;\n      if (cur?.id && this.validateUUID(cur.id)) {\n        return cur.id;\n      }\n      // notification/logging removed\n      return null;\n    }\n\n    async renderKnowledgeBaseInfo(kbData, projectId = null) {\n      if (!kbData) {\n        this._showInactiveState();\n        this.elements.knowledgeBaseFilesSection?.classList.add(\"hidden\");\n        if (projectId) {\n          this.domAPI.dispatchEvent(\n            this.domAPI.getDocument(),\n            new CustomEvent('projectKnowledgeBaseRendered', { detail: { projectId } })\n          );\n        }\n        return;\n      }\n\n      this.state.knowledgeBase = kbData;\n      const currentProjectId = projectId || kbData.project_id || this._getCurrentProjectId();\n      this.logger.info(`[${MODULE}] Rendering KB Info for KB ID: ${kbData.id}, Project ID: ${currentProjectId}`, { kbData, context: MODULE });\n\n      if (this.elements.activeSection?.dataset) {\n        this.elements.activeSection.dataset.projectId = currentProjectId || \"\";\n      }\n      this._updateBasicInfo(kbData);\n      this.manager._updateModelSelection(kbData.embedding_model); // Manager might need this method if it manipulates the select\n      this._updateStatusIndicator(kbData.is_active !== false);\n\n      this.elements.activeSection?.classList.remove(\"hidden\");\n      this.elements.inactiveSection?.classList?.add(\"hidden\");\n      if (this.elements.kbToggle) {\n        this.elements.kbToggle.checked = kbData.is_active !== false;\n      }\n\n      try {\n        if (kbData.is_active !== false && kbData.id && currentProjectId) {\n          this.logger.debug(`[${MODULE}] KB is active. Loading health and files.`, { kbId: kbData.id, projectId: currentProjectId, context: MODULE });\n          this.manager.loadKnowledgeBaseHealth(kbData.id).catch(err => this.logger.warn(`[${MODULE}] Error loading KB health (non-critical).`, { err, context: MODULE }));\n          this.manager.loadKnowledgeBaseFiles(currentProjectId, kbData.id); // This should handle its own errors and UI updates\n        } else {\n          this.logger.debug(`[${MODULE}] KB is inactive or no ID. Hiding files section and clearing list.`, { kbIsActive: kbData.is_active, kbId: kbData.id, context: MODULE });\n          this.elements.knowledgeBaseFilesSection?.classList.add(\"hidden\");\n          if (this.manager._renderKnowledgeBaseFiles) { // Assuming manager has this method for direct rendering\n            this.manager._renderKnowledgeBaseFiles({ files: [], pagination: { total: 0 } });\n          } else {\n            const container = this.elements.knowledgeBaseFilesListContainer;\n            if (container) _safeSetInnerHTML(container, '<p class=\"text-base-content/60 text-center py-4\">Knowledge Base is inactive or has no files.</p>');\n          }\n        }\n        this._updateStatusAlerts(kbData); // This seems to be for additional alerts, not main status\n        this._updateUploadButtonsState(); // Update based on new KB state\n\n        if (currentProjectId) {\n          this.domAPI.dispatchEvent(\n            this.domAPI.getDocument(),\n            new CustomEvent('projectKnowledgeBaseRendered', { detail: { projectId: currentProjectId, knowledgeBaseId: kbData.id } })\n          );\n        }\n      } catch (err) {\n        this.logger.error(`[${MODULE}] Error during post-render KB info processing (health/files load).`, { error: err, context: MODULE });\n        // Ensure event is still dispatched if there was a project ID\n        if (currentProjectId) {\n          this.domAPI.dispatchEvent(\n            this.domAPI.getDocument(),\n            new CustomEvent('projectKnowledgeBaseRendered', { detail: { projectId: currentProjectId, error: err.message } })\n          );\n        }\n      }\n    }\n\n    _updateBasicInfo(kb) {\n      const { kbNameDisplay, kbModelDisplay, kbVersionDisplay, kbLastUsedDisplay } = this.elements;\n      if (kbNameDisplay) kbNameDisplay.textContent = kb.name || \"Project Knowledge Base\";\n      if (kbModelDisplay) kbModelDisplay.textContent = kb.embedding_model || \"Not Set\";\n      if (kbVersionDisplay) kbVersionDisplay.textContent = kb.version ? `v${kb.version}` : \"v1\";\n      if (kbLastUsedDisplay) kbLastUsedDisplay.textContent = kb.last_used ? this.formatDate(kb.last_used) : \"Never used\";\n    }\n\n    _updateStatusIndicator(isActive) {\n      const badge = this.elements.statusBadge;\n      if (!badge) return;\n      badge.className = `badge ${isActive ? \"badge-success\" : \"badge-warning\"} badge-sm`;\n      badge.textContent = isActive ? \"Active\" : \"Inactive\";\n    }\n\n    _showInactiveState() {\n      this.logger.info(`[${MODULE}] Showing inactive state.`, { context: MODULE });\n      this.state.knowledgeBase = null; // Clear internal state\n      \n      this.elements.activeSection?.classList.add(\"hidden\");\n      this.elements.inactiveSection?.classList.remove(\"hidden\");\n      this.elements.knowledgeBaseFilesSection?.classList.add(\"hidden\");\n      \n      // Clear displayed KB info\n      if (this.elements.kbNameDisplay) this.elements.kbNameDisplay.textContent = \"N/A\";\n      if (this.elements.kbModelDisplay) this.elements.kbModelDisplay.textContent = \"N/A\";\n      if (this.elements.kbVersionDisplay) this.elements.kbVersionDisplay.textContent = \"N/A\";\n      if (this.elements.kbLastUsedDisplay) this.elements.kbLastUsedDisplay.textContent = \"N/A\";\n      if (this.elements.knowledgeFileCount) this.elements.knowledgeFileCount.textContent = \"0\";\n      if (this.elements.knowledgeChunkCount) this.elements.knowledgeChunkCount.textContent = \"0\";\n      if (this.elements.knowledgeFileSize) this.elements.knowledgeFileSize.textContent = this.formatBytes(0);\n\n\n      if (this.manager?._renderKnowledgeBaseFiles) { // Ask manager to clear its file list UI\n        this.manager._renderKnowledgeBaseFiles({ files: [], pagination: { total: 0 } });\n      } else if (this.elements.knowledgeBaseFilesListContainer) { // Fallback if manager method not available\n        _safeSetInnerHTML(this.elements.knowledgeBaseFilesListContainer, '<p class=\"text-base-content/60 text-center py-4\">No Knowledge Base active or selected.</p>');\n      }\n      \n      this._updateStatusIndicator(false); // Set status badge to \"Inactive\"\n      // Consider if an alert is always needed or if the UI state is clear enough\n      // this._showStatusAlert(\"Knowledge Base is not active or configured for this project.\", \"info\");\n      this._updateUploadButtonsState(); // Disable KB-dependent buttons\n    }\n\n    _updateUploadButtonsState() {\n      const hasKB = !!this.state.knowledgeBase;\n      const isActive = hasKB && this.state.knowledgeBase.is_active !== false;\n      const kbDependentEls = this.domAPI.querySelectorAll(\"[data-requires-kb='true']\", this.elements.container);\n      kbDependentEls.forEach((el) => {\n        const disabled = !hasKB || !isActive;\n        el.disabled = disabled;\n        el.classList.toggle(\"opacity-50\", disabled);\n        el.classList.toggle(\"cursor-not-allowed\", disabled);\n        el.title = disabled ? (!hasKB ? \"Setup Knowledge Base first.\" : \"Knowledge Base must be active.\") : \"Ready to use Knowledge Base features.\";\n      });\n      if (this.elements.reprocessButton) {\n        const fileCountEl = this.domAPI.getElementById(\"knowledgeFileCount\");\n        const fileCount = parseInt(fileCountEl?.textContent || \"0\", 10);\n        const reDisabled = !hasKB || !isActive || fileCount === 0;\n        this.elements.reprocessButton.disabled = reDisabled;\n        this.elements.reprocessButton.classList.toggle(\"opacity-50\", reDisabled);\n        this.elements.reprocessButton.classList.toggle(\"cursor-not-allowed\", reDisabled);\n        this.elements.reprocessButton.title = !hasKB ? \"Setup Knowledge Base first.\" : !isActive ? \"Knowledge Base must be active.\" : fileCount === 0 ? \"No files to reprocess.\" : \"Reprocess files.\";\n      }\n    }\n\n    _updateStatusAlerts(kb) {\n      // notification/logging removed; adjust as needed if visual indicator required\n    }\n\n    _showStatusAlert(message, type = \"info\") {\n      const statusIndicator = this.domAPI.getElementById(\"kbStatusIndicator\");\n      if (!statusIndicator) {\n        return;\n      }\n      statusIndicator.textContent = \"\";\n      let cls = \"alert-info\";\n      if (type === \"success\") cls = \"alert-success\";\n      else if (type === \"warning\") cls = \"alert-warning\";\n      else if (type === \"error\") cls = \"alert-error\";\n      const alertDiv = this.domAPI.createElement(\"div\");\n      alertDiv.className = `alert ${cls} shadow-xs text-sm py-2 px-3`;\n      alertDiv.setAttribute(\"role\", \"alert\");\n      _safeSetInnerHTML(alertDiv, `<span>${message}</span>`);\n      if (type !== \"error\") {\n        const btn = this.domAPI.createElement(\"button\");\n        btn.className = \"btn btn-xs btn-ghost btn-circle\";\n        btn.textContent = \"✕\";\n        this.eventHandlers.trackListener(\n          btn,\n          'click',\n          () => this.domAPI.removeChild(statusIndicator, alertDiv),\n          { context: MODULE, description: 'dismissStatusAlert' }\n        );\n        this.domAPI.appendChild(alertDiv, btn);\n      }\n      this.domAPI.appendChild(statusIndicator, alertDiv);\n    }\n\n    _debounce(fn, wait) {\n      let id;\n      return (...a) => {\n        this.scheduler.clearTimeout?.(id);\n        id = this.scheduler.setTimeout?.(() => fn.apply(this, a), wait);\n      };\n    }\n\n    _handleAuthStateChange(authenticated) {\n      this.logger.debug(`[${MODULE}] Auth state changed. Authenticated: ${authenticated}`, { context: MODULE });\n      this.state.authState = authenticated; // Store current auth state\n\n      // List of elements that depend on authentication for enabling/disabling\n      const authDependentElements = [\n        this.elements.searchButton, this.elements.reprocessButton, this.elements.setupButton,\n        this.elements.kbToggle, this.elements.settingsButton, this.elements.deleteKnowledgeBaseBtn,\n        this.elements.kbAttachRepoBtn, this.elements.kbDetachRepoBtn,\n        // Add other elements like file input / upload button if they are directly part of this component's elements\n      ];\n\n      authDependentElements.forEach((el) => {\n        if (!el) return; // Skip if an optional element isn't found\n        el.disabled = !authenticated;\n        el.classList.toggle(\"opacity-50\", !authenticated);\n        el.classList.toggle(\"cursor-not-allowed\", !authenticated);\n        if (!authenticated) {\n          el.title = \"Authentication required.\";\n        } else {\n          el.removeAttribute(\"title\"); // Or set to its functional title\n        }\n      });\n\n      if (!authenticated) {\n        this.logger.info(`[${MODULE}] User unauthenticated. Clearing KB data and showing inactive state.`, { context: MODULE });\n        this._showStatusAlert(\"Authentication required to use Knowledge Base features.\", \"warning\");\n        // Clear KB data and UI to prevent interaction with stale data\n        this.state.knowledgeBase = null;\n        this._showInactiveState(); \n      } else {\n        // User is authenticated. If there's a current project, KB data might need to be (re)loaded\n        // This is often handled by currentProjectChanged or initial load sequence.\n        // For now, just ensure UI elements are enabled.\n        this.logger.debug(`[${MODULE}] User authenticated. KB UI elements enabled. KB data will load if project context is active.`, { context: MODULE });\n        // Potentially re-check/re-load KB if a project is active:\n        // const currentProjectId = this._getCurrentProjectId();\n        // if (currentProjectId) { this.manager.loadKnowledgeBase(currentProjectId); }\n      }\n    }\n  }\n\n  class KnowledgeBaseComponentWithDestroy extends KnowledgeBaseComponent {\n    destroy() {\n      const ds = this.getDep('DependencySystem');\n      if (ds && typeof ds.cleanupModuleListeners === 'function') {\n        ds.cleanupModuleListeners(MODULE);\n      } else if (this.eventHandlers && typeof this.eventHandlers.cleanupListeners === 'function') {\n        this.eventHandlers.cleanupListeners({ context: MODULE });\n      }\n      this.state.isInitialized = false;\n      // destroy complete\n    }\n  }\n\n  return new KnowledgeBaseComponentWithDestroy();\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 33630,
          "_transferSize": 34813,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.561Z",
        "time": 765.4150000016671,
        "timings": {
          "blocked": 668.0299999976577,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.14200000000005275,
          "wait": 95.81099999943933,
          "receive": 1.4320000045699999,
          "_blocked_queueing": 4.484999997657724,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 50
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/accessibility-utils.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1468,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "22215"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"f26960f574b1a1c61928edc149b2a36c\""
            },
            {
              "name": "last-modified",
              "value": "Thu, 22 May 2025 08:13:08 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 22215,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * accessibility-utils.js – Centralized accessibility + keyboard shortcut helpers, teardown-safe.\n *\n * ## Purpose\n * Modular accessibility improvement for SPA UIs: keyboard navigation, modal focus, skip links, etc.\n *\n * ## Design\n * - Exported via a factory function `createAccessibilityEnhancements({ ... })`.\n * - NO direct window/global usage: all dependencies (domAPI, eventHandlers, DependencySystem, createDebugTools, logger, domReadinessService) must be injected as named parameters (DI).\n * - NO side-effects on import: must be explicitly initialized by calling `accessibilityModule.init()`.\n * - All DOM events must register via eventHandlers.trackListener with a module context.\n * - All state is internal to the class instance; nothing leaks to window or global scope.\n * - Full teardown support: all listeners cleaned via eventHandlers.cleanupListeners({ context: MODULE_CONTEXT }) in destroy().\n *\n * ## Exports:\n *   createAccessibilityEnhancements({ ... })\n *\n * ## DI requirements:\n *   - domAPI: { getElementById, querySelector, querySelectorAll, createElement, getDocument, getBody, getActiveElement, getComputedStyle } (required)\n *   - eventHandlers: { trackListener, cleanupListeners } (required)\n *   - logger: logging/observability interface as per DI (required)\n *   - domReadinessService: required for readiness flows (required)\n *   - [DependencySystem]: Strongly recommended for registration.\n *   - [createDebugTools]: Optional, for perf tracing.\n *   - [errorReporter]: Optional, for external error capture.\n */\n\nexport function createAccessibilityEnhancements({\n  domAPI,\n  eventHandlers,\n  logger,\n  domReadinessService,\n  DependencySystem,\n  createDebugTools,\n  errorReporter\n}) {\n  // Factory-level dependency validation (must be at the very top)\n  if (!logger) throw new Error('Missing required dependency: logger');\n  if (!domReadinessService) throw new Error('Missing required dependency: domReadinessService');\n  if (!domAPI) throw new Error('Missing required dependency: domAPI');\n  if (!eventHandlers) throw new Error('Missing required dependency: eventHandlers');\n\n  const MODULE_CONTEXT = 'accessibilityUtils';\n\n  // Validate logger and domReadinessService methods\n  if (typeof logger.error !== 'function' || typeof logger.info !== 'function') {\n    throw new Error('DI logger with .error/.info must be provided.');\n  }\n  if (\n    typeof domReadinessService.waitForEvent !== 'function' ||\n    typeof domReadinessService.dependenciesAndElements !== 'function'\n  ) {\n    throw new Error('domReadinessService DI with waitForEvent/dependenciesAndElements required.');\n  }\n  if (\n    typeof domAPI.getElementById !== 'function' ||\n    typeof domAPI.getDocument !== 'function'\n  ) {\n    throw new Error('domAPI with core methods (getElementById, getDocument) required.');\n  }\n  if (\n    typeof eventHandlers.trackListener !== 'function' ||\n    typeof eventHandlers.cleanupListeners !== 'function'\n  ) {\n    throw new Error('eventHandlers with trackListener and cleanupListeners required.');\n  }\n  if (typeof domAPI.getComputedStyle !== 'function') {\n    throw new Error('domAPI.getComputedStyle must be provided via DI; no fallback to window allowed.');\n  }\n\n  class AccessibilityUtilsModule {\n    constructor() {\n      this.domAPI = domAPI;\n      this.eventHandlers = eventHandlers;\n      this.DependencySystem = DependencySystem;\n      this.domReadinessService = domReadinessService;\n      this.errorReporter = errorReporter;\n      this.logger = logger;\n      this.debug =\n        typeof createDebugTools === 'function'\n          ? createDebugTools({ contextPrefix: MODULE_CONTEXT })\n          : { start: () => null, stop: () => {}, trace: fn => fn() };\n      this.keyboardShortcutsEnabled = true;\n      this.lastFocusedElement = null;\n      this.mutationObservers = [];\n      this._destroyed = false;\n    }\n\n    async init() {\n      const traceId = this.debug.start('init');\n      try {\n        await domReadinessService.documentReady();\n        if (this._destroyed) return;\n\n        this._bindGlobalShortcuts();\n        this._enhanceFormAccessibility();\n        this._improveModalAccessibility();\n        this._setupSkipLinks();\n\n        if (\n          this.DependencySystem &&\n          typeof this.DependencySystem.register === 'function'\n        ) {\n          const already = this.DependencySystem.modules?.get?.(MODULE_CONTEXT);\n          if (!already) {\n            this.DependencySystem.register(MODULE_CONTEXT, {\n              focusElement: this._focusElement?.bind(this),\n              getFocusable: this._getFocusable?.bind(this),\n              trapFocus: this._trapFocus?.bind(this),\n              toggleKeyboardShortcuts: this.toggleKeyboardShortcuts.bind(this),\n              announce: this.announce.bind(this),\n              destroy: this.destroy.bind(this),\n              cleanup: this.destroy.bind(this)\n            });\n          }\n        }\n      } catch (err) {\n        logger.error('[AccessibilityUtils][init] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: 'init' });\n        }\n        throw err;\n      } finally {\n        this.debug.stop(traceId, 'init');\n      }\n    }\n\n    destroy() {\n      const traceId = this.debug.start('destroy');\n      try {\n        if (this.eventHandlers && typeof this.eventHandlers.cleanupListeners === 'function') {\n          this.eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n        }\n        this.mutationObservers.forEach(observer => observer.disconnect());\n        this.mutationObservers.length = 0;\n        this.keyboardShortcutsEnabled = true;\n        this.lastFocusedElement = null;\n        this._destroyed = true;\n      } catch (err) {\n        logger.error('[AccessibilityUtils][destroy] cleanup failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: 'destroy.cleanupListeners' });\n        }\n      } finally {\n        this.debug.stop(traceId, 'destroy');\n      }\n    }\n\n    _trackListener(element, type, handler, options = {}) {\n      if (!element) return;\n      const optionsWithContext = { ...options, context: MODULE_CONTEXT };\n      this.eventHandlers.trackListener(element, type, handler, optionsWithContext);\n    }\n\n    async _handleGlobalKeydown(e) {\n      const traceId = this.debug.start('_handleGlobalKeydown');\n      try {\n        if (!this.keyboardShortcutsEnabled || this._isInput(e.target)) {\n          this.debug.stop(traceId, '_handleGlobalKeydown: skipped');\n          return;\n        }\n        let sidebar = null;\n        if (this.DependencySystem && typeof this.DependencySystem.waitFor === 'function') {\n          try {\n            sidebar = await this.DependencySystem.waitFor('sidebar', null, 3000);\n          } catch (err) {\n            logger.error('[AccessibilityUtils][_handleGlobalKeydown] DependencySystem.waitFor failed', err, { context: MODULE_CONTEXT });\n            if (this.errorReporter) {\n              this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_handleGlobalKeydown.DependencySystem.waitFor' });\n            }\n          }\n        }\n        if (this._noMods(e)) {\n          let handled = true;\n          switch (e.key) {\n            case '/':\n            case '`':\n            case '\\\\':\n              sidebar?.toggleSidebar();\n              break;\n            case '1':\n            case '2':\n            case '3': {\n              const mapping = { '1': 'recent', '2': 'starred', '3': 'projects' };\n              sidebar?.activateTab(mapping[e.key]);\n              break;\n            }\n            case 'p':\n            case 'P':\n              sidebar?.togglePin();\n              break;\n            case 'n':\n            case 'N':\n              this.domAPI.getElementById('sidebarNewProjectBtn')?.click();\n              break;\n            case 's':\n            case 'S':\n              this._focusElement('#sidebarProjectSearch');\n              break;\n            case '?':\n              this._toggleKeyboardHelp();\n              break;\n            default:\n              handled = false;\n          }\n          if (handled) e.preventDefault();\n        }\n        if (e.key === 'Escape') {\n          if (this._closeKeyboardHelpIfOpen()) {\n            e.preventDefault();\n          }\n        }\n      } catch (err) {\n        logger.error('[AccessibilityUtils][_handleGlobalKeydown] main handler failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_handleGlobalKeydown.main' });\n        }\n      } finally {\n        this.debug.stop(traceId, '_handleGlobalKeydown: processed');\n      }\n    }\n\n    _bindGlobalShortcuts() {\n      this._trackListener(\n        this.domAPI.getDocument(),\n        'keydown',\n        e => this._safeHandler(this._handleGlobalKeydown.bind(this), '_handleGlobalKeydown')(e),\n        { description: 'Global keyboard shortcuts' }\n      );\n      const closeHelpHandler = this._safeHandler((e) => {\n        const button = e.target.closest('#keyboardHelp button');\n        if (button) this._closeKeyboardHelpIfOpen();\n      }, 'Help dialog close button click');\n      this._trackListener(\n        this.domAPI.getDocument(),\n        'click',\n        closeHelpHandler,\n        { description: 'Help dialog close button click' }\n      );\n    }\n\n    _noMods(e) {\n      return !e.ctrlKey && !e.altKey && !e.metaKey;\n    }\n\n    _toggleKeyboardHelp(show) {\n      const dlg = this.domAPI.getElementById('keyboardHelp');\n      if (!dlg) return;\n      const isShown = !dlg.classList.contains('hidden');\n      const shouldShow = show === undefined ? !isShown : show;\n      if (shouldShow === isShown) return;\n      if (shouldShow) {\n        this.lastFocusedElement = this.domAPI.getActiveElement();\n        dlg.classList.remove('hidden');\n        this._trapFocus(dlg);\n        this._focusElement(dlg.querySelector('button') || dlg, 50);\n      } else {\n        dlg.classList.add('hidden');\n        this.lastFocusedElement?.focus?.();\n        this.lastFocusedElement = null;\n      }\n    }\n\n    _closeKeyboardHelpIfOpen() {\n      const dlg = this.domAPI.getElementById('keyboardHelp');\n      if (dlg && !dlg.classList.contains('hidden')) {\n        this._toggleKeyboardHelp(false);\n        return true;\n      }\n      return false;\n    }\n\n    toggleKeyboardShortcuts(enable) {\n      this.keyboardShortcutsEnabled =\n        enable === undefined ? !this.keyboardShortcutsEnabled : !!enable;\n      return this.keyboardShortcutsEnabled;\n    }\n\n    _enhanceFormAccessibility() {\n      this._trackListener(\n        this.domAPI.getDocument(),\n        'invalid',\n        this._safeHandler((e) => {\n          if (e.target.classList.contains('validator')) {\n            this._handleFormValidation(e.target, false);\n          }\n        }, 'Form validator invalid event'),\n        { capture: true, description: 'Form validator invalid event' }\n      );\n      this._trackListener(\n        this.domAPI.getDocument(),\n        'change',\n        this._safeHandler((e) => {\n          if (e.target.classList.contains('validator')) {\n            this._handleFormValidation(e.target, e.target.validity.valid);\n          }\n        }, 'Form validator change event'),\n        { description: 'Form validator change event' }\n      );\n    }\n\n    _handleFormValidation(input, isValid) {\n      let hint;\n      try {\n        hint = this.domAPI.querySelector(`#${input.id}-hint`);\n        if (!hint) {\n          hint = this.domAPI.createElement('p');\n          hint.id = `${input.id}-hint`;\n          hint.className = 'validator-hint';\n          if (typeof input.insertAdjacentElement === 'function') {\n            input.insertAdjacentElement('afterend', hint);\n          } else {\n            input.parentNode?.insertBefore(hint, input.nextSibling);\n          }\n        }\n        if (isValid) {\n          input.classList.add('validator-success');\n          input.classList.remove('validator-error');\n          hint.className = 'validator-hint validator-hint-success';\n          hint.textContent = '✓ Valid input';\n          hint.setAttribute('aria-live', 'polite');\n        } else {\n          input.classList.add('validator-error');\n          input.classList.remove('validator-success');\n          hint.className = 'validator-hint validator-hint-error';\n          if (input.validity.valueMissing) {\n            hint.textContent = 'This field is required';\n          } else if (input.validity.typeMismatch) {\n            hint.textContent = `Please enter a valid ${input.type}`;\n          } else if (input.validity.tooShort) {\n            hint.textContent = `Must be at least ${input.minLength} characters`;\n          } else if (input.validity.tooLong) {\n            hint.textContent = `Must be at most ${input.maxLength} characters`;\n          } else if (input.validity.patternMismatch) {\n            hint.textContent = input.title || 'Please match the requested format';\n          } else {\n            hint.textContent = 'Please enter a valid value';\n          }\n          hint.setAttribute('aria-live', 'assertive');\n        }\n      } catch (err) {\n        logger.error('[AccessibilityUtils][_handleFormValidation] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_handleFormValidation' });\n        }\n        throw err;\n      }\n    }\n\n    _improveModalAccessibility() {\n      try {\n        const dialogObserverCallback = mutations => {\n          mutations.forEach(m => {\n            if (\n              m.type === 'attributes' &&\n              m.attributeName === 'open' &&\n              m.target.tagName === 'DIALOG'\n            ) {\n              if (m.target.hasAttribute('open')) {\n                this.lastFocusedElement = this.domAPI.getActiveElement();\n                this._trapFocus(m.target);\n              } else {\n                this.lastFocusedElement?.focus?.();\n                this.lastFocusedElement = null;\n              }\n            }\n          });\n        };\n        const dialogObserver = new MutationObserver(\n          this._safeHandler(dialogObserverCallback, 'dialogObserverCallback')\n        );\n        this.mutationObservers.push(dialogObserver);\n        this.domAPI\n          .querySelectorAll('dialog')\n          .forEach(d => dialogObserver.observe(d, { attributes: true }));\n        const bodyObserverCallback = mutations => {\n          mutations.forEach(m => {\n            m.addedNodes.forEach(node => {\n              if (node.nodeType === Node.ELEMENT_NODE) {\n                if (node.tagName === 'DIALOG') {\n                  dialogObserver.observe(node, { attributes: true });\n                } else if (typeof node.querySelectorAll === 'function') {\n                  node\n                    .querySelectorAll('dialog')\n                    .forEach(d => dialogObserver.observe(d, { attributes: true }));\n                }\n              }\n            });\n          });\n        };\n        const bodyObserver = new MutationObserver(\n          this._safeHandler(bodyObserverCallback, 'bodyObserverCallback')\n        );\n        bodyObserver.observe(this.domAPI.getBody(), { childList: true, subtree: true });\n        this.mutationObservers.push(bodyObserver);\n      } catch (err) {\n        logger.error('[AccessibilityUtils][_improveModalAccessibility] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_improveModalAccessibility' });\n        }\n        throw err;\n      }\n    }\n\n    _setupSkipLinks() {\n      try {\n        const skipLink = this.domAPI.querySelector('.skip-to-content');\n        if (!skipLink) return;\n        const skipHandler = this._safeHandler(e => {\n          e.preventDefault();\n          const targetId = skipLink.getAttribute('href')?.substring(1);\n          if (targetId) {\n            const targetElement = this.domAPI.getElementById(targetId);\n            if (targetElement) {\n              if (!targetElement.hasAttribute('tabindex')) {\n                targetElement.setAttribute('tabindex', '-1');\n              }\n              this._focusElement(targetElement);\n            }\n          }\n        }, 'skip-to-content');\n        this._trackListener(skipLink, 'click', skipHandler, {\n          description: 'Skip to content link'\n        });\n      } catch (err) {\n        logger.error('[AccessibilityUtils][_setupSkipLinks] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_setupSkipLinks' });\n        }\n        throw err;\n      }\n    }\n\n    _trapFocus(container) {\n      try {\n        if (!container) return;\n        const focusables = this._getFocusable(container);\n        if (!focusables.length) return;\n        const first = focusables[0];\n        const last = focusables[focusables.length - 1];\n        const keydownHandler = this._safeHandler(e => {\n          if (e.key === 'Tab') {\n            const currentActiveElement = this.domAPI.getActiveElement();\n            if (e.shiftKey && currentActiveElement === first) {\n              e.preventDefault();\n              last.focus();\n            } else if (!e.shiftKey && currentActiveElement === last) {\n              e.preventDefault();\n              first.focus();\n            }\n          }\n        }, 'trap-focus Tab handler');\n        this._trackListener(container, 'keydown', keydownHandler, {\n          description: 'Trap focus Tab handler for container'\n        });\n        setTimeout(() => {\n          if (\n            this.domAPI.getBody().contains(container) &&\n            !container.contains(this.domAPI.getActiveElement())\n          ) {\n            first.focus();\n          }\n        }, 50);\n      } catch (err) {\n        logger.error('[AccessibilityUtils][_trapFocus] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_trapFocus' });\n        }\n        throw err;\n      }\n    }\n\n    _getFocusable(container) {\n      if (!container || typeof container.querySelectorAll !== 'function') return [];\n      const sel =\n        'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])';\n      return Array.from(container.querySelectorAll(sel)).filter(\n        el =>\n          !el.disabled &&\n          !el.closest('[inert]') &&\n          el.offsetParent !== null &&\n          this.domAPI.getComputedStyle(el).visibility !== 'hidden' &&\n          this.domAPI.getComputedStyle(el).display !== 'none'\n      );\n    }\n\n    _focusElement(target, delay = 0) {\n      try {\n        const el = typeof target === 'string' ? this.domAPI.querySelector(target) : target;\n        if (!el || typeof el.focus !== 'function') return false;\n        const actuallyFocus = () => {\n          if (\n            this.domAPI.getBody().contains(el) &&\n            typeof el.focus === 'function'\n          ) {\n            el.focus();\n          }\n        };\n        if (delay > 0) {\n          setTimeout(actuallyFocus, delay);\n        } else {\n          actuallyFocus();\n        }\n        return true;\n      } catch (err) {\n        logger.error('[AccessibilityUtils][_focusElement] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_focusElement' });\n        }\n        throw err;\n      }\n    }\n\n    _isInput(el) {\n      if (!el || typeof el.tagName !== 'string') return false;\n      const name = el.tagName.toLowerCase();\n      return (\n        name === 'input' ||\n        name === 'textarea' ||\n        name === 'select' ||\n        el.isContentEditable\n      );\n    }\n\n    announce(text, mode = 'polite') {\n      try {\n        let region = this.domAPI.getElementById('a11y-announcer');\n        if (!region) {\n          region = this.domAPI.createElement('div');\n          region.id = 'a11y-announcer';\n          Object.assign(region.style, {\n            border: '0',\n            clip: 'rect(0 0 0 0)',\n            height: '1px',\n            margin: '-1px',\n            overflow: 'hidden',\n            padding: '0',\n            position: 'absolute',\n            width: '1px',\n            whiteSpace: 'nowrap'\n          });\n          region.setAttribute('aria-live', mode);\n          region.setAttribute('aria-atomic', 'true');\n          this.domAPI.getBody().appendChild(region);\n        }\n        if (region.getAttribute('aria-live') !== mode) {\n          region.setAttribute('aria-live', mode);\n        }\n        region.textContent = '';\n        setTimeout(() => {\n          region.textContent = text;\n        }, 50);\n      } catch (err) {\n        logger.error('[AccessibilityUtils][announce] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: 'announce' });\n        }\n        throw err;\n      }\n    }\n\n    _safeHandler(handler, description) {\n      return (...args) => {\n        try {\n          return handler(...args);\n        } catch (err) {\n          logger.error(`[AccessibilityUtils][${description}]`, err && err.stack ? err.stack : err, { context: MODULE_CONTEXT });\n          if (this.errorReporter) {\n            this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: description });\n          }\n          throw err;\n        }\n      };\n    }\n  }\n\n  const instance = new AccessibilityUtilsModule();\n  function cleanup() {\n    instance.destroy();\n  }\n\n  return {\n    init: instance.init.bind(instance),\n    destroy: instance.destroy.bind(instance),\n    toggleKeyboardShortcuts: instance.toggleKeyboardShortcuts.bind(instance),\n    announce: instance.announce.bind(instance),\n    focusElement: instance._focusElement ? instance._focusElement.bind(instance) : undefined,\n    getFocusable: instance._getFocusable ? instance._getFocusable.bind(instance) : undefined,\n    trapFocus: instance._trapFocus ? instance._trapFocus.bind(instance) : undefined,\n    cleanup,\n    _instance: instance\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 22215,
          "_transferSize": 23398,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.561Z",
        "time": 764.5590000029188,
        "timings": {
          "blocked": 668.1389999973345,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07699999999999818,
          "wait": 89.3799999984941,
          "receive": 6.963000007090159,
          "_blocked_queueing": 4.612999997334555,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106419",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 51
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/navigationService.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1466,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "13159"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:58 GMT"
            },
            {
              "name": "etag",
              "value": "\"33070266eac7601dad0309905512b99a\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 02:51:09 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13159,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module NavigationService\n * Provides centralized navigation management to prevent conflicts,\n * race conditions, and ensure consistent navigation behavior.\n */\n\nconst MODULE = \"NavigationService\";\nconst MODULE_CONTEXT = \"navigationService\";\n\nexport function createNavigationService({\n  domAPI,\n  browserService,\n  DependencySystem,\n  eventHandlers\n} = {}) {\n  // === Dependency Validation ===\n  if (!domAPI) throw new Error('[NavigationService] domAPI is required');\n  if (!browserService) throw new Error('[NavigationService] browserService is required');\n  if (!DependencySystem) throw new Error('[NavigationService] DependencySystem is required');\n  if (!eventHandlers) throw new Error('[NavigationService] eventHandlers is required');\n\n  // === Navigation State ===\n  const state = {\n    currentView: null,            // 'projectList', 'projectDetails', etc.\n    currentProjectId: null,\n    currentConversationId: null,\n    previousView: null,\n    navigationInProgress: false,\n    navigationStack: [],          // History of navigation states\n    registeredViews: new Map(),   // Map of view IDs to handler functions\n    transitionListeners: [],      // Navigation lifecycle listeners\n    viewParams: new Map()         // Additional params for each view\n  };\n\n  // === Navigation Lifecycle Events ===\n  /**\n   * Emit a navigation lifecycle event\n   * @param {string} eventName - Name of the lifecycle event\n   * @param {Object} detail - Event details\n   */\n  function emitNavigationEvent(eventName, detail = {}) {\n    const CustomEventCtor = browserService.getWindow?.()?.CustomEvent;\n    if (!CustomEventCtor) return;\n    const event = new CustomEventCtor(`navigation:${eventName}`, {\n      detail: {\n        ...detail,\n        timestamp: Date.now(),\n        source: MODULE\n      }\n    });\n\n    // Emit on document for global subscribers\n    if (domAPI && typeof domAPI.dispatchEvent === 'function') {\n      const doc = domAPI.getDocument();\n      if (doc) {\n        domAPI.dispatchEvent(doc, event);\n      }\n    }\n\n    // Call registered transition listeners\n    state.transitionListeners.forEach(listener => {\n      if (typeof listener[eventName] === 'function') {\n        try {\n          listener[eventName](detail);\n        } catch (err) {\n          // fail silently\n        }\n      }\n    });\n  }\n\n  /**\n   * Register navigation lifecycle listeners\n   * @param {Object} listener - Object with lifecycle methods\n   * @returns {Function} Unsubscribe function\n   */\n  function addTransitionListener(listener) {\n    state.transitionListeners.push(listener);\n    return () => {\n      const index = state.transitionListeners.indexOf(listener);\n      if (index !== -1) {\n        state.transitionListeners.splice(index, 1);\n      }\n    };\n  }\n\n  // === URL Management ===\n  /**\n   * Get current URL parameters\n   * @returns {Object} Parameter object\n   */\n  function getUrlParams() {\n    const searchParams = new browserService.URLSearchParams(\n      browserService.getLocation().search\n    );\n    const params = {};\n\n    // Convert searchParams to plain object\n    for (const [key, value] of searchParams.entries()) {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  /**\n   * Update URL without triggering navigation\n   * @param {Object} params - URL parameters to set\n   * @param {boolean} replace - Whether to replace current history entry\n   */\n  function updateUrlParams(params = {}, replace = false) {\n    // delegate to the central implementation to keep behaviour consistent\n    const newUrl = browserService.buildUrl(params);\n    replace\n      ? browserService.replaceState({}, '', newUrl)\n      : browserService.pushState   ({}, '', newUrl);\n  }\n\n  // === View Management ===\n  /**\n   * Register a view with the navigation service\n   * @param {string} viewId - Unique identifier for the view\n   * @param {Object} handlers - View handler functions (show, hide, etc.)\n   */\n  function registerView(viewId, handlers = {}) {\n    if (!viewId) {\n      return;\n    }\n\n    const requiredHandlers = ['show', 'hide'];\n    const missingHandlers = requiredHandlers.filter(h => typeof handlers[h] !== 'function');\n\n    if (missingHandlers.length > 0) {\n      return;\n    }\n\n    state.registeredViews.set(viewId, handlers);\n  }\n\n  function hasView(viewId){ return state.registeredViews.has(viewId); }\n\n  /**\n   * Activate a registered view and deactivate others\n   * @param {string} viewId - View to activate\n   * @param {Object} params - View parameters\n   * @returns {Promise<boolean>} Success indicator\n   */\n  async function activateView(viewId, params = {}) {\n    if (!state.registeredViews.has(viewId)) {\n      return false;\n    }\n\n    const viewHandlers = state.registeredViews.get(viewId);\n    const previousViewId = state.currentView;\n\n    try {\n      // First, ensure login message is hidden and main content is visible\n      const domAPI = DependencySystem?.modules?.get('domAPI');\n      if (domAPI) {\n        const loginMessage = domAPI.getElementById('loginRequiredMessage');\n        const mainContent = domAPI.getElementById('mainContent');\n\n        if (loginMessage) loginMessage.classList.add('hidden');\n        if (mainContent) mainContent.classList.remove('hidden');\n      }\n\n      // Hide previous view if different\n      if (previousViewId && previousViewId !== viewId) {\n        const prevHandlers = state.registeredViews.get(previousViewId);\n        if (prevHandlers && typeof prevHandlers.hide === 'function') {\n          await prevHandlers.hide();\n        }\n      }\n\n      // Store params for the view\n      state.viewParams.set(viewId, params);\n\n      // Show the new view\n      await viewHandlers.show(params);\n\n      // Update state\n      state.previousView = previousViewId;\n      state.currentView = viewId;\n\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // === Core Navigation Functions ===\n  /**\n   * Navigate to a specific view with parameters\n   * @param {string} viewId - Target view ID\n   * @param {Object} params - Navigation parameters\n   * @param {Object} options - Navigation options\n   * @returns {Promise<boolean>} Success indicator\n   */\n  async function navigateTo(viewId, params = {}, options = {}) {\n    const {\n      updateUrl = true,\n      addToHistory = true,\n      replace = false\n    } = options;\n\n    // Prevent navigation during another navigation\n    if (state.navigationInProgress) {\n      return false;\n    }\n\n    state.navigationInProgress = true;\n    const navId = Date.now();\n\n    try {\n      // Fire beforeNavigate event\n      emitNavigationEvent('beforeNavigate', {\n        from: state.currentView,\n        to: viewId,\n        params,\n        navigationId: navId\n      });\n\n      // Get view-specific parameters\n      const projectId = params.projectId || params.project || null;\n      const conversationId = params.conversationId || params.chatId || null;\n\n      // Update URL if needed\n      if (updateUrl) {\n        const urlParams = {};\n\n        // Add parameters to URL as needed\n        if (viewId === 'projectDetails' && projectId) {\n          urlParams.project = projectId;\n\n          if (conversationId) {\n            urlParams.chatId = conversationId;\n          }\n        }\n\n        updateUrlParams(urlParams, replace);\n      }\n\n      // Update state before view activation\n      if (projectId) {\n        state.currentProjectId = projectId;\n      }\n\n      if (conversationId) {\n        state.currentConversationId = conversationId;\n      }\n\n      // Fire navigating event\n      emitNavigationEvent('navigating', {\n        from: state.currentView,\n        to: viewId,\n        params,\n        navigationId: navId\n      });\n\n      // Activate the view\n      const success = await activateView(viewId, params);\n\n      if (success) {\n        // Add to navigation stack if successful and addToHistory is true\n        if (addToHistory) {\n          state.navigationStack.push({\n            viewId,\n            params,\n            timestamp: Date.now()\n          });\n        }\n\n        // Fire afterNavigate event\n        emitNavigationEvent('afterNavigate', {\n          from: state.previousView,\n          to: viewId,\n          params,\n          navigationId: navId,\n          success: true\n        });\n      } else {\n        // Fire navigation error event\n        emitNavigationEvent('navigationError', {\n          from: state.currentView,\n          to: viewId,\n          params,\n          navigationId: navId,\n          error: 'View activation failed'\n        });\n      }\n\n      return success;\n    } catch (error) {\n      // Fire navigation error event\n      emitNavigationEvent('navigationError', {\n        from: state.currentView,\n        to: viewId,\n        params,\n        navigationId: navId,\n        error: error.message || 'Unknown error'\n      });\n      return false;\n    } finally {\n      state.navigationInProgress = false;\n    }\n  }\n\n  /**\n   * Navigate to project list view\n   * @param {Object} options - Navigation options\n   * @returns {Promise<boolean>} Success indicator\n   */\n  function navigateToProjectList(options = {}) {\n    return navigateTo('projectList', {}, options);\n  }\n\n  /**\n   * Navigate to project details view\n   * @param {string} projectId - Project ID\n   * @param {Object} options - Navigation options\n   * @returns {Promise<boolean>} Success indicator\n   */\n  function navigateToProject(projectId, options = {}) {\n    if (!projectId) {\n      return Promise.resolve(false);\n    }\n\n    return navigateTo('projectDetails', { projectId }, options);\n  }\n\n  /**\n   * Navigate to conversation within a project\n   * @param {string} projectId - Project ID\n   * @param {string} conversationId - Conversation ID\n   * @param {Object} options - Navigation options\n   * @returns {Promise<boolean>} Success indicator\n   */\n  function navigateToConversation(projectId, conversationId, options = {}) {\n    if (!projectId || !conversationId) {\n      return Promise.resolve(false);\n    }\n\n    return navigateTo('projectDetails', {\n      projectId,\n      conversationId,\n      activeTab: 'conversations'\n    }, options);\n  }\n\n  /**\n   * Go back in navigation history\n   * @returns {Promise<boolean>} Success indicator\n   */\n  async function goBack() {\n    if (state.navigationStack.length <= 1) {\n      // If no previous entries, go to project list\n      return navigateToProjectList({ replace: true });\n    }\n\n    // Remove current state\n    state.navigationStack.pop();\n\n    // Get previous state\n    const previous = state.navigationStack[state.navigationStack.length - 1];\n\n    // Navigate to previous state, replacing current history entry\n    return navigateTo(previous.viewId, previous.params, { replace: true });\n  }\n\n  // === Event Handlers ===\n  /**\n   * Handle browser popstate event (back/forward buttons)\n   * @param {Event} event - Popstate event\n   */\n  function handlePopState(event) {\n    const params = getUrlParams();\n    const projectId = params.project;\n    const conversationId = params.chatId;\n\n    // Determine target view based on URL parameters\n    if (projectId) {\n      if (conversationId) {\n        navigateToConversation(projectId, conversationId, { addToHistory: false });\n      } else {\n        navigateToProject(projectId, { addToHistory: false });\n      }\n    } else {\n      navigateToProjectList({ addToHistory: false });\n    }\n  }\n\n  // === Initialization ===\n  /**\n   * Initialize the navigation service\n   */\n  function init() {\n    // Register popstate handler\n    eventHandlers.trackListener(\n      browserService.getWindow(),\n      'popstate',\n      handlePopState,\n      {\n        description: 'Navigation popstate handler',\n        context: MODULE_CONTEXT\n      }\n    );\n\n    // Notification removed (NavigationService initialized)\n\n    // Parse initial URL and set initial state\n    const params = getUrlParams();\n    if (params.project) {\n      state.currentProjectId = params.project;\n    }\n    if (params.chatId) {\n      state.currentConversationId = params.chatId;\n    }\n\n    // Notification removed (initial navigation state)\n\n    // Notify ready\n    emitNavigationEvent('ready', {\n      currentProjectId: state.currentProjectId,\n      currentConversationId: state.currentConversationId\n    });\n\n    return true;\n  }\n\n  /**\n   * Clean up event listeners and state\n   */\n  function cleanup() {\n    // Clean up event listeners\n    eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n\n    // Clear state\n    state.registeredViews.clear();\n    state.transitionListeners.length = 0;\n    state.navigationStack.length = 0;\n    state.viewParams.clear();\n  }\n\n  // === Public API ===\n  return {\n    // Core navigation\n    navigateTo,\n    navigateToProjectList,\n    navigateToProject,\n    navigateToConversation,\n    goBack,\n\n    // View management\n    registerView,\n\n    // URL management\n    updateUrlParams,\n    getUrlParams,\n\n    // State access\n    getCurrentView: () => state.currentView,\n    hasView,\n    getCurrentProjectId: () => state.currentProjectId,\n    getCurrentConversationId: () => state.currentConversationId,\n    isNavigating: () => state.navigationInProgress,\n\n    // Lifecycle\n    addTransitionListener,\n\n    // Initialization & cleanup\n    init,\n    cleanup\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 13159,
          "_transferSize": 14342,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.561Z",
        "time": 765.6569999962812,
        "timings": {
          "blocked": 668.1499999968447,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07799999999997453,
          "wait": 96.46199999949056,
          "receive": 0.9669999999459833,
          "_blocked_queueing": 4.761999996844679,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106593",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 52
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/project-details-enhancements.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1477,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "31147"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"caedd84aba2c5ca21bdf6e805ff20af5\""
            },
            {
              "name": "last-modified",
              "value": "Thu, 22 May 2025 05:52:41 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 31147,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * project-details-enhancements.js\n * Implements enhanced UI features for the project details and project list pages,\n * following the styling in the corresponding CSS files\n */\n\nfunction createProjectDetailsEnhancements(deps) {\n  // Validate dependencies\n  if (!deps || typeof deps !== 'object') {\n    throw new Error('[createProjectDetailsEnhancements] Dependencies object is required');\n  }\n\n  const {\n    domAPI,\n    browserService,\n    eventHandlers,\n    domReadinessService,\n    logger,\n    sanitizer\n  } = deps;\n\n  // Validate required dependencies\n  if (!domAPI) throw new Error('[createProjectDetailsEnhancements] Missing dependency: domAPI');\n  if (!browserService) throw new Error('[createProjectDetailsEnhancements] Missing dependency: browserService');\n  if (!eventHandlers) throw new Error('[createProjectDetailsEnhancements] Missing dependency: eventHandlers');\n  if (!domReadinessService) throw new Error('[createProjectDetailsEnhancements] Missing dependency: domReadinessService');\n  if (!logger) throw new Error('[createProjectDetailsEnhancements] Missing dependency: logger');\n  if (!sanitizer) throw new Error('[createProjectDetailsEnhancements] Missing dependency: sanitizer');\n\n  // State management\n  const state = {\n    initialized: false,\n    // Token stats removed for mobile refactor\n    activeTab: 'chat',\n    // Project list state\n    projectListInitialized: false,\n    currentFilter: 'all',\n    searchTerm: ''\n  };\n\n  // Event tracking context\n  const CONTEXT = 'projectEnhancements';\n\n  /**\n   * Convert linear progress to circular progress for token usage\n   */\n  // (Mobile refactor) Legacy token usage indicator removed\n\n  /**\n   * Generate a simple sparkline visualization with random data\n   * @param {number} points Number of data points\n   * @param {number} lastValue Last value to end the sparkline (usually current percentage)\n   * @returns {string} HTML for the sparkline\n   */\n  function generateSparkline(points, lastValue) {\n    try {\n      // Generate random data that trends toward the lastValue\n      const data = [];\n      const minValue = Math.max(0, lastValue - 25);\n\n      for (let i = 0; i < points - 1; i++) {\n        const value = minValue + Math.random() * (lastValue - minValue) * (i / (points - 1));\n        data.push(Math.floor(value));\n      }\n\n      // Add the actual lastValue as the final point\n      data.push(lastValue);\n\n      // Create the sparkline SVG\n      let sparkContent = `<div class=\"line\">`;\n\n      // Add points\n      data.forEach((value, index) => {\n        const x = (index / (points - 1)) * 100;\n        const y = 100 - value; // Invert since SVG 0,0 is top-left\n\n        sparkContent += `<div class=\"point\" style=\"left: ${x}%; top: ${y}%;\"></div>`;\n      });\n\n      sparkContent += `</div>`;\n      return sparkContent;\n    } catch (error) {\n      logger.error('[generateSparkline]', error, { context: CONTEXT });\n      return '';\n    }\n  }\n\n  /**\n   * Add a floating action button (FAB) to the project details page\n   * with enhanced mobile interactions\n   */\n  function addFloatingActionButton() {\n    try {\n      // Create FAB element\n      const fabElement = domAPI.createElement('button');\n      fabElement.id = 'projectFab';\n      fabElement.className = 'project-fab';\n      fabElement.title = 'Quick Actions';\n      fabElement.setAttribute('aria-label', 'Quick Actions');\n\n      // Create FAB icon\n      domAPI.setInnerHTML(fabElement, sanitizer.sanitize(`\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n        </svg>\n      `));\n\n      // Append to project-details-root\n      const projectRoot = domAPI.querySelector('.project-details-root');\n      if (projectRoot) {\n        domAPI.appendChild(projectRoot, fabElement);\n      }\n\n      // Add click handler\n      const handleFabClick = (e) => {\n        e.preventDefault();\n\n        // Determine current tab and perform relevant action\n        let targetBtn;\n\n        switch (state.activeTab) {\n          case 'files':\n            // Trigger file upload\n            targetBtn = domAPI.getElementById('uploadFileBtn');\n            break;\n          case 'chat':\n            // Create new conversation\n            targetBtn = domAPI.getElementById('newConversationBtn');\n            break;\n          case 'knowledge':\n            // Search knowledge base\n            targetBtn = domAPI.getElementById('searchKnowledgeBtn');\n            break;\n          default:\n            // Edit project details\n            targetBtn = domAPI.getElementById('editProjectBtn');\n            break;\n        }\n\n        if (targetBtn) {\n          // Add haptic feedback on mobile if available\n          if (browserService && browserService.isMobile && browserService.getWindow()?.navigator?.vibrate) {\n            browserService.getWindow().navigator.vibrate(50); // Short vibration for feedback\n          }\n\n          // Visual feedback - temporary animation\n          fabElement.classList.add('active');\n          browserService.setTimeout(() => fabElement.classList.remove('active'), 300);\n\n          targetBtn.click();\n        }\n      };\n\n      const fabClickUnsub = eventHandlers.trackListener(\n        fabElement,\n        'click',\n        handleFabClick,\n        { context: CONTEXT }\n      );\n\n      // For mobile: Add reminder pulse after 5 seconds of inactivity\n      // to subtly draw attention to the FAB\n      if (browserService && browserService.isMobile) {\n        browserService.setTimeout(() => {\n          // Only add pulse if user hasn't interacted with FAB yet\n          if (!fabElement.classList.contains('active')) {\n            fabElement.classList.add('reminder-pulse');\n            // Remove pulse after 5 seconds\n            browserService.setTimeout(() => fabElement.classList.remove('reminder-pulse'), 5000);\n          }\n        }, 5000);\n\n        // Add touch feedback\n        eventHandlers.trackListener(\n          fabElement,\n          'touchstart',\n          () => {\n            fabElement.style.transform = 'scale(0.95)';\n            fabElement.classList.remove('reminder-pulse');\n          },\n          { context: CONTEXT }\n        );\n\n        eventHandlers.trackListener(\n          fabElement,\n          'touchend',\n          () => {\n            fabElement.style.transform = '';\n          },\n          { context: CONTEXT }\n        );\n      }\n    } catch (error) {\n      logger.error('[addFloatingActionButton]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Enhance empty states with better visuals\n   */\n  function enhanceEmptyStates() {\n    try {\n      // Find all empty state messages\n      const emptyStates = domAPI.querySelectorAll('.text-base-content\\\\/60.text-center.py-8');\n\n      emptyStates.forEach(emptyState => {\n        const message = emptyState.textContent.trim();\n        const parentId = emptyState.parentElement?.id || '';\n\n        // Create enhanced empty state\n        const enhancedEmptyState = domAPI.createElement('div');\n        enhancedEmptyState.className = 'empty-state';\n\n        // Configure icon and text based on container context\n        let icon, title, description;\n\n        if (parentId.includes('file')) {\n          icon = `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n          </svg>`;\n          title = 'No Files Yet';\n          description = 'Upload files to your project to get started';\n        } else if (parentId.includes('artifactsList')) {\n          icon = `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z\" />\n          </svg>`;\n          title = 'No Artifacts Generated';\n          description = 'Artifacts will appear here when created during conversations';\n        } else if (parentId.includes('conversationsList')) {\n          icon = `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n          </svg>`;\n          title = 'No Conversations Yet';\n          description = 'Start a new chat to begin your project';\n        } else if (parentId.includes('knowledgeProcessedFiles')) {\n          icon = `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n          </svg>`;\n          title = 'Knowledge Base Empty';\n          description = 'Upload files to add them to your knowledge base';\n        } else {\n          // Fallback\n          icon = `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n          </svg>`;\n          title = 'Nothing Here Yet';\n          description = message;\n        }\n\n        // Construct the enhanced empty state HTML\n        domAPI.setInnerHTML(enhancedEmptyState, sanitizer.sanitize(`\n          <div class=\"empty-state-icon\">${icon}</div>\n          <h4 class=\"empty-state-title\">${title}</h4>\n          <p class=\"empty-state-description\">${description}</p>\n        `));\n\n        // Replace the original empty state with the enhanced one\n        emptyState.replaceWith(enhancedEmptyState);\n      });\n    } catch (error) {\n      logger.error('[enhanceEmptyStates]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Track active tab changes to update FAB behavior\n   */\n  function setupTabTracking() {\n    try {\n      const tabButtons = domAPI.querySelectorAll('.project-tab');\n\n      tabButtons.forEach(button => {\n        const tabHandler = (e) => {\n          const tabId = button.getAttribute('data-tab');\n          if (tabId) {\n            state.activeTab = tabId;\n\n            // Update FAB visibility based on tab\n            const fab = domAPI.getElementById('projectFab');\n            if (fab) {\n              // Always show FAB, but change its appearance based on context\n              const tabToIconMap = {\n                files: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" /></svg>',\n                chat: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\" /></svg>',\n                knowledge: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg>',\n                details: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" /></svg>',\n                artifacts: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>'\n              };\n\n              // Update icon based on tab\n              if (tabToIconMap[tabId]) {\n                domAPI.setInnerHTML(fab, sanitizer.sanitize(tabToIconMap[tabId]));\n              }\n\n              // Update title/aria-label based on tab\n              const tabToTitleMap = {\n                files: 'Upload Files',\n                chat: 'New Conversation',\n                knowledge: 'Search Knowledge Base',\n                details: 'Edit Project Details',\n                artifacts: 'View Artifacts'\n              };\n\n              if (tabToTitleMap[tabId]) {\n                fab.title = tabToTitleMap[tabId];\n                fab.setAttribute('aria-label', tabToTitleMap[tabId]);\n              }\n            }\n          }\n        };\n\n        const tabUnsub = eventHandlers.trackListener(\n          button,\n          'click',\n          tabHandler,\n          { context: CONTEXT }\n        );\n      });\n    } catch (error) {\n      logger.error('[setupTabTracking]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Enhance project list with improved visuals and interactions\n   */\n  function enhanceProjectList() {\n    try {\n      // Get the project list container\n      const projectList = domAPI.getElementById('projectList');\n      if (!projectList) return;\n\n      // Apply enhancements to project cards\n      enhanceProjectCards();\n\n      // Add search and filtering enhancements\n      setupProjectSearchFiltering();\n\n      // Add animation to \"New Project\" button\n      const createBtn = domAPI.getElementById('projectListCreateBtn');\n      if (createBtn) {\n        createBtn.classList.add('enhanced-btn');\n      }\n\n      // Make sure list is visible with a smooth fade-in\n      projectList.style.opacity = '1';\n\n      // Mobile-specific enhancements\n      if (browserService && browserService.isMobile) {\n        // Improve touch targets\n        domAPI.querySelectorAll('#projectList .btn, #projectList button').forEach(btn => {\n          if (!btn.classList.contains('btn-lg')) {\n            btn.style.minHeight = '44px'; // Ensure minimum touch target size\n          }\n        });\n\n        // Improve keyboard experience for search input\n        const searchInput = domAPI.getElementById('projectSearchInput');\n        if (searchInput) {\n          // Prevent iOS zoom by ensuring font size is at least 16px\n          searchInput.style.fontSize = '16px';\n\n          // Add proper mobile keyboard support\n          searchInput.setAttribute('inputmode', 'search');\n          searchInput.setAttribute('enterkeyhint', 'search');\n\n          // Clear button for mobile\n          const clearBtn = domAPI.createElement('button');\n          clearBtn.className = 'input-clear-btn';\n          domAPI.setInnerHTML(clearBtn, sanitizer.sanitize(`\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-4 h-4\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\n          `));\n\n          // Insert clear button after search input\n          domAPI.insertBefore(\n            searchInput.parentNode,\n            clearBtn,\n            domAPI.getProperty(searchInput, 'nextSibling')\n          );\n\n          // Initially hidden\n          clearBtn.style.display = 'none';\n\n          // Show/hide clear button based on input content\n          eventHandlers.trackListener(\n            searchInput,\n            'input',\n            () => {\n              clearBtn.style.display = searchInput.value ? 'flex' : 'none';\n            },\n            { context: CONTEXT }\n          );\n\n          // Clear input when button is clicked\n          eventHandlers.trackListener(\n            clearBtn,\n            'click',\n            () => {\n              searchInput.value = '';\n              searchInput.dispatchEvent(new Event('input'));\n              searchInput.focus();\n            },\n            { context: CONTEXT }\n          );\n        }\n      }\n\n      state.projectListInitialized = true;\n      logger.debug('[enhanceProjectList] Project list enhancements applied', { context: CONTEXT });\n    } catch (error) {\n      logger.error('[enhanceProjectList]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Add visual enhancements to project cards\n   */\n  function enhanceProjectCards() {\n    try {\n      // Find all project cards\n      const projectCards = domAPI.querySelectorAll('.project-card');\n      if (projectCards.length === 0) return;\n\n      projectCards.forEach((card, index) => {\n        // Add animation delay for staggered appearance\n        card.style.animationDelay = `${index * 50}ms`;\n\n        // Enhance the badges for pinned and archived projects\n        const badges = card.querySelector('.flex.gap-1');\n        if (badges) {\n          const badgeElems = badges.querySelectorAll('span');\n\n          badgeElems.forEach(badge => {\n            const tip = badge.dataset.tip;\n\n            // Replace emoji-based badges with styled badges\n            if (tip === 'Pinned') {\n              badge.classList.add('badge', 'badge-pinned');\n              domAPI.setInnerHTML(badge, sanitizer.sanitize(`\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"metadata-icon\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\" />\n                </svg>\n                <span>Pinned</span>\n              `));\n            } else if (tip === 'Archived') {\n              badge.classList.add('badge', 'badge-archived');\n              domAPI.setInnerHTML(badge, sanitizer.sanitize(`\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"metadata-icon\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\" />\n                </svg>\n                <span>Archived</span>\n              `));\n            }\n          });\n        }\n\n        // Add metadata to the footer\n        const footer = card.querySelector('.mt-auto');\n        if (footer) {\n          // Create metadata container if it doesn't exist\n          let metadataDiv = footer.querySelector('.metadata');\n          if (!metadataDiv) {\n            metadataDiv = domAPI.createElement('div');\n            metadataDiv.className = 'metadata mt-2';\n\n            // Append metadata about activity/date (using existing date if available)\n            const dateText = footer.textContent?.trim() || '';\n            if (dateText) {\n              domAPI.setInnerHTML(metadataDiv, sanitizer.sanitize(`\n                <div class=\"metadata-item\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"metadata-icon\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                  </svg>\n                  <span>${dateText}</span>\n                </div>\n              `));\n            }\n\n            footer.appendChild(metadataDiv);\n          }\n        }\n      });\n    } catch (error) {\n      logger.error('[enhanceProjectCards]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Setup enhanced search and filtering for project list\n   */\n  function setupProjectSearchFiltering() {\n    try {\n      const searchInput = domAPI.getElementById('projectSearchInput');\n      if (!searchInput) return;\n\n      // Add real-time search filtering\n      const handleSearch = (e) => {\n        const searchTerm = e.target.value.toLowerCase().trim();\n        state.searchTerm = searchTerm;\n\n        const projectCards = domAPI.querySelectorAll('.project-card');\n        const noProjectsMessage = domAPI.getElementById('noProjectsMessage');\n\n        let visibleCount = 0;\n\n        projectCards.forEach(card => {\n          const projectName = card.querySelector('.project-name')?.textContent?.toLowerCase() || '';\n          const projectDescription = card.querySelector('.text-sm.text-base-content\\\\/70')?.textContent?.toLowerCase() || '';\n\n          // Check if the card matches the search term\n          const matches = projectName.includes(searchTerm) || projectDescription.includes(searchTerm);\n\n          // Also check if it matches the current filter\n          const isPinned = card.innerHTML.includes('Pinned');\n          const isArchived = card.innerHTML.includes('Archived');\n\n          let matchesFilter = true;\n          if (state.currentFilter === 'pinned' && !isPinned) {\n            matchesFilter = false;\n          } else if (state.currentFilter === 'archived' && !isArchived) {\n            matchesFilter = false;\n          }\n\n          // Show/hide based on filter and search\n          const shouldShow = matches && matchesFilter;\n          card.style.display = shouldShow ? '' : 'none';\n\n          if (shouldShow) visibleCount++;\n        });\n\n        // Show/hide no projects message\n        if (noProjectsMessage) {\n          noProjectsMessage.style.display = visibleCount === 0 ? 'block' : 'none';\n        }\n      };\n\n      // Track search input events\n      eventHandlers.trackListener(\n        searchInput,\n        'input',\n        handleSearch,\n        { context: CONTEXT }\n      );\n\n      // Add filter tab click tracking\n      const filterTabs = domAPI.querySelectorAll('#projectFilterTabs .tab');\n      filterTabs.forEach(tab => {\n        eventHandlers.trackListener(\n          tab,\n          'click',\n          () => {\n            state.currentFilter = tab.dataset.filter || 'all';\n\n            // Trigger search to apply filtering\n            const event = new Event('input');\n            searchInput.dispatchEvent(event);\n          },\n          { context: CONTEXT }\n        );\n      });\n    } catch (error) {\n      logger.error('[setupProjectSearchFiltering]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Initialize project list enhancements\n   */\n  async function initializeProjectList() {\n    try {\n      // Wait for project list elements to be ready\n      await domReadinessService.dependenciesAndElements({\n        domSelectors: ['#projectList', '#projectCardsPanel', '#projectFilterTabs'],\n        context: CONTEXT + '_projectList'\n      });\n\n      enhanceProjectList();\n      logger.debug('[initializeProjectList] Project list initialized', { context: CONTEXT });\n      return true;\n    } catch (error) {\n      logger.error('[initializeProjectList]', error, { context: CONTEXT });\n      return false;\n    }\n  }\n\n  /**\n   * Add mobile-specific pull-to-refresh for the conversation list\n   */\n  function setupPullToRefresh() {\n    const CONTEXT = 'project-details:pull-to-refresh';\n    try {\n      // Only apply on mobile devices\n      if (!browserService || !browserService.isMobile) return;\n\n      const conversationsList = domAPI.getElementById('conversationsList');\n      if (!conversationsList) return;\n\n      // Create pull indicator element\n      const pullIndicator = domAPI.createElement('div');\n      pullIndicator.className = 'pull-indicator';\n      domAPI.setInnerHTML(pullIndicator, sanitizer.sanitize(`\n        <div class=\"mobile-loading-indicator\"></div>\n        <span class=\"ml-2\">Pull to refresh</span>\n      `));\n\n      // Insert at the top of the conversations list\n      domAPI.insertBefore(conversationsList, pullIndicator, domAPI.getProperty(conversationsList, 'firstChild'));\n\n      // State variables for tracking pull gesture\n      let startY = 0;\n      let currentY = 0;\n      let isPulling = false;\n      let refreshTriggered = false;\n\n      // Touch event handlers using strict DI practices\n      const onTouchStart = (e) => {\n        try {\n          const scrollTop = domAPI.getProperty(conversationsList, 'scrollTop');\n          if (scrollTop <= 5) {\n            const touches = domAPI.getProperty(e, 'touches');\n            startY = domAPI.getProperty(touches[0], 'clientY');\n            isPulling = true;\n          }\n        } catch (err) {\n          logger.error('[setupPullToRefresh][onTouchStart]', err, { context: CONTEXT });\n        }\n      };\n\n      const onTouchMove = (e) => {\n        try {\n          if (!isPulling) return;\n          const touches = domAPI.getProperty(e, 'touches');\n          currentY = domAPI.getProperty(touches[0], 'clientY');\n          const pullDistance = currentY - startY;\n\n          // Only allow pulling down, not up\n          if (pullDistance <= 0) {\n            isPulling = false;\n            return;\n          }\n\n          // Apply resistance to the pull\n          const resistance = 0.4;\n          const transformY = Math.min(pullDistance * resistance, 80);\n\n          domAPI.setStyle(pullIndicator, 'transform', `translateY(${transformY}px)`);\n          domAPI.addClass(pullIndicator, 'visible');\n\n          // If pulled far enough, mark as ready to refresh\n          if (transformY > 60 && !refreshTriggered) {\n            domAPI.setInnerHTML(pullIndicator, sanitizer.sanitize(`\n              <div class=\"mobile-loading-indicator\"></div>\n              <span class=\"ml-2\">Release to refresh</span>\n            `));\n            refreshTriggered = true;\n          } else if (transformY <= 60 && refreshTriggered) {\n            domAPI.setInnerHTML(pullIndicator, sanitizer.sanitize(`\n              <div class=\"mobile-loading-indicator\"></div>\n              <span class=\"ml-2\">Pull to refresh</span>\n            `));\n            refreshTriggered = false;\n          }\n\n          // Prevent default scrolling\n          domAPI.preventDefault(e);\n        } catch (err) {\n          logger.error('[setupPullToRefresh][onTouchMove]', err, { context: CONTEXT });\n        }\n      };\n\n      const onTouchEnd = () => {\n        try {\n          if (!isPulling) return;\n\n          // If we pulled far enough, trigger refresh\n          if (refreshTriggered) {\n            domAPI.setInnerHTML(pullIndicator, sanitizer.sanitize(`\n              <div class=\"mobile-loading-indicator\"></div>\n              <span class=\"ml-2\">Refreshing...</span>\n            `));\n\n            // Reload conversation list data\n            const projectIdEl = domAPI.querySelector('[data-project-id]');\n            const DependencySystem = eventHandlers.DependencySystem;\n            if (projectIdEl && DependencySystem?.modules?.get('projectManager')) {\n              const projectId = domAPI.getDataAttribute(projectIdEl, 'projectId');\n              const projectManager = DependencySystem.modules.get('projectManager');\n              // Refresh conversations\n              projectManager.loadProjectConversations(projectId)\n                .finally(() => {\n                  browserService.setTimeout(() => {\n                    domAPI.setStyle(pullIndicator, 'transform', 'translateY(-50px)');\n                    domAPI.removeClass(pullIndicator, 'visible');\n                    isPulling = false;\n                    refreshTriggered = false;\n                  }, 1000);\n                });\n            } else {\n              browserService.setTimeout(() => {\n                domAPI.setStyle(pullIndicator, 'transform', 'translateY(-50px)');\n                domAPI.removeClass(pullIndicator, 'visible');\n                isPulling = false;\n                refreshTriggered = false;\n              }, 1000);\n            }\n          } else {\n            // Not pulled far enough, reset\n            domAPI.setStyle(pullIndicator, 'transform', 'translateY(-50px)');\n            domAPI.removeClass(pullIndicator, 'visible');\n          }\n          isPulling = false;\n          refreshTriggered = false;\n        } catch (err) {\n          logger.error('[setupPullToRefresh][onTouchEnd]', err, { context: CONTEXT });\n        }\n      };\n\n      // Track touch events with proper context tagging\n      eventHandlers.trackListener(\n        conversationsList,\n        'touchstart',\n        onTouchStart,\n        { context: CONTEXT }\n      );\n      eventHandlers.trackListener(\n        conversationsList,\n        'touchmove',\n        onTouchMove,\n        { context: CONTEXT }\n      );\n      eventHandlers.trackListener(\n        conversationsList,\n        'touchend',\n        onTouchEnd,\n        { context: CONTEXT }\n      );\n    } catch (error) {\n      logger.error('[setupPullToRefresh]', error, { context: 'project-details:pull-to-refresh' });\n    }\n  }\n\n  /**\n   * Apply all enhancements\n   */\n  async function initialize() {\n    try {\n      // First check if we're on the project details page\n      const isProjectDetailsPage = !!domAPI.querySelector('.project-details-root');\n\n      // Or if we're on the project list page\n      const isProjectListPage = !!domAPI.getElementById('projectList');\n\n      if (isProjectDetailsPage && !state.initialized) {\n        // Wait for DOM to be ready for project details\n        await domReadinessService.dependenciesAndElements({\n          domSelectors: ['.project-details-root'],\n          context: CONTEXT\n        });\n\n        // Apply project details enhancements\n        addFloatingActionButton();\n        enhanceEmptyStates();\n        setupTabTracking();\n\n        // Mobile-specific enhancements\n        if (browserService && browserService.isMobile) {\n          setupPullToRefresh();\n\n          // Improve touch target sizes for mobile\n          domAPI.querySelectorAll('.btn, button').forEach(btn => {\n            if (!btn.classList.contains('btn-lg') && !btn.classList.contains('project-fab')) {\n              btn.style.minHeight = '44px'; // Ensure minimum touch target size\n            }\n          });\n        }\n\n        state.initialized = true;\n        logger.debug('[ProjectEnhancements] Project details initialized successfully', { context: CONTEXT });\n      }\n\n      if (isProjectListPage && !state.projectListInitialized) {\n        // Initialize project list enhancements\n        await initializeProjectList();\n      }\n    } catch (error) {\n      logger.error('[initialize]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Clean up event listeners and references\n   */\n  function cleanup() {\n    eventHandlers.cleanupListeners({ context: CONTEXT });\n  }\n\n  // Return public API\n  return {\n    initialize,\n    cleanup\n  };\n}\n\n// Export the factory function\nexport { createProjectDetailsEnhancements };\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 31147,
          "_transferSize": 32330,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.562Z",
        "time": 810.2280000020983,
        "timings": {
          "blocked": 704.9550000110631,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07500000000004547,
          "wait": 103.70300000151713,
          "receive": 1.4949999895179644,
          "_blocked_queueing": 4.804000011063181,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106591",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 53
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/tokenStatsManager.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1466,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "22453"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"b033d76d796385f3011866f6dc0962d6\""
            },
            {
              "name": "last-modified",
              "value": "Thu, 22 May 2025 08:56:18 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 22453,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * tokenStatsManager.js\n *\n * Manages token usage statistics display and interaction in the UI.\n * Follows all code guardrails - exports factory function only,\n * dependency injection, proper event tracking, and sanitization.\n */\n\nexport function createTokenStatsManager({\n  apiClient,\n  domAPI,\n  eventHandlers,\n  browserService,\n  modalManager,\n  sanitizer,\n  logger,\n  projectManager,\n  app,\n  chatManager,\n  domReadinessService\n} = {}) {\n  const MODULE_CONTEXT = 'tokenStatsManager';\n\n  // Validate required dependencies\n  if (!apiClient) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: apiClient`);\n  if (!domAPI) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: domAPI`);\n  if (!eventHandlers) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: eventHandlers`);\n  if (!sanitizer) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: sanitizer`);\n  if (!logger) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: logger`);\n  if (!modalManager) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: modalManager`);\n  if (!domReadinessService)\n    throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: domReadinessService`);\n\n  // Module state\n  const state = {\n    initialized: false,\n    initializing: null,\n    currentProject: null,\n    currentConversation: null,\n    statsData: {\n      project: {\n        tokenUsage: 0,\n        maxTokens: 200000\n      },\n      conversation: {\n        contextTokenUsage: 0,\n        messageCount: 0,\n        userMsgTokens: 0,\n        aiMsgTokens: 0,\n        systemMsgTokens: 0,\n        knowledgeTokens: 0,\n        totalTokens: 0\n      }\n    }\n  };\n\n  /**\n   * Safe logging wrapper functions\n   */\n  function _logInfo(msg, meta = {}) {\n    try { logger.info(`[${MODULE_CONTEXT}] ${msg}`, { context: MODULE_CONTEXT, ...meta }); }\n    catch (e) {\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Failed to log info`, e, { context: MODULE_CONTEXT, ...meta });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log info (secondary catch)`, logErr, { context: MODULE_CONTEXT, ...meta });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  function _logError(message, err, meta = {}) {\n    try {\n      const details = err instanceof Error\n        ? { message: err.message, stack: err.stack }\n        : { error: err };\n      logger.error(\n        `[${MODULE_CONTEXT}] ${message}`,\n        { ...details, context: MODULE_CONTEXT, ...meta }\n      );\n    } catch (logErr) {\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Failed to log error`, logErr, { context: MODULE_CONTEXT, ...meta });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error (secondary catch)`, logErr, { context: MODULE_CONTEXT, ...meta });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  /**\n   * Safe event handler wrapper\n   */\n  function safeHandler(fn, description) {\n    return (...args) => {\n      try {\n        return fn(...args);\n      } catch (err) {\n        _logError(`Error in handler [${description}]`, err);\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Exception in safeHandler [${description}]`, err, { context: MODULE_CONTEXT });\n        } catch (logErr) {\n          try {\n            logger.error(`[${MODULE_CONTEXT}] Failed to log error in safeHandler`, logErr, { context: MODULE_CONTEXT });\n          } catch (finalErr) {\n            // If logging fails, do nothing further to avoid infinite loop\n          }\n        }\n        throw err;\n      }\n    };\n  }\n\n  /**\n   * Initialize the token stats manager\n   */\n  async function initialize() {\n    if (state.initialized) return;\n    if (state.initializing) return state.initializing;\n\n    state.initializing = (async () => {\n      try {\n        _logInfo('Initializing token stats manager');\n\n        const requiredSel = [\n          '#tokenUsageStat',\n          '#tokenStatsBtn',\n          '#tokenStatsCurrentUsage'\n        ];\n\n        try {\n          await domReadinessService.elementsReady(requiredSel, {\n            observeMutations: true,          // handle late template injection\n            timeout: 8000,\n            context: MODULE_CONTEXT + '::init'\n          });\n        } catch (err) {\n          _logInfo('Token-stats UI not yet present – deferring initialization', {\n            missing: requiredSel\n          });\n          state.initializing = null;   // allow future retries\n          return false;                // non-fatal\n        }\n\n        // Bind event listeners\n        _bindEventListeners();\n\n        // Initialize modal functionality\n        _initializeTokenStatsModal();\n\n        state.initialized = true;\n        _logInfo('Token stats manager initialized');\n      } catch (err) {\n        _logError('Failed to initialize token stats manager', err);\n      } finally {\n        state.initializing = null;\n      }\n    })();\n\n    return state.initializing;\n  }\n\n  /**\n   * Bind event listeners for token stats interactions\n   */\n  function _bindEventListeners() {\n    const doc = domAPI.getDocument();\n\n    // Clean up any existing listeners\n    eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n\n    // Token usage stat click in project details\n    const tokenUsageStat = domAPI.getElementById('tokenUsageStat');\n    if (tokenUsageStat) {\n      eventHandlers.trackListener(\n        tokenUsageStat,\n        'click',\n        safeHandler(() => {\n          _showTokenStatsModal();\n        }, 'tokenUsageStatClick'),\n        { context: MODULE_CONTEXT }\n      );\n    }\n\n    // Token stats button in chat UI dropdown\n    const tokenStatsBtn = domAPI.getElementById('tokenStatsBtn');\n    if (tokenStatsBtn) {\n      eventHandlers.trackListener(\n        tokenStatsBtn,\n        'click',\n        safeHandler(() => {\n          _showTokenStatsModal();\n        }, 'tokenStatsBtnClick'),\n        { context: MODULE_CONTEXT }\n      );\n    }\n\n    // Listen for conversation changes to update stats\n    eventHandlers.trackListener(\n      doc,\n      'chat:conversationChanged',\n      safeHandler((e) => {\n        if (e.detail && e.detail.conversationId) {\n          state.currentConversation = e.detail.conversationId;\n          fetchConversationTokenStats(e.detail.conversationId);\n        }\n      }, 'conversationChangedEvent'),\n      { context: MODULE_CONTEXT }\n    );\n\n    // Listen for new messages to update stats\n    eventHandlers.trackListener(\n      doc,\n      'chat:messageSent',\n      safeHandler((e) => {\n        if (state.currentConversation) {\n          fetchConversationTokenStats(state.currentConversation);\n        }\n      }, 'messageSentEvent'),\n      { context: MODULE_CONTEXT }\n    );\n\n    // Listen for project changes to update stats\n    eventHandlers.trackListener(\n      doc,\n      'projectLoaded',\n      safeHandler((e) => {\n        if (e.detail && e.detail.project && e.detail.project.id) {\n          state.currentProject = e.detail.project;\n          _updateProjectTokenStats(e.detail.project);\n        }\n      }, 'projectLoadedEvent'),\n      { context: MODULE_CONTEXT }\n    );\n  }\n\n  /**\n   * Initialize token stats modal\n   */\n  function _initializeTokenStatsModal() {\n    const closeBtn = domAPI.getElementById('closeTokenStatsModalBtn');\n    const exportBtn = domAPI.getElementById('exportTokenStatsBtn');\n\n    if (closeBtn) {\n      try {\n        eventHandlers.trackListener(\n          closeBtn,\n          'click',\n          safeHandler(() => {\n            modalManager.hideModal('tokenStats');\n          }, 'closeTokenStatsModal'),\n          { context: MODULE_CONTEXT }\n        );\n      } catch (err) {\n        _logError('Failed to bind closeTokenStatsModalBtn event', err);\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Exception in _initializeTokenStatsModal (closeBtn)`, err, { context: MODULE_CONTEXT });\n        } catch (logErr) {\n          try {\n            logger.error(`[${MODULE_CONTEXT}] Failed to log error in _initializeTokenStatsModal (closeBtn)`, logErr, { context: MODULE_CONTEXT });\n          } catch (finalErr) {\n            // If logging fails, do nothing further to avoid infinite loop\n          }\n        }\n      }\n    }\n\n    if (exportBtn) {\n      try {\n        eventHandlers.trackListener(\n          exportBtn,\n          'click',\n          safeHandler(() => {\n            _exportTokenStats();\n          }, 'exportTokenStats'),\n          { context: MODULE_CONTEXT }\n        );\n      } catch (err) {\n        _logError('Failed to bind exportTokenStatsBtn event', err);\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Exception in _initializeTokenStatsModal (exportBtn)`, err, { context: MODULE_CONTEXT });\n        } catch (logErr) {\n          try {\n            logger.error(`[${MODULE_CONTEXT}] Failed to log error in _initializeTokenStatsModal (exportBtn)`, logErr, { context: MODULE_CONTEXT });\n          } catch (finalErr) {\n            // If logging fails, do nothing further to avoid infinite loop\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Show the token stats modal\n   */\n  function _showTokenStatsModal() {\n    try {\n      // Update stats in the modal\n      _updateTokenStatsModal();\n\n      // Show the modal\n      modalManager.showModal('tokenStats');\n\n      // If we have a current conversation, refresh the data\n      if (state.currentConversation) {\n        fetchConversationTokenStats(state.currentConversation);\n      }\n    } catch (err) {\n      _logError('Failed to show token stats modal', err);\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Exception in _showTokenStatsModal`, err, { context: MODULE_CONTEXT });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error in _showTokenStatsModal`, logErr, { context: MODULE_CONTEXT });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  /**\n   * Update project token stats display\n   */\n  function _updateProjectTokenStats(project) {\n    if (!project) return;\n\n    try {\n      // Update state\n      state.statsData.project.tokenUsage = project.token_usage || 0;\n      state.statsData.project.maxTokens = project.max_tokens || 200000;\n\n      // Update UI\n      const tokenUsageEl = domAPI.getElementById('tokenUsage');\n      const maxTokensEl = domAPI.getElementById('maxTokens');\n      const tokenPercentageEl = domAPI.getElementById('tokenPercentage');\n      const tokenProgressBarEl = domAPI.getElementById('tokenProgressBar');\n\n      if (tokenUsageEl) tokenUsageEl.textContent = state.statsData.project.tokenUsage.toLocaleString();\n      if (maxTokensEl) maxTokensEl.textContent = state.statsData.project.maxTokens.toLocaleString();\n\n      // Calculate percentage\n      const percentage = state.statsData.project.maxTokens > 0\n        ? Math.min(100, Math.round((state.statsData.project.tokenUsage / state.statsData.project.maxTokens) * 100))\n        : 0;\n\n      if (tokenPercentageEl) tokenPercentageEl.textContent = `${percentage}%`;\n      if (tokenProgressBarEl) {\n        tokenProgressBarEl.value = percentage;\n        tokenProgressBarEl.max = 100;\n      }\n\n      // Update dropdown stats\n      const projectTokenLimitEl = domAPI.getElementById('projectTokenLimit');\n      if (projectTokenLimitEl) {\n        projectTokenLimitEl.textContent = state.statsData.project.maxTokens.toLocaleString();\n      }\n\n      // Update total tokens in dropdown\n      const totalTokenCountEl = domAPI.getElementById('totalTokenCount');\n      if (totalTokenCountEl) {\n        totalTokenCountEl.textContent = state.statsData.project.tokenUsage.toLocaleString();\n      }\n    } catch (err) {\n      _logError('Failed to update project token stats', err);\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Exception in _updateProjectTokenStats`, err, { context: MODULE_CONTEXT });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error in _updateProjectTokenStats`, logErr, { context: MODULE_CONTEXT });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the token stats modal with current data\n   */\n  function _updateTokenStatsModal() {\n    try {\n      // Project usage stats\n      const currentUsageEl = domAPI.getElementById('tokenStatsCurrentUsage');\n      const projectLimitEl = domAPI.getElementById('tokenStatsProjectLimit');\n      const percentageEl = domAPI.getElementById('tokenStatsPercentage');\n      const progressBarEl = domAPI.getElementById('tokenStatsProgressBar');\n\n      if (currentUsageEl) currentUsageEl.textContent = state.statsData.project.tokenUsage.toLocaleString();\n      if (projectLimitEl) projectLimitEl.textContent = state.statsData.project.maxTokens.toLocaleString();\n\n      // Calculate percentage\n      const percentage = state.statsData.project.maxTokens > 0\n        ? Math.min(100, Math.round((state.statsData.project.tokenUsage / state.statsData.project.maxTokens) * 100))\n        : 0;\n\n      if (percentageEl) percentageEl.textContent = `${percentage}%`;\n      if (progressBarEl) {\n        progressBarEl.value = percentage;\n        progressBarEl.max = 100;\n      }\n\n      // Conversation stats\n      const contextUsageEl = domAPI.getElementById('tokenStatsContextUsage');\n      const messageCountEl = domAPI.getElementById('tokenStatsMessageCount');\n      const avgPerMessageEl = domAPI.getElementById('tokenStatsAvgPerMessage');\n\n      if (contextUsageEl) contextUsageEl.textContent = state.statsData.conversation.contextTokenUsage.toLocaleString();\n      if (messageCountEl) messageCountEl.textContent = state.statsData.conversation.messageCount.toLocaleString();\n\n      // Calculate average tokens per message\n      const avgTokens = state.statsData.conversation.messageCount > 0\n        ? Math.round(state.statsData.conversation.totalTokens / state.statsData.conversation.messageCount)\n        : 0;\n\n      if (avgPerMessageEl) avgPerMessageEl.textContent = avgTokens.toLocaleString();\n\n      // Token breakdown\n      const userMsgTokensEl = domAPI.getElementById('tokenStatsUserMsgTokens');\n      const userMsgPercentEl = domAPI.getElementById('tokenStatsUserMsgPercent');\n      const aiMsgTokensEl = domAPI.getElementById('tokenStatsAIMsgTokens');\n      const aiMsgPercentEl = domAPI.getElementById('tokenStatsAIMsgPercent');\n      const systemMsgTokensEl = domAPI.getElementById('tokenStatsSystemMsgTokens');\n      const systemMsgPercentEl = domAPI.getElementById('tokenStatsSystemMsgPercent');\n      const knowledgeTokensEl = domAPI.getElementById('tokenStatsKnowledgeTokens');\n      const knowledgePercentEl = domAPI.getElementById('tokenStatsKnowledgePercent');\n      const totalTokensEl = domAPI.getElementById('tokenStatsTotalTokens');\n\n      if (userMsgTokensEl) userMsgTokensEl.textContent = state.statsData.conversation.userMsgTokens.toLocaleString();\n      if (aiMsgTokensEl) aiMsgTokensEl.textContent = state.statsData.conversation.aiMsgTokens.toLocaleString();\n      if (systemMsgTokensEl) systemMsgTokensEl.textContent = state.statsData.conversation.systemMsgTokens.toLocaleString();\n      if (knowledgeTokensEl) knowledgeTokensEl.textContent = state.statsData.conversation.knowledgeTokens.toLocaleString();\n      if (totalTokensEl) totalTokensEl.textContent = state.statsData.conversation.totalTokens.toLocaleString();\n\n      // Calculate percentages\n      const totalTokens = state.statsData.conversation.totalTokens || 1; // Avoid division by zero\n\n      const userPercent = Math.round((state.statsData.conversation.userMsgTokens / totalTokens) * 100);\n      const aiPercent = Math.round((state.statsData.conversation.aiMsgTokens / totalTokens) * 100);\n      const systemPercent = Math.round((state.statsData.conversation.systemMsgTokens / totalTokens) * 100);\n      const knowledgePercent = Math.round((state.statsData.conversation.knowledgeTokens / totalTokens) * 100);\n\n      if (userMsgPercentEl) userMsgPercentEl.textContent = `${userPercent}%`;\n      if (aiMsgPercentEl) aiMsgPercentEl.textContent = `${aiPercent}%`;\n      if (systemMsgPercentEl) systemMsgPercentEl.textContent = `${systemPercent}%`;\n      if (knowledgePercentEl) knowledgePercentEl.textContent = `${knowledgePercent}%`;\n    } catch (err) {\n      _logError('Failed to update token stats modal', err);\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Exception in _updateTokenStatsModal`, err, { context: MODULE_CONTEXT });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error in _updateTokenStatsModal`, logErr, { context: MODULE_CONTEXT });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  /**\n   * Export token stats as CSV\n   */\n  function _exportTokenStats() {\n    try {\n      // Create CSV content\n      const csvContent = [\n        'Category,Item,Value',\n        `Project,Token Usage,${state.statsData.project.tokenUsage}`,\n        `Project,Max Tokens,${state.statsData.project.maxTokens}`,\n        `Project,Usage Percentage,${Math.round((state.statsData.project.tokenUsage / state.statsData.project.maxTokens) * 100)}%`,\n        `Conversation,Context Tokens,${state.statsData.conversation.contextTokenUsage}`,\n        `Conversation,Message Count,${state.statsData.conversation.messageCount}`,\n        `Conversation,Avg Tokens per Message,${state.statsData.conversation.messageCount > 0 ? Math.round(state.statsData.conversation.totalTokens / state.statsData.conversation.messageCount) : 0}`,\n        `Breakdown,User Messages Tokens,${state.statsData.conversation.userMsgTokens}`,\n        `Breakdown,AI Responses Tokens,${state.statsData.conversation.aiMsgTokens}`,\n        `Breakdown,System Messages Tokens,${state.statsData.conversation.systemMsgTokens}`,\n        `Breakdown,Knowledge Context Tokens,${state.statsData.conversation.knowledgeTokens}`,\n        `Breakdown,Total Tokens,${state.statsData.conversation.totalTokens}`\n      ].join('\\n');\n\n      // Create download link\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n      const url = URL.createObjectURL(blob);\n\n      // Create and trigger download\n      const link = domAPI.createElement('a');\n      link.setAttribute('href', url);\n      link.setAttribute('download', `token_stats_${new Date().toISOString().split('T')[0]}.csv`);\n      link.style.display = 'none';\n\n      domAPI.appendChild(domAPI.getDocument().body, link);\n      link.click();\n\n      // Clean up\n      browserService.setTimeout(() => {\n        URL.revokeObjectURL(url);\n        if (link.parentNode) {\n          domAPI.removeChild(link.parentNode, link);\n        }\n      }, 100);\n    } catch (err) {\n      _logError('Failed to export token stats', err);\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Exception in _exportTokenStats`, err, { context: MODULE_CONTEXT });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error in _exportTokenStats`, logErr, { context: MODULE_CONTEXT });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  /**\n   * Fetch token statistics for a conversation\n   */\n  async function fetchConversationTokenStats(conversationId) {\n    if (!conversationId) return;\n\n    try {\n      // Get current project ID\n      const projectId = state.currentProject?.id || projectManager?.getCurrentProject()?.id;\n      if (!projectId) {\n        _logError('No project ID available for token stats', new Error('Missing project ID'));\n        return;\n      }\n\n      // Make API request\n      const response = await apiClient(`/api/projects/${projectId}/conversations/${conversationId}/token-stats`);\n\n      if (!response) {\n        _logError('Empty response from token stats API', new Error('Empty response'));\n        return;\n      }\n\n      // Update state with conversation stats\n      state.statsData.conversation = {\n        contextTokenUsage: response.context_token_usage || 0,\n        messageCount: response.message_count || 0,\n        userMsgTokens: response.user_msg_tokens || 0,\n        aiMsgTokens: response.ai_msg_tokens || 0,\n        systemMsgTokens: response.system_msg_tokens || 0,\n        knowledgeTokens: response.knowledge_tokens || 0,\n        totalTokens: response.total_tokens || 0\n      };\n\n      // Update conversation token count in header\n      const conversationTokenCountEl = domAPI.getElementById('conversationTokenCount');\n      if (conversationTokenCountEl) {\n        conversationTokenCountEl.textContent = state.statsData.conversation.contextTokenUsage.toLocaleString();\n      }\n\n      // Update context token count in dropdown\n      const contextTokenCountEl = domAPI.getElementById('contextTokenCount');\n      if (contextTokenCountEl) {\n        contextTokenCountEl.textContent = state.statsData.conversation.contextTokenUsage.toLocaleString();\n      }\n\n      // If modal is open, update it\n      _updateTokenStatsModal();\n\n      _logInfo('Updated conversation token stats', { conversationId });\n    } catch (err) {\n      _logError('Failed to fetch conversation token stats', err, { conversationId });\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Exception in fetchConversationTokenStats`, err, { context: MODULE_CONTEXT, conversationId });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error in fetchConversationTokenStats`, logErr, { context: MODULE_CONTEXT, conversationId });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  /**\n   * Set the current input token count\n   */\n  function setInputTokenCount(count) {\n    const liveTokenCountEl = domAPI.getElementById('liveTokenCount');\n    if (liveTokenCountEl) {\n      liveTokenCountEl.textContent = count.toLocaleString();\n    }\n  }\n\n  /**\n   * Cleanup function\n   */\n  function cleanup() {\n    eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n    state.initialized = false;\n    _logInfo('Token stats manager cleaned up');\n  }\n\n  // Public API\n  return {\n    initialize,\n    fetchConversationTokenStats,\n    setInputTokenCount,\n    cleanup\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 22453,
          "_transferSize": 23636,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.562Z",
        "time": 809.5489999977872,
        "timings": {
          "blocked": 707.9589999997299,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.05999999999994543,
          "wait": 99.98599999922703,
          "receive": 1.5439999988302588,
          "_blocked_queueing": 4.8349999997299165,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106592",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 55
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/modalConstants.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1463,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "903"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"d9943b11995737291e7f68507a76f227\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 903,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * modalConstants.js\n * Centralized modal mapping contract for the application.\n * \n * This file defines the single source of truth for all modal logical keys and their corresponding DOM element IDs.\n * \n * When adding or modifying a modal, update this mapping and ensure the HTML template matches.\n * \n * Usage:\n *   import { MODAL_MAPPINGS } from './modalConstants.js';\n *   // or via DependencySystem: DependencySystem.modules.get('modalMapping')\n */\n\nexport const MODAL_MAPPINGS = {\n  project        : 'projectModal',\n  login          : 'loginModal',\n  delete         : 'deleteConfirmModal',\n  confirm        : 'confirmActionModal',\n  error          : 'errorModal',            // ← NUEVO\n  knowledge      : 'knowledgeBaseSettingsModal',\n  knowledgeResult: 'knowledgeResultModal',\n  instructions   : 'instructionsModal',\n  contentView    : 'contentViewModal'\n};\n\nexport default MODAL_MAPPINGS;\n"
          },
          "redirectURL": "",
          "headersSize": 1181,
          "bodySize": 903,
          "_transferSize": 2084,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.562Z",
        "time": 809.7940000006929,
        "timings": {
          "blocked": 719.9320000041463,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.12199999999995725,
          "wait": 88.91099999966286,
          "receive": 0.8289999968837947,
          "_blocked_queueing": 4.977000004146248,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 56
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/FileUploadComponent.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1468,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "13045"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"f91f9da662a31c66cfa93b0490cd912d\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 00:05:30 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13045,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module FileUploadComponent\n * @description Handles file upload UI and logic for projects using strict Dependency Injection.\n * Manages drag-and-drop, file selection, validation, and upload progress display.\n *\n * @param {Object} deps - Dependency Injection options.\n * @param {Object} deps.app - Required. App core utilities (validateUUID).\n * @param {Object} deps.eventHandlers - Required. Event listener management (trackListener).\n * @param {Object} deps.projectManager - Required. Handles the actual file upload API calls.\n * @param {Object} deps.domAPI - Required. DOM manipulation abstraction.\n * @param {Object} deps.logger - Required. Logging utility.\n * @param {Object} [deps.domReadinessService] - Optional. DOM readiness service.\n * @param {Object} [deps.scheduler] - Optional. Timing utilities (setTimeout, clearTimeout).\n * @param {string} [deps.projectId] - Optional initial project ID.\n * @param {Function} [deps.onUploadComplete] - Optional callback after uploads finish.\n * @param {Object} [deps.elements] - Optional pre-resolved DOM element references.\n * @returns {Object} FileUploadComponent API.\n */\n\nconst MODULE_CONTEXT = \"FileUploadComponentContext\";\n\nexport function createFileUploadComponent({\n  app,\n  eventHandlers,\n  projectManager,\n  domAPI,\n  logger,\n  domReadinessService,\n  scheduler,\n  projectId,\n  onUploadComplete,\n  elements\n} = {}) {\n  // --- Attempt auto-resolution of `logger` when not injected ---\n  if (!logger) {\n    try {\n      const ds = eventHandlers?.DependencySystem;\n      logger = ds?.modules?.get?.('logger');\n    } catch { /* ignore – will be re-checked below */ }\n  }\n  // === Dependency validation block ===\n  if (!app) throw new Error(\"[FileUploadComponent] Missing app\");\n  if (!eventHandlers) throw new Error(\"[FileUploadComponent] Missing eventHandlers\");\n  if (!projectManager) throw new Error(\"[FileUploadComponent] Missing projectManager\");\n  if (!domAPI) throw new Error(\"[FileUploadComponent] Missing domAPI\");\n  if (!logger) throw new Error(\"[FileUploadComponent] Missing logger\");\n  // domReadinessService and scheduler are optional\n\n  // --- Configuration ---\n  const fileConstants = {\n    allowedExtensions: ['.txt', '.md', '.csv', '.json', '.pdf', '.doc', '.docx', '.py', '.js', '.html', '.css', '.ini'],\n    maxSizeMB: 30\n  };\n\n  // --- Elements (Lookup via domAPI on init) ---\n  const _elements = {\n    fileInput: null, uploadBtn: null, dragZone: null,\n    uploadProgress: null, progressBar: null, uploadStatus: null,\n    selectors: {\n      fileInput: elements?.fileInput || '#fileInput',\n      uploadBtn: elements?.uploadBtn || '#uploadFileBtn',\n      dragZone: elements?.dragZone || '#dragDropZone',\n      uploadProgress: elements?.uploadProgress || '#filesUploadProgress',\n      progressBar: elements?.progressBar || '#fileProgressBar',\n      uploadStatus: elements?.uploadStatus || '#uploadStatus'\n    }\n  };\n\n  let _projectId = projectId || null;\n  let _onUploadComplete = typeof onUploadComplete === 'function' ? onUploadComplete : () => {};\n  let uploadState = { total: 0, completed: 0, failed: 0 };\n  let _handlersBound = false;\n\n  // Deterministic timers (DI-friendly)\n  const _scheduler = scheduler || { setTimeout, clearTimeout };\n\n  // --- API Methods ---\n\n  function setProjectId(pid) {\n    _projectId = pid;\n  }\n\n  async function init() {\n    if (_handlersBound) return;\n    try {\n      if (domReadinessService) {\n        // Only pass string selectors, not DOM element objects\n        const stringSelectors = Object.values(_elements.selectors).filter(\n          selector => typeof selector === 'string'\n        );\n        if (stringSelectors.length > 0) {\n          await domReadinessService.dependenciesAndElements({\n            domSelectors: stringSelectors,\n            context: MODULE_CONTEXT + '::init'\n          });\n        }\n      }\n      if (!_findElements()) {\n        logger.error('[FileUploadComponent] Required DOM elements not found', {\n          context: MODULE_CONTEXT, projectId: _projectId || 'unknown'\n        });\n        throw new Error('[FileUploadComponent] Initialization failed: required DOM elements not found');\n      }\n      _bindEvents();\n      _handlersBound = true;\n\n      // Standardized \"fileuploadcomponent:initialized\" event\n      const doc = domAPI?.getDocument?.() || (typeof document !== \"undefined\" ? document : null);\n      if (doc) {\n        if (domAPI?.dispatchEvent) {\n          domAPI.dispatchEvent(doc,\n            new CustomEvent('fileuploadcomponent:initialized',\n              { detail: { success: true } }));\n        } else {\n          doc.dispatchEvent(new CustomEvent('fileuploadcomponent:initialized',\n            { detail: { success: true } }));\n        }\n      }\n    } catch (error) {\n      logger.error('[FileUploadComponent][init] Initialization failed', error, { context: MODULE_CONTEXT });\n      throw error;\n    }\n  }\n\n  function _findElements() {\n    const els = _elements;\n    const sources = els.selectors;\n    const elementKeys = [\n      'fileInput',\n      'uploadBtn',\n      'dragZone',\n      'uploadProgress',\n      'progressBar',\n      'uploadStatus'\n    ];\n\n    for (const key of elementKeys) {\n      const value = sources[key];\n\n      if (\n        typeof value === \"object\" &&\n        value !== null &&\n        typeof value.nodeType === \"number\"\n      ) {\n        els[key] = value;\n      } else if (typeof value === \"string\") {\n        els[key] = domAPI.querySelector(value);\n      } else {\n        els[key] = null;\n      }\n    }\n\n    if (\n      !(\n        els.fileInput &&\n        els.uploadBtn &&\n        els.dragZone &&\n        els.uploadProgress &&\n        els.progressBar &&\n        els.uploadStatus\n      )\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  function _bindEvents() {\n    const { fileInput, uploadBtn, dragZone } = _elements;\n    const EH = eventHandlers;\n\n    const track = (el, type, handler, description) => {\n      if (!el) return;\n      EH.trackListener(el, type, handler, {\n        description: `FileUpload: ${description}`,\n        module: 'FileUploadComponent',\n        context: MODULE_CONTEXT\n      });\n    };\n\n    // File input\n    track(fileInput, 'change', (e) => _handleFileSelection(e), 'File Input Change');\n\n    // Upload button\n    track(uploadBtn, 'click', () => fileInput?.click(), 'Upload Button Click');\n\n    // Drag-n-drop\n    if (dragZone) {\n      [\"dragenter\", \"dragover\", \"dragleave\", \"drop\"].forEach(eventName => {\n        track(dragZone, eventName, (e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (eventName === 'dragenter' || eventName === 'dragover') {\n            dragZone.classList.add('border-primary');\n          } else {\n            dragZone.classList.remove('border-primary');\n            if (eventName === 'drop') {\n              _handleFileDrop(e);\n            }\n          }\n        }, `DragZone ${eventName}`);\n      });\n      track(dragZone, 'click', () => fileInput?.click(), 'DragZone Click');\n    }\n  }\n\n  function destroy() {\n    if (eventHandlers && typeof eventHandlers.cleanupListeners === 'function') {\n      eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n    }\n    _handlersBound = false;\n  }\n\n  function cleanup() {\n    destroy();\n  }\n\n  function initialize(...args) {\n    return init(...args);\n  }\n\n  function _handleFileSelection(e) {\n    const files = e.target?.files;\n    if (!files || files.length === 0) return;\n    _uploadFiles(files);\n    if (e.target) e.target.value = null;\n  }\n\n  function _handleFileDrop(e) {\n    const files = e.dataTransfer?.files;\n    if (!files || files.length === 0) return;\n    _uploadFiles(files);\n  }\n\n  async function _uploadFiles(files) {\n    const pid = _projectId || app.getProjectId?.();\n    if (!pid || !app.validateUUID?.(pid)) {\n      logger.error('[FileUploadComponent][_uploadFiles] Invalid or missing projectId', { context: MODULE_CONTEXT });\n      return;\n    }\n\n    const { validFiles, invalidFiles } = _validateFiles(files);\n\n    invalidFiles.forEach(({ file, error }) => {\n      logger.error('[FileUploadComponent][_uploadFiles] Invalid file', {\n        fileName: file?.name,\n        error,\n        context: MODULE_CONTEXT\n      });\n    });\n\n    if (validFiles.length === 0) {\n      return;\n    }\n\n    _setupUploadProgress(validFiles.length);\n\n    // Batching logic remains the same\n    const BATCH_SIZE = 3;\n    for (let i = 0; i < validFiles.length; i += BATCH_SIZE) {\n      const batch = validFiles.slice(i, i + BATCH_SIZE);\n      await Promise.all(batch.map(file => _uploadFile(pid, file)));\n    }\n\n    if (typeof _onUploadComplete === 'function') {\n      _onUploadComplete();\n    }\n  }\n\n  async function _uploadFile(pid, file) {\n    try {\n      if (typeof projectManager.uploadFileWithRetry !== \"function\") {\n        throw new Error('projectManager.uploadFileWithRetry function not available');\n      }\n      await projectManager.uploadFileWithRetry(pid, { file });\n      _updateUploadProgress(1, 0);\n    } catch (error) {\n      logger.error('[FileUploadComponent][_uploadFile] Upload failed', error, {\n        fileName: file?.name,\n        context: MODULE_CONTEXT\n      });\n      _updateUploadProgress(0, 1);\n    }\n  }\n\n  function _validateFiles(files) {\n    const { allowedExtensions, maxSizeMB } = fileConstants;\n    const validFiles = [];\n    const invalidFiles = [];\n    for (let file of files) {\n      // Replace forbidden characters and control chars with '_'\n      const sanitizedName = file.name\n        .split('')\n        .map(c => {\n          const code = c.charCodeAt(0);\n          // Forbidden: < > : \" / \\ | ? * # % whitespace, DEL, or ASCII control chars\n          if (\n            '<>:\"/\\\\|?*#%'.includes(c) ||\n            /\\s/.test(c) ||\n            code < 32 || code === 127\n          ) {\n            return '_';\n          }\n          return c;\n        })\n        .join('');\n      if (sanitizedName !== file.name) {\n        try {\n          const tempFile = new File([file], sanitizedName, { type: file.type });\n          file = tempFile;\n        } catch (err) {\n          logger.error('[FileUploadComponent][_validateFiles] File name sanitization failed', err, {\n            fileName: file?.name,\n            context: MODULE_CONTEXT\n          });\n          invalidFiles.push({ file: file, error: `Filename contains invalid characters` });\n          continue;\n        }\n      }\n\n      if (file.name.length === 0 || file.name === '.' || file.name === '..') {\n        invalidFiles.push({ file: file, error: `Invalid filename` });\n        continue;\n      }\n\n      const ext = file.name.includes('.') ? '.' + file.name.split('.').pop().toLowerCase() : '';\n      const isValidExt = allowedExtensions.includes(ext);\n      const isValidSize = file.size <= maxSizeMB * 1024 * 1024;\n\n      if (!isValidExt) {\n        invalidFiles.push({\n          file,\n          error: `Invalid file type (${ext || 'none'}). Allowed: ${allowedExtensions.join(', ')}`\n        });\n      } else if (!isValidSize) {\n        invalidFiles.push({\n          file,\n          error: `File too large (${(file.size / (1024 * 1024)).toFixed(1)}MB > ${maxSizeMB}MB)`\n        });\n      } else {\n        validFiles.push(file);\n      }\n    }\n    return { validFiles, invalidFiles };\n  }\n\n  function _setupUploadProgress(total) {\n    uploadState = { total, completed: 0, failed: 0 };\n    const { uploadProgress, progressBar, uploadStatus: statusEl } = _elements;\n    if (uploadProgress) domAPI.removeClass(uploadProgress, 'hidden');\n    if (progressBar) {\n      domAPI.setProperty(progressBar, 'value', 0);\n      domAPI.setProperty(progressBar, 'max', 100);\n      domAPI.setProperty(progressBar, 'className', 'progress progress-info');\n    }\n    if (statusEl) domAPI.setTextContent(statusEl, `Uploading 0/${total} files...`);\n  }\n\n  function _updateUploadProgress(successCount, failedCount) {\n    uploadState.completed += successCount;\n    uploadState.failed += failedCount;\n    const { total, completed, failed } = uploadState;\n    const { progressBar, uploadStatus: statusEl, uploadProgress } = _elements;\n\n    const percent = total > 0 ? Math.round((completed / total) * 100) : 0;\n\n    if (progressBar) {\n      domAPI.setProperty(progressBar, 'value', String(percent));\n\n      let newClassName = 'progress';\n      if (failed > 0) {\n        newClassName += (completed === total ? ' progress-error' : ' progress-warning');\n      } else if (completed === total) {\n        newClassName += ' progress-success';\n      } else {\n        newClassName += ' progress-info';\n      }\n      domAPI.setProperty(progressBar, 'className', newClassName);\n    }\n\n    if (statusEl) {\n      domAPI.setTextContent(statusEl, `Uploaded ${completed}/${total} files${failed > 0 ? ` (${failed} failed)` : ''}.`);\n    }\n\n    if (completed === total && uploadProgress) {\n      _scheduler.setTimeout(() => {\n        if (uploadProgress) domAPI.addClass(uploadProgress, 'hidden');\n      }, 2500);\n    }\n  }\n\n  // Expose API\n  return {\n    setProjectId,\n    init,\n    initialize,\n    destroy,\n    cleanup,\n    _handleFileSelection,\n    _handleFileDrop\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 13045,
          "_transferSize": 14228,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.562Z",
        "time": 818.267000009655,
        "timings": {
          "blocked": 764.990000002969,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.10599999999999454,
          "wait": 51.59499999702257,
          "receive": 1.576000009663403,
          "_blocked_queueing": 5.038000002969056,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106417",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/app.js",
          "lineNumber": 85
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/logger.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1455,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "2691"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"5c1cfcfe67151224648d8dcea6bb7a32\""
            },
            {
              "name": "last-modified",
              "value": "Thu, 22 May 2025 17:09:36 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2691,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * logger.js – Unified browser/server logger for DI\n * Logs to both browser console and a backend endpoint for terminal visibility.\n *\n * Usage (in app.js):\n *   import { createLogger } from './logger.js';\n *   const logger = createLogger({ endpoint: '/api/logs', enableServer: true, debug: ... });\n *   DependencySystem.register('logger', logger);\n */\n\nconst LVL = { debug: 10, info: 20, log: 20, warn: 30, error: 40, critical: 50, fatal: 60 };\n\nexport function createLogger({\n  endpoint = '/api/logs',\n  enableServer = true,\n  debug       = false,\n  context     = 'App',\n  minLevel    = 'info',           // default threshold\n  fetcher     = null,             // ← NEW injectable fetch\n  browserService = null,          // ← NEW optional DI\n  authModule = null               // ← NEW optional DI: AuthModule for auth check\n} = {}) {\n  const THRESHOLD = LVL[minLevel] ?? LVL.info;\n  async function send(level, args) {\n    if (!enableServer) return;\n    if (LVL[level] < THRESHOLD) return;          // NEW\n\n    // Only send logs to backend if authenticated (if authModule is provided)\n    if (authModule && typeof authModule.isAuthenticated === 'function' && !authModule.isAuthenticated()) {\n      // Optionally, could log to browser only\n      return;\n    }\n\n    try {\n      const _fetch =\n        fetcher ||\n        browserService?.fetch ||\n        (typeof window !== 'undefined' && window.fetch) ||\n        (typeof fetch === 'function' ? fetch : null);\n      if (!_fetch) return;                   // no fetch available\n\n      const response = await _fetch(endpoint, {\n        method : 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        credentials: 'include',                   // NEW – carry cookies / CSRF exempt\n        body   : JSON.stringify({ level, context, args, ts: Date.now() })\n      });\n      if (!response.ok) {\n        // Surface server-side log ingestion failures\n        console.warn(`[Logger] Server responded with ${response.status} for ${endpoint} (Level: ${level})`);\n      }\n    } catch (err) {\n      // Surface client-side failures (e.g., network down, CORS, 0 response)\n      console.warn(`[Logger] Fetch to ${endpoint} failed (Level: ${level}): ${err && err.message ? err.message : err}`);\n    }\n  }\n  function wrap(level, fn) {\n    return (...args) => {\n      fn(`[${context}]`, ...args);\n      // fire-and-forget, do not await to avoid blocking UI\n      send(level, args);\n    };\n  }\n  return {\n    log:   wrap('log',    console.log),\n    info:  wrap('info',   console.info),\n    warn:  wrap('warn',   console.warn),\n    error: wrap('error',  console.error),\n    debug: debug ? wrap('debug', console.debug) : () => {}\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1182,
          "bodySize": 2691,
          "_transferSize": 3873,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:46:59.562Z",
        "time": 818.3740000094986,
        "timings": {
          "blocked": 765.2370000023022,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07200000000000273,
          "wait": 51.87299999656341,
          "receive": 1.1920000106329098,
          "_blocked_queueing": 5.122000002302229,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106419",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/utils/globalUtils.js",
          "lineNumber": 24
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/utils/storageService.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/utils/globalUtils.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1483,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "1122"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"a932c1dbf94a3088a0184c45d4a00a5f\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 02:33:31 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1122,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * storageService.js — DI-safe localStorage wrapper (from globalUtils).\n * Uses browserService for access.\n *\n * Usage:\n *   import { createStorageService } from './storageService.js';\n *   const storage = createStorageService({ browserService, APP_CONFIG });\n */\n\nexport function createStorageService({ browserService, APP_CONFIG, logger, DependencySystem }) {\n  function safe(fn, fallback, ctx) {\n    try {\n      return fn();\n    } catch (err) {\n      const log = logger || DependencySystem?.modules?.get?.('logger');\n      log?.warn?.(`[storageService] ${ctx} failed`, err);\n      return fallback;\n    }\n  }\n\n  return {\n    getItem: (k) => safe(() => browserService.getItem(k), null, \"getItem\"),\n    setItem: (k, v) => safe(() => browserService.setItem(k, v), undefined, \"setItem\"),\n    removeItem: (k) => safe(() => browserService.removeItem(k), undefined, \"removeItem\"),\n    clear: () => safe(() => browserService.clear?.(), undefined, \"clear\"),\n    key: (n) => safe(() => browserService.key?.(n), null, \"key\"),\n    get length() {\n      return safe(() => browserService.length ?? 0, 0, \"length\");\n    },\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1182,
          "bodySize": 1122,
          "_transferSize": 2304,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:00.000Z",
        "time": 380.1099999982398,
        "timings": {
          "blocked": 326.96699999819697,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07400000000001228,
          "wait": 52.150999994857216,
          "receive": 0.9180000051856041,
          "_blocked_queueing": 0.4889999981969595,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106591",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/chat.js",
          "lineNumber": 0
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/chat-ui-utils.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/chat.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1463,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "13735"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"e3c1ccdfc05a84a114897088dac2caa3\""
            },
            {
              "name": "last-modified",
              "value": "Thu, 22 May 2025 08:44:15 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13735,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "// static/js/chat-ui-utils.js\nconst UI_CTX = 'chatManager:UI';\n\n/**\n * Factory for chat UI utilities. Enforces DI, logger, and event handler safety.\n */\nexport function createChatUIUtils(deps) {\n  // === FACTORY GUARDRAIL: STRICT DI VALIDATION (No fallback, throw immediately, BEFORE destructuring) ===\n  if (!deps) throw new Error('Missing deps');\n  if (!deps.logger) throw new Error('Missing logger');\n  if (!deps.domAPI) throw new Error('Missing domAPI');\n  if (!deps.DOMPurify) throw new Error('Missing DOMPurify');\n  if (!deps.eventHandlers) throw new Error('Missing eventHandlers');\n  if (!deps.domReadinessService) throw new Error('Missing domReadinessService');\n\n  const {\n    logger,\n    domAPI,\n    DOMPurify,\n    eventHandlers,\n    domReadinessService\n  } = deps;\n\n  function safeHandler(handler, description) {\n    return (...args) => {\n      try {\n        return handler(...args);\n      } catch (err) {\n        logger.error(`[ChatUIUtils][${description}] Handler exception`, err, { context: description });\n        throw err;\n      }\n    };\n  }\n\n  function attachChatUI(chatMgr) {\n    async function _setupUIElements() {\n      if (!domAPI) {\n        logger.error('[ChatUIUtils][_setupUIElements] domAPI is required for UI setup.', null, { context: UI_CTX });\n        chatMgr._handleError('_setupUIElements', new Error('domAPI is required for UI setup.'));\n        throw new Error('domAPI is required for UI setup.');\n      }\n\n      if (domReadinessService?.elementsReady) {\n        await domReadinessService.elementsReady(\n          [\n            chatMgr.containerSelector,\n            chatMgr.messageContainerSelector,\n            chatMgr.inputSelector,\n            chatMgr.sendButtonSelector\n          ],\n          {\n            timeout: chatMgr?.APP_CONFIG?.TIMEOUTS?.CHAT_UI_READY ?? 8000,\n            context: 'chatManager::UI::setup',\n            observeMutations: true\n          }\n        );\n      }\n\n      chatMgr.container = domAPI.querySelector(chatMgr.containerSelector);\n      if (!chatMgr.container) {\n        logger.error('[ChatUIUtils][_setupUIElements] Chat container not found', null, { context: UI_CTX });\n        throw new Error(`Chat container not found: ${chatMgr.containerSelector}`);\n      }\n\n      chatMgr.messageContainer = domAPI.querySelector(chatMgr.messageContainerSelector);\n      if (!chatMgr.messageContainer) {\n        chatMgr.messageContainer = domAPI.createElement('div');\n        chatMgr.messageContainer.id = chatMgr.messageContainerSelector.startsWith('#') ? chatMgr.messageContainerSelector.substring(1) : 'chatMessages';\n        domAPI.appendChild(chatMgr.container, chatMgr.messageContainer);\n      }\n\n      chatMgr.inputField = domAPI.querySelector(chatMgr.inputSelector);\n      if (!chatMgr.inputField) {\n        const inputArea = domAPI.createElement(\"div\");\n        inputArea.className = \"chat-input-area flex p-2 border-t border-base-300\";\n\n        chatMgr.inputField = domAPI.createElement(\"textarea\");\n        chatMgr.inputField.id = chatMgr.inputSelector.startsWith('#') ? chatMgr.inputSelector.substring(1) : 'chatInput';\n        chatMgr.inputField.className = \"flex-grow p-2 border rounded-l-md resize-none\";\n        chatMgr.inputField.placeholder = \"Type your message...\";\n        chatMgr.inputField.setAttribute(\"aria-label\", \"Chat input\");\n\n        chatMgr.sendButton = domAPI.createElement(\"button\");\n        chatMgr.sendButton.id = chatMgr.sendButtonSelector.startsWith('#') ? chatMgr.sendButtonSelector.substring(1) : 'sendBtn';\n        chatMgr.sendButton.className = \"p-2 bg-primary text-primary-content rounded-r-md\";\n        chatMgr.sendButton.textContent = \"Send\";\n        chatMgr.sendButton.setAttribute(\"aria-label\", \"Send message\");\n\n        domAPI.appendChild(inputArea, chatMgr.inputField);\n        domAPI.appendChild(inputArea, chatMgr.sendButton);\n        domAPI.appendChild(chatMgr.container, inputArea);\n      } else {\n        chatMgr.sendButton = domAPI.querySelector(chatMgr.sendButtonSelector);\n      }\n\n      chatMgr.titleElement = domAPI.querySelector(chatMgr.titleSelector);\n\n      if (chatMgr.minimizeButtonSelector) {\n        chatMgr.minimizeButton = domAPI.querySelector(chatMgr.minimizeButtonSelector);\n      }\n\n      if (chatMgr.container) domAPI.removeClass(chatMgr.container, 'hidden');\n    }\n\n    function _setupEventListeners() {\n      if (!eventHandlers || typeof eventHandlers.trackListener !== 'function') {\n        return;\n      }\n      if (typeof eventHandlers.cleanupListeners === 'function') {\n        eventHandlers.cleanupListeners({ context: UI_CTX });\n      }\n\n      if (chatMgr.sendButton && chatMgr.inputField) {\n        eventHandlers.trackListener(\n          chatMgr.sendButton,\n          'click',\n          safeHandler(() => {\n            const messageText = chatMgr.inputField.value.trim();\n            if (messageText) {\n              chatMgr.sendMessage(messageText);\n              chatMgr.inputField.value = '';\n            }\n          }, 'SendButtonClick'),\n          { context: UI_CTX, description: 'Chat Send Button' }\n        );\n      }\n\n      if (chatMgr.inputField) {\n        eventHandlers.trackListener(\n          chatMgr.inputField,\n          'keydown',\n          safeHandler((e) => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              const messageText = chatMgr.inputField.value.trim();\n              if (messageText) {\n                chatMgr.sendMessage(messageText);\n                chatMgr.inputField.value = '';\n              }\n            }\n          }, 'InputFieldKeydown'),\n          { context: UI_CTX, description: 'Chat Input Enter Key' }\n        );\n      }\n\n      if (chatMgr.minimizeButton) {\n        eventHandlers.trackListener(\n          chatMgr.minimizeButton,\n          'click',\n          safeHandler(() => {\n            chatMgr.toggleMinimize();\n          }, 'MinimizeButtonClick'),\n          { context: UI_CTX, description: 'Chat Minimize Toggle' }\n        );\n      }\n\n      const modelConfigBus = chatMgr.modelConfigAPI?.getEventBus?.();\n      if (modelConfigBus) {\n        eventHandlers.trackListener(\n          modelConfigBus,\n          \"modelConfigChanged\",\n          safeHandler((e) => {\n            if (e.detail) chatMgr.updateModelConfig(e.detail);\n          }, 'ModelConfigChanged'),\n          { description: 'Model config changed event for ChatManager', context: UI_CTX }\n        );\n      }\n    }\n\n    function _showMessage(role, content, id = null, thinking = null, redactedThinking = false) {\n      if (!chatMgr.messageContainer) {\n        return;\n      }\n      const message = domAPI.createElement(\"div\");\n      message.className = `message ${role}-message`;\n      if (id) message.id = id;\n\n      const header = domAPI.createElement(\"div\");\n      header.className = \"message-header\";\n      const nowStr = new Date().toLocaleTimeString();\n\n      domAPI.setInnerHTML(\n        header,\n        `\n          <span class=\"message-role\">${role === \"assistant\" ? \"Claude\" : role === \"user\" ? \"You\" : \"System\"}</span>\n          <span class=\"message-time\">${nowStr}</span>\n        `\n      );\n\n      const contentEl = domAPI.createElement(\"div\");\n      contentEl.className = \"message-content\";\n      domAPI.setInnerHTML(\n        contentEl,\n        DOMPurify.sanitize(content || \"\", {\n          ALLOWED_TAGS: ['b', 'i', 'em', 'strong', 'code', 'br', 'p']\n        })\n      );\n\n      domAPI.appendChild(message, header);\n      domAPI.appendChild(message, contentEl);\n\n      if (thinking || redactedThinking) {\n        const thinkingBlock = chatMgr._createThinkingBlock(thinking, redactedThinking);\n        domAPI.appendChild(message, thinkingBlock);\n      }\n\n      domAPI.appendChild(chatMgr.messageContainer, message);\n      chatMgr.messageContainer.scrollTop = chatMgr.messageContainer.scrollHeight;\n    }\n\n    function _createThinkingBlock(thinking, redacted) {\n      const container = domAPI.createElement(\"div\");\n      container.className = \"thinking-container\";\n\n      const toggle = domAPI.createElement(\"button\");\n      toggle.className = \"thinking-toggle\";\n      toggle.setAttribute(\"aria-label\", \"Toggle reasoning details\");\n      domAPI.setInnerHTML(\n        toggle,\n        `\n          <svg class=\"thinking-chevron\" viewBox=\"0 0 24 24\">\n            <path d=\"M19 9l-7 7-7-7\"></path>\n          </svg>\n          <span>${thinking ? \"Show detailed reasoning\" : \"Safety notice\"}</span>\n        `\n      );\n\n      const content = domAPI.createElement(\"div\");\n      content.className = \"thinking-content hidden\";\n\n      if (thinking) {\n        domAPI.setInnerHTML(content, DOMPurify.sanitize(thinking));\n      } else if (redacted) {\n        domAPI.setInnerHTML(\n          content,\n          `\n            <div class=\"redacted-notice\">\n              <svg viewBox=\"0 0 24 24\">\n                <path d=\"M12 2C6.48 2 2\n                  6.48 2 12s4.48 10 10 10 10-4.48\n                  10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\">\n                </path>\n              </svg>\n              <span>Some reasoning was redacted for safety reasons</span>\n            </div>\n          `\n        );\n      }\n\n      // Toggle logic\n      const handler = () => {\n        content.classList.toggle(\"hidden\");\n        const chevron = toggle.querySelector(\".thinking-chevron\");\n        const span = toggle.querySelector(\"span\");\n        if (content.classList.contains(\"hidden\")) {\n          span.textContent = thinking ? \"Show detailed reasoning\" : \"Show safety notice\";\n          if (chevron) chevron.style.transform = \"\";\n        } else {\n          span.textContent = thinking ? \"Hide detailed reasoning\" : \"Hide safety notice\";\n          if (chevron) chevron.style.transform = \"rotate(180deg)\";\n        }\n      };\n      eventHandlers.trackListener(toggle, \"click\", safeHandler(handler, 'ThinkingBlockToggle'), {\n        description: 'Thinking block toggle',\n        context: UI_CTX,\n        source: 'ChatManager._createThinkingBlock'\n      });\n\n      domAPI.appendChild(container, toggle);\n      domAPI.appendChild(container, content);\n      return container;\n    }\n\n    function _clearInputField() {\n      if (chatMgr.inputField) {\n        chatMgr.inputField.value = \"\";\n        chatMgr.inputField.focus();\n      }\n    }\n\n    function _showErrorMessage(message) {\n      if (!chatMgr.messageContainer) {\n        return;\n      }\n      const errorEl = domAPI.createElement(\"div\");\n      errorEl.className = \"error-message\";\n      domAPI.setInnerHTML(errorEl, `\n        <div class=\"error-icon\">\n          <svg viewBox=\"0 0 24 24\">\n            <path d=\"M12 2C6.48 2 2\n             6.48 2 12s4.48 10 10 10 10-4.48\n             10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"></path>\n          </svg>\n        </div>\n        <div class=\"error-content\">\n          <h4>Error</h4>\n          <p>${DOMPurify.sanitize(message)}</p>\n        </div>\n      `);\n      domAPI.appendChild(chatMgr.messageContainer, errorEl);\n      chatMgr.messageContainer.scrollTop = chatMgr.messageContainer.scrollHeight;\n    }\n\n    function _clearMessages() {\n      if (chatMgr.messageContainer) {\n        domAPI.replaceChildren(chatMgr.messageContainer);\n      }\n    }\n\n    function _renderMessages(messages) {\n      chatMgr._clearMessages();\n      if (!messages?.length) {\n        chatMgr._showMessage(\"system\", \"No messages yet\");\n        return;\n      }\n      messages.forEach((msg) => {\n        chatMgr._showMessage(\n          msg.role,\n          msg.content,\n          msg.id,\n          msg.thinking,\n          msg.redacted_thinking\n        );\n      });\n    }\n\n    function _showLoadingIndicator() {\n      if (!chatMgr.messageContainer) {\n        return;\n      }\n      const indicator = domAPI.createElement(\"div\");\n      indicator.id = \"chatLoadingIndicator\";\n      indicator.className = \"loading-indicator\";\n      domAPI.setInnerHTML(\n        indicator,\n        `\n        <div class=\"loading-spinner\"></div>\n        <span>Loading conversation...</span>\n      `\n      );\n      domAPI.appendChild(chatMgr.messageContainer, indicator);\n    }\n\n    function _hideLoadingIndicator() {\n      const indicator = domAPI.querySelector(\"#chatLoadingIndicator\");\n      if (indicator) {\n        indicator.remove();\n      }\n    }\n\n    function _showThinkingIndicator() {\n      if (!chatMgr.messageContainer) {\n        return;\n      }\n      const indicator = domAPI.createElement(\"div\");\n      indicator.id = \"thinkingIndicator\";\n      indicator.className = \"thinking-indicator\";\n      domAPI.setInnerHTML(\n        indicator,\n        `\n          <div class=\"thinking-dots\">\n            <span></span><span></span><span></span>\n          </div>\n          <span>Claude is thinking...</span>\n        `\n      );\n      domAPI.appendChild(chatMgr.messageContainer, indicator);\n      chatMgr.messageContainer.scrollTop = chatMgr.messageContainer.scrollHeight;\n    }\n\n    function _hideThinkingIndicator() {\n      const el = domAPI.querySelector(\"#thinkingIndicator\");\n      if (el) {\n        el.remove();\n      }\n    }\n\n    function toggleMinimize() {\n      if (!chatMgr.container || !chatMgr.messageContainer || !chatMgr.inputField) return;\n      chatMgr.container.classList.toggle('chat-minimized');\n    }\n\n    Object.assign(chatMgr, {\n      _setupUIElements,\n      _setupEventListeners,\n      _showMessage,\n      _createThinkingBlock,\n      _clearInputField,\n      _showErrorMessage,\n      _clearMessages,\n      _renderMessages,\n      _showLoadingIndicator,\n      _hideLoadingIndicator,\n      _showThinkingIndicator,\n      _hideThinkingIndicator,\n      toggleMinimize\n    });\n  }\n\n  function cleanup() {\n    if (eventHandlers && typeof eventHandlers.cleanupListeners === 'function') {\n      eventHandlers.cleanupListeners({ context: UI_CTX });\n    }\n  }\n\n  return { attachChatUI, cleanup };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 13735,
          "_transferSize": 14918,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:00.133Z",
        "time": 294.07699999865144,
        "timings": {
          "blocked": 239.30599999448845,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.125,
          "wait": 52.40800000321957,
          "receive": 2.2380000009434298,
          "_blocked_queueing": 0.606999994488433,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106592",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/knowledgeBaseComponent.js",
          "lineNumber": 5
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/knowledgeBaseSearchHandler.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/knowledgeBaseComponent.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1494,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "10115"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"6e4191af9150dd714c7b8685c961f74e\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 10115,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module knowledgeBaseSearchHandler\n * @description Handles search functionality for the KnowledgeBaseComponent.\n */\nconst MODULE = \"KnowledgeBaseSearchHandler\";\n\n/**\n * Factory function to create a search handler for KnowledgeBaseComponent.\n * @param {Object} ctx - The KnowledgeBaseComponent instance (context).\n * @param {Object} ctx.elements - DOM element references.\n * @param {Object} ctx.state - Component's internal state.\n * @param {Object} ctx.config - Component's configuration.\n * @param {Function} ctx.apiRequest - API request function.\n * @param {Object} ctx.eventHandlers - Event handling utility.\n * @param {Object} ctx.uiUtils - UI utility functions.\n * @param {Object} ctx.scheduler - Scheduler for debounce (setTimeout, clearTimeout).\n * @param {Function} ctx._getCurrentProjectId - Function to get current project ID.\n * @param {Function} ctx.validateUUID - UUID validation function.\n * @param {Function} ctx._safeSetInnerHTML - Function to safely set innerHTML.\n * @returns {Object} Search handler instance with public methods.\n */\nexport async function createKnowledgeBaseSearchHandler(ctx) {\n  // App readiness guard—wait for dependencies before wiring up\n  if (!ctx.DependencySystem) throw new Error(`[${MODULE}] DependencySystem missing for app readiness check`);\n  await ctx.DependencySystem.waitFor?.([\n    \"app\", \"projectManager\", \"eventHandlers\", \"domAPI\"\n  ]);\n\n\n  /**\n   * Perform a search against the knowledge base\n   * @param {string} query - Search query\n   * @returns {Promise<void>}\n   */\n  async function searchKnowledgeBase(query) {\n    if (ctx.state.isSearching) return;\n    const trimmed = (query || \"\").trim();\n    if (\n      !trimmed ||\n      trimmed.length < ctx.config.minQueryLength ||\n      trimmed.length > ctx.config.maxQueryLength\n    ) {\n      _showNoResults();\n      return;\n    }\n\n    const pid = ctx._getCurrentProjectId();\n    if (!pid) {\n      return;\n    }\n\n    const cacheKey = `${pid}-${trimmed}-${_getSelectedTopKValue()}`;\n    if (ctx.state.searchCache.has(cacheKey)) {\n      _renderSearchResults(ctx.state.searchCache.get(cacheKey));\n      return;\n    }\n\n    ctx.state.isSearching = true;\n    _showSearchLoading();\n\n    try {\n      const resp = await ctx.apiRequest(\n        `/api/projects/${pid}/knowledge-bases/search`,\n        {\n          method: \"POST\",\n          body: { query: trimmed, top_k: _getSelectedTopKValue() },\n        },\n        false,\n      );\n      const results = Array.isArray(resp?.data?.results)\n        ? resp.data.results\n        : [];\n      if (results.length) {\n        ctx.state.searchCache.set(cacheKey, results);\n        _renderSearchResults(results);\n      } else {\n        _showNoResults();\n      }\n    } catch (err) {\n      /* swallow – notifications removed */\n    } finally {\n      ctx.state.isSearching = false;\n      _hideSearchLoading();\n    }\n  }\n\n  const debouncedSearch = ctx._debounce(\n    searchKnowledgeBase,\n    ctx.config.searchDebounceTime,\n  );\n\n  /**\n   * Trigger search from input field\n   */\n  function triggerSearch() {\n    if (ctx.elements.searchInput) {\n      searchKnowledgeBase(ctx.elements.searchInput.value);\n    }\n  }\n\n  /**\n   * Render search results in the UI\n   * @param {Array<Object>} results\n   */\n  function _renderSearchResults(results) {\n    _clearSearchResults();\n    if (!results?.length) return _showNoResults();\n    _appendSearchResults(results);\n    _toggleResultSections(true);\n  }\n\n  function _clearSearchResults() {\n    const { resultsContainer, resultsSection, noResultsSection } = ctx.elements;\n    if (resultsContainer) resultsContainer.textContent = \"\";\n    resultsSection?.classList.add(\"hidden\");\n    noResultsSection?.classList.add(\"hidden\");\n  }\n\n  function _appendSearchResults(results) {\n    const { resultsContainer } = ctx.elements;\n    if (!resultsContainer) return;\n    results.forEach((res) => {\n      const item = _createResultItem(res);\n      ctx.eventHandlers.trackListener(item, \"click\", () =>\n        _showResultDetail(res),\n      );\n      ctx.eventHandlers.trackListener(item, \"keydown\", (e) => {\n        if ([\"Enter\", \" \"].includes(e.key)) {\n          e.preventDefault();\n          _showResultDetail(res);\n        }\n      });\n      resultsContainer.appendChild(item);\n    });\n  }\n\n  function _toggleResultSections(show) {\n    const { resultsSection, noResultsSection } = ctx.elements;\n    if (resultsSection) resultsSection.classList.toggle(\"hidden\", !show);\n    if (noResultsSection) noResultsSection.classList.toggle(\"hidden\", show);\n  }\n\n  /**\n   * Create a single result card element\n   * @param {Object} result\n   * @returns {HTMLElement}\n   */\n  function _createResultItem(result) {\n    const item = ctx.domAPI.createElement(\"div\");\n    item.className =\n      \"card card-compact bg-base-100 shadow-md hover:shadow-lg transition-shadow mb-3 cursor-pointer border border-base-300\";\n    item.setAttribute(\"role\", \"button\");\n    item.setAttribute(\"tabindex\", \"0\");\n\n    const fileInfo = result.file_info || {};\n    const filename =\n      fileInfo.filename || result.metadata?.file_name || \"Unknown source\";\n    const scorePct = Math.round((result.score || 0) * 100);\n\n    const badgeClass = _getBadgeClass(scorePct);\n\n    ctx._safeSetInnerHTML(item, `\n      <div class=\"card-body p-3\">\n        <div class=\"card-title text-sm justify-between items-center mb-1\">\n          <div class=\"flex items-center gap-2 truncate\">\n            <span class=\"text-lg\">${ctx.uiUtils.fileIcon(fileInfo.file_type)}</span>\n            <span class=\"truncate\" title=\"${filename}\">${filename}</span>\n          </div>\n          <div class=\"badge ${badgeClass} badge-sm\" title=\"Relevance: ${scorePct}%\">\n            ${scorePct}%\n          </div>\n        </div>\n        <p class=\"text-xs text-base-content/80 kb-line-clamp-3 mb-2\">\n          ${result.text || \"No content available.\"}\n        </p>\n      </div>\n    `);\n    return item;\n  }\n\n  function _getBadgeClass(scorePct) {\n    if (scorePct >= 80) return \"badge-success\";\n    if (scorePct >= 60) return \"badge-warning\";\n    return \"badge-ghost\";\n  }\n\n  /**\n   * Show detailed view of a search result\n   * @param {Object} result\n   */\n  function _showResultDetail(result) {\n    const modal = ctx.elements.resultModal;\n    if (!modal || typeof modal.showModal !== \"function\") {\n      return;\n    }\n    _populateResultDetail(result);\n    modal.showModal();\n  }\n\n  function _populateResultDetail(result) {\n    const {\n      resultTitle,\n      resultSource,\n      resultScore,\n      resultContent,\n      useInChatBtn,\n    } = ctx.elements;\n    if (!resultTitle || !resultSource || !resultScore || !resultContent)\n      return;\n\n    const fileInfo = result.file_info || {};\n    const filename =\n      fileInfo.filename || result.metadata?.file_name || \"Unknown Source\";\n    const scorePct = Math.round((result.score || 0) * 100);\n\n    const badgeClass = _getBadgeClass(scorePct);\n\n    resultTitle.textContent = `Detail: ${filename}`;\n    resultSource.textContent = filename;\n    resultScore.className = `badge ${badgeClass}`;\n    resultScore.textContent = `${scorePct}%`;\n    resultContent.textContent = result.text || \"No content available.\";\n    resultContent.style.whiteSpace = \"pre-wrap\";\n\n    if (useInChatBtn) {\n      useInChatBtn.onclick = () => {\n        _useInConversation(result);\n        _hideResultDetailModal();\n      };\n    }\n  }\n\n  /**\n   * Hide the result detail modal\n   */\n  function _hideResultDetailModal() {\n    const modal = ctx.elements.resultModal;\n    if (modal && typeof modal.close === \"function\") {\n      modal.close();\n    }\n  }\n\n  /**\n   * Insert result reference into chat input\n   * @param {Object} result\n   */\n  function _useInConversation(result) {\n    const chatInput =\n      ctx.domAPI.getElementById(\"chatUIInput\") ||\n      ctx.domAPI.getElementById(\"projectChatInput\") ||\n      ctx.domAPI.getElementById(\"chatInput\") ||\n      ctx.domAPI.querySelector('textarea[placeholder*=\"Send a message\"]', undefined);\n\n    if (!chatInput) return;\n    const filename = result.metadata?.file_name || \"the knowledge base\";\n    const refText = `Referring to content from \"${filename}\":\\n\\n> ${result.text.trim()}\\n\\nBased on this, `;\n    const current = chatInput.value.trim();\n\n    chatInput.value = current ? `${current}\\n\\n${refText}` : refText;\n    chatInput.focus();\n    chatInput.dispatchEvent(new Event(\"input\", { bubbles: true }));\n  }\n\n  /**\n   * Show loading indicator for search\n   */\n  function _showSearchLoading() {\n    const { resultsContainer, resultsSection, noResultsSection } =\n      ctx.elements;\n    resultsSection?.classList.remove(\"hidden\");\n    noResultsSection?.classList.add(\"hidden\");\n    if (resultsContainer) {\n      ctx._safeSetInnerHTML(resultsContainer, `\n        <div class=\"flex justify-center items-center p-4 text-base-content/70\">\n          <span class=\"loading loading-dots loading-md mr-2\"></span>\n          <span>Searching knowledge base...</span>\n        </div>\n      `);\n    }\n  }\n\n  /**\n   * Hide search loading indicator\n   */\n  function _hideSearchLoading() {\n    if (!ctx.state.isSearching) {\n      const loadingEl = ctx.elements.resultsContainer?.querySelector(\n        \".flex.justify-center.items-center\",\n      );\n      if (loadingEl && loadingEl.textContent.includes(\"Searching\")) {\n        loadingEl.remove();\n      }\n    }\n  }\n\n  /**\n   * Show \"no results\" UI\n   */\n  function _showNoResults() {\n    const { resultsSection, noResultsSection, resultsContainer } =\n      ctx.elements;\n    if (resultsContainer) resultsContainer.textContent = \"\";\n    resultsSection?.classList.add(\"hidden\");\n    noResultsSection?.classList.remove(\"hidden\");\n  }\n\n  /**\n   * Get selected Top-K value\n   * @returns {number}\n   */\n  function _getSelectedTopKValue() {\n    const val = parseInt(ctx.elements.topKSelect?.value, 10);\n    return isNaN(val) ? 5 : val;\n  }\n\n  function handleResultModalKeydown(e) {\n    if (e.key === \"Escape\") _hideResultDetailModal();\n  }\n\n  return {\n    searchKnowledgeBase,\n    debouncedSearch,\n    triggerSearch,\n    hideResultDetailModal: _hideResultDetailModal, // expose for direct calls if needed\n    handleResultModalKeydown,\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 10115,
          "_transferSize": 11298,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:00.332Z",
        "time": 95.37499998987187,
        "timings": {
          "blocked": 40.48400000162329,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07600000000000051,
          "wait": 53.221999994657935,
          "receive": 1.592999993590638,
          "_blocked_queueing": 0.8430000016232952,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106593",
        "_initiator": {
          "type": "script",
          "url": "http://localhost:8000/static/js/knowledgeBaseComponent.js",
          "lineNumber": 6
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/js/knowledgeBaseManager.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/static/js/knowledgeBaseComponent.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1488,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "49695"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"d56454fb867056805f9b84465f730ded\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 06:54:06 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 49695,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module knowledgeBaseManager\n * @description Manages Knowledge Base settings, lifecycle, files, and GitHub integration.\n */\nconst MODULE = \"KnowledgeBaseManager\";\n\n/**\n * Creates a manager for handling Knowledge Base (KB) lifecycle, settings, files, and GitHub integration within a project context.\n *\n * The returned manager provides methods for toggling KB activation, reprocessing files, handling KB settings forms, deleting KBs, managing KB modals, loading KB health and files, attaching/detaching GitHub repositories, validating model compatibility, updating model selection, and cleaning up event listeners.\n *\n * @param {Object} ctx - Context object containing dependencies, state, DOM elements, utilities, and callbacks required for KB management.\n * @returns {Object} An object exposing public methods for managing the Knowledge Base feature within a project.\n *\n * @throws {Error} If required dependencies (`apiRequest`, `eventHandlers`, `domAPI`, or logger) are missing from the context.\n */\nexport function createKnowledgeBaseManager(ctx) {\n  /* ------------------------------------------------------------------\n   * Guardrail #1 – Factory Function Export - Validate dependencies\n   * ------------------------------------------------------------------ */\n  const REQUIRED_DEPS = [\"apiRequest\", \"eventHandlers\", \"domAPI\"];\n  for (const dep of REQUIRED_DEPS) {\n    if (!ctx?.[dep]) {\n      throw new Error(`[${MODULE}] Missing required dependency '${dep}'`);\n    }\n  }\n\n  const DependencySystem = ctx.getDep ? ctx.getDep(\"DependencySystem\") : null;\n  const logger = ctx.logger || ctx.getDep(\"logger\"); // Ensure logger is available\n  if (!logger) {\n    throw new Error(`[${MODULE}] Logger dependency is missing from context.`);\n  }\n\n  let appReadyPromise = Promise.resolve();\n  if (DependencySystem?.waitFor) {\n    appReadyPromise = DependencySystem.waitFor([\"app\"]).catch(err => {\n      logger.warn(`[${MODULE}] Error waiting for \"app\" dependency during appReadyPromise setup. Operations might proceed without full app readiness.`, { error: err, context: MODULE });\n      // Swallow, as methods will await this and might proceed if it resolves/rejects early.\n    });\n  }\n\n  /**\n   * Enables or disables the knowledge base for the current project.\n   *\n   * Updates the activation state both on the server and in the UI, synchronizes local storage, and refreshes project details or knowledge base info as needed.\n   *\n   * @param {boolean} enabled - Whether to activate (`true`) or deactivate (`false`) the knowledge base.\n   * @returns {Promise<void>}\n   *\n   * @throws {Error} If the API request to toggle the knowledge base fails.\n   */\n  async function toggleKnowledgeBase(enabled) {\n    logger.info(`[${MODULE}][toggleKnowledgeBase] Called with enabled: ${enabled}`, { context: MODULE });\n    await appReadyPromise;\n    logger.debug(`[${MODULE}][toggleKnowledgeBase] App is ready. Proceeding.`, { context: MODULE });\n\n    const pid = ctx._getCurrentProjectId();\n    if (!pid) {\n      logger.warn(`[${MODULE}][toggleKnowledgeBase] No project ID found. Aborting.`, { context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][toggleKnowledgeBase] Project ID: ${pid}`, { context: MODULE });\n\n    try {\n      const resp = await ctx.apiRequest(\n        `/api/projects/${pid}/knowledge-bases/toggle`,\n        { method: \"POST\", body: { enable: enabled } },\n      );\n      logger.debug(`[${MODULE}][toggleKnowledgeBase] API response:`, { response: resp, context: MODULE });\n\n      if (resp.success) {\n        logger.info(`[${MODULE}][toggleKnowledgeBase] Successfully toggled KB to ${enabled} for project ${pid}.`, { context: MODULE });\n        if (ctx.state.knowledgeBase) {\n          ctx.state.knowledgeBase.is_active = enabled;\n        }\n        ctx._updateStatusIndicator(enabled); // UI update\n        const storage = ctx.getDep(\"storage\");\n        if (storage && typeof storage.setItem === \"function\") {\n          storage.setItem(`kb_enabled_${pid}`, String(enabled));\n        }\n\n        if (ctx.projectManager.loadProjectDetails) {\n          logger.debug(`[${MODULE}][toggleKnowledgeBase] Reloading project details for ${pid}.`, { context: MODULE });\n          const project = await ctx.projectManager.loadProjectDetails(pid);\n          ctx.renderKnowledgeBaseInfo(project?.knowledge_base, pid); // UI update\n        } else {\n          logger.debug(`[${MODULE}][toggleKnowledgeBase] projectManager.loadProjectDetails not available. Rendering with current KB state.`, { context: MODULE });\n          ctx.renderKnowledgeBaseInfo(ctx.state.knowledgeBase, pid); // UI update\n        }\n      } else {\n        logger.error(`[${MODULE}][toggleKnowledgeBase] API reported failure.`, { responseMessage: resp.message, context: MODULE });\n        throw new Error(resp.message || \"Failed to toggle knowledge base status.\");\n      }\n    } catch(err) {\n      logger.error(`[${MODULE}][toggleKnowledgeBase] Error toggling knowledge base for project ${pid}. Reverting UI.`, { error: err, context: MODULE });\n      if (ctx.elements.kbToggle) ctx.elements.kbToggle.checked = !enabled; // Revert UI\n      ctx._updateStatusIndicator(!enabled); // Revert UI\n      // Optionally, show an error to the user via ctx._showStatusAlert or similar\n    }\n  }\n\n  /**\n   * Initiates reprocessing of all knowledge base files for the specified project.\n   *\n   * Triggers a server-side reindexing of all files in the project's knowledge base. Updates UI state and reloads project or knowledge base details upon completion.\n   *\n   * @param {string} projectId - The unique identifier of the project whose knowledge base files will be reprocessed.\n   * @returns {Promise<void>}\n   *\n   * @throws {Error} If the API request to reprocess files fails.\n   */\n  async function reprocessFiles(projectId) {\n    logger.info(`[${MODULE}][reprocessFiles] Called for project ID: ${projectId}`, { context: MODULE });\n    await appReadyPromise;\n    logger.debug(`[${MODULE}][reprocessFiles] App is ready. Proceeding.`, { context: MODULE });\n\n    if (!ctx.validateUUID(projectId)) {\n      logger.warn(`[${MODULE}][reprocessFiles] Invalid project ID: ${projectId}. Aborting.`, { context: MODULE });\n      return;\n    }\n    const btn = ctx.elements.reprocessButton;\n    ctx._setButtonLoading(btn, true, \"Processing...\");\n    logger.debug(`[${MODULE}][reprocessFiles] Reprocess button loading state set.`, { context: MODULE });\n\n    try {\n      const resp = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-base/reindex`,\n        { method: \"POST\", body: { force: true } },\n      );\n      logger.debug(`[${MODULE}][reprocessFiles] API response:`, { response: resp, context: MODULE });\n\n      if (resp.success) {\n        logger.info(`[${MODULE}][reprocessFiles] Successfully initiated reprocessing for project ${projectId}.`, { context: MODULE });\n        if (ctx.projectManager.loadProjectDetails) {\n          logger.debug(`[${MODULE}][reprocessFiles] Reloading project details and stats for ${projectId}.`, { context: MODULE });\n          const [project] = await Promise.all([\n            ctx.projectManager.loadProjectDetails(projectId),\n            ctx.projectManager.loadProjectStats?.(projectId), // Optional chaining for loadProjectStats\n          ]);\n          ctx.renderKnowledgeBaseInfo(project?.knowledge_base, projectId); // UI update\n        } else if (ctx.state.knowledgeBase?.id) {\n          logger.debug(`[${MODULE}][reprocessFiles] projectManager.loadProjectDetails not available. Reloading KB health and files directly.`, { kbId: ctx.state.knowledgeBase.id, context: MODULE });\n          await loadKnowledgeBaseHealth(ctx.state.knowledgeBase.id); // Refresh health\n          await loadKnowledgeBaseFiles(projectId, ctx.state.knowledgeBase.id); // Refresh files\n        }\n      } else {\n        logger.error(`[${MODULE}][reprocessFiles] API reported failure.`, { responseMessage: resp.message, context: MODULE });\n         throw new Error(resp.message || \"Reprocessing request failed.\");\n      }\n    } catch(err) {\n      logger.error(`[${MODULE}][reprocessFiles] Error during reprocessing for project ${projectId}.`, { error: err, context: MODULE });\n      // Optionally, show an error to the user\n    } finally {\n      ctx._setButtonLoading(btn, false);\n      logger.debug(`[${MODULE}][reprocessFiles] Reprocess button loading state reset.`, { context: MODULE });\n    }\n  }\n\n  /**\n   * Handles submission of the Knowledge Base settings form, validating input and initiating creation or update of the Knowledge Base.\n   *\n   * Prevents default form submission, validates required fields, constructs the payload, and triggers the submission process. If creating a new Knowledge Base, includes the option to process existing files.\n   *\n   * @param {Event} e - The form submit event.\n   */\n  function handleKnowledgeBaseFormSubmit(e) {\n    e.preventDefault();\n    logger.info(`[${MODULE}][handleKnowledgeBaseFormSubmit] Form submitted.`, { context: MODULE });\n    const form = e.target;\n    const projectId = form.dataset.projectId || ctx._getCurrentProjectId();\n\n    if (!ctx.validateUUID(projectId)) {\n      logger.warn(`[${MODULE}][handleKnowledgeBaseFormSubmit] Invalid project ID: ${projectId}. Aborting.`, { context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][handleKnowledgeBaseFormSubmit] Project ID: ${projectId}`, { context: MODULE });\n\n    const data = new FormData(form);\n    const payload = {\n      name: data.get(\"name\"),\n      description: data.get(\"description\") || null,\n      embedding_model: data.get(\"embedding_model\"),\n    };\n    logger.debug(`[${MODULE}][handleKnowledgeBaseFormSubmit] Payload created:`, { payload, context: MODULE });\n\n    if (!ctx.state.knowledgeBase?.id) { // Creating new KB\n      payload.process_existing_files = form.elements[\"process_all_files\"]?.checked || false;\n      logger.debug(`[${MODULE}][handleKnowledgeBaseFormSubmit] New KB. process_existing_files: ${payload.process_existing_files}`, { context: MODULE });\n    }\n\n    if (!payload.name?.trim()) {\n      logger.warn(`[${MODULE}][handleKnowledgeBaseFormSubmit] Name is empty. Aborting.`, { context: MODULE });\n      // TODO: Show validation error to user\n      return;\n    }\n    if (!payload.embedding_model) {\n      logger.warn(`[${MODULE}][handleKnowledgeBaseFormSubmit] Embedding model not selected. Aborting.`, { context: MODULE });\n      // TODO: Show validation error to user\n      return;\n    }\n\n    const btn = form.querySelector('button[type=\"submit\"]');\n    ctx._setButtonLoading(btn, true);\n    logger.debug(`[${MODULE}][handleKnowledgeBaseFormSubmit] Submit button loading state set.`, { context: MODULE });\n\n    _submitKnowledgeBaseForm(projectId, payload).finally(() => {\n      ctx._setButtonLoading(btn, false);\n      logger.debug(`[${MODULE}][handleKnowledgeBaseFormSubmit] Submit button loading state reset.`, { context: MODULE });\n    });\n  }\n\n  /**\n   * Submits knowledge base settings to the server for creation or update.\n   *\n   * Determines whether to create a new knowledge base or update an existing one based on the current state, sends the appropriate API request, and updates the UI accordingly. Handles conflict errors by attempting to refresh project details and update the UI.\n   *\n   * @param {string} projectId - The ID of the project to which the knowledge base belongs.\n   * @param {Object} payload - The settings data to submit for the knowledge base.\n   *\n   * @returns {Promise<void>}\n   *\n   * @throws {Error} If the server response indicates failure or returns invalid data.\n   */\n  async function _submitKnowledgeBaseForm(projectId, payload) {\n    logger.info(`[${MODULE}][_submitKnowledgeBaseForm] Submitting for project ID: ${projectId}`, { payload, context: MODULE });\n    await appReadyPromise;\n    logger.debug(`[${MODULE}][_submitKnowledgeBaseForm] App is ready. Proceeding.`, { context: MODULE });\n\n    try {\n      const kbId = ctx.state.knowledgeBase?.id;\n      const isUpdating = !!kbId;\n      logger.debug(`[${MODULE}][_submitKnowledgeBaseForm] KB ID: ${kbId}, Is updating: ${isUpdating}`, { context: MODULE });\n\n      const method = isUpdating ? \"PATCH\" : \"POST\";\n      const url = isUpdating\n        ? `/api/projects/${projectId}/knowledge-bases/${kbId}`\n        : `/api/projects/${projectId}/knowledge-bases`;\n      logger.debug(`[${MODULE}][_submitKnowledgeBaseForm] API URL: ${url}, Method: ${method}`, { context: MODULE });\n\n      const resp = await ctx.apiRequest(url, { method, body: payload });\n      logger.debug(`[${MODULE}][_submitKnowledgeBaseForm] API response:`, { response: resp, context: MODULE });\n\n      const responseData = isUpdating ? resp.data : (resp.data?.knowledge_base || resp.data);\n\n      if (responseData?.id || resp.success) {\n        logger.info(`[${MODULE}][_submitKnowledgeBaseForm] Form submission successful for project ${projectId}. KB ID: ${responseData?.id}`, { context: MODULE });\n        hideKnowledgeBaseModal();\n\n        if (ctx.projectManager.loadProjectDetails) {\n          logger.debug(`[${MODULE}][_submitKnowledgeBaseForm] Reloading project details for ${projectId}.`, { context: MODULE });\n          const project = await ctx.projectManager.loadProjectDetails(projectId);\n          ctx.renderKnowledgeBaseInfo(project?.knowledge_base, projectId); // UI update\n        } else {\n          logger.debug(`[${MODULE}][_submitKnowledgeBaseForm] projectManager.loadProjectDetails not available. Rendering with combined KB state.`, { context: MODULE });\n          ctx.renderKnowledgeBaseInfo({\n            ...ctx.state.knowledgeBase, \n            ...responseData,          \n          }, projectId); // UI update\n        }\n      } else {\n        logger.error(`[${MODULE}][_submitKnowledgeBaseForm] API reported failure or invalid data.`, { responseMessage: resp.message, responseData, context: MODULE });\n        throw new Error(resp.message || \"Invalid response from server\");\n      }\n    } catch (err) {\n      logger.error(`[${MODULE}][_submitKnowledgeBaseForm] Error submitting form for project ${projectId}.`, { error: err, status: err?.status, context: MODULE });\n      if (err.status === 409) { \n        logger.warn(`[${MODULE}][_submitKnowledgeBaseForm] Conflict (409) detected. Attempting to refresh project details.`, { context: MODULE });\n        if (ctx.projectManager.loadProjectDetails) {\n          try {\n            const project = await ctx.projectManager.loadProjectDetails(projectId);\n            ctx.renderKnowledgeBaseInfo(project?.knowledge_base, projectId); // Refresh UI\n            hideKnowledgeBaseModal(); \n          } catch (refreshError) {\n            logger.error(`[${MODULE}][_submitKnowledgeBaseForm] Error refreshing project details after 409.`, { error: refreshError, context: MODULE });\n          }\n        }\n      } else {\n        // Handle other errors, potentially show user message via ctx._showStatusAlert\n        ctx._showStatusAlert(`Error saving settings: ${err.message || 'Unknown server error'}`, \"error\");\n      }\n    }\n  }\n\n  /**\n   * Deletes the current knowledge base after user confirmation.\n   *\n   * Prompts the user to confirm deletion, then sends a request to remove the knowledge base for the current project. On success, closes the modal, updates the UI to reflect the inactive state, and reloads project details. If deletion fails, displays an error alert.\n   *\n   * @remark If the project ID or knowledge base ID is missing, the function aborts without performing any action.\n   */\n  async function handleDeleteKnowledgeBase() {\n    logger.info(`[${MODULE}][handleDeleteKnowledgeBase] Initiating delete.`, { context: MODULE });\n    await appReadyPromise;\n    logger.debug(`[${MODULE}][handleDeleteKnowledgeBase] App is ready. Proceeding.`, { context: MODULE });\n\n    const projectId = ctx._getCurrentProjectId();\n    const kbId = ctx.state.knowledgeBase?.id;\n\n    if (!projectId || !kbId) {\n      logger.warn(`[${MODULE}][handleDeleteKnowledgeBase] Project ID or KB ID missing. Aborting.`, { projectId, kbId, context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][handleDeleteKnowledgeBase] Project ID: ${projectId}, KB ID: ${kbId}`, { context: MODULE });\n\n    const confirmed = await ctx.modalManager.confirmAction({ // Pass as object\n      title: \"Delete Knowledge Base?\",\n      message: \"Are you sure you want to permanently delete this knowledge base? This action cannot be undone.\",\n      confirmText: \"Delete\",\n      confirmClass: \"btn-error\"\n    });\n\n\n    if (!confirmed) {\n      logger.info(`[${MODULE}][handleDeleteKnowledgeBase] Deletion cancelled by user.`, { context: MODULE });\n      return;\n    }\n\n    const deleteButton = ctx.elements.deleteKnowledgeBaseBtn;\n    ctx._setButtonLoading(deleteButton, true, \"Deleting...\");\n    logger.debug(`[${MODULE}][handleDeleteKnowledgeBase] Delete button loading state set.`, { context: MODULE });\n\n    try {\n      const resp = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-bases/${kbId}`,\n        { method: \"DELETE\" }\n      );\n      logger.debug(`[${MODULE}][handleDeleteKnowledgeBase] API response:`, { response: resp, context: MODULE });\n\n      if (resp.success || resp.data?.deleted_id) {\n        logger.info(`[${MODULE}][handleDeleteKnowledgeBase] Successfully deleted KB ${kbId} for project ${projectId}.`, { context: MODULE });\n        hideKnowledgeBaseModal();\n        ctx._showInactiveState(); \n        if (ctx.projectManager.loadProjectDetails) {\n          logger.debug(`[${MODULE}][handleDeleteKnowledgeBase] Reloading project details for ${projectId}.`, { context: MODULE });\n          await ctx.projectManager.loadProjectDetails(projectId);\n        }\n      } else {\n        logger.error(`[${MODULE}][handleDeleteKnowledgeBase] API reported failure.`, { responseMessage: resp.message, context: MODULE });\n        throw new Error(resp.message || \"Failed to delete knowledge base.\");\n      }\n    } catch (err) {\n      logger.error(`[${MODULE}][handleDeleteKnowledgeBase] Error deleting KB ${kbId} for project ${projectId}.`, { error: err, context: MODULE });\n      ctx._showStatusAlert(`Error deleting Knowledge Base: ${err.message || 'Unknown server error'}`, \"error\");\n    } finally {\n      ctx._setButtonLoading(deleteButton, false);\n      logger.debug(`[${MODULE}][handleDeleteKnowledgeBase] Delete button loading state reset.`, { context: MODULE });\n    }\n  }\n\n  /**\n   * Displays the Knowledge Base settings modal dialog, populating the form with current or default KB data and updating related UI elements.\n   *\n   * If a Knowledge Base exists for the current project, its details are loaded and shown in the form; otherwise, the form is prepared for creating a new KB. The modal also manages the visibility and content of GitHub repository attachment fields based on KB state, and validates model selection compatibility.\n   */\n  async function showKnowledgeBaseModal() {\n    logger.info(`[${MODULE}][showKnowledgeBaseModal] Showing KB settings modal.`, { context: MODULE });\n    await appReadyPromise;\n    logger.debug(`[${MODULE}][showKnowledgeBaseModal] App is ready. Proceeding.`, { context: MODULE });\n\n    const modal = ctx.elements.settingsModal;\n    if (!modal || typeof modal.showModal !== \"function\") {\n      logger.warn(`[${MODULE}][showKnowledgeBaseModal] Settings modal element not found or not a dialog. Aborting.`, { context: MODULE });\n      return;\n    }\n\n    const projectId = ctx._getCurrentProjectId();\n    if (!projectId) {\n      logger.warn(`[${MODULE}][showKnowledgeBaseModal] No project ID found. Aborting modal show.`, { context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][showKnowledgeBaseModal] Project ID: ${projectId}`, { context: MODULE });\n\n    // Refresh KB state before populating the form\n    try {\n      if (ctx.projectManager.loadProjectDetails) {\n        logger.debug(`[${MODULE}][showKnowledgeBaseModal] Refreshing project details for ${projectId} to get latest KB state.`, { context: MODULE });\n        const projectDetails = await ctx.projectManager.loadProjectDetails(projectId);\n        if (projectDetails && typeof projectDetails.knowledge_base !== 'undefined') {\n          ctx.state.knowledgeBase = projectDetails.knowledge_base; \n          logger.debug(`[${MODULE}][showKnowledgeBaseModal] KB state updated from project details. KB ID: ${ctx.state.knowledgeBase?.id}`, { context: MODULE });\n        } else if (projectDetails === null) {\n          logger.warn(`[${MODULE}][showKnowledgeBaseModal] Project details load failed for ${projectId}. Modal might show stale KB data.`, { context: MODULE });\n        } else {\n           logger.debug(`[${MODULE}][showKnowledgeBaseModal] Project details loaded but no 'knowledge_base' field found.`, { projectDetails , context: MODULE });\n        }\n      }\n    } catch (err) {\n      logger.error(`[${MODULE}][showKnowledgeBaseModal] Error refreshing project details. Modal might show stale KB data.`, { error: err, context: MODULE });\n    }\n\n    const form = ctx.elements.settingsForm;\n    if (form) {\n      form.reset();\n      logger.debug(`[${MODULE}][showKnowledgeBaseModal] Settings form reset.`, { context: MODULE });\n      const kbIdInput = form.elements[\"knowledge_base_id\"];\n      if (kbIdInput) {\n        kbIdInput.value = ctx.state.knowledgeBase?.id || \"\";\n      }\n    }\n\n    _updateModelSelection(ctx.state.knowledgeBase?.embedding_model || null);\n    logger.debug(`[${MODULE}][showKnowledgeBaseModal] Model selection updated. Current model: ${ctx.state.knowledgeBase?.embedding_model}`, { context: MODULE });\n\n    const deleteBtn = ctx.elements.deleteKnowledgeBaseBtn;\n    const { kbGitHubAttachedRepoInfo, kbAttachedRepoUrlDisplay, kbAttachedRepoBranchDisplay, kbGitHubAttachForm, kbGitHubRepoUrlInput, kbGitHubBranchInput, kbGitHubFilePathsTextarea } = ctx.elements;\n\n    if (ctx.state.knowledgeBase && ctx.state.knowledgeBase.id) { \n      logger.debug(`[${MODULE}][showKnowledgeBaseModal] Populating form for existing KB. ID: ${ctx.state.knowledgeBase.id}`, { context: MODULE });\n      const kb = ctx.state.knowledgeBase;\n      if (form) {\n        form.elements[\"name\"].value = kb.name || \"\";\n        form.elements[\"description\"].value = kb.description || \"\";\n        const processAllFilesCheckbox = form.elements[\"process_all_files\"];\n        if (processAllFilesCheckbox) processAllFilesCheckbox.checked = false; \n\n        const autoEnableCheckbox = form.elements[\"auto_enable\"]; \n        if (autoEnableCheckbox) autoEnableCheckbox.checked = kb.is_active !== false;\n      }\n      deleteBtn?.classList.remove(\"hidden\");\n\n      if (kb.repo_url) {\n        kbGitHubAttachedRepoInfo?.classList.remove(\"hidden\");\n        if (kbAttachedRepoUrlDisplay) kbAttachedRepoUrlDisplay.textContent = kb.repo_url;\n        if (kbAttachedRepoBranchDisplay) kbAttachedRepoBranchDisplay.textContent = kb.branch || 'main';\n        kbGitHubAttachForm?.classList.add(\"hidden\");\n      } else {\n        kbGitHubAttachedRepoInfo?.classList.add(\"hidden\");\n        kbGitHubAttachForm?.classList.remove(\"hidden\");\n        if (kbGitHubRepoUrlInput) kbGitHubRepoUrlInput.value = \"\";\n        if (kbGitHubBranchInput) kbGitHubBranchInput.value = \"main\";\n        if (kbGitHubFilePathsTextarea) kbGitHubFilePathsTextarea.value = \"\";\n      }\n    } else { \n      logger.debug(`[${MODULE}][showKnowledgeBaseModal] Populating form for new KB.`, { context: MODULE });\n      if (form) {\n        const processAllFilesCheckbox = form.elements[\"process_all_files\"];\n        if (processAllFilesCheckbox) processAllFilesCheckbox.checked = true;\n\n        const autoEnableCheckbox = form.elements[\"auto_enable\"];\n        if (autoEnableCheckbox) autoEnableCheckbox.checked = true;\n      }\n      deleteBtn?.classList.add(\"hidden\");\n      kbGitHubAttachedRepoInfo?.classList.add(\"hidden\");\n      kbGitHubAttachForm?.classList.remove(\"hidden\");\n      if (kbGitHubRepoUrlInput) kbGitHubRepoUrlInput.value = \"\";\n      if (kbGitHubBranchInput) kbGitHubBranchInput.value = \"main\";\n      if (kbGitHubFilePathsTextarea) kbGitHubFilePathsTextarea.value = \"\";\n    }\n\n    if (form) form.dataset.projectId = projectId; // Set projectId on form\n\n    modal.showModal();\n    validateSelectedModelDimensions();\n    logger.debug(`[${MODULE}][showKnowledgeBaseModal] Modal shown.`, { context: MODULE });\n  }\n\n  /**\n   * Closes the Knowledge Base settings modal dialog if it is present and supports closing.\n   */\n  function hideKnowledgeBaseModal() {\n    logger.info(`[${MODULE}][hideKnowledgeBaseModal] Hiding KB settings modal.`, { context: MODULE });\n    const modal = ctx.elements.settingsModal;\n    if (modal && typeof modal.close === \"function\") {\n      modal.close();\n    } else {\n      logger.warn(`[${MODULE}][hideKnowledgeBaseModal] Settings modal element not found or not a dialog.`, { context: MODULE });\n    }\n  }\n\n  /**\n   * Loads and updates health metrics for a specific Knowledge Base by ID.\n   *\n   * Retrieves detailed health information for the given Knowledge Base, updates relevant UI elements and internal state, and returns the health data object if found.\n   *\n   * @param {string} kbId - The Knowledge Base ID to load health metrics for.\n   * @returns {Promise<Object|null>} The health data object for the Knowledge Base, or null if not found or on error.\n   */\n  async function loadKnowledgeBaseHealth(kbId) {\n    logger.info(`[${MODULE}][loadKnowledgeBaseHealth] Called for KB ID: ${kbId}`, { context: MODULE });\n    await appReadyPromise;\n    logger.debug(`[${MODULE}][loadKnowledgeBaseHealth] App is ready. Proceeding.`, { context: MODULE });\n\n    if (!kbId || !ctx.validateUUID(kbId)) {\n      logger.warn(`[${MODULE}][loadKnowledgeBaseHealth] Invalid KB ID: ${kbId}. Aborting.`, { context: MODULE });\n      return null;\n    }\n    try {\n      const projectId = ctx._getCurrentProjectId();\n      if (!projectId) {\n        logger.warn(`[${MODULE}][loadKnowledgeBaseHealth] No project ID found for KB ${kbId}. Aborting.`, { context: MODULE });\n        return null;\n      }\n      logger.debug(`[${MODULE}][loadKnowledgeBaseHealth] Project ID: ${projectId}`, { context: MODULE });\n\n      const healthResp = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-bases/status?detailed=true`, // Assuming this endpoint provides health for a specific KB or all for project\n        { method: \"GET\" }\n      );\n      logger.debug(`[${MODULE}][loadKnowledgeBaseHealth] API response for KB ${kbId}:`, { response: healthResp, context: MODULE });\n      \n      // Assuming healthResp.data contains an array of KBs or a single KB object for the project\n      // And we need to find the specific KB by kbId if multiple are returned, or it's the main object.\n      let kbHealthData = null;\n      if (Array.isArray(healthResp?.data)) {\n          kbHealthData = healthResp.data.find(kb => kb.id === kbId);\n      } else if (healthResp?.data?.id === kbId || (healthResp?.data && !Array.isArray(healthResp?.data) && Object.keys(healthResp.data).length > 0 && !kbId)) {\n          // If kbId was not initially passed, but we got a single KB object, assume it's the one.\n          // Or if a single object is returned and its ID matches.\n          kbHealthData = healthResp.data;\n      }\n\n\n      if (kbHealthData) {\n        logger.info(`[${MODULE}][loadKnowledgeBaseHealth] Health data found for KB ${kbId}.`, { data: kbHealthData, context: MODULE });\n        const { kbNameDisplay, kbModelDisplay, knowledgeFileCount, knowledgeChunkCount, knowledgeFileSize } = ctx.elements;\n\n        if (kbNameDisplay && kbHealthData.name) kbNameDisplay.textContent = kbHealthData.name;\n        if (kbModelDisplay && kbHealthData.embedding_model) kbModelDisplay.textContent = kbHealthData.embedding_model;\n\n        if (knowledgeFileCount && kbHealthData.files?.total_files !== undefined) {\n          knowledgeFileCount.textContent = kbHealthData.files.total_files;\n        }\n        if (knowledgeChunkCount && kbHealthData.vector_stats?.total_vectors !== undefined) {\n          knowledgeChunkCount.textContent = kbHealthData.vector_stats.total_vectors;\n        }\n        \n        let totalSize = 0;\n        if (kbHealthData.files?.files_details) {\n          kbHealthData.files.files_details.forEach(file => totalSize += (file.file_size || 0));\n        } else if (ctx.state.knowledgeBase?.stats?.total_size_bytes && ctx.state.knowledgeBase.id === kbId) {\n          // Fallback to potentially stale component state if API doesn't provide detailed sizes\n          totalSize = ctx.state.knowledgeBase.stats.total_size_bytes;\n        }\n        if (knowledgeFileSize) {\n          knowledgeFileSize.textContent = ctx.uiUtils.formatBytes(totalSize);\n        }\n\n        if (ctx.state.knowledgeBase && ctx.state.knowledgeBase.id === kbId) {\n          logger.debug(`[${MODULE}][loadKnowledgeBaseHealth] Updating component state for KB ${kbId}.`, { context: MODULE });\n          ctx.state.knowledgeBase.name = kbHealthData.name || ctx.state.knowledgeBase.name;\n          ctx.state.knowledgeBase.embedding_model = kbHealthData.embedding_model || ctx.state.knowledgeBase.embedding_model;\n          if (kbHealthData.files) {\n            ctx.state.knowledgeBase.stats = {\n              ...ctx.state.knowledgeBase.stats,\n              file_count: kbHealthData.files.total_files || 0,\n              unprocessed_files: kbHealthData.files.pending_files || 0,\n            };\n          }\n          if (kbHealthData.vector_stats) {\n            ctx.state.knowledgeBase.stats.chunk_count = kbHealthData.vector_stats.total_vectors || 0;\n          }\n          ctx._updateStatusAlerts(ctx.state.knowledgeBase); \n        }\n      } else {\n        logger.warn(`[${MODULE}][loadKnowledgeBaseHealth] No specific health data found for KB ${kbId} in response.`, { response: healthResp, context: MODULE });\n      }\n      return kbHealthData; \n    } catch(err) {\n      logger.error(`[${MODULE}][loadKnowledgeBaseHealth] Error loading health for KB ${kbId}.`, { error: err, context: MODULE });\n      ctx._showStatusAlert(`Could not load Knowledge Base status: ${err.message}`, \"error\");\n      return null;\n    }\n  }\n\n  /**\n   * Loads and displays the list of files for a project's knowledge base.\n   *\n   * Retrieves the files associated with the specified project and knowledge base, updating the UI to show the files or a placeholder if none are found. If the project or KB ID is missing, or if an error occurs, the files list is cleared and the files section is hidden.\n   *\n   * @param {string} projectId - The project identifier.\n   * @param {string} kbId - The knowledge base identifier.\n   */\n  async function loadKnowledgeBaseFiles(projectId, kbId) {\n    logger.info(`[${MODULE}][loadKnowledgeBaseFiles] Called for project: ${projectId}, KB ID: ${kbId}`, { context: MODULE });\n    await appReadyPromise;\n    logger.debug(`[${MODULE}][loadKnowledgeBaseFiles] App is ready. Proceeding.`, { context: MODULE });\n\n    if (!projectId || !kbId) {\n      logger.warn(`[${MODULE}][loadKnowledgeBaseFiles] Project ID or KB ID missing. Clearing files list.`, { projectId, kbId, context: MODULE });\n      _renderKnowledgeBaseFiles({ files: [], pagination: { total: 0 } }); // Clear UI\n      ctx.elements.knowledgeBaseFilesSection?.classList.add(\"hidden\");\n      return;\n    }\n\n    try {\n      const response = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-bases/files-list`, // Assuming this is the correct endpoint for a specific KB's files or all project files for KB context\n        { method: \"GET\" }\n      );\n      logger.debug(`[${MODULE}][loadKnowledgeBaseFiles] API response for files list:`, { response: response, context: MODULE });\n\n      if (response.success && response.data) {\n        logger.info(`[${MODULE}][loadKnowledgeBaseFiles] Successfully loaded ${response.data.files?.length || 0} files for KB ${kbId}.`, { context: MODULE });\n        _renderKnowledgeBaseFiles(response.data); // UI update\n        ctx.elements.knowledgeBaseFilesSection?.classList.toggle(\"hidden\", response.data.files.length === 0);\n      } else {\n        logger.warn(`[${MODULE}][loadKnowledgeBaseFiles] API reported no success or no data for KB ${kbId}. Clearing files list.`, { response, context: MODULE });\n        _renderKnowledgeBaseFiles({ files: [], pagination: { total: 0 } }); // Clear UI\n        ctx.elements.knowledgeBaseFilesSection?.classList.add(\"hidden\");\n      }\n    } catch (error) {\n      logger.error(`[${MODULE}][loadKnowledgeBaseFiles] Error loading files for KB ${kbId}.`, { error: error, context: MODULE });\n      _renderKnowledgeBaseFiles({ files: [], pagination: { total: 0 } }); // Clear UI on error\n      ctx.elements.knowledgeBaseFilesSection?.classList.add(\"hidden\");\n      ctx._showStatusAlert(`Could not load files for Knowledge Base: ${error.message}`, \"error\");\n    }\n  }\n\n  /**\n   * Render the list of knowledge base files in the UI.\n   * @param {Object} filesData - Data containing the list of files and pagination info.\n   */\n  function _renderKnowledgeBaseFiles(filesData) {\n    const container = ctx.elements.knowledgeBaseFilesListContainer;\n    if (!container) return;\n\n    ctx._safeSetInnerHTML(container, \"\"); // Clear previous content\n\n    if (!filesData || !filesData.files || filesData.files.length === 0) {\n      ctx._safeSetInnerHTML(container, '<p class=\"text-base-content/60 text-center py-4\">No files currently in the Knowledge Base.</p>');\n      return;\n    }\n\n    const ul = ctx.domAPI.createElement(\"ul\");\n    ul.className = \"space-y-2\";\n\n    filesData.files.forEach(file => {\n      const li = ctx.domAPI.createElement(\"li\");\n      li.className = \"flex items-center justify-between p-2 bg-base-200 rounded-md hover:bg-base-300 transition-colors\";\n\n      const processingStatus = file.config?.search_processing?.status || 'unknown';\n      let statusBadgeClass = 'badge-ghost';\n      if (processingStatus === 'success') statusBadgeClass = 'badge-success';\n      else if (processingStatus === 'error') statusBadgeClass = 'badge-error';\n      else if (processingStatus === 'pending') statusBadgeClass = 'badge-warning';\n\n      ctx._safeSetInnerHTML(li, `\n        <div class=\"flex items-center gap-3 truncate\">\n          <span class=\"text-xl\">${ctx.uiUtils.fileIcon(file.file_type)}</span>\n          <div class=\"truncate\">\n            <span class=\"font-medium text-sm block truncate\" title=\"${file.filename}\">${file.filename}</span>\n            <span class=\"text-xs text-base-content/70\">${ctx.uiUtils.formatBytes(file.file_size)}</span>\n          </div>\n        </div>\n        <div class=\"flex items-center gap-2\">\n          <span class=\"badge ${statusBadgeClass} badge-sm capitalize\">${processingStatus}</span>\n          <button data-file-id=\"${file.id}\" class=\"btn btn-xs btn-error btn-outline kb-delete-file-btn\" title=\"Delete file from KB\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3 w-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" /></svg>\n          </button>\n        </div>\n      `);\n\n      const deleteBtn = li.querySelector(\".kb-delete-file-btn\");\n      if (deleteBtn) {\n        ctx.eventHandlers.trackListener(deleteBtn, \"click\", (e) => {\n          e.stopPropagation(); // Prevent li click if any\n          const fileId = deleteBtn.dataset.fileId;\n          const projectId = ctx._getCurrentProjectId();\n          if (projectId && fileId) {\n            _handleDeleteKnowledgeBaseFile(projectId, fileId, file.filename);\n          }\n        }, { context: \"file-deletion\" });\n      }\n      ul.appendChild(li);\n    });\n    container.appendChild(ul);\n  }\n\n  /**\n   * Deletes a file from the knowledge base after user confirmation.\n   *\n   * Prompts the user to confirm deletion of the specified file from the knowledge base. If confirmed, sends a request to remove the file and updates the file list, knowledge base health, and project statistics upon success. Displays an error alert if the deletion fails.\n   *\n   * @param {string} projectId - The ID of the project containing the knowledge base.\n   * @param {string} fileId - The ID of the file to delete.\n   * @param {string} filename - The name of the file to display in confirmation dialogs and alerts.\n   *\n   * @throws {Error} If the API request to delete the file fails.\n   */\n  async function _handleDeleteKnowledgeBaseFile(projectId, fileId, filename) {\n    logger.info(`[${MODULE}][_handleDeleteKnowledgeBaseFile] Initiating delete for file: ${filename} (ID: ${fileId}) in project ${projectId}.`, { context: MODULE });\n    await appReadyPromise;\n    logger.debug(`[${MODULE}][_handleDeleteKnowledgeBaseFile] App is ready. Proceeding.`, { context: MODULE });\n\n    const confirmed = await ctx.modalManager.confirmAction({ // Pass as object\n      title: `Delete \"${filename}\"?`,\n      message: \"Are you sure you want to remove this file from the Knowledge Base? This will delete its indexed data.\",\n      confirmText: \"Delete\",\n      confirmClass: \"btn-error\"\n    });\n\n    if (!confirmed) {\n      logger.info(`[${MODULE}][_handleDeleteKnowledgeBaseFile] Deletion of file ${fileId} cancelled by user.`, { context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][_handleDeleteKnowledgeBaseFile] User confirmed deletion for file ${fileId}.`, { context: MODULE });\n\n    try {\n      const response = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-bases/files/${fileId}`,\n        { method: \"DELETE\" }\n      );\n      logger.debug(`[${MODULE}][_handleDeleteKnowledgeBaseFile] API response for delete file ${fileId}:`, { response, context: MODULE });\n\n      if (response.success) {\n        logger.info(`[${MODULE}][_handleDeleteKnowledgeBaseFile] Successfully deleted file ${fileId} from KB for project ${projectId}.`, { context: MODULE });\n        const kbId = ctx.state.knowledgeBase?.id;\n        if (kbId) {\n          logger.debug(`[${MODULE}][_handleDeleteKnowledgeBaseFile] Refreshing file list and health for KB ${kbId}.`, { context: MODULE });\n          loadKnowledgeBaseFiles(projectId, kbId); \n          loadKnowledgeBaseHealth(kbId); \n        }\n        if (ctx.projectManager.loadProjectStats) { \n          logger.debug(`[${MODULE}][_handleDeleteKnowledgeBaseFile] Refreshing project stats for ${projectId}.`, { context: MODULE });\n          ctx.projectManager.loadProjectStats(projectId);\n        }\n      } else {\n        logger.error(`[${MODULE}][_handleDeleteKnowledgeBaseFile] API reported failure for deleting file ${fileId}.`, { responseMessage: response.message, context: MODULE });\n        throw new Error(response.message || \"Failed to delete file from KB.\");\n      }\n    } catch (error) {\n      logger.error(`[${MODULE}][_handleDeleteKnowledgeBaseFile] Error deleting file ${fileId}.`, { error: error, context: MODULE });\n      ctx._showStatusAlert(`Error deleting file \"${filename}\": ${error.message || 'Unknown server error'}`, \"error\");\n    }\n  }\n\n  /**\n   * Attaches a GitHub repository to the current knowledge base using form input values.\n   *\n   * Validates the repository URL and gathers branch and file path information from the UI. On success, updates the knowledge base state with the attached repository details and refreshes the modal, files list, and health metrics.\n   *\n   * @remark If the repository URL is invalid or missing, the operation is aborted without user feedback. Errors during the API request are shown as status alerts.\n   */\n  async function handleAttachGitHubRepo() {\n    logger.info(`[${MODULE}][handleAttachGitHubRepo] Attempting to attach GitHub repo.`, { context: MODULE });\n    await appReadyPromise;\n    logger.debug(`[${MODULE}][handleAttachGitHubRepo] App is ready. Proceeding.`, { context: MODULE });\n\n    const projectId = ctx._getCurrentProjectId();\n    const kbId = ctx.state.knowledgeBase?.id;\n\n    if (!projectId || !kbId) {\n      logger.warn(`[${MODULE}][handleAttachGitHubRepo] Project ID or KB ID missing. Aborting.`, { projectId, kbId, context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][handleAttachGitHubRepo] Project ID: ${projectId}, KB ID: ${kbId}`, { context: MODULE });\n\n    const repoUrl = ctx.elements.kbGitHubRepoUrlInput?.value.trim();\n    const branch = ctx.elements.kbGitHubBranchInput?.value.trim() || \"main\";\n    const filePathsRaw = ctx.elements.kbGitHubFilePathsTextarea?.value.trim();\n    const filePaths = filePathsRaw ? filePathsRaw.split('\\n').map(p => p.trim()).filter(p => p) : null;\n    logger.debug(`[${MODULE}][handleAttachGitHubRepo] Form data:`, { repoUrl, branch, filePathsRaw, context: MODULE });\n\n    if (!repoUrl) {\n      logger.warn(`[${MODULE}][handleAttachGitHubRepo] Repository URL is empty. Aborting.`, { context: MODULE });\n      // TODO: Show user validation error\n      return;\n    }\n    try {\n      new URL(repoUrl); \n    } catch (_) {\n      logger.warn(`[${MODULE}][handleAttachGitHubRepo] Invalid repository URL: ${repoUrl}. Aborting.`, { context: MODULE });\n      // TODO: Show user validation error\n      return;\n    }\n\n    const attachButton = ctx.elements.kbAttachRepoBtn;\n    ctx._setButtonLoading(attachButton, true, \"Attaching...\");\n    logger.debug(`[${MODULE}][handleAttachGitHubRepo] Attach button loading state set.`, { context: MODULE });\n\n    try {\n      const payload = { repo_url: repoUrl, branch };\n      if (filePaths && filePaths.length > 0) {\n        payload.file_paths = filePaths;\n      }\n      logger.debug(`[${MODULE}][handleAttachGitHubRepo] API payload:`, { payload, context: MODULE });\n\n      const response = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-bases/github/attach`,\n        { method: \"POST\", body: payload }\n      );\n      logger.debug(`[${MODULE}][handleAttachGitHubRepo] API response:`, { response, context: MODULE });\n\n      if (response.success && response.data) {\n        logger.info(`[${MODULE}][handleAttachGitHubRepo] Successfully attached GitHub repo ${repoUrl} to KB ${kbId}.`, { context: MODULE });\n        if (ctx.state.knowledgeBase) {\n          ctx.state.knowledgeBase.repo_url = response.data.repo_url; // Assuming API returns the canonical URL\n          ctx.state.knowledgeBase.branch = response.data.branch || branch; // Assuming API returns branch\n          ctx.state.knowledgeBase.file_paths = response.data.file_paths || filePaths; // Assuming API returns paths\n        }\n        showKnowledgeBaseModal(); \n        loadKnowledgeBaseFiles(projectId, kbId); \n        loadKnowledgeBaseHealth(kbId); \n      } else {\n        logger.error(`[${MODULE}][handleAttachGitHubRepo] API reported failure.`, { responseMessage: response.message, context: MODULE });\n        throw new Error(response.message || \"Failed to attach GitHub repository.\");\n      }\n    } catch (error) {\n      logger.error(`[${MODULE}][handleAttachGitHubRepo] Error attaching GitHub repo.`, { error: error, context: MODULE });\n      ctx._showStatusAlert(`Error attaching repository: ${error.message || 'Unknown server error'}`, \"error\");\n    } finally {\n      ctx._setButtonLoading(attachButton, false);\n      logger.debug(`[${MODULE}][handleAttachGitHubRepo] Attach button loading state reset.`, { context: MODULE });\n    }\n  }\n\n  /**\n   * Detaches a GitHub repository from the current knowledge base after user confirmation.\n   *\n   * Prompts the user to confirm detachment, then sends a request to remove the repository and its files from the knowledge base. Updates the UI and internal state on success, or displays an error alert on failure.\n   */\n  async function handleDetachGitHubRepo() {\n    logger.info(`[${MODULE}][handleDetachGitHubRepo] Attempting to detach GitHub repo.`, { context: MODULE });\n    await appReadyPromise;\n    logger.debug(`[${MODULE}][handleDetachGitHubRepo] App is ready. Proceeding.`, { context: MODULE });\n\n    const projectId = ctx._getCurrentProjectId();\n    const kbId = ctx.state.knowledgeBase?.id;\n    const repoUrl = ctx.state.knowledgeBase?.repo_url;\n\n    if (!projectId || !kbId || !repoUrl) {\n      logger.warn(`[${MODULE}][handleDetachGitHubRepo] Project ID, KB ID, or Repo URL missing. Aborting.`, { projectId, kbId, repoUrl, context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][handleDetachGitHubRepo] Project ID: ${projectId}, KB ID: ${kbId}, Repo URL: ${repoUrl}`, { context: MODULE });\n\n    const confirmed = await ctx.modalManager.confirmAction({ // Pass as object\n      title: `Detach \"${repoUrl}\"?`,\n      message: \"Are you sure you want to detach this repository? Files from this repository will be removed from the Knowledge Base.\",\n      confirmText: \"Detach\",\n      confirmClass: \"btn-error\"\n    });\n\n    if (!confirmed) {\n      logger.info(`[${MODULE}][handleDetachGitHubRepo] Detachment of repo ${repoUrl} cancelled by user.`, { context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][handleDetachGitHubRepo] User confirmed detachment for repo ${repoUrl}.`, { context: MODULE });\n\n    const detachButton = ctx.elements.kbDetachRepoBtn;\n    ctx._setButtonLoading(detachButton, true, \"Detaching...\");\n    logger.debug(`[${MODULE}][handleDetachGitHubRepo] Detach button loading state set.`, { context: MODULE });\n\n    try {\n      const response = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-bases/github/detach`,\n        { method: \"POST\", body: { repo_url: repoUrl } } \n      );\n      logger.debug(`[${MODULE}][handleDetachGitHubRepo] API response:`, { response, context: MODULE });\n\n      if (response.success && response.data) { // Assuming response.data might contain status or confirmation\n        logger.info(`[${MODULE}][handleDetachGitHubRepo] Successfully detached GitHub repo ${repoUrl} from KB ${kbId}.`, { context: MODULE });\n        if (ctx.state.knowledgeBase) {\n          delete ctx.state.knowledgeBase.repo_url;\n          delete ctx.state.knowledgeBase.branch;\n          delete ctx.state.knowledgeBase.file_paths;\n        }\n        showKnowledgeBaseModal(); \n        loadKnowledgeBaseFiles(projectId, kbId); \n        loadKnowledgeBaseHealth(kbId); \n      } else {\n        logger.error(`[${MODULE}][handleDetachGitHubRepo] API reported failure.`, { responseMessage: response.message, context: MODULE });\n        throw new Error(response.message || \"Failed to detach GitHub repository.\");\n      }\n    } catch (error) {\n      logger.error(`[${MODULE}][handleDetachGitHubRepo] Error detaching GitHub repo.`, { error: error, context: MODULE });\n      ctx._showStatusAlert(`Error detaching repository: ${error.message || 'Unknown server error'}`, \"error\");\n    } finally {\n      ctx._setButtonLoading(detachButton, false);\n      logger.debug(`[${MODULE}][handleDetachGitHubRepo] Detach button loading state reset.`, { context: MODULE });\n    }\n  }\n\n  /**\n   * Validate dimension compatibility on model change\n   */\n  function validateSelectedModelDimensions() {\n    const sel = ctx.elements.modelSelect;\n    if (!sel) return;\n    const parent = sel.closest(\".form-control\");\n    if (!parent) return;\n    let warning = parent.querySelector(\".model-error\");\n    const opt = sel.options[sel.selectedIndex];\n    if (opt.disabled) { // Assuming disabled options are due to dimension mismatch\n      if (!warning) {\n        const labelDiv = parent.querySelector(\".label:last-of-type\") || parent.querySelector(\"p.text-xs.text-base-content\\\\/70.mt-1\")?.previousElementSibling;\n        if (labelDiv) {\n          warning = ctx.domAPI.createElement(\"span\");\n          warning.className = \"label-text-alt text-error model-error\";\n          labelDiv.appendChild(warning);\n        } else { // Fallback if specific label structure not found\n          warning = ctx.domAPI.createElement(\"div\");\n          warning.className = \"text-error text-xs mt-1 model-error\";\n          sel.insertAdjacentElement(\"afterend\", warning);\n        }\n      }\n      warning.textContent = \"Changing dimensions requires reprocessing all files!\";\n      warning.classList.remove(\"hidden\");\n    } else if (warning) {\n      warning.classList.add(\"hidden\");\n      warning.textContent = \"\";\n    }\n  }\n\n  /**\n   * Update model selection dropdown\n   * @param {string|null} currentModel\n   */\n  function _updateModelSelection(currentModel) {\n    const selectEl = ctx.elements.modelSelect || ctx.domAPI.getElementById(\"embeddingModelSelect\"); // Fallback ID\n    if (!selectEl) return;\n\n    if (currentModel) {\n      let modelFound = false;\n      for (let i = 0; i < selectEl.options.length; i++) {\n        if (selectEl.options[i].value === currentModel) {\n          selectEl.selectedIndex = i;\n          modelFound = true;\n          break;\n        }\n      }\n      // If the current model isn't in the list, add it (e.g., if it's custom or from an older config)\n      if (!modelFound) {\n        const newOption = new Option(`${currentModel} (Current)`, currentModel, false, true); // text, value, defaultSelected, selected\n        selectEl.add(newOption);\n        selectEl.value = currentModel; // Ensure it's selected\n      }\n    } else {\n      selectEl.selectedIndex = 0; // Default to the first option if no current model\n    }\n    validateSelectedModelDimensions(); // Check for warnings after updating\n  }\n\n  // Module/component cleanup function\n  function cleanup() {\n    // Clean up any event listeners, intervals, etc.\n    ctx.eventHandlers.cleanupListeners({ context: \"file-deletion\" });\n\n  }\n\n  return {\n    toggleKnowledgeBase,\n    reprocessFiles,\n    handleKnowledgeBaseFormSubmit,\n    handleDeleteKnowledgeBase,\n    showKnowledgeBaseModal,\n    hideKnowledgeBaseModal,\n    loadKnowledgeBaseHealth,\n    loadKnowledgeBaseFiles,\n    handleAttachGitHubRepo,\n    handleDetachGitHubRepo,\n    validateSelectedModelDimensions,\n    _updateModelSelection, // Expose for direct use if needed by main component\n    cleanup, // Expose cleanup to allow proper resource release\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1183,
          "bodySize": 49695,
          "_transferSize": 50878,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:00.332Z",
        "time": 95.47799998836126,
        "timings": {
          "blocked": 40.485999995716845,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07900000000000063,
          "wait": 53.61900000568852,
          "receive": 1.293999986955896,
          "_blocked_queueing": 0.9759999957168475,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "loadTemplate",
                "scriptId": "187",
                "url": "http://localhost:8000/static/js/utils/htmlTemplateLoader.js",
                "lineNumber": 112,
                "columnNumber": 21
              },
              {
                "functionName": "",
                "scriptId": "174",
                "url": "http://localhost:8000/static/js/app.js",
                "lineNumber": 697,
                "columnNumber": 50
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "init",
                  "scriptId": "174",
                  "url": "http://localhost:8000/static/js/app.js",
                  "lineNumber": 689,
                  "columnNumber": 11
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "",
                    "scriptId": "174",
                    "url": "http://localhost:8000/static/js/app.js",
                    "lineNumber": 988,
                    "columnNumber": 12
                  },
                  {
                    "functionName": "",
                    "scriptId": "174",
                    "url": "http://localhost:8000/static/js/app.js",
                    "lineNumber": 1001,
                    "columnNumber": 4
                  }
                ]
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/html/modals.html",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1368,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "27667"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"c2a08329bbcdeeef9f4c13782ff8cbe9\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 05:22:24 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 27667,
            "mimeType": "text/html",
            "compression": 0,
            "text": "<a href=\"#main-content\" class=\"skip-to-content sr-only focus:not-sr-only\">Skip to main content</a>\n\n<!-- Project Creation/Edit Modal (Enhanced for Accessibility) -->\n<dialog id=\"projectModal\" class=\"modal modal-bottom sm:modal-middle\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"projectModalTitle\">\n    <div class=\"modal-box max-w-2xl\">\n        <div class=\"flex justify-between items-center mb-6\">\n            <h3 id=\"projectModalTitle\" class=\"text-2xl font-bold\">Create New Project</h3>\n            <button id=\"projectModalCloseBtn\" type=\"button\" class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\" aria-label=\"Close dialog\">\n                <span class=\"sr-only\">Close</span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n        <form id=\"projectModalForm\">\n            <input type=\"hidden\" id=\"projectModalIdInput\" name=\"projectId\" value=\"\" />\n            <div class=\"form-control-enhanced\">\n                <label for=\"projectModalNameInput\" class=\"label\">\n                    <span class=\"label-text font-medium\">Project Name <span class=\"text-error\">*</span></span>\n                </label>\n                <input id=\"projectModalNameInput\"\n                       name=\"name\"\n                       type=\"text\"\n                       required\n                       aria-required=\"true\"\n                       autocomplete=\"off\"\n                       class=\"input input-bordered w-full validator\"\n                       aria-describedby=\"projectModalNameInput-hint\" />\n                <p id=\"projectModalNameInput-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n            </div>\n\n            <div class=\"form-control-enhanced\">\n                <label for=\"projectModalDescInput\" class=\"block text-sm font-medium text-base-content\">\n                    Description\n                </label>\n                <textarea id=\"projectModalDescInput\"\n                          name=\"description\"\n                          rows=\"3\"\n                          placeholder=\"Description helps organize and understand project purpose\"\n                          class=\"textarea textarea-bordered w-full\"></textarea>\n            </div>\n\n            <div class=\"form-control-enhanced\">\n                <label for=\"projectModalGoalsInput\" class=\"block text-sm font-medium text-base-content\">\n                    Goals\n                </label>\n                <textarea id=\"projectModalGoalsInput\"\n                          name=\"goals\"\n                          rows=\"3\"\n                          placeholder=\"What are the main objectives of this project?\"\n                          class=\"textarea textarea-bordered w-full\"></textarea>\n            </div>\n\n            <div class=\"form-control-enhanced\">\n                <label for=\"projectModalMaxTokensInput\" class=\"block text-sm font-medium text-base-content\">\n                    Maximum Tokens\n                </label>\n                <input id=\"projectModalMaxTokensInput\"\n                       name=\"maxTokens\"\n                       type=\"number\"\n                       value=\"200000\"\n                       min=\"50000\"\n                       max=\"500000\"\n                       autocomplete=\"off\"\n                       class=\"input input-bordered w-full validator\" />\n                <p class=\"text-base-content/60 text-xs mt-1\">\n                    Maximum token limit for this project (50,000 - 500,000)\n                </p>\n            </div>\n\n            <!-- Loading indicator -->\n            <div id=\"projectModalLoading\" class=\"loading-container hidden my-4\">\n                <div class=\"loading loading-spinner loading-md text-primary\"></div>\n                <span class=\"ml-2\">Processing request...</span>\n            </div>\n\n            <div class=\"modal-action\">\n                <kbd class=\"kbd-shortcut hidden md:inline-flex mr-auto\">\n                    <kbd class=\"kbd kbd-sm\">Esc</kbd> <span class=\"mx-1\">to cancel</span>\n                </kbd>\n                <button type=\"button\" id=\"projectCancelBtn\"\n                    class=\"btn btn-ghost\"\n                    aria-label=\"Cancel and close dialog\">\n                    Cancel\n                </button>\n                <button type=\"submit\" id=\"projectSaveBtn\"\n                    class=\"btn btn-primary\"\n                    aria-label=\"Save project\">\n                    Save Project\n                </button>\n            </div>\n        </form>\n    </div>\n    <form method=\"dialog\" class=\"modal-backdrop\">\n        <button>close</button>\n    </form>\n</dialog>\n\n<!-- Custom Instructions Modal -->\n<div id=\"instructionsModal\" class=\"modal hidden\">\n    <div class=\"modal-box max-w-lg w-full max-h-[90vh] overflow-y-auto\">\n        <div class=\"flex justify-between items-center mb-4\">\n            <h3 class=\"text-xl font-semibold\">Custom Instructions</h3>\n            <button id=\"closeInstructionsBtn\" type=\"button\" class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\">\n                <span class=\"sr-only\">Close</span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6\n                18L18 6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n        <div class=\"mb-4\">\n            <p class=\"text-sm text-base-content/80 mb-2\">\n                Custom instructions are sent at the beginning of every conversation in this project.\n            </p>\n            <textarea id=\"customInstructionsInput\" rows=\"8\"\n                class=\"w-full px-3 py-2 border border-base-300 rounded-lg shadow-xs focus:outline-hidden focus:ring-primary focus:border-primary h-20\"\n                placeholder=\"Enter instructions for the AI to follow in this project...\"></textarea>\n        </div>\n        <div class=\"flex justify-end gap-2\">\n            <button id=\"cancelInstructionsBtn\" type=\"button\"\n                class=\"btn btn-outline\">\n                Cancel\n            </button>\n            <button id=\"saveInstructionsBtn\" type=\"button\"\n                class=\"btn btn-primary\">\n                Save Instructions\n            </button>\n        </div>\n    </div>\n</div>\n\n<!-- Delete Confirmation Modal -->\n<dialog id=\"deleteConfirmModal\" class=\"modal\">\n    <div class=\"modal-box max-w-md w-full\">\n        <h3 class=\"text-xl font-semibold mb-4\">Confirm Delete</h3>\n        <p id=\"deleteConfirmText\" class=\"mb-6\">Are you sure you want to delete this item?</p>\n        <div class=\"flex justify-end gap-2\">\n            <button id=\"cancelDeleteBtn\" type=\"button\"\n                class=\"btn btn-outline\">\n                Cancel\n            </button>\n            <button id=\"confirmDeleteBtn\" type=\"button\"\n                class=\"btn btn-error\">\n                Delete\n            </button>\n        </div>\n    </div>\n</dialog>\n\n<!-- Generic Confirmation Modal (Added for ModalManager.confirmAction) -->\n<dialog id=\"confirmActionModal\" class=\"modal\" aria-labelledby=\"confirmActionTitle\">\n  <div class=\"modal-box max-w-md w-full\">\n    <form method=\"dialog\">\n        <!-- Close button top right -->\n        <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2 min-w-[44px] min-h-[44px]\" aria-label=\"Close dialog\">\n          <span class=\"sr-only\">Close</span>✕\n        </button>\n    </form>\n    <h3 id=\"confirmActionTitle\" class=\"font-bold text-lg\">Confirm Action</h3>\n    <p class=\"py-4\">Are you sure you want to proceed?</p>\n    <div class=\"modal-action\">\n      <button id=\"cancelActionBtn\" type=\"button\" class=\"btn btn-outline\">Cancel</button>\n      <button id=\"confirmActionBtn\" type=\"button\" class=\"btn btn-primary\">Confirm</button>\n    </div>\n  </div>\n   <form method=\"dialog\" class=\"modal-backdrop\">\n     <button>close</button>\n   </form>\n</dialog>\n\n<!-- Error Modal -->\n<dialog id=\"errorModal\" class=\"modal\" aria-labelledby=\"errorModalTitle\">\n  <div class=\"modal-box max-w-md w-full\">\n    <form method=\"dialog\">\n        <!-- Close button top right -->\n        <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2 min-w-[44px] min-h-[44px]\" aria-label=\"Close dialog\">\n          <span class=\"sr-only\">Close</span>✕\n        </button>\n    </form>\n    <div class=\"flex items-center gap-3 mb-4\">\n      <div class=\"text-error\">\n        <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.268 19.5c-.77.833.192 2.5 1.732 2.5z\"/>\n        </svg>\n      </div>\n      <h3 id=\"errorModalTitle\" class=\"font-bold text-lg text-error\">Error</h3>\n    </div>\n    <div class=\"mb-4\">\n      <p id=\"errorModalMessage\" class=\"text-base-content\">An error has occurred.</p>\n      <div id=\"errorModalDetails\" class=\"mt-2 text-sm text-base-content/70 hidden\">\n        <details class=\"collapse collapse-arrow\">\n          <summary class=\"collapse-title text-xs font-medium\">Technical Details</summary>\n          <div class=\"collapse-content\">\n            <pre id=\"errorModalDetailsContent\" class=\"text-xs bg-base-200 p-2 rounded whitespace-pre-wrap overflow-auto max-h-32\"></pre>\n          </div>\n        </details>\n      </div>\n    </div>\n    <div class=\"modal-action\">\n      <button id=\"errorModalOkBtn\" type=\"button\" class=\"btn btn-primary\">OK</button>\n    </div>\n  </div>\n  <form method=\"dialog\" class=\"modal-backdrop\">\n    <button>close</button>\n  </form>\n</dialog>\n\n\n<!-- Content View Modal (for files and artifacts) -->\n<div id=\"contentViewModal\" class=\"modal hidden\">\n    <div class=\"modal-box max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        <div class=\"flex justify-between items-center mb-4\">\n            <h3 id=\"contentViewModalTitle\" class=\"text-xl font-semibold\">File Content</h3>\n            <button id=\"closeContentViewModalBtn\" type=\"button\" class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\">\n                <span class=\"sr-only\">Close</span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18\n                6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n        <div id=\"contentViewModalContent\"></div>\n    </div>\n</div>\n\n<!-- Knowledge Base Settings Modal (Enhanced) -->\n<dialog id=\"knowledgeBaseSettingsModal\" class=\"modal\" data-kb-debug=\"true\">\n    <div class=\"modal-box max-w-lg w-full\">\n        <div class=\"flex justify-between items-center mb-4\">\n            <h3 id=\"knowledgeBaseSettingsTitle\" class=\"text-xl font-semibold\">Knowledge Base Settings</h3>\n            <button id=\"closeKnowledgeSettingsBtn\" type=\"button\" class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\" aria-label=\"Close dialog\">\n                <span class=\"sr-only\">Close</span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n\n        <form id=\"knowledgeBaseForm\">\n            <input type=\"hidden\" id=\"knowledgeBaseIdInput\" name=\"knowledge_base_id\" value=\"\" />\n\n            <div class=\"form-control-enhanced\">\n                <label for=\"knowledgeBaseNameInput\" class=\"block text-sm font-medium text-base-content\">\n                    Knowledge Base Name <span class=\"text-error\">*</span>\n                </label>\n                <input id=\"knowledgeBaseNameInput\"\n                       name=\"name\"\n                       type=\"text\"\n                       required\n                       aria-required=\"true\"\n                       autocomplete=\"off\"\n                       placeholder=\"Enter a descriptive name for this knowledge base\"\n                       class=\"input input-bordered w-full validator\"\n                       aria-describedby=\"knowledgeBaseNameInput-hint\" />\n                <p id=\"knowledgeBaseNameInput-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n            </div>\n\n            <div class=\"form-control-enhanced\">\n                <label for=\"knowledgeBaseDescInput\" class=\"block text-sm font-medium text-base-content\">\n                    Description\n                </label>\n                <textarea id=\"knowledgeBaseDescInput\"\n                          name=\"description\"\n                          rows=\"3\"\n                          placeholder=\"Describe the purpose and content of this knowledge base\"\n                          class=\"textarea textarea-bordered w-full\"></textarea>\n            </div>\n\n            <div class=\"form-control-enhanced\">\n                <label for=\"embeddingModelSelect\" class=\"block text-sm font-medium text-base-content\">\n                    Embedding Model\n                </label>\n                <select id=\"embeddingModelSelect\"\n                        name=\"embedding_model\"\n                        class=\"select select-bordered w-full\">\n                    <option value=\"all-MiniLM-L6-v2\" selected>all-MiniLM-L6-v2 (384d • Fast • Default)</option>\n                    <option value=\"text-embedding-3-small\">OpenAI: text-embedding-3-small (1536d • Recommended)</option>\n                    <option value=\"text-embedding-3-large\">OpenAI: text-embedding-3-large (3072d • Largest)</option>\n                    <option value=\"embed-english-v3.0\">Cohere: embed-english-v3.0 (1024d • English Only)</option>\n                </select>\n                <div class=\"model-error text-error text-xs mt-1 hidden\"></div>\n                <p class=\"text-xs text-base-content/70 mt-1\">\n                    The embedding model determines how text is converted to vector representations for semantic search.\n                </p>\n            </div>\n\n            <fieldset class=\"border border-base-300 rounded-box p-3 mt-4\">\n                <legend class=\"text-sm font-medium px-1\">Processing Options</legend>\n\n                <div class=\"form-control mb-2\">\n                    <label class=\"flex items-center space-x-2 cursor-pointer\">\n                        <input type=\"checkbox\" id=\"processAllFilesCheckbox\" name=\"process_all_files\"\n                               class=\"checkbox checkbox-primary checkbox-sm\" />\n                        <span class=\"label-text\">Process all project files for knowledge search</span>\n                    </label>\n                    <p class=\"text-xs text-base-content/70 mt-1 ml-7\">\n                        This will process all existing files in the project for knowledge search.\n                        New files will be automatically processed when added.\n                    </p>\n                </div>\n\n                <div class=\"form-control\">\n                    <label class=\"flex items-center space-x-2 cursor-pointer\">\n                        <input type=\"checkbox\" id=\"autoEnableCheckbox\" name=\"auto_enable\"\n                               class=\"checkbox checkbox-primary checkbox-sm\" checked />\n                        <span class=\"label-text\">Automatically use knowledge in conversations</span>\n                    </label>\n                    <p class=\"text-xs text-base-content/70 mt-1 ml-7\">\n                        When enabled, the AI will automatically search project files for relevant information\n                        when answering questions.\n                    </p>\n                </div>\n            </fieldset>\n\n            <!-- GitHub Repository Integration Section -->\n            <fieldset class=\"border border-base-300 rounded-box p-3 mt-6\">\n                <legend class=\"text-sm font-medium px-1\">GitHub Repository Integration</legend>\n                <div id=\"kbGitHubAttachedRepoInfo\" class=\"mb-3 hidden\">\n                    <p class=\"text-sm\">Currently attached: <strong id=\"kbAttachedRepoUrlDisplay\"></strong> (<span id=\"kbAttachedRepoBranchDisplay\"></span>)</p>\n                    <button type=\"button\" id=\"kbDetachRepoBtn\" class=\"btn btn-xs btn-outline btn-warning mt-1\">Detach Repository</button>\n                </div>\n                <div id=\"kbGitHubAttachForm\">\n                    <div class=\"form-control-enhanced mb-2\">\n                        <label for=\"kbGitHubRepoUrlInput\" class=\"block text-xs font-medium text-base-content\">Repository URL</label>\n                        <input id=\"kbGitHubRepoUrlInput\" name=\"github_repo_url\" type=\"url\" placeholder=\"https://github.com/owner/repo\" class=\"input input-sm input-bordered w-full\" />\n                    </div>\n                    <div class=\"form-control-enhanced mb-2\">\n                        <label for=\"kbGitHubBranchInput\" class=\"block text-xs font-medium text-base-content\">Branch</label>\n                        <input id=\"kbGitHubBranchInput\" name=\"github_branch\" type=\"text\" value=\"main\" class=\"input input-sm input-bordered w-full\" />\n                    </div>\n                    <div class=\"form-control-enhanced mb-3\">\n                        <label for=\"kbGitHubFilePathsTextarea\" class=\"block text-xs font-medium text-base-content\">Specific File Paths (Optional, one per line)</label>\n                        <textarea id=\"kbGitHubFilePathsTextarea\" name=\"github_file_paths\" rows=\"2\" placeholder=\"e.g., src/main.js&#10;docs/README.md\" class=\"textarea textarea-sm textarea-bordered w-full\"></textarea>\n                    </div>\n                    <button type=\"button\" id=\"kbAttachRepoBtn\" class=\"btn btn-sm btn-primary\">Attach Repository</button>\n                </div>\n            </fieldset>\n\n            <!-- Processing status indicator -->\n            <div id=\"kbProcessingStatus\" class=\"alert alert-info shadow-xs mt-4 hidden\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                     class=\"stroke-info shrink-0 w-5 h-5\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                          d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <div>\n                    <h3 class=\"font-bold text-sm\">Processing</h3>\n                    <div class=\"text-xs\">Files will be processed in the background after saving.</div>\n                </div>\n            </div>\n\n            <!-- Loading indicator -->\n            <div id=\"kbSettingsLoading\" class=\"loading-container hidden my-4\">\n                <div class=\"loading loading-spinner loading-md text-primary\"></div>\n                <span class=\"ml-2\">Saving settings...</span>\n            </div>\n\n            <div class=\"flex justify-between items-center mt-6\">\n                <div> <!-- Delete button on the left -->\n                    <button type=\"button\" id=\"deleteKnowledgeBaseBtn\"\n                        class=\"btn btn-error hidden\"> <!-- Initially hidden -->\n                        Delete Knowledge Base\n                    </button>\n                </div>\n                <div class=\"flex gap-2\"> <!-- Existing buttons on the right -->\n                    <kbd class=\"kbd-shortcut hidden md:inline-flex\">\n                        <kbd class=\"kbd kbd-sm\">Esc</kbd> <span class=\"mx-1\">to cancel</span>\n                    </kbd>\n                    <button type=\"button\" id=\"cancelKnowledgeBaseFormBtn\"\n                        class=\"btn btn-outline\">\n                        Cancel\n                    </button>\n                    <button type=\"submit\" id=\"submitKnowledgeBaseFormBtn\"\n                        class=\"btn btn-primary\">\n                        Save Settings\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</dialog>\n\n<!-- Knowledge Result Detail Modal (Enhanced) -->\n<dialog id=\"loginModal\" class=\"modal\" aria-modal=\"true\" role=\"dialog\" aria-labelledby=\"loginRegisterModalTitle\">\n  <div class=\"modal-box max-w-sm\">\n    <button id=\"loginModalCloseBtn\" class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\" aria-label=\"Close dialog\" type=\"button\">\n      <span class=\"sr-only\">Close</span>✕\n    </button>\n    <h3 id=\"loginRegisterModalTitle\" class=\"font-bold text-xl mb-3 mt-2 text-center\">Welcome</h3>\n    <div class=\"flex border-b border-base-200 mb-3\">\n      <button id=\"modalLoginTab\" type=\"button\" class=\"tab tab-bordered flex-1 tab-active rounded-t-lg\" aria-selected=\"true\">Login</button>\n      <button id=\"modalRegisterTab\" type=\"button\" class=\"tab tab-bordered flex-1 rounded-t-lg\" aria-selected=\"false\">Register</button>\n    </div>\n    <div id=\"loginPanel\" class=\"tab-panel\" role=\"tabpanel\" aria-labelledby=\"loginTab\"> <!-- Removed style=\"display:block;\" -->\n      <form id=\"loginModalForm\" class=\"space-y-3\" autocomplete=\"off\" onsubmit=\"return false;\">\n        <div class=\"form-control-enhanced\">\n          <label for=\"loginModalUsername\" class=\"label font-medium\">Username</label>\n          <input type=\"text\" id=\"loginModalUsername\" name=\"username\" required aria-required=\"true\" class=\"input input-bordered w-full validator\" autocomplete=\"username\"/>\n          <p id=\"loginModalUsername-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n        </div>\n        <div class=\"form-control-enhanced\">\n          <label for=\"loginModalPassword\" class=\"label font-medium\">Password</label>\n          <input type=\"password\" id=\"loginModalPassword\" name=\"password\" required aria-required=\"true\" class=\"input input-bordered w-full validator\" autocomplete=\"current-password\"/>\n          <p id=\"loginModalPassword-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n        </div>\n        <div id=\"loginModalError\" class=\"hidden text-error text-sm\" role=\"alert\"></div>\n        <div class=\"modal-action flex-col sm:flex-row justify-end gap-2 pt-2\">\n          <button id=\"loginModalSubmitBtn\" type=\"submit\" class=\"btn btn-primary w-full sm:w-auto\">Login</button>\n        </div>\n      </form>\n    </div>\n    <div id=\"registerPanel\" class=\"tab-panel hidden\" role=\"tabpanel\" aria-labelledby=\"registerTab\"> <!-- Added hidden, removed style=\"display:none;\" -->\n      <form id=\"registerModalForm\" class=\"space-y-3\">\n        <div class=\"form-control-enhanced\">\n          <label for=\"registerModalUsername\" class=\"label font-medium\">Username</label>\n          <input type=\"text\" id=\"registerModalUsername\" name=\"username\" required aria-required=\"true\" class=\"input input-bordered w-full validator\" autocomplete=\"username\"/>\n          <p id=\"registerModalUsername-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n        </div>\n        <div class=\"form-control-enhanced\">\n          <label for=\"registerModalPassword\" class=\"label font-medium\">Password</label>\n          <input type=\"password\" id=\"registerModalPassword\" name=\"password\" required aria-required=\"true\" minlength=\"8\" class=\"input input-bordered w-full validator\" autocomplete=\"new-password\"/>\n          <p id=\"registerModalPassword-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n        </div>\n        <div class=\"form-control-enhanced\">\n          <label for=\"registerModalPasswordConfirm\" class=\"label font-medium\">Confirm Password</label>\n          <input type=\"password\" id=\"registerModalPasswordConfirm\" name=\"passwordConfirm\" required aria-required=\"true\" minlength=\"8\" class=\"input input-bordered w-full validator\" autocomplete=\"new-password\"/>\n          <p id=\"registerModalPasswordConfirm-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n        </div>\n        <div id=\"registerModalError\" class=\"hidden text-error text-sm\" role=\"alert\"></div>\n        <div class=\"modal-action flex-col sm:flex-row justify-end gap-2 pt-2\">\n          <button id=\"registerModalSubmitBtn\" type=\"submit\" class=\"btn btn-primary w-full sm:w-auto\">Register</button>\n        </div>\n      </form>\n    </div>\n  </div>\n  <form method=\"dialog\" class=\"modal-backdrop\" tabindex=\"-1\">\n    <button aria-label=\"Close\"></button>\n  </form>\n</dialog>\n\n<dialog id=\"knowledgeResultModal\" class=\"modal\" aria-modal=\"true\" role=\"dialog\" aria-labelledby=\"knowledgeResultTitle\">\n  <div class=\"modal-box max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n      <div class=\"flex justify-between items-center mb-4\">\n          <h3 id=\"knowledgeResultTitle\" class=\"text-xl font-semibold\">Knowledge Result</h3>\n          <button id=\"closeKnowledgeResultBtn\" type=\"button\" class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\" aria-label=\"Close dialog\">\n              <span class=\"sr-only\">Close</span>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\" aria-hidden=\"true\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n          </button>\n      </div>\n\n      <div class=\"card card-compact bg-base-200 shadow-xs mb-4\">\n          <div class=\"card-body p-3\">\n              <div class=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                  <div class=\"flex items-center gap-2\">\n                      <div class=\"badge badge-neutral\">Source</div>\n                      <div id=\"knowledgeResultSource\" class=\"text-sm font-medium truncate\">Filename</div>\n                  </div>\n                  <div class=\"flex items-center gap-2\">\n                      <div class=\"badge badge-neutral\">Relevance</div>\n                      <div id=\"knowledgeResultScore\" class=\"badge badge-lg kb-result-relevance-high\">92%</div>\n                  </div>\n\n                  <div id=\"knowledgeResultMetadata\" class=\"col-span-1 md:col-span-2 flex flex-wrap gap-2 text-xs text-base-content/70 border-t border-base-300 pt-2 mt-1\">\n                      <span class=\"badge badge-ghost badge-sm\">Type: <span id=\"knowledgeResultType\">text</span></span>\n                      <span class=\"badge badge-ghost badge-sm\">Last Modified: <span id=\"knowledgeResultDate\">2024-04-12</span></span>\n                      <span class=\"badge badge-ghost badge-sm\">Size: <span id=\"knowledgeResultSize\">2.4 KB</span></span>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n      <div class=\"bg-base-100 border border-base-300 p-4 rounded-box overflow-x-auto mb-4\">\n          <pre id=\"knowledgeResultContent\" class=\"whitespace-pre-wrap text-sm\" data-sanitize=\"true\"></pre>\n      </div>\n\n      <div class=\"modal-action\">\n          <kbd class=\"kbd-shortcut hidden md:inline-flex mr-auto\">\n              <kbd class=\"kbd kbd-sm\">Ctrl</kbd> + <kbd class=\"kbd kbd-sm\">C</kbd> <span class=\"mx-1\">to copy</span>\n          </kbd>\n          <button id=\"copyContentBtn\" type=\"button\" class=\"btn btn-outline btn-sm\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" />\n              </svg>\n              Copy\n          </button>\n          <button id=\"useInChatBtn\" type=\"button\" class=\"btn btn-primary btn-sm\">\n              <svg xmlns=\"http://www.w3.org\n"
          },
          "redirectURL": "",
          "headersSize": 1071,
          "bodySize": 27667,
          "_transferSize": 28738,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:00.455Z",
        "time": 73.872000008123,
        "timings": {
          "blocked": 0.8700000059884041,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.16999999999999998,
          "wait": 39.75399999447167,
          "receive": 33.07800000766292,
          "_blocked_queueing": 0.5550000059884042,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106418",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "loadTemplate",
                "scriptId": "187",
                "url": "http://localhost:8000/static/js/utils/htmlTemplateLoader.js",
                "lineNumber": 112,
                "columnNumber": 21
              },
              {
                "functionName": "loadDetailsTemplate",
                "scriptId": "200",
                "url": "http://localhost:8000/static/js/projectDashboard.js",
                "lineNumber": 1064,
                "columnNumber": 27
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "createProjectDashboard",
                  "scriptId": "200",
                  "url": "http://localhost:8000/static/js/projectDashboard.js",
                  "lineNumber": 1076,
                  "columnNumber": 9
                },
                {
                  "functionName": "initializeCoreSystems",
                  "scriptId": "185",
                  "url": "http://localhost:8000/static/js/init/coreInit.js",
                  "lineNumber": 252,
                  "columnNumber": 29
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "init",
                    "scriptId": "174",
                    "url": "http://localhost:8000/static/js/app.js",
                    "lineNumber": 731,
                    "columnNumber": 15
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "",
                      "scriptId": "174",
                      "url": "http://localhost:8000/static/js/app.js",
                      "lineNumber": 988,
                      "columnNumber": 12
                    },
                    {
                      "functionName": "",
                      "scriptId": "174",
                      "url": "http://localhost:8000/static/js/app.js",
                      "lineNumber": 1001,
                      "columnNumber": 4
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/html/project_details.html",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1377,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "18640"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"1d14b7b725bb61235f9c84dc0fccdb2e\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 08:26:32 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 18640,
            "mimeType": "text/html",
            "compression": 0,
            "text": "<!-- Mobile-First Project Details Template -->\n<div id=\"projectDetailsContainer\" class=\"project-details-container\">\n<div class=\"project-details\">\n  <!-- Mobile Header -->\n  <header class=\"project-header\">\n    <div class=\"flex items-center gap-3 mb-4\">\n      <button id=\"backToProjectsBtn\" class=\"btn btn-ghost btn-square lg:hidden\">\n        <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"/>\n        </svg>\n      </button>\n      <div class=\"flex-1 min-w-0\">\n        <h1 id=\"projectTitle\" class=\"text-xl lg:text-2xl font-bold truncate\">Project Title</h1>\n        <div class=\"flex items-center gap-2 mt-1\">\n          <!-- Token usage badge removed for mobile refactor -->\n          <span class=\"badge badge-outline badge-sm\">\n            <span id=\"conversationCount\">0</span> chats\n          </span>\n        </div>\n      </div>\n      <div class=\"flex gap-2\">\n        <button id=\"editProjectBtn\" class=\"btn btn-ghost btn-square\">\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"/>\n          </svg>\n        </button>\n        <button id=\"projectMenuBtn\" class=\"btn btn-ghost btn-square\">\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"/>\n          </svg>\n        </button>\n      </div>\n    </div>\n    <!-- Mobile-Optimized Stats -->\n    <div class=\"project-stats\">\n      <!-- Token usage (hook for TokenStatsManager) -->\n      <div id=\"tokenUsageStat\" class=\"project-stat\">\n        <div id=\"tokenStatsCurrentUsage\" class=\"text-2xl font-bold text-warning\">0</div>\n        <div class=\"text-sm text-base-content/70\">Tokens</div>\n        <button id=\"tokenStatsBtn\" class=\"btn btn-ghost btn-xs\" aria-label=\"Token stats\">⋯</button>\n      </div>\n      <div class=\"project-stat\">\n        <div class=\"text-2xl font-bold text-success\" id=\"fileCount\">0</div>\n        <div class=\"text-sm text-base-content/70\">Files</div>\n      </div>\n      <div class=\"project-stat\">\n        <div class=\"text-2xl font-bold text-info\" id=\"artifactCount\">0</div>\n        <div class=\"text-sm text-base-content/70\">Artifacts</div>\n      </div>\n    </div>\n  </header>\n\n  <!-- Mobile-First Tab Navigation -->\n  <div class=\"project-tabs\">\n    <button class=\"project-tab active\" data-tab=\"chat\">\n      <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"/>\n      </svg>\n      Chat\n    </button>\n    <button class=\"project-tab\" data-tab=\"files\">\n      <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"/>\n      </svg>\n      Files\n    </button>\n    <button class=\"project-tab\" data-tab=\"knowledge\">\n      <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"/>\n      </svg>\n      <span class=\"hidden sm:inline\">Knowledge</span>\n      <span class=\"sm:hidden\">KB</span>\n    </button>\n    <button class=\"project-tab\" data-tab=\"settings\">\n      <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"/>\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"/>\n      </svg>\n      Settings\n    </button>\n  </div>\n\n  <!-- Tab Content -->\n  <div class=\"project-tab-content\">\n    <!-- Chat Tab (Mobile-First) -->\n    <div id=\"chatTab\" class=\"tab-pane active\">\n      <!-- Chat interface from chat-mobile.html goes here -->\n      <div class=\"chat-container\">\n        <div id=\"chatMessages\" class=\"chat-messages\"></div>\n        <div class=\"chat-input-container\">\n          <div class=\"chat-input-row\">\n            <input id=\"chatInput\" class=\"chat-input\" type=\"text\" placeholder=\"Type your message...\">\n            <button id=\"chatSendBtn\" class=\"chat-send-btn\">\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"/>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Mobile Conversation History -->\n      <div class=\"mt-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"font-semibold\">Recent Conversations</h3>\n          <button id=\"newConversationBtn\" class=\"btn btn-primary btn-sm\">\n            <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"/>\n            </svg>\n            New\n          </button>\n        </div>\n        <div id=\"conversationsList\" class=\"space-y-2\"></div>\n      </div>\n    </div>\n    <!-- Files Tab -->\n    <div id=\"filesTab\" class=\"tab-pane hidden\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <h3 class=\"font-semibold\">Project Files</h3>\n        <button id=\"uploadFileBtn\" class=\"btn btn-primary btn-sm\">\n          <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"/>\n          </svg>\n          Upload\n        </button>\n      </div>\n      <!-- Enhanced File Upload Component Template (inlined) -->\n      <div id=\"dragDropZone\" class=\"file-upload-container\" tabindex=\"0\"\n           aria-labelledby=\"file-upload-title\" aria-describedby=\"file-upload-instructions\">\n\n        <!-- Upload area -->\n        <div class=\"text-center\">\n          <div class=\"file-upload-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n            </svg>\n          </div>\n          <h3 id=\"file-upload-title\" class=\"file-upload-title\">Upload Files</h3>\n          <p id=\"file-upload-instructions\" class=\"file-upload-instructions\">\n            Drag and drop files here, or <label for=\"fileInput\" class=\"file-upload-browse-btn\">browse</label>\n          </p>\n          <div class=\"text-xs text-base-content/60 mt-1\">\n            Supports: TXT, MD, CSV, JSON, PDF, DOC, DOCX, PY, JS, HTML, CSS\n          </div>\n        </div>\n\n        <!-- Hidden file input -->\n        <input id=\"fileInput\" type=\"file\" class=\"file-upload-input\" multiple\n               aria-label=\"File upload\" accept=\".txt,.md,.csv,.json,.pdf,.doc,.docx,.py,.js,.html,.css\" />\n\n        <!-- File progress indicator (hidden by default) -->\n        <div id=\"filesUploadProgress\" class=\"file-upload-progress hidden\">\n          <div class=\"file-upload-progress-label\" aria-live=\"polite\">\n            Uploading files... <span id=\"file-upload-progress-percent\">0%</span>\n          </div>\n          <div class=\"file-upload-progress-bar\">\n            <progress id=\"fileProgressBar\" value=\"0\" max=\"100\" class=\"progress progress-primary w-full\"></progress>\n          </div>\n          <p id=\"uploadStatus\" class=\"text-xs text-base-content/60 mt-1\">Uploading...</p>\n        </div>\n\n        <!-- Error message area (hidden by default) -->\n        <div id=\"file-upload-error\" class=\"file-upload-error hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n\n        <!-- File preview area (hidden by default) -->\n        <ul id=\"file-preview-list\" class=\"file-preview-list hidden\" aria-label=\"Selected files\"></ul>\n      </div>\n\n      <!-- File preview item template (cloned by JS) -->\n      <template id=\"file-preview-template\">\n        <li class=\"file-preview-item\">\n          <div class=\"file-preview-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n            </svg>\n          </div>\n          <div class=\"file-preview-details\">\n            <div class=\"file-preview-name\" title=\"\\${filename}\">\\${filename}</div>\n            <div class=\"file-preview-info\">\n              <span class=\"file-preview-type\">\\${filetype}</span>\n              <span class=\"file-preview-size\">\\${filesize}</span>\n            </div>\n          </div>\n          <div class=\"file-preview-actions\">\n            <button type=\"button\" class=\"file-preview-delete\" aria-label=\"Remove file\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n        </li>\n      </template>\n\n      <!-- Error and success status icons (for state changes) -->\n      <template id=\"upload-status-icons\">\n        <svg class=\"upload-success-icon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n        </svg>\n        <svg class=\"upload-error-icon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n        <svg class=\"upload-file-icon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n        </svg>\n        <svg class=\"upload-image-icon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n        </svg>\n        <svg class=\"upload-pdf-icon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n          <text x=\"12\" y=\"16\" text-anchor=\"middle\" font-size=\"7\" font-weight=\"bold\" fill=\"currentColor\">PDF</text>\n        </svg>\n      </template>\n      <!-- File List -->\n      <div id=\"filesList\" class=\"grid gap-3\"></div>\n    </div>\n    <!-- Knowledge Tab -->\n    <div id=\"knowledgeTab\" class=\"tab-pane hidden\">\n      <div class=\"mb-4\">\n        <h3 class=\"font-semibold mb-2\">Knowledge Base</h3>\n        <!-- Enhanced Knowledge Base Component Template (inlined) -->\n        <div class=\"knowledge-base-component\">\n          <!-- Knowledge Base Toggle -->\n          <div class=\"kb-toggle-section mb-4\">\n            <label class=\"flex items-center space-x-3\">\n              <input type=\"checkbox\" id=\"kbToggle\" class=\"form-checkbox h-5 w-5 text-blue-600\">\n              <span class=\"text-sm font-medium text-gray-700\">Enable Knowledge Base</span>\n            </label>\n            <p class=\"text-xs text-gray-500 mt-1\">\n              Use uploaded documents to enhance AI responses\n            </p>\n          </div>\n          <div class=\"kb-controls space-y-3\">\n            <div class=\"model-selection\">\n              <label for=\"modelSelect\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n                Embedding Model\n              </label>\n              <select id=\"modelSelect\" class=\"form-select w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\">\n                <option value=\"\">Select a model...</option>\n                <option value=\"text-embedding-ada-002\">OpenAI Ada-002</option>\n                <option value=\"text-embedding-3-small\">OpenAI Embedding-3-Small</option>\n                <option value=\"text-embedding-3-large\">OpenAI Embedding-3-Large</option>\n              </select>\n            </div>\n            <div class=\"kb-actions flex flex-wrap gap-2\">\n              <button id=\"setupButton\"\n                      class=\"btn btn-primary px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50\">\n                Setup KB\n              </button>\n              <button id=\"reprocessButton\"\n                      class=\"btn btn-secondary px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 disabled:opacity-50\">\n                Reprocess\n              </button>\n              <button id=\"settingsButton\"\n                      class=\"btn btn-outline px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\">\n                Settings\n              </button>\n            </div>\n            <!-- Status Display -->\n            <div id=\"kbStatus\" class=\"kb-status\"></div>\n            <!-- Processing Progress -->\n            <div id=\"kbProgress\" class=\"kb-progress hidden\">\n              <div class=\"flex items-center justify-between text-sm text-gray-600 mb-2\">\n                <span>Processing knowledge base...</span>\n                <span class=\"progress-percentage\">0%</span>\n              </div>\n              <div class=\"w-full bg-gray-200 rounded-full h-2\">\n                <div class=\"bg-green-600 h-2 rounded-full transition-all duration-300\" style=\"width: 0%\"></div>\n              </div>\n            </div>\n            <!-- Knowledge Base Info -->\n            <div id=\"kbInfo\" class=\"kb-info hidden\">\n              <div class=\"bg-blue-50 border border-blue-200 rounded-md p-3\">\n                <h4 class=\"text-sm font-medium text-blue-800 mb-2\">Knowledge Base Status</h4>\n                <div class=\"text-sm text-blue-700\">\n                  <div class=\"kb-stats space-y-1\">\n                    <div>Documents: <span id=\"kbDocCount\">0</span></div>\n                    <div>Chunks: <span id=\"kbChunkCount\">0</span></div>\n                    <div>Last Updated: <span id=\"kbLastUpdated\">Never</span></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- Search Results -->\n      <div id=\"knowledgeResults\" class=\"space-y-3\"></div>\n    </div>\n    <!-- Settings Tab -->\n    <div id=\"settingsTab\" class=\"tab-pane hidden\">\n      <div class=\"space-y-6\">\n        <!-- Project Settings -->\n        <div class=\"card\">\n          <h3 class=\"font-semibold mb-3\">Project Settings</h3>\n          <div class=\"space-y-4\">\n            <div>\n              <label class=\"block text-sm font-medium mb-1\">Project Name</label>\n              <input id=\"projectNameInput\" type=\"text\" class=\"input w-full\">\n            </div>\n            <div>\n              <label class=\"block text-sm font-medium mb-1\">Description</label>\n              <textarea id=\"projectDescriptionInput\" class=\"textarea w-full\" rows=\"3\"></textarea>\n            </div>\n          </div>\n        </div>\n        <!-- Danger Zone -->\n        <div class=\"card border-error/20\">\n          <h3 class=\"font-semibold text-error mb-3\">Danger Zone</h3>\n          <div class=\"space-y-3\">\n            <button id=\"archiveProjectBtn\" class=\"btn btn-warning w-full\">\n              <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\"/>\n              </svg>\n              Archive Project\n            </button>\n            <button id=\"deleteProjectBtn\" class=\"btn btn-error w-full\">\n              <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"/>\n              </svg>\n              Delete Project\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n<!-- Mobile FAB for Quick Actions -->\n<button id=\"projectFab\" class=\"fixed bottom-20 right-4 w-14 h-14 bg-primary text-primary-content rounded-full shadow-lg lg:hidden\">\n  <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"/>\n  </svg>\n</button>\n"
          },
          "redirectURL": "",
          "headersSize": 1071,
          "bodySize": 18640,
          "_transferSize": 19711,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:00.554Z",
        "time": 101.53500000888016,
        "timings": {
          "blocked": 0.8939999997280539,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.131,
          "wait": 99.55400000565406,
          "receive": 0.9560000034980476,
          "_blocked_queueing": 0.5579999997280538,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106593",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "loadTemplate",
                "scriptId": "187",
                "url": "http://localhost:8000/static/js/utils/htmlTemplateLoader.js",
                "lineNumber": 112,
                "columnNumber": 21
              },
              {
                "functionName": "loadListTemplate",
                "scriptId": "200",
                "url": "http://localhost:8000/static/js/projectDashboard.js",
                "lineNumber": 1095,
                "columnNumber": 27
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "createProjectDashboard",
                  "scriptId": "200",
                  "url": "http://localhost:8000/static/js/projectDashboard.js",
                  "lineNumber": 1107,
                  "columnNumber": 9
                },
                {
                  "functionName": "initializeCoreSystems",
                  "scriptId": "185",
                  "url": "http://localhost:8000/static/js/init/coreInit.js",
                  "lineNumber": 252,
                  "columnNumber": 29
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "init",
                    "scriptId": "174",
                    "url": "http://localhost:8000/static/js/app.js",
                    "lineNumber": 731,
                    "columnNumber": 15
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "",
                      "scriptId": "174",
                      "url": "http://localhost:8000/static/js/app.js",
                      "lineNumber": 988,
                      "columnNumber": 12
                    },
                    {
                      "functionName": "",
                      "scriptId": "174",
                      "url": "http://localhost:8000/static/js/app.js",
                      "lineNumber": 1001,
                      "columnNumber": 4
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/html/project_list.html",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1374,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "2572"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"d590720fe902f026345b7c30d0bb3e72\""
            },
            {
              "name": "last-modified",
              "value": "Thu, 22 May 2025 21:12:22 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2572,
            "mimeType": "text/html",
            "compression": 0,
            "text": "<!-- Mobile-First Project List -->\n<div id=\"projectListContainer\" class=\"project-list-container\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-6\">\n    <h1 class=\"text-2xl font-bold\">Projects</h1>\n    <button id=\"createProjectBtn\" class=\"btn btn-primary\">\n      <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"/>\n      </svg>\n      <span class=\"hidden sm:inline\">New Project</span>\n      <span class=\"sm:hidden\">New</span>\n    </button>\n  </div>\n\n  <!-- Filters -->\n  <div id=\"projectFilterTabs\" class=\"flex gap-2 mb-4 overflow-x-auto scrollbar-none\" role=\"tablist\">\n    <button class=\"tab btn btn-ghost btn-sm active\"   data-filter=\"all\"      id=\"filterTabAll\"      aria-selected=\"true\">All</button>\n    <button class=\"tab btn btn-ghost btn-sm\"          data-filter=\"recent\"   id=\"filterTabRecent\"   aria-selected=\"false\">Recent</button>\n    <button class=\"tab btn btn-ghost btn-sm\"          data-filter=\"pinned\"   id=\"filterTabPinned\"   aria-selected=\"false\">Pinned</button>\n    <button class=\"tab btn btn-ghost btn-sm\"          data-filter=\"archived\" id=\"filterTabArchived\" aria-selected=\"false\">Archived</button>\n  </div>\n\n  <!-- Search -->\n  <div class=\"relative mb-6\">\n    <input\n      type=\"search\"\n      class=\"input w-full pl-10\"\n      placeholder=\"Search projects...\"\n      inputmode=\"search\"\n      enterkeyhint=\"search\"\n    >\n    <svg class=\"w-5 h-5 absolute left-3 top-1/2 -translate-y-1/2 text-base-content/50\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"/>\n    </svg>\n  </div>\n\n  <!-- Project Grid -->\n  <div id=\"projectCardsPanel\" class=\"mobile-grid\">\n    <!-- Projects will be inserted here -->\n  </div>\n\n  <!-- Empty State -->\n  <div id=\"emptyState\" class=\"empty-state hidden\">\n    <div class=\"empty-state-icon\">\n      <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"/>\n      </svg>\n    </div>\n    <h3 class=\"empty-state-title\">No projects found</h3>\n    <p class=\"empty-state-description\">Create your first project to get started</p>\n    <button class=\"btn btn-primary\">Create Project</button>\n  </div>\n</div>\n"
          },
          "redirectURL": "",
          "headersSize": 1070,
          "bodySize": 2572,
          "_transferSize": 3642,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:00.554Z",
        "time": 100.7860000099754,
        "timings": {
          "blocked": 1.2460000073835253,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.11199999999999999,
          "wait": 81.50400000282563,
          "receive": 17.923999999766238,
          "_blocked_queueing": 0.9030000073835254,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106592",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "fetchImpl",
                "scriptId": "181",
                "url": "http://localhost:8000/static/js/utils/browserService.js",
                "lineNumber": 175,
                "columnNumber": 36
              },
              {
                "functionName": "",
                "scriptId": "183",
                "url": "http://localhost:8000/static/js/utils/apiClient.js",
                "lineNumber": 105,
                "columnNumber": 42
              },
              {
                "functionName": "apiRequest",
                "scriptId": "183",
                "url": "http://localhost:8000/static/js/utils/apiClient.js",
                "lineNumber": 146,
                "columnNumber": 6
              },
              {
                "functionName": "fetchCSRFToken",
                "scriptId": "194",
                "url": "http://localhost:8000/static/js/auth.js",
                "lineNumber": 166,
                "columnNumber": 23
              },
              {
                "functionName": "",
                "scriptId": "194",
                "url": "http://localhost:8000/static/js/auth.js",
                "lineNumber": 189,
                "columnNumber": 28
              },
              {
                "functionName": "getCSRFTokenAsync",
                "scriptId": "194",
                "url": "http://localhost:8000/static/js/auth.js",
                "lineNumber": 195,
                "columnNumber": 6
              },
              {
                "functionName": "init",
                "scriptId": "194",
                "url": "http://localhost:8000/static/js/auth.js",
                "lineNumber": 930,
                "columnNumber": 16
              },
              {
                "functionName": "initializeAuthSystem",
                "scriptId": "197",
                "url": "http://localhost:8000/static/js/init/authInit.js",
                "lineNumber": 69,
                "columnNumber": 17
              },
              {
                "functionName": "init",
                "scriptId": "174",
                "url": "http://localhost:8000/static/js/app.js",
                "lineNumber": 754,
                "columnNumber": 15
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "174",
                  "url": "http://localhost:8000/static/js/app.js",
                  "lineNumber": 988,
                  "columnNumber": 12
                },
                {
                  "functionName": "",
                  "scriptId": "174",
                  "url": "http://localhost:8000/static/js/app.js",
                  "lineNumber": 1001,
                  "columnNumber": 4
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/api/auth/csrf?ts=1748000820562",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [
            {
              "name": "ts",
              "value": "1748000820562"
            }
          ],
          "cookies": [],
          "headersSize": 1413,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "55"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 55,
            "mimeType": "application/json",
            "compression": 0,
            "text": "{\"token\":\"nJYIg804WfCB2hob2dafreIMplilexCNHhppOCDm-J8\"}"
          },
          "redirectURL": "",
          "headersSize": 1015,
          "bodySize": 55,
          "_transferSize": 1070,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:00.563Z",
        "time": 108.3890000008978,
        "timings": {
          "blocked": 6.489999996154569,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.14899999999999997,
          "wait": 100.65999999953713,
          "receive": 1.0900000052060932,
          "_blocked_queueing": 6.070999996154569,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106591",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "other",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/favicon.ico",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "image"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1470,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "0"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "image/vnd.microsoft.icon"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"d24d588668ef1aeab5d2552429ab7688\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "image/vnd.microsoft.icon",
            "compression": 0,
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 1042,
          "bodySize": 0,
          "_transferSize": 1042,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:00.571Z",
        "time": 101.64399999484885,
        "timings": {
          "blocked": 8.046000002558344,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.11699999999999999,
          "wait": 92.88899999560415,
          "receive": 0.5919999966863543,
          "_blocked_queueing": 7.272000002558343,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106591",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "fetchImpl",
                "scriptId": "181",
                "url": "http://localhost:8000/static/js/utils/browserService.js",
                "lineNumber": 175,
                "columnNumber": 36
              },
              {
                "functionName": "",
                "scriptId": "183",
                "url": "http://localhost:8000/static/js/utils/apiClient.js",
                "lineNumber": 105,
                "columnNumber": 42
              },
              {
                "functionName": "apiRequest",
                "scriptId": "183",
                "url": "http://localhost:8000/static/js/utils/apiClient.js",
                "lineNumber": 146,
                "columnNumber": 6
              },
              {
                "functionName": "authRequest",
                "scriptId": "194",
                "url": "http://localhost:8000/static/js/auth.js",
                "lineNumber": 233,
                "columnNumber": 25
              },
              {
                "functionName": "verifyAuthState",
                "scriptId": "194",
                "url": "http://localhost:8000/static/js/auth.js",
                "lineNumber": 419,
                "columnNumber": 27
              },
              {
                "functionName": "init",
                "scriptId": "194",
                "url": "http://localhost:8000/static/js/auth.js",
                "lineNumber": 950,
                "columnNumber": 25
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "initializeAuthSystem",
                  "scriptId": "197",
                  "url": "http://localhost:8000/static/js/init/authInit.js",
                  "lineNumber": 69,
                  "columnNumber": 17
                },
                {
                  "functionName": "init",
                  "scriptId": "174",
                  "url": "http://localhost:8000/static/js/app.js",
                  "lineNumber": 754,
                  "columnNumber": 15
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "",
                    "scriptId": "174",
                    "url": "http://localhost:8000/static/js/app.js",
                    "lineNumber": 988,
                    "columnNumber": 12
                  },
                  {
                    "functionName": "",
                    "scriptId": "174",
                    "url": "http://localhost:8000/static/js/app.js",
                    "lineNumber": 1001,
                    "columnNumber": 4
                  }
                ]
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/api/auth/verify",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1373,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "739"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 739,
            "mimeType": "application/json",
            "compression": 0,
            "text": "{\"authenticated\":true,\"user\":{\"id\":1,\"username\":\"hperkins\",\"token_version\":0,\"project_ids\":[\"f304c5f9-fd3d-4a21-9073-ce455971943b\"],\"conversation_ids\":[\"c8b7f7aa-ae5d-4d9b-b50c-2d5b83066840\",\"44537c46-82e0-4589-b09d-0d84b2565552\",\"113d2eec-3626-4152-8b2b-90ef5903020a\",\"2fdd55b9-bac5-49f3-99e5-914903d2cb95\",\"fccfee97-aa2b-4d9c-a46a-83b6d2d8d70a\",\"aa92e1d1-8504-41a5-b662-1a5ac4115a08\",\"3a77cb59-0db9-466b-b955-60ef3fa75155\",\"15a4fac0-e9b1-4936-9e98-ac748eb1e8de\",\"6000f962-2933-4382-a9e0-fcb5364f6799\",\"39f36b9b-91b6-486e-92c6-f3aaa3c93fa4\",\"8b5eb2b0-6db2-41c3-8f8c-c34f405ecbf1\",\"112470ca-15ec-4f31-926f-496f59fe753c\",\"99b7a23e-5ff2-4196-a590-e78c87e8068e\",\"941537d1-2ed4-4497-a3a1-1338c7559ddd\",\"f751acac-b2f5-43f5-92ed-119421384116\"]}}"
          },
          "redirectURL": "",
          "headersSize": 926,
          "bodySize": 739,
          "_transferSize": 1665,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:00.761Z",
        "time": 75.29999999678694,
        "timings": {
          "blocked": 3.534000001651235,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.17199999999999993,
          "wait": 70.92400000114739,
          "receive": 0.6699999939883128,
          "_blocked_queueing": 2.498000001651235,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106591",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "fetchImpl",
                "scriptId": "181",
                "url": "http://localhost:8000/static/js/utils/browserService.js",
                "lineNumber": 175,
                "columnNumber": 36
              },
              {
                "functionName": "",
                "scriptId": "183",
                "url": "http://localhost:8000/static/js/utils/apiClient.js",
                "lineNumber": 105,
                "columnNumber": 42
              },
              {
                "functionName": "apiRequest",
                "scriptId": "183",
                "url": "http://localhost:8000/static/js/utils/apiClient.js",
                "lineNumber": 146,
                "columnNumber": 6
              },
              {
                "functionName": "fetchCurrentUser",
                "scriptId": "194",
                "url": "http://localhost:8000/static/js/auth.js",
                "lineNumber": 1041,
                "columnNumber": 25
              },
              {
                "functionName": "fetchCurrentUser",
                "scriptId": "174",
                "url": "http://localhost:8000/static/js/app.js",
                "lineNumber": 485,
                "columnNumber": 39
              },
              {
                "functionName": "init",
                "scriptId": "174",
                "url": "http://localhost:8000/static/js/app.js",
                "lineNumber": 770,
                "columnNumber": 8
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "174",
                  "url": "http://localhost:8000/static/js/app.js",
                  "lineNumber": 988,
                  "columnNumber": 12
                },
                {
                  "functionName": "",
                  "scriptId": "174",
                  "url": "http://localhost:8000/static/js/app.js",
                  "lineNumber": 1001,
                  "columnNumber": 4
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/api/auth/verify",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1373,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "739"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 739,
            "mimeType": "application/json",
            "compression": 0,
            "text": "{\"authenticated\":true,\"user\":{\"id\":1,\"username\":\"hperkins\",\"token_version\":0,\"project_ids\":[\"f304c5f9-fd3d-4a21-9073-ce455971943b\"],\"conversation_ids\":[\"c8b7f7aa-ae5d-4d9b-b50c-2d5b83066840\",\"44537c46-82e0-4589-b09d-0d84b2565552\",\"113d2eec-3626-4152-8b2b-90ef5903020a\",\"2fdd55b9-bac5-49f3-99e5-914903d2cb95\",\"fccfee97-aa2b-4d9c-a46a-83b6d2d8d70a\",\"aa92e1d1-8504-41a5-b662-1a5ac4115a08\",\"3a77cb59-0db9-466b-b955-60ef3fa75155\",\"15a4fac0-e9b1-4936-9e98-ac748eb1e8de\",\"6000f962-2933-4382-a9e0-fcb5364f6799\",\"39f36b9b-91b6-486e-92c6-f3aaa3c93fa4\",\"8b5eb2b0-6db2-41c3-8f8c-c34f405ecbf1\",\"112470ca-15ec-4f31-926f-496f59fe753c\",\"99b7a23e-5ff2-4196-a590-e78c87e8068e\",\"941537d1-2ed4-4497-a3a1-1338c7559ddd\",\"f751acac-b2f5-43f5-92ed-119421384116\"]}}"
          },
          "redirectURL": "",
          "headersSize": 926,
          "bodySize": 739,
          "_transferSize": 1665,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:00.849Z",
        "time": 88.85699999518692,
        "timings": {
          "blocked": 7.145999988893978,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.31299999999999994,
          "wait": 50.82499999537505,
          "receive": 30.573000010917895,
          "_blocked_queueing": 6.199999988893978,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106591",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "loadTemplate",
                "scriptId": "187",
                "url": "http://localhost:8000/static/js/utils/htmlTemplateLoader.js",
                "lineNumber": 112,
                "columnNumber": 21
              },
              {
                "functionName": "loadProjectTemplates",
                "scriptId": "196",
                "url": "http://localhost:8000/static/js/init/uiInit.js",
                "lineNumber": 95,
                "columnNumber": 23
              },
              {
                "functionName": "initializeUIComponents",
                "scriptId": "196",
                "url": "http://localhost:8000/static/js/init/uiInit.js",
                "lineNumber": 308,
                "columnNumber": 12
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "init",
                  "scriptId": "174",
                  "url": "http://localhost:8000/static/js/app.js",
                  "lineNumber": 788,
                  "columnNumber": 13
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "",
                    "scriptId": "174",
                    "url": "http://localhost:8000/static/js/app.js",
                    "lineNumber": 988,
                    "columnNumber": 12
                  },
                  {
                    "functionName": "",
                    "scriptId": "174",
                    "url": "http://localhost:8000/static/js/app.js",
                    "lineNumber": 1001,
                    "columnNumber": 4
                  }
                ]
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/html/project_list.html",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1374,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "2572"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"d590720fe902f026345b7c30d0bb3e72\""
            },
            {
              "name": "last-modified",
              "value": "Thu, 22 May 2025 21:12:22 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2572,
            "mimeType": "text/html",
            "compression": 0,
            "text": "<!-- Mobile-First Project List -->\n<div id=\"projectListContainer\" class=\"project-list-container\">\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-6\">\n    <h1 class=\"text-2xl font-bold\">Projects</h1>\n    <button id=\"createProjectBtn\" class=\"btn btn-primary\">\n      <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"/>\n      </svg>\n      <span class=\"hidden sm:inline\">New Project</span>\n      <span class=\"sm:hidden\">New</span>\n    </button>\n  </div>\n\n  <!-- Filters -->\n  <div id=\"projectFilterTabs\" class=\"flex gap-2 mb-4 overflow-x-auto scrollbar-none\" role=\"tablist\">\n    <button class=\"tab btn btn-ghost btn-sm active\"   data-filter=\"all\"      id=\"filterTabAll\"      aria-selected=\"true\">All</button>\n    <button class=\"tab btn btn-ghost btn-sm\"          data-filter=\"recent\"   id=\"filterTabRecent\"   aria-selected=\"false\">Recent</button>\n    <button class=\"tab btn btn-ghost btn-sm\"          data-filter=\"pinned\"   id=\"filterTabPinned\"   aria-selected=\"false\">Pinned</button>\n    <button class=\"tab btn btn-ghost btn-sm\"          data-filter=\"archived\" id=\"filterTabArchived\" aria-selected=\"false\">Archived</button>\n  </div>\n\n  <!-- Search -->\n  <div class=\"relative mb-6\">\n    <input\n      type=\"search\"\n      class=\"input w-full pl-10\"\n      placeholder=\"Search projects...\"\n      inputmode=\"search\"\n      enterkeyhint=\"search\"\n    >\n    <svg class=\"w-5 h-5 absolute left-3 top-1/2 -translate-y-1/2 text-base-content/50\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"/>\n    </svg>\n  </div>\n\n  <!-- Project Grid -->\n  <div id=\"projectCardsPanel\" class=\"mobile-grid\">\n    <!-- Projects will be inserted here -->\n  </div>\n\n  <!-- Empty State -->\n  <div id=\"emptyState\" class=\"empty-state hidden\">\n    <div class=\"empty-state-icon\">\n      <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"/>\n      </svg>\n    </div>\n    <h3 class=\"empty-state-title\">No projects found</h3>\n    <p class=\"empty-state-description\">Create your first project to get started</p>\n    <button class=\"btn btn-primary\">Create Project</button>\n  </div>\n</div>\n"
          },
          "redirectURL": "",
          "headersSize": 1070,
          "bodySize": 2572,
          "_transferSize": 3642,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:00.953Z",
        "time": 82.84099999582395,
        "timings": {
          "blocked": 1.2590000036442652,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.129,
          "wait": 44.34500000264961,
          "receive": 37.10799998953007,
          "_blocked_queueing": 0.7630000036442652,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106591",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "loadTemplate",
                "scriptId": "187",
                "url": "http://localhost:8000/static/js/utils/htmlTemplateLoader.js",
                "lineNumber": 112,
                "columnNumber": 21
              },
              {
                "functionName": "loadProjectTemplates",
                "scriptId": "196",
                "url": "http://localhost:8000/static/js/init/uiInit.js",
                "lineNumber": 102,
                "columnNumber": 23
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "initializeUIComponents",
                  "scriptId": "196",
                  "url": "http://localhost:8000/static/js/init/uiInit.js",
                  "lineNumber": 308,
                  "columnNumber": 12
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "init",
                    "scriptId": "174",
                    "url": "http://localhost:8000/static/js/app.js",
                    "lineNumber": 788,
                    "columnNumber": 13
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "",
                      "scriptId": "174",
                      "url": "http://localhost:8000/static/js/app.js",
                      "lineNumber": 988,
                      "columnNumber": 12
                    },
                    {
                      "functionName": "",
                      "scriptId": "174",
                      "url": "http://localhost:8000/static/js/app.js",
                      "lineNumber": 1001,
                      "columnNumber": 4
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/static/html/project_details.html",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1377,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "18640"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "etag",
              "value": "\"1d14b7b725bb61235f9c84dc0fccdb2e\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 23 May 2025 08:26:32 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 18640,
            "mimeType": "text/html",
            "compression": 0,
            "text": "<!-- Mobile-First Project Details Template -->\n<div id=\"projectDetailsContainer\" class=\"project-details-container\">\n<div class=\"project-details\">\n  <!-- Mobile Header -->\n  <header class=\"project-header\">\n    <div class=\"flex items-center gap-3 mb-4\">\n      <button id=\"backToProjectsBtn\" class=\"btn btn-ghost btn-square lg:hidden\">\n        <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"/>\n        </svg>\n      </button>\n      <div class=\"flex-1 min-w-0\">\n        <h1 id=\"projectTitle\" class=\"text-xl lg:text-2xl font-bold truncate\">Project Title</h1>\n        <div class=\"flex items-center gap-2 mt-1\">\n          <!-- Token usage badge removed for mobile refactor -->\n          <span class=\"badge badge-outline badge-sm\">\n            <span id=\"conversationCount\">0</span> chats\n          </span>\n        </div>\n      </div>\n      <div class=\"flex gap-2\">\n        <button id=\"editProjectBtn\" class=\"btn btn-ghost btn-square\">\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"/>\n          </svg>\n        </button>\n        <button id=\"projectMenuBtn\" class=\"btn btn-ghost btn-square\">\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"/>\n          </svg>\n        </button>\n      </div>\n    </div>\n    <!-- Mobile-Optimized Stats -->\n    <div class=\"project-stats\">\n      <!-- Token usage (hook for TokenStatsManager) -->\n      <div id=\"tokenUsageStat\" class=\"project-stat\">\n        <div id=\"tokenStatsCurrentUsage\" class=\"text-2xl font-bold text-warning\">0</div>\n        <div class=\"text-sm text-base-content/70\">Tokens</div>\n        <button id=\"tokenStatsBtn\" class=\"btn btn-ghost btn-xs\" aria-label=\"Token stats\">⋯</button>\n      </div>\n      <div class=\"project-stat\">\n        <div class=\"text-2xl font-bold text-success\" id=\"fileCount\">0</div>\n        <div class=\"text-sm text-base-content/70\">Files</div>\n      </div>\n      <div class=\"project-stat\">\n        <div class=\"text-2xl font-bold text-info\" id=\"artifactCount\">0</div>\n        <div class=\"text-sm text-base-content/70\">Artifacts</div>\n      </div>\n    </div>\n  </header>\n\n  <!-- Mobile-First Tab Navigation -->\n  <div class=\"project-tabs\">\n    <button class=\"project-tab active\" data-tab=\"chat\">\n      <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"/>\n      </svg>\n      Chat\n    </button>\n    <button class=\"project-tab\" data-tab=\"files\">\n      <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"/>\n      </svg>\n      Files\n    </button>\n    <button class=\"project-tab\" data-tab=\"knowledge\">\n      <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"/>\n      </svg>\n      <span class=\"hidden sm:inline\">Knowledge</span>\n      <span class=\"sm:hidden\">KB</span>\n    </button>\n    <button class=\"project-tab\" data-tab=\"settings\">\n      <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"/>\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"/>\n      </svg>\n      Settings\n    </button>\n  </div>\n\n  <!-- Tab Content -->\n  <div class=\"project-tab-content\">\n    <!-- Chat Tab (Mobile-First) -->\n    <div id=\"chatTab\" class=\"tab-pane active\">\n      <!-- Chat interface from chat-mobile.html goes here -->\n      <div class=\"chat-container\">\n        <div id=\"chatMessages\" class=\"chat-messages\"></div>\n        <div class=\"chat-input-container\">\n          <div class=\"chat-input-row\">\n            <input id=\"chatInput\" class=\"chat-input\" type=\"text\" placeholder=\"Type your message...\">\n            <button id=\"chatSendBtn\" class=\"chat-send-btn\">\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"/>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Mobile Conversation History -->\n      <div class=\"mt-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"font-semibold\">Recent Conversations</h3>\n          <button id=\"newConversationBtn\" class=\"btn btn-primary btn-sm\">\n            <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"/>\n            </svg>\n            New\n          </button>\n        </div>\n        <div id=\"conversationsList\" class=\"space-y-2\"></div>\n      </div>\n    </div>\n    <!-- Files Tab -->\n    <div id=\"filesTab\" class=\"tab-pane hidden\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <h3 class=\"font-semibold\">Project Files</h3>\n        <button id=\"uploadFileBtn\" class=\"btn btn-primary btn-sm\">\n          <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"/>\n          </svg>\n          Upload\n        </button>\n      </div>\n      <!-- Enhanced File Upload Component Template (inlined) -->\n      <div id=\"dragDropZone\" class=\"file-upload-container\" tabindex=\"0\"\n           aria-labelledby=\"file-upload-title\" aria-describedby=\"file-upload-instructions\">\n\n        <!-- Upload area -->\n        <div class=\"text-center\">\n          <div class=\"file-upload-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n            </svg>\n          </div>\n          <h3 id=\"file-upload-title\" class=\"file-upload-title\">Upload Files</h3>\n          <p id=\"file-upload-instructions\" class=\"file-upload-instructions\">\n            Drag and drop files here, or <label for=\"fileInput\" class=\"file-upload-browse-btn\">browse</label>\n          </p>\n          <div class=\"text-xs text-base-content/60 mt-1\">\n            Supports: TXT, MD, CSV, JSON, PDF, DOC, DOCX, PY, JS, HTML, CSS\n          </div>\n        </div>\n\n        <!-- Hidden file input -->\n        <input id=\"fileInput\" type=\"file\" class=\"file-upload-input\" multiple\n               aria-label=\"File upload\" accept=\".txt,.md,.csv,.json,.pdf,.doc,.docx,.py,.js,.html,.css\" />\n\n        <!-- File progress indicator (hidden by default) -->\n        <div id=\"filesUploadProgress\" class=\"file-upload-progress hidden\">\n          <div class=\"file-upload-progress-label\" aria-live=\"polite\">\n            Uploading files... <span id=\"file-upload-progress-percent\">0%</span>\n          </div>\n          <div class=\"file-upload-progress-bar\">\n            <progress id=\"fileProgressBar\" value=\"0\" max=\"100\" class=\"progress progress-primary w-full\"></progress>\n          </div>\n          <p id=\"uploadStatus\" class=\"text-xs text-base-content/60 mt-1\">Uploading...</p>\n        </div>\n\n        <!-- Error message area (hidden by default) -->\n        <div id=\"file-upload-error\" class=\"file-upload-error hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n\n        <!-- File preview area (hidden by default) -->\n        <ul id=\"file-preview-list\" class=\"file-preview-list hidden\" aria-label=\"Selected files\"></ul>\n      </div>\n\n      <!-- File preview item template (cloned by JS) -->\n      <template id=\"file-preview-template\">\n        <li class=\"file-preview-item\">\n          <div class=\"file-preview-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n            </svg>\n          </div>\n          <div class=\"file-preview-details\">\n            <div class=\"file-preview-name\" title=\"\\${filename}\">\\${filename}</div>\n            <div class=\"file-preview-info\">\n              <span class=\"file-preview-type\">\\${filetype}</span>\n              <span class=\"file-preview-size\">\\${filesize}</span>\n            </div>\n          </div>\n          <div class=\"file-preview-actions\">\n            <button type=\"button\" class=\"file-preview-delete\" aria-label=\"Remove file\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n        </li>\n      </template>\n\n      <!-- Error and success status icons (for state changes) -->\n      <template id=\"upload-status-icons\">\n        <svg class=\"upload-success-icon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n        </svg>\n        <svg class=\"upload-error-icon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n        <svg class=\"upload-file-icon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n        </svg>\n        <svg class=\"upload-image-icon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n        </svg>\n        <svg class=\"upload-pdf-icon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n          <text x=\"12\" y=\"16\" text-anchor=\"middle\" font-size=\"7\" font-weight=\"bold\" fill=\"currentColor\">PDF</text>\n        </svg>\n      </template>\n      <!-- File List -->\n      <div id=\"filesList\" class=\"grid gap-3\"></div>\n    </div>\n    <!-- Knowledge Tab -->\n    <div id=\"knowledgeTab\" class=\"tab-pane hidden\">\n      <div class=\"mb-4\">\n        <h3 class=\"font-semibold mb-2\">Knowledge Base</h3>\n        <!-- Enhanced Knowledge Base Component Template (inlined) -->\n        <div class=\"knowledge-base-component\">\n          <!-- Knowledge Base Toggle -->\n          <div class=\"kb-toggle-section mb-4\">\n            <label class=\"flex items-center space-x-3\">\n              <input type=\"checkbox\" id=\"kbToggle\" class=\"form-checkbox h-5 w-5 text-blue-600\">\n              <span class=\"text-sm font-medium text-gray-700\">Enable Knowledge Base</span>\n            </label>\n            <p class=\"text-xs text-gray-500 mt-1\">\n              Use uploaded documents to enhance AI responses\n            </p>\n          </div>\n          <div class=\"kb-controls space-y-3\">\n            <div class=\"model-selection\">\n              <label for=\"modelSelect\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n                Embedding Model\n              </label>\n              <select id=\"modelSelect\" class=\"form-select w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\">\n                <option value=\"\">Select a model...</option>\n                <option value=\"text-embedding-ada-002\">OpenAI Ada-002</option>\n                <option value=\"text-embedding-3-small\">OpenAI Embedding-3-Small</option>\n                <option value=\"text-embedding-3-large\">OpenAI Embedding-3-Large</option>\n              </select>\n            </div>\n            <div class=\"kb-actions flex flex-wrap gap-2\">\n              <button id=\"setupButton\"\n                      class=\"btn btn-primary px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50\">\n                Setup KB\n              </button>\n              <button id=\"reprocessButton\"\n                      class=\"btn btn-secondary px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 disabled:opacity-50\">\n                Reprocess\n              </button>\n              <button id=\"settingsButton\"\n                      class=\"btn btn-outline px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\">\n                Settings\n              </button>\n            </div>\n            <!-- Status Display -->\n            <div id=\"kbStatus\" class=\"kb-status\"></div>\n            <!-- Processing Progress -->\n            <div id=\"kbProgress\" class=\"kb-progress hidden\">\n              <div class=\"flex items-center justify-between text-sm text-gray-600 mb-2\">\n                <span>Processing knowledge base...</span>\n                <span class=\"progress-percentage\">0%</span>\n              </div>\n              <div class=\"w-full bg-gray-200 rounded-full h-2\">\n                <div class=\"bg-green-600 h-2 rounded-full transition-all duration-300\" style=\"width: 0%\"></div>\n              </div>\n            </div>\n            <!-- Knowledge Base Info -->\n            <div id=\"kbInfo\" class=\"kb-info hidden\">\n              <div class=\"bg-blue-50 border border-blue-200 rounded-md p-3\">\n                <h4 class=\"text-sm font-medium text-blue-800 mb-2\">Knowledge Base Status</h4>\n                <div class=\"text-sm text-blue-700\">\n                  <div class=\"kb-stats space-y-1\">\n                    <div>Documents: <span id=\"kbDocCount\">0</span></div>\n                    <div>Chunks: <span id=\"kbChunkCount\">0</span></div>\n                    <div>Last Updated: <span id=\"kbLastUpdated\">Never</span></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- Search Results -->\n      <div id=\"knowledgeResults\" class=\"space-y-3\"></div>\n    </div>\n    <!-- Settings Tab -->\n    <div id=\"settingsTab\" class=\"tab-pane hidden\">\n      <div class=\"space-y-6\">\n        <!-- Project Settings -->\n        <div class=\"card\">\n          <h3 class=\"font-semibold mb-3\">Project Settings</h3>\n          <div class=\"space-y-4\">\n            <div>\n              <label class=\"block text-sm font-medium mb-1\">Project Name</label>\n              <input id=\"projectNameInput\" type=\"text\" class=\"input w-full\">\n            </div>\n            <div>\n              <label class=\"block text-sm font-medium mb-1\">Description</label>\n              <textarea id=\"projectDescriptionInput\" class=\"textarea w-full\" rows=\"3\"></textarea>\n            </div>\n          </div>\n        </div>\n        <!-- Danger Zone -->\n        <div class=\"card border-error/20\">\n          <h3 class=\"font-semibold text-error mb-3\">Danger Zone</h3>\n          <div class=\"space-y-3\">\n            <button id=\"archiveProjectBtn\" class=\"btn btn-warning w-full\">\n              <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\"/>\n              </svg>\n              Archive Project\n            </button>\n            <button id=\"deleteProjectBtn\" class=\"btn btn-error w-full\">\n              <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"/>\n              </svg>\n              Delete Project\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n<!-- Mobile FAB for Quick Actions -->\n<button id=\"projectFab\" class=\"fixed bottom-20 right-4 w-14 h-14 bg-primary text-primary-content rounded-full shadow-lg lg:hidden\">\n  <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"/>\n  </svg>\n</button>\n"
          },
          "redirectURL": "",
          "headersSize": 1071,
          "bodySize": 18640,
          "_transferSize": 19711,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:01.043Z",
        "time": 45.131000006222166,
        "timings": {
          "blocked": 1.0309999982174487,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.136,
          "wait": 40.38600000453275,
          "receive": 3.5780000034719706,
          "_blocked_queueing": 0.6609999982174486,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106591",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "fetchImpl",
                "scriptId": "181",
                "url": "http://localhost:8000/static/js/utils/browserService.js",
                "lineNumber": 175,
                "columnNumber": 36
              },
              {
                "functionName": "",
                "scriptId": "183",
                "url": "http://localhost:8000/static/js/utils/apiClient.js",
                "lineNumber": 105,
                "columnNumber": 42
              },
              {
                "functionName": "apiRequest",
                "scriptId": "183",
                "url": "http://localhost:8000/static/js/utils/apiClient.js",
                "lineNumber": 146,
                "columnNumber": 6
              },
              {
                "functionName": "_req",
                "scriptId": "193",
                "url": "http://localhost:8000/static/js/projectManager.js",
                "lineNumber": 219,
                "columnNumber": 18
              },
              {
                "functionName": "",
                "scriptId": "193",
                "url": "http://localhost:8000/static/js/projectManager.js",
                "lineNumber": 312,
                "columnNumber": 35
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "193",
                  "url": "http://localhost:8000/static/js/projectManager.js",
                  "lineNumber": 279,
                  "columnNumber": 53
                },
                {
                  "functionName": "loadProjects",
                  "scriptId": "193",
                  "url": "http://localhost:8000/static/js/projectManager.js",
                  "lineNumber": 278,
                  "columnNumber": 13
                },
                {
                  "functionName": "_executeProjectLoad",
                  "scriptId": "200",
                  "url": "http://localhost:8000/static/js/projectDashboard.js",
                  "lineNumber": 504,
                  "columnNumber": 9
                },
                {
                  "functionName": "",
                  "scriptId": "200",
                  "url": "http://localhost:8000/static/js/projectDashboard.js",
                  "lineNumber": 493,
                  "columnNumber": 48
                }
              ],
              "parent": {
                "description": "setTimeout",
                "callFrames": [
                  {
                    "functionName": "setTimeout",
                    "scriptId": "181",
                    "url": "http://localhost:8000/static/js/utils/browserService.js",
                    "lineNumber": 221,
                    "columnNumber": 26
                  },
                  {
                    "functionName": "_loadProjects",
                    "scriptId": "200",
                    "url": "http://localhost:8000/static/js/projectDashboard.js",
                    "lineNumber": 493,
                    "columnNumber": 26
                  },
                  {
                    "functionName": "showProjectList",
                    "scriptId": "200",
                    "url": "http://localhost:8000/static/js/projectDashboard.js",
                    "lineNumber": 360,
                    "columnNumber": 13
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "initialize",
                      "scriptId": "200",
                      "url": "http://localhost:8000/static/js/projectDashboard.js",
                      "lineNumber": 249,
                      "columnNumber": 23
                    }
                  ],
                  "parent": {
                    "description": "await",
                    "callFrames": [
                      {
                        "functionName": "_onAuthStateChanged",
                        "scriptId": "200",
                        "url": "http://localhost:8000/static/js/projectDashboard.js",
                        "lineNumber": 742,
                        "columnNumber": 11
                      },
                      {
                        "functionName": "",
                        "scriptId": "200",
                        "url": "http://localhost:8000/static/js/projectDashboard.js",
                        "lineNumber": 176,
                        "columnNumber": 17
                      },
                      {
                        "functionName": "wrapped",
                        "scriptId": "190",
                        "url": "http://localhost:8000/static/js/eventHandler.js",
                        "lineNumber": 116,
                        "columnNumber": 35
                      },
                      {
                        "functionName": "broadcastAuth",
                        "scriptId": "194",
                        "url": "http://localhost:8000/static/js/auth.js",
                        "lineNumber": 356,
                        "columnNumber": 16
                      },
                      {
                        "functionName": "verifyAuthState",
                        "scriptId": "194",
                        "url": "http://localhost:8000/static/js/auth.js",
                        "lineNumber": 464,
                        "columnNumber": 8
                      }
                    ],
                    "parent": {
                      "description": "await",
                      "callFrames": [
                        {
                          "functionName": "init",
                          "scriptId": "194",
                          "url": "http://localhost:8000/static/js/auth.js",
                          "lineNumber": 950,
                          "columnNumber": 25
                        }
                      ],
                      "parent": {
                        "description": "await",
                        "callFrames": [
                          {
                            "functionName": "initializeAuthSystem",
                            "scriptId": "197",
                            "url": "http://localhost:8000/static/js/init/authInit.js",
                            "lineNumber": 69,
                            "columnNumber": 17
                          },
                          {
                            "functionName": "init",
                            "scriptId": "174",
                            "url": "http://localhost:8000/static/js/app.js",
                            "lineNumber": 754,
                            "columnNumber": 15
                          }
                        ],
                        "parent": {
                          "description": "await",
                          "callFrames": [
                            {
                              "functionName": "",
                              "scriptId": "174",
                              "url": "http://localhost:8000/static/js/app.js",
                              "lineNumber": 988,
                              "columnNumber": 12
                            },
                            {
                              "functionName": "",
                              "scriptId": "174",
                              "url": "http://localhost:8000/static/js/app.js",
                              "lineNumber": 1001,
                              "columnNumber": 4
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://localhost:8000/api/user/projects",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "localhost:8000"
            },
            {
              "name": "Referer",
              "value": "http://localhost:8000/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1375,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "223"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:46:59 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 223,
            "mimeType": "application/json",
            "compression": 0,
            "text": "{\"projects\":[{\"id\":\"f304c5f9-fd3d-4a21-9073-ce455971943b\",\"title\":\"Project One\",\"created_at\":\"2025-05-17T06:23:39.363153\",\"updated_at\":\"2025-05-19T03:11:38.544070\"}],\"last_project_id\":\"f304c5f9-fd3d-4a21-9073-ce455971943b\"}"
          },
          "redirectURL": "",
          "headersSize": 926,
          "bodySize": 223,
          "_transferSize": 1149,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-05-23T11:47:01.261Z",
        "time": 53.8479999959236,
        "timings": {
          "blocked": 1.5299999928213657,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.127,
          "wait": 51.55700000674929,
          "receive": 0.6339999963529408,
          "_blocked_queueing": 0.8169999928213656,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "106245",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "sendToSnowplow",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 20,
                "columnNumber": 252245
              },
              {
                "functionName": "record",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 20,
                "columnNumber": 252071
              },
              {
                "functionName": "",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 77,
                "columnNumber": 54062
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "recordEvent",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 77,
                  "columnNumber": 54020
                },
                {
                  "functionName": "Ft",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 79,
                  "columnNumber": 733
                },
                {
                  "functionName": "",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 117,
                  "columnNumber": 102689
                },
                {
                  "functionName": "tyA",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 117,
                  "columnNumber": 102677
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "pyA",
                    "scriptId": "5",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                    "lineNumber": 117,
                    "columnNumber": 104185
                  },
                  {
                    "functionName": "C6e",
                    "scriptId": "5",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                    "lineNumber": 79,
                    "columnNumber": 2713
                  },
                  {
                    "functionName": "r",
                    "scriptId": "5",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                    "lineNumber": 79,
                    "columnNumber": 3545
                  }
                ]
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "request": {
          "method": "POST",
          "url": "https://telemetry.1passwordservices.com/com.snowplowanalytics.snowplow/tp2",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "telemetry.1passwordservices.com"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/com.snowplowanalytics.snowplow/tp2"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "2498"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "none"
            },
            {
              "name": "sec-fetch-storage-access",
              "value": "active"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 2498,
          "postData": {
            "mimeType": "application/json",
            "text": "{\"schema\":\"iglu:com.snowplowanalytics.snowplow/payload_data/jsonschema/1-0-4\",\"data\":[{\"e\":\"ue\",\"ue_pr\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"schema\\\":\\\"iglu:com.1password.app/inline_menu_render/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"overall_status\\\":\\\"COMPLETED\\\",\\\"overall_duration_ms\\\":643,\\\"dom_scan_status\\\":\\\"COMPLETED\\\",\\\"dom_scan_duration_ms\\\":4,\\\"analyze_frame_status\\\":\\\"COMPLETED\\\",\\\"analyze_frame_duration_ms\\\":23,\\\"render_menu_status\\\":\\\"COMPLETED\\\",\\\"render_menu_duration_ms\\\":614}}}\",\"co\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.1password.core/account_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"account_uuid\\\":\\\"GMASKB4EKVDQVFERP66NI3X56M\\\",\\\"account_type\\\":\\\"F\\\",\\\"billing_status\\\":\\\"A\\\",\\\"user_uuid\\\":\\\"BJCMFHADARDVNPNY4CW7YHC4NE\\\"}},{\\\"schema\\\":\\\"iglu:com.1password.core/app_context/jsonschema/2-1-0\\\",\\\"data\\\":{\\\"version\\\":\\\"81076034\\\",\\\"name\\\":\\\"1Password Extension\\\",\\\"app_default_locale\\\":\\\"en\\\",\\\"app_used_locale\\\":\\\"en\\\"}},{\\\"schema\\\":\\\"iglu:com.1password.core/device_context/jsonschema/1-1-1\\\",\\\"data\\\":{\\\"device_uuid\\\":\\\"ekthiskdvjngy67bvz5wmab4im\\\",\\\"os_name\\\":\\\"Windows\\\",\\\"os_version\\\":\\\"11.0\\\",\\\"os_locale\\\":\\\"en-US\\\"}},{\\\"schema\\\":\\\"iglu:com.1password.core/feature_flag_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"assigned_flags\\\":[\\\"xam-dvr-hpke-encryption\\\",\\\"b5x-autosave-identities\\\",\\\"b5x-autosave-suggested-password\\\",\\\"b5x-autosave-totp\\\",\\\"b5x-equal-inline-width\\\",\\\"b5x-ignore-autocomplete-off-identities\\\",\\\"b5x-next-gen-inline\\\",\\\"b5x-recollect-fields-for-identities\\\",\\\"b5x-telemetry-data-collection\\\",\\\"core-date-time-localization\\\",\\\"b5x-filling-saving-telemetry\\\",\\\"b5x-watchtower-breach-notification\\\",\\\"securityDevelopment-passkeyPRF\\\",\\\"securityDevelopment-autolock-extendedDurationOptions\\\",\\\"core-securityDevelopment-openAndFill-enforcement\\\",\\\"frameworks-autolock-longerDefault\\\",\\\"telemetry-feature-flag-context\\\",\\\"b5x-trusted-mouse-down-events\\\",\\\"b5x-metric-gate-inline-menu-render\\\",\\\"b5x-auto-lock-policies\\\",\\\"oph-empty-states-item-details-import-nudge\\\",\\\"b2c-guided-setup-family-owner-invite-task\\\",\\\"core-help-menu-consistency\\\",\\\"b5x-authx-unlock-notifications\\\",\\\"frameworks-kolide-apps-sync\\\"]}},{\\\"schema\\\":\\\"iglu:com.1password.core/experimentation_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"assigned_experiments\\\":[]}}]}\",\"p\":\"web\",\"aid\":\"b5x\",\"tv\":\"b5x-tracker\",\"tna\":\"b5x\",\"dtm\":\"1748000821344\",\"stm\":\"1748000821344\"}]}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "text/plain"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:47:00 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "text/plain",
            "text": "ok"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 315,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.72.145.49",
        "startedDateTime": "2025-05-23T11:47:01.344Z",
        "time": 128.14600000274368,
        "timings": {
          "blocked": 1.618000009799376,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.188,
          "wait": 125.93499999408051,
          "receive": 0.40499999886378646,
          "_blocked_queueing": 1.2970000097993761,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "109409",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "mMA",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 51,
                "columnNumber": 61160
              },
              {
                "functionName": "tI",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 51,
                "columnNumber": 60382
              },
              {
                "functionName": "Sm.request",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 59,
                "columnNumber": 2475
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 50,
                  "columnNumber": 16053
                },
                {
                  "functionName": "cre",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 64,
                  "columnNumber": 72342
                },
                {
                  "functionName": "A.reportUsoAction",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 102,
                  "columnNumber": 113395
                },
                {
                  "functionName": "$6",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 103,
                  "columnNumber": 30675
                },
                {
                  "functionName": "Bl",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 81,
                  "columnNumber": 19049
                },
                {
                  "functionName": "X0",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 81,
                  "columnNumber": 17218
                },
                {
                  "functionName": "Js",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 81,
                  "columnNumber": 16657
                },
                {
                  "functionName": "i7e",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 81,
                  "columnNumber": 29928
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "hvA",
                    "scriptId": "5",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                    "lineNumber": 81,
                    "columnNumber": 29233
                  },
                  {
                    "functionName": "C6e",
                    "scriptId": "5",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                    "lineNumber": 79,
                    "columnNumber": 2680
                  },
                  {
                    "functionName": "r",
                    "scriptId": "5",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                    "lineNumber": 79,
                    "columnNumber": 3545
                  }
                ]
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "request": {
          "method": "POST",
          "url": "https://my.1password.com/api/v1/uso/telemetry/using-passkey-failure-badinput",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "my.1password.com"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/v1/uso/telemetry/using-passkey-failure-badinput"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": "content-length",
              "value": "0"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "op-user-agent",
              "value": "1|X|81076034|ekthiskdvjngy67bvz5wmab4im|||Microsoft Edge|137.0.3296.30|Windows|11.0|"
            },
            {
              "name": "origin",
              "value": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "none"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "x-agilebits-mac",
              "value": "v1|12|o59qkpN8XGKdP-9X"
            },
            {
              "name": "x-agilebits-session-id",
              "value": "W34E2SBRXBBYBDZ5XMJ6N5JVMA"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "max-age=60, no-cache, no-store"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "content-length",
              "value": "152"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'; form-action https://app.kolide.com https://app.trelica.com/; frame-ancestors https://*.1password.com; report-uri https://csp.1passwordservices.com/report?tags=b5_prd; report-to csp-endpoint; script-src https://app.1password.com 'wasm-unsafe-eval' 'sha256-o2e2ByL548s8WTP/sBrBAJu2nkmwsbfB2vuPM2v3NuA=' 'sha256-8S2OM4RueMby3QiAjgrs3NUHDFNW4rp+IhE/TB4cbRg=' 'sha256-8VWDo5cajWU5Y0wBmEA1X3DLu1lbbWFbJUWZu2DxbFc='; style-src https://app.1password.com 'sha256-dHlRZbIBjBXo9m7/kOtIREHDoVNQWPIOPaIan9Q5iKA='; font-src https://app.1password.com; img-src data: blob:  https://c.1password.com https://cache.agilebits.com https://app.1password.com https://a.1passwordusercontent.com/ https://a.1passwordusercontent.ca https://a.1passwordusercontent.eu https://a.1passwordentusercontent.com  https://avatars.slack-edge.com https://mkt.1password.co; child-src 'self' https://*.duosecurity.com https://*.duofederal.com https://map.1passwordservices.com https://billing.1passwordservices.com https://duo.1passwordservices.com; worker-src 'self'; frame-src 'self' https://*.duosecurity.com https://*.duofederal.com https://map.1passwordservices.com https://billing.1passwordservices.com https://duo.1passwordservices.com https://1password.com https://survey.1passwordservices.com https://email-providers.1passwordservices.com https://*.1password.com; connect-src 'self' blob:  https://watchtower.1password.com https://api.pwnedpasswords.com https://app.1password.com wss://b5n.1password.com https://f.1passwordusercontent.com/  https://*.1password.com https://*.1password.ca https://*.1password.eu https://*.ent.1password.com  https://a.1passwordusercontent.com/ https://contact.1passwordservices.com https://flow.1passwordservices.com  https://firebaseinstallations.googleapis.com https://fcmregistrations.googleapis.com   https://web-ui-sentry.1passwordservices.com  https://crl.1passwordservices.com https://telemetry.1passwordservices.com; upgrade-insecure-requests"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "restrict-properties"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:53:11 GMT"
            },
            {
              "name": "permissions-policy",
              "value": "interest-cohort=()"
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer"
            },
            {
              "name": "report-endpoints",
              "value": "csp-endpoint =\"https://csp.1passwordservices.com/report?tags=b5_prd\""
            },
            {
              "name": "report-to",
              "value": "{\"endpoints\":[{\"url\":\"https://csp.1passwordservices.com/report?tags=b5_prd\"}],\"group\":\"csp-endpoint\",\"max_age\":604800}"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            }
          ],
          "cookies": [],
          "content": {
            "size": 134,
            "mimeType": "application/json"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 2067,
          "_error": "net::ERR_ABORTED",
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "[2600:1f10:4fa9:a00:bc7b:42d2:f87f:f3b5]",
        "startedDateTime": "2025-05-23T11:53:12.276Z",
        "time": 30033.692000000305,
        "timings": {
          "blocked": 0.705000011915341,
          "dns": 24.041,
          "ssl": 52.962,
          "connect": 107.27,
          "send": 0.21800000000000352,
          "wait": 81.09200000301841,
          "receive": 29820.36599998537,
          "_blocked_queueing": 0.594000011915341,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "109409",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "mMA",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 51,
                "columnNumber": 61160
              },
              {
                "functionName": "tI",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 51,
                "columnNumber": 60382
              },
              {
                "functionName": "Sm.request",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 59,
                "columnNumber": 2475
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 50,
                  "columnNumber": 16053
                },
                {
                  "functionName": "cre",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 64,
                  "columnNumber": 72342
                },
                {
                  "functionName": "A.reportUsoAction",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 102,
                  "columnNumber": 113395
                },
                {
                  "functionName": "$6",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 103,
                  "columnNumber": 30675
                },
                {
                  "functionName": "Bl",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 81,
                  "columnNumber": 19049
                },
                {
                  "functionName": "X0",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 81,
                  "columnNumber": 17218
                },
                {
                  "functionName": "Js",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 81,
                  "columnNumber": 16657
                },
                {
                  "functionName": "i7e",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 81,
                  "columnNumber": 29928
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "hvA",
                    "scriptId": "5",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                    "lineNumber": 81,
                    "columnNumber": 29233
                  },
                  {
                    "functionName": "C6e",
                    "scriptId": "5",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                    "lineNumber": 79,
                    "columnNumber": 2680
                  },
                  {
                    "functionName": "r",
                    "scriptId": "5",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                    "lineNumber": 79,
                    "columnNumber": 3545
                  }
                ]
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "request": {
          "method": "POST",
          "url": "https://my.1password.com/api/v1/uso/telemetry/using-passkey-failure-badinput",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "my.1password.com"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/v1/uso/telemetry/using-passkey-failure-badinput"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": "content-length",
              "value": "0"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "op-user-agent",
              "value": "1|X|81076034|ekthiskdvjngy67bvz5wmab4im|||Microsoft Edge|137.0.3296.30|Windows|11.0|"
            },
            {
              "name": "origin",
              "value": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "none"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "x-agilebits-mac",
              "value": "v1|13|ThMfGGw05MHaw72v"
            },
            {
              "name": "x-agilebits-session-id",
              "value": "W34E2SBRXBBYBDZ5XMJ6N5JVMA"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "max-age=60, no-cache, no-store"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "content-length",
              "value": "153"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'; form-action https://app.kolide.com https://app.trelica.com/; frame-ancestors https://*.1password.com; report-uri https://csp.1passwordservices.com/report?tags=b5_prd; report-to csp-endpoint; script-src https://app.1password.com 'wasm-unsafe-eval' 'sha256-o2e2ByL548s8WTP/sBrBAJu2nkmwsbfB2vuPM2v3NuA=' 'sha256-8S2OM4RueMby3QiAjgrs3NUHDFNW4rp+IhE/TB4cbRg=' 'sha256-8VWDo5cajWU5Y0wBmEA1X3DLu1lbbWFbJUWZu2DxbFc='; style-src https://app.1password.com 'sha256-dHlRZbIBjBXo9m7/kOtIREHDoVNQWPIOPaIan9Q5iKA='; font-src https://app.1password.com; img-src data: blob:  https://c.1password.com https://cache.agilebits.com https://app.1password.com https://a.1passwordusercontent.com/ https://a.1passwordentusercontent.com https://a.1passwordusercontent.ca https://a.1passwordusercontent.eu  https://avatars.slack-edge.com https://mkt.1password.co; child-src 'self' https://*.duosecurity.com https://*.duofederal.com https://map.1passwordservices.com https://billing.1passwordservices.com https://duo.1passwordservices.com; worker-src 'self'; frame-src 'self' https://*.duosecurity.com https://*.duofederal.com https://map.1passwordservices.com https://billing.1passwordservices.com https://duo.1passwordservices.com https://1password.com https://survey.1passwordservices.com https://email-providers.1passwordservices.com https://*.1password.com; connect-src 'self' blob:  https://watchtower.1password.com https://api.pwnedpasswords.com https://app.1password.com wss://b5n.1password.com https://f.1passwordusercontent.com/  https://*.1password.com https://*.ent.1password.com https://*.1password.ca https://*.1password.eu  https://a.1passwordusercontent.com/ https://contact.1passwordservices.com https://flow.1passwordservices.com  https://firebaseinstallations.googleapis.com https://fcmregistrations.googleapis.com   https://web-ui-sentry.1passwordservices.com  https://crl.1passwordservices.com https://telemetry.1passwordservices.com; upgrade-insecure-requests"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "restrict-properties"
            },
            {
              "name": "date",
              "value": "Fri, 23 May 2025 11:53:12 GMT"
            },
            {
              "name": "permissions-policy",
              "value": "interest-cohort=()"
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer"
            },
            {
              "name": "report-endpoints",
              "value": "csp-endpoint =\"https://csp.1passwordservices.com/report?tags=b5_prd\""
            },
            {
              "name": "report-to",
              "value": "{\"endpoints\":[{\"url\":\"https://csp.1passwordservices.com/report?tags=b5_prd\"}],\"group\":\"csp-endpoint\",\"max_age\":604800}"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            }
          ],
          "cookies": [],
          "content": {
            "size": 134,
            "mimeType": "application/json"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 2067,
          "_error": "net::ERR_ABORTED",
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "[2600:1f10:4fa9:a00:bc7b:42d2:f87f:f3b5]",
        "startedDateTime": "2025-05-23T11:53:12.748Z",
        "time": 30001.37199999881,
        "timings": {
          "blocked": 1.0490000009359792,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.15700000000000003,
          "wait": 51.52199999417737,
          "receive": 29948.644000003696,
          "_blocked_queueing": 0.7550000009359792,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      }
    ]
  }
}