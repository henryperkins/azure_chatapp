{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "WebInspector",
      "version": "537.36"
    },
    "pages": [
      {
        "startedDateTime": "2025-06-08T14:49:31.648Z",
        "id": "page_1",
        "title": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b",
        "pageTimings": {
          "onContentLoad": 1232.5629999977536,
          "onLoad": 1347.1379999973578
        }
      }
    ],
    "entries": [
      {
        "_connectionId": "125705",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "33",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 203349
              },
              {
                "functionName": "",
                "scriptId": "33",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55796
              },
              {
                "functionName": "add",
                "scriptId": "33",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17847
              },
              {
                "functionName": "s",
                "scriptId": "33",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55787
              },
              {
                "functionName": "In",
                "scriptId": "33",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201641
              },
              {
                "functionName": "Rn",
                "scriptId": "33",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 202797
              },
              {
                "functionName": "",
                "scriptId": "33",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 202185
              }
            ]
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "request": {
          "method": "POST",
          "url": "https://o4508070823395328.ingest.us.sentry.io/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": "o4508070823395328.ingest.us.sentry.io"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "140"
            },
            {
              "name": "content-type",
              "value": "text/plain;charset=UTF-8"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [
            {
              "name": "sentry_key",
              "value": "b03711f63d1160f48dcaeda3edae14ac"
            },
            {
              "name": "sentry_version",
              "value": "7"
            },
            {
              "name": "sentry_client",
              "value": "sentry.javascript.browser%2F7.100.0"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 140,
          "postData": {
            "mimeType": "text/plain;charset=UTF-8",
            "text": "{}\n{\"type\":\"client_report\"}\n{\"timestamp\":1749393946.916,\"discarded_events\":[{\"reason\":\"sample_rate\",\"category\":\"transaction\",\"quantity\":2}]}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "x-sentry-error,x-sentry-rate-limits,retry-after"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:45:43 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "vary",
              "value": "origin, access-control-request-method, access-control-request-headers"
            },
            {
              "name": "via",
              "value": "1.1 google"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "application/json",
            "text": "{}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 20,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "34.120.195.249",
        "startedDateTime": "2025-06-08T14:45:46.917Z",
        "time": 57.12199999834411,
        "timings": {
          "blocked": 1.1369999992894009,
          "dns": 0,
          "ssl": -1,
          "connect": 0,
          "send": 0.333,
          "wait": 55.09600000000373,
          "receive": 0.5559999990509823,
          "_blocked_queueing": 1.1369999992894009,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126282",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "sendToSnowplow",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 20,
                "columnNumber": 252245
              },
              {
                "functionName": "record",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 20,
                "columnNumber": 252071
              },
              {
                "functionName": "",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 77,
                "columnNumber": 51677
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "Am.recordEvent",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 77,
                  "columnNumber": 51635
                },
                {
                  "functionName": "vt",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 79,
                  "columnNumber": 733
                },
                {
                  "functionName": "",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 117,
                  "columnNumber": 102458
                },
                {
                  "functionName": "kyA",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 117,
                  "columnNumber": 102446
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "byA",
                    "scriptId": "5",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                    "lineNumber": 117,
                    "columnNumber": 104398
                  },
                  {
                    "functionName": "K",
                    "scriptId": "26",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/chunks/chunk-XVROIDRE.js",
                    "lineNumber": 2,
                    "columnNumber": 8182
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "",
                      "scriptId": "26",
                      "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/chunks/chunk-XVROIDRE.js",
                      "lineNumber": 2,
                      "columnNumber": 7746
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "request": {
          "method": "POST",
          "url": "https://telemetry.1passwordservices.com/com.snowplowanalytics.snowplow/tp2",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "telemetry.1passwordservices.com"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/com.snowplowanalytics.snowplow/tp2"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "2390"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "none"
            },
            {
              "name": "sec-fetch-storage-access",
              "value": "active"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 2390,
          "postData": {
            "mimeType": "application/json",
            "text": "{\"schema\":\"iglu:com.snowplowanalytics.snowplow/payload_data/jsonschema/1-0-4\",\"data\":[{\"e\":\"ue\",\"ue_pr\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"schema\\\":\\\"iglu:com.1password.app/click/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"component_type\\\":\\\"button\\\",\\\"component_name\\\":\\\"NOTIFICATION_DISMISS_autosave\\\",\\\"source\\\":\\\"notification\\\",\\\"category\\\":\\\"app\\\"}}}\",\"co\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.1password.core/account_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"account_uuid\\\":\\\"GMASKB4EKVDQVFERP66NI3X56M\\\",\\\"account_type\\\":\\\"F\\\",\\\"billing_status\\\":\\\"A\\\",\\\"user_uuid\\\":\\\"BJCMFHADARDVNPNY4CW7YHC4NE\\\"}},{\\\"schema\\\":\\\"iglu:com.1password.core/app_context/jsonschema/2-1-0\\\",\\\"data\\\":{\\\"version\\\":\\\"81078043\\\",\\\"name\\\":\\\"1Password Extension\\\",\\\"app_default_locale\\\":\\\"en\\\",\\\"app_used_locale\\\":\\\"en\\\"}},{\\\"schema\\\":\\\"iglu:com.1password.core/device_context/jsonschema/1-1-1\\\",\\\"data\\\":{\\\"device_uuid\\\":\\\"ekthiskdvjngy67bvz5wmab4im\\\",\\\"os_name\\\":\\\"Windows\\\",\\\"os_version\\\":\\\"11.0\\\",\\\"os_locale\\\":\\\"en-US\\\"}},{\\\"schema\\\":\\\"iglu:com.1password.core/feature_flag_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"assigned_flags\\\":[\\\"xam-dvr-hpke-encryption\\\",\\\"b5x-autosave-identities\\\",\\\"b5x-autosave-suggested-password\\\",\\\"b5x-autosave-totp\\\",\\\"b5x-equal-inline-width\\\",\\\"b5x-ignore-autocomplete-off-identities\\\",\\\"b5x-next-gen-inline\\\",\\\"b5x-recollect-fields-for-identities\\\",\\\"b5x-telemetry-data-collection\\\",\\\"core-date-time-localization\\\",\\\"b5x-filling-saving-telemetry\\\",\\\"b5x-watchtower-breach-notification\\\",\\\"securityDevelopment-passkeyPRF\\\",\\\"securityDevelopment-autolock-extendedDurationOptions\\\",\\\"core-securityDevelopment-openAndFill-enforcement\\\",\\\"frameworks-autolock-longerDefault\\\",\\\"telemetry-feature-flag-context\\\",\\\"b5x-trusted-mouse-down-events\\\",\\\"b5x-metric-gate-inline-menu-render\\\",\\\"b5x-auto-lock-policies\\\",\\\"oph-empty-states-item-details-import-nudge\\\",\\\"b2c-guided-setup-family-owner-invite-task\\\",\\\"core-help-menu-consistency\\\",\\\"b5x-authx-unlock-notifications\\\",\\\"b5x-kolide-device-trust-for-all\\\",\\\"frameworks-kolide-apps-sync\\\"]}},{\\\"schema\\\":\\\"iglu:com.1password.core/experimentation_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"assigned_experiments\\\":[]}}]}\",\"p\":\"web\",\"aid\":\"b5x\",\"tv\":\"b5x-tracker\",\"tna\":\"b5x\",\"dtm\":\"1749394169917\",\"stm\":\"1749394169917\"}]}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "text/plain"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:26 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "text/plain",
            "text": "ok"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 316,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "52.28.168.167",
        "startedDateTime": "2025-06-08T14:49:29.917Z",
        "time": 405.90699998960736,
        "timings": {
          "blocked": 0.996999999425374,
          "dns": 11.616000000000001,
          "ssl": 128.888,
          "connect": 262.792,
          "send": 0.37299999999999045,
          "wait": 129.90799999540116,
          "receive": 0.2209999947808683,
          "_blocked_queueing": 0.857999999425374,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126282",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "sendToSnowplow",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 20,
                "columnNumber": 252245
              },
              {
                "functionName": "record",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 20,
                "columnNumber": 252071
              },
              {
                "functionName": "",
                "scriptId": "5",
                "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                "lineNumber": 77,
                "columnNumber": 51677
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "Am.recordEvent",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 77,
                  "columnNumber": 51635
                },
                {
                  "functionName": "vt",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 79,
                  "columnNumber": 733
                },
                {
                  "functionName": "",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 117,
                  "columnNumber": 100525
                },
                {
                  "functionName": "oyA",
                  "scriptId": "5",
                  "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                  "lineNumber": 117,
                  "columnNumber": 100513
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "fyA",
                    "scriptId": "5",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/background/background.js",
                    "lineNumber": 117,
                    "columnNumber": 104311
                  },
                  {
                    "functionName": "K",
                    "scriptId": "26",
                    "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/chunks/chunk-XVROIDRE.js",
                    "lineNumber": 2,
                    "columnNumber": 8182
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "",
                      "scriptId": "26",
                      "url": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem/chunks/chunk-XVROIDRE.js",
                      "lineNumber": 2,
                      "columnNumber": 7746
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "request": {
          "method": "POST",
          "url": "https://telemetry.1passwordservices.com/com.snowplowanalytics.snowplow/tp2",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "telemetry.1passwordservices.com"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/com.snowplowanalytics.snowplow/tp2"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "2392"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "none"
            },
            {
              "name": "sec-fetch-storage-access",
              "value": "active"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 2392,
          "postData": {
            "mimeType": "application/json",
            "text": "{\"schema\":\"iglu:com.snowplowanalytics.snowplow/payload_data/jsonschema/1-0-4\",\"data\":[{\"e\":\"ue\",\"ue_pr\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"schema\\\":\\\"iglu:com.1password.app/view/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"component_type\\\":\\\"notification\\\",\\\"component_name\\\":\\\"NOTIFICATION_VIEW_autosave\\\",\\\"source\\\":\\\"notification\\\",\\\"category\\\":\\\"app\\\"}}}\",\"co\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.1password.core/account_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"account_uuid\\\":\\\"GMASKB4EKVDQVFERP66NI3X56M\\\",\\\"account_type\\\":\\\"F\\\",\\\"billing_status\\\":\\\"A\\\",\\\"user_uuid\\\":\\\"BJCMFHADARDVNPNY4CW7YHC4NE\\\"}},{\\\"schema\\\":\\\"iglu:com.1password.core/app_context/jsonschema/2-1-0\\\",\\\"data\\\":{\\\"version\\\":\\\"81078043\\\",\\\"name\\\":\\\"1Password Extension\\\",\\\"app_default_locale\\\":\\\"en\\\",\\\"app_used_locale\\\":\\\"en\\\"}},{\\\"schema\\\":\\\"iglu:com.1password.core/device_context/jsonschema/1-1-1\\\",\\\"data\\\":{\\\"device_uuid\\\":\\\"ekthiskdvjngy67bvz5wmab4im\\\",\\\"os_name\\\":\\\"Windows\\\",\\\"os_version\\\":\\\"11.0\\\",\\\"os_locale\\\":\\\"en-US\\\"}},{\\\"schema\\\":\\\"iglu:com.1password.core/feature_flag_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"assigned_flags\\\":[\\\"xam-dvr-hpke-encryption\\\",\\\"b5x-autosave-identities\\\",\\\"b5x-autosave-suggested-password\\\",\\\"b5x-autosave-totp\\\",\\\"b5x-equal-inline-width\\\",\\\"b5x-ignore-autocomplete-off-identities\\\",\\\"b5x-next-gen-inline\\\",\\\"b5x-recollect-fields-for-identities\\\",\\\"b5x-telemetry-data-collection\\\",\\\"core-date-time-localization\\\",\\\"b5x-filling-saving-telemetry\\\",\\\"b5x-watchtower-breach-notification\\\",\\\"securityDevelopment-passkeyPRF\\\",\\\"securityDevelopment-autolock-extendedDurationOptions\\\",\\\"core-securityDevelopment-openAndFill-enforcement\\\",\\\"frameworks-autolock-longerDefault\\\",\\\"telemetry-feature-flag-context\\\",\\\"b5x-trusted-mouse-down-events\\\",\\\"b5x-metric-gate-inline-menu-render\\\",\\\"b5x-auto-lock-policies\\\",\\\"oph-empty-states-item-details-import-nudge\\\",\\\"b2c-guided-setup-family-owner-invite-task\\\",\\\"core-help-menu-consistency\\\",\\\"b5x-authx-unlock-notifications\\\",\\\"b5x-kolide-device-trust-for-all\\\",\\\"frameworks-kolide-apps-sync\\\"]}},{\\\"schema\\\":\\\"iglu:com.1password.core/experimentation_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"assigned_experiments\\\":[]}}]}\",\"p\":\"web\",\"aid\":\"b5x\",\"tv\":\"b5x-tracker\",\"tna\":\"b5x\",\"dtm\":\"1749394169931\",\"stm\":\"1749394169931\"}]}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "chrome-extension://dppgmdbiimibapkepcbdbmkaabgiofem"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "text/plain"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:26 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "text/plain",
            "text": "ok"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 317,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "52.28.168.167",
        "startedDateTime": "2025-06-08T14:49:29.931Z",
        "time": 380.3909999987809,
        "timings": {
          "blocked": 250.51199999632593,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.13500000000001933,
          "wait": 129.37399999361205,
          "receive": 0.37000000884290785,
          "_blocked_queueing": 8.929999996325932,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126316",
        "_initiator": {
          "type": "other"
        },
        "_priority": "VeryHigh",
        "_resourceType": "document",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "document"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "navigate"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Sec-Fetch-User",
              "value": "?1"
            },
            {
              "name": "Upgrade-Insecure-Requests",
              "value": "1"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [
            {
              "name": "?project",
              "value": "f304c5f9-fd3d-4a21-9073-ce455971943b"
            }
          ],
          "cookies": [],
          "headersSize": 1596,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "35496"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:27 GMT"
            },
            {
              "name": "etag",
              "value": "\"ddb9ea86b52c4cc94a90eeb98c5a8404\""
            },
            {
              "name": "last-modified",
              "value": "Mon, 02 Jun 2025 22:53:14 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 35496,
            "mimeType": "text/html",
            "compression": 0,
            "text": "<!DOCTYPE html>\n<html lang=\"en\" class=\"mobile-safe\">\n\n<head>\n  <!-- ============================================= -->\n  <!-- Enhanced Mobile-First Meta and Security      -->\n  <!-- ============================================= -->\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"Content-Security-Policy\" content=\"\n    default-src 'self' blob:;\n    script-src 'self' 'unsafe-inline' blob: https://js.sentry-cdn.com https://browser.sentry-cdn.com;\n    script-src-elem 'self' 'unsafe-inline' blob: https://js.sentry-cdn.com https://browser.sentry-cdn.com;\n    worker-src 'self' blob:;\n    child-src 'self' blob:;\n    connect-src 'self' https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com;\n    img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com;\n    style-src 'self' 'unsafe-inline';\n    frame-src 'self';\n  \">\n\n  <!-- Enhanced Mobile Viewport & PWA Configuration -->\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, viewport-fit=cover, user-scalable=no\">\n  <meta name=\"mobile-web-app-capable\" content=\"yes\">\n  <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n  <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\">\n  <meta name=\"format-detection\" content=\"telephone=no\">\n  <meta name=\"msapplication-tap-highlight\" content=\"no\">\n  <meta name=\"theme-color\" content=\"#3b82f6\" media=\"(prefers-color-scheme: light)\">\n  <meta name=\"theme-color\" content=\"#7c3aed\" media=\"(prefers-color-scheme: dark)\">\n  <meta name=\"apple-mobile-web-app-title\" content=\"Azure Chat\">\n  <meta name=\"application-name\" content=\"Azure Chat\">\n  <meta name=\"description\" content=\"Azure OpenAI Chat - Organize AI conversations into projects\">\n\n  <title>Azure Chat - AI Project Management</title>\n\n  <!-- Preload critical resources -->\n  <link rel=\"modulepreload\" href=\"/static/js/app.js\" crossorigin>\n\n  <!-- Sentry Loader Script -->\n  <script>\n    if (window.location.hostname !== 'localhost' &&\n      window.location.hostname !== '127.0.0.1') {\n      const script = document.createElement('script');\n      script.src = 'https://js.sentry-cdn.com/b03711f63d1160f48dcaeda3edae14ac.min.js';\n      script.crossOrigin = 'anonymous';\n      document.head.appendChild(script);\n    }\n    window.sentryOnLoad = function () {\n      if (window.Sentry && typeof window.initSentry === 'function') {\n        window.initSentry();\n      }\n    };\n  </script>\n\n  <!-- Enhanced CSS with critical inline styles -->\n  <style>\n    /* Critical CSS for immediate render */\n    :root {\n      --header-height: 56px;\n      --safe-area-top: env(safe-area-inset-top, 0px);\n      --safe-area-bottom: env(safe-area-inset-bottom, 0px);\n    }\n\n    body {\n      margin: 0;\n      padding: 0;\n      font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    /* Prevent layout shift */\n    #header {\n      min-height: var(--header-height);\n    }\n\n    /* Smooth skeleton loading */\n    @keyframes skeleton-wave {\n      0% {\n        transform: translateX(-100%);\n      }\n\n      100% {\n        transform: translateX(100%);\n      }\n    }\n\n    .skeleton-wave {\n      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n      animation: skeleton-wave 1.5s infinite;\n    }\n\n    /* Enhanced loading spinner */\n    .app-loading {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background: var(--color-base-100, #ffffff);\n      z-index: 9999;\n    }\n\n    .app-loading-spinner {\n      width: 48px;\n      height: 48px;\n      border: 3px solid var(--color-base-200, #e5e7eb);\n      border-top-color: var(--color-primary, #3b82f6);\n      border-radius: 50%;\n      animation: spin 0.8s linear infinite;\n    }\n\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n  </style>\n\n  <link rel=\"stylesheet\" href=\"/static/css/dist/mobile.css\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"/static/favicon.ico\">\n  <link rel=\"apple-touch-icon\" href=\"/static/apple-touch-icon.png\">\n\n  <!-- DependencySystem -->\n  <script>\n    const DependencySystem = {\n      modules: new Map(),\n      states: new Map(),\n      waiters: new Map(),\n      _pendingCleanups: [],\n      async register(name, instance, dependencies = []) {\n        if (this.modules.has(name)) {\n          throw new Error(`[DependencySystem] Duplicate module: '${name}'`);\n        }\n        if (dependencies.length > 0) {\n          await this.waitFor(dependencies);\n        }\n        this.modules.set(name, instance);\n        if (name === 'eventHandlers' && this._pendingCleanups.length && instance?.cleanupListeners) {\n          this._pendingCleanups.forEach(ctx => instance.cleanupListeners({ context: ctx }));\n          this._pendingCleanups.length = 0;\n        }\n        this.states.set(name, 'loaded');\n        this._notifyWaiters(name);\n        return instance;\n      },\n      _notifyWaiters(name) {\n        if (!this.waiters.has(name)) return;\n        this.waiters.get(name).forEach((callback) => {\n          try {\n            callback(this.modules.get(name));\n          } catch (error) {\n            console.error(`[DependencySystem] Error in waiter callback for ${name}:`, error);\n          }\n        });\n        this.waiters.delete(name);\n      },\n      waitFor(names, callback, timeout = 5000) {\n        const nameArray = Array.isArray(names) ? names : [names];\n        if (nameArray.every(name => this.modules.has(name))) {\n          const modules = nameArray.map(n => this.modules.get(n));\n          if (callback) callback(...modules);\n          return Promise.resolve(modules);\n        }\n        return new Promise((resolve, reject) => {\n          const missing = nameArray.filter(name => !this.modules.has(name));\n          let resolved = false;\n          const timeoutId = setTimeout(() => {\n            if (!resolved) {\n              resolved = true;\n              reject(new Error(`[DependencySystem] Timeout – missing: ${missing.join(', ')}`));\n            }\n          }, timeout);\n          missing.forEach(name => {\n            if (!this.waiters.has(name)) {\n              this.waiters.set(name, []);\n            }\n            this.waiters.get(name).push(() => {\n              if (nameArray.every(n => this.modules.has(n)) && !resolved) {\n                clearTimeout(timeoutId);\n                resolved = true;\n                const modules = nameArray.map(n => this.modules.get(n));\n                if (callback) callback(...modules);\n                resolve(modules);\n              }\n            });\n          });\n        });\n      },\n\n      // Alias expected by domReadinessService & other DI consumers\n      waitForDependencies(deps = [], { timeout = 5000 } = {}) {\n        return this.waitFor(deps, null, timeout);\n      },\n      get(name) { return this.modules.get(name); },\n      getCurrentTraceIds() {\n        const id = `trace-${Date.now()}-${Math.floor(Math.random() * 1e5)}`;\n        return { traceId: id, parentId: id };\n      },\n      generateTransactionId() {\n        return `txn-${Date.now()}-${Math.floor(Math.random() * 1e5)}`;\n      },\n      cleanupModuleListeners(context) {\n        const eh = this.modules.get('eventHandlers');\n        if (eh?.cleanupListeners) {\n          eh.cleanupListeners({ context });\n        } else if (context) {\n          this._pendingCleanups.push(context);\n        }\n      },\n    };\n    window.DependencySystem = DependencySystem;\n  </script>\n\n  <!-- Sentry SDK for Frontend -->\n  <script src=\"https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js\"\n    crossorigin=\"anonymous\"></script>\n  <script>\n    // Ensure this DSN is for your Sentry FRONTEND project\n    // You should replace this placeholder with your actual frontend DSN.\n    // It can be the same as your backend DSN if you don't have a separate frontend project in Sentry.\n    const sentryFrontendDsn = \"https://b03711f63d1160f48dcaeda3edae14ac@o4508070823395328.ingest.us.sentry.io/4509138383863808\";\n\n    // Get build-time values via injected global, fallback to window vars if available\n    // This allows server to inject unique release/version/build at deploy time\n    const sentryFrontendRelease =\n      window.__SENTRY_RELEASE__ ||\n      (typeof APP_NAME !== \"undefined\" && typeof APP_VERSION !== \"undefined\" && typeof GIT_SHA !== \"undefined\"\n        ? `${APP_NAME}@${APP_VERSION}+${GIT_SHA}`\n        : \"azure_chatapp@1.0.0+dev\");\n    const sentryFrontendEnv =\n      window.__SENTRY_ENV__ ||\n      (typeof ENVIRONMENT !== \"undefined\" ? ENVIRONMENT : \"production\");\n\n    if (sentryFrontendDsn) {\n      Sentry.init({\n        dsn: sentryFrontendDsn,\n        integrations: [\n          Sentry.browserTracingIntegration(),\n          Sentry.replayIntegration({\n            maskAllText: true,       // Mask all text by default (privacy)\n            blockAllMedia: true,     // Block screen recording of images/videos for privacy\n          }),\n        ],\n        tracesSampleRate: 0.1,        // Lower default sample for production safety\n        replaysSessionSampleRate: 0.02,\n        replaysOnErrorSampleRate: 1.0,\n        release: sentryFrontendRelease,\n        environment: sentryFrontendEnv,\n        attachStacktrace: true,\n        sendDefaultPii: false,\n      });\n      console.log(\"Sentry Frontend SDK initialized\", {\n        dsn: sentryFrontendDsn,\n        env: sentryFrontendEnv,\n        release: sentryFrontendRelease\n      });\n    } else {\n      console.warn(\"Sentry DSN for frontend not configured. Sentry will not be initialized.\");\n    }\n  </script>\n</head>\n\n<body class=\"bg-base-200 text-base-content min-h-screen mobile-safe flex flex-col font-sans\">\n\n  <!-- Accessibility: Skip link becomes visible on keyboard focus only -->\n  <a href=\"#main-content\" class=\"skip-to-content sr-only focus:not-sr-only\">Skip to main content</a>\n  <!-- Enhanced Loading State -->\n  <div id=\"appLoading\" class=\"app-loading\">\n    <div class=\"flex flex-col items-center gap-4\">\n      <div class=\"app-loading-spinner\"></div>\n      <div class=\"text-base-content/60 text-sm\">Loading Azure Chat...</div>\n    </div>\n  </div>\n\n  <!-- Enhanced Error Display -->\n  <div id=\"appInitError\" class=\"fixed top-0 inset-x-0 bg-error text-error-content text-sm p-3\n                                 transform -translate-y-full transition-transform duration-300 z-50\n                                 shadow-md hidden\" role=\"alert\" aria-live=\"assertive\">\n    <div class=\"max-w-7xl mx-auto flex items-center justify-between gap-3\">\n      <div class=\"flex items-center gap-2 flex-1\">\n        <svg class=\"w-5 h-5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n            d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        <span id=\"appInitErrorText\" class=\"font-medium\"></span>\n      </div>\n      <button onclick=\"this.parentElement.parentElement.classList.add('hidden')\"\n        class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\" aria-label=\"Dismiss error\">\n        <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n    </div>\n  </div>\n\n  <!-- Enhanced Header -->\n  <!--\n    Header improvements\n    • Larger, consistent icon touch-targets (≥44×44)\n    • Slightly taller top padding so that main content isn’t cramped underneath the header\n  -->\n  <header id=\"header\" class=\"bg-base-100 border-b border-base-200 sticky top-0 z-40\n                             shadow-sm transition-all duration-300 backdrop-blur-md bg-opacity-95\">\n    <div class=\"max-w-7xl mx-auto px-4 py-3 flex items-center justify-between gap-3\">\n      <!-- Mobile Menu Button -->\n      <!-- Mobile nav toggle (44×44 min) -->\n      <button id=\"navToggleBtn\" class=\"btn btn-ghost btn-square lg:hidden min-w-[44px] min-h-[44px]\" aria-label=\"Toggle navigation menu\"\n        aria-expanded=\"false\" aria-controls=\"mainSidebar\">\n        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n        </svg>\n      </button>\n\n      <!-- App Logo and Title -->\n      <div class=\"flex items-center gap-3 min-w-0\">\n        <div class=\"w-8 h-8 rounded-lg bg-gradient-to-br from-primary to-secondary\n                    flex items-center justify-center shadow-md\">\n          <svg class=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n          </svg>\n        </div>\n        <h1 class=\"text-lg sm:text-xl font-bold text-base-content truncate\">\n          <span class=\"sm:hidden\">Azure Chat</span>\n          <span class=\"hidden sm:inline\">Azure OpenAI Chat</span>\n        </h1>\n      </div>\n\n      <!-- Right Side Actions -->\n      <div class=\"flex items-center gap-3\">\n        <!-- Keyboard Help (Desktop) -->\n        <button id=\"keyboardHelpBtn\" type=\"button\" class=\"btn btn-ghost btn-square hidden sm:inline-flex min-w-[44px] min-h-[44px]\"\n          aria-label=\"Show keyboard shortcuts\" title=\"Keyboard shortcuts (?)\">\n          <svg class=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n        </button>\n\n        <!-- Theme Toggle -->\n        <button id=\"darkModeToggle\" type=\"button\" class=\"btn btn-ghost btn-square min-w-[44px] min-h-[44px]\" aria-label=\"Toggle dark mode\"\n          title=\"Toggle theme\">\n          <svg id=\"darkModeIcon\" class=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n          </svg>\n        </button>\n\n        <!-- Auth Section -->\n        <div id=\"authSection\" class=\"flex items-center gap-2\">\n          <!-- Login button -->\n          <button id=\"authButton\" class=\"btn btn-primary btn-sm px-4\">\n            <svg class=\"w-4 h-4 mr-1.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n            </svg>\n            <span>Login</span>\n          </button>\n\n          <!-- User menu (hidden by default) -->\n          <div id=\"userMenu\" class=\"dropdown dropdown-end hidden\">\n            <div class=\"avatar\">\n              <div class=\"w-10 h-10 rounded-full bg-gradient-to-br from-primary to-secondary flex items-center justify-center text-primary-content font-medium\">\n                <button tabindex=\"0\" role=\"button\" class=\"btn btn-ghost btn-circle\" aria-label=\"User menu\"\n                  aria-haspopup=\"true\" style=\"width:40px;height:40px;padding:0;\">\n                  <span id=\"userInitials\">?</span>\n                </button>\n              </div>\n            </div>\n            <ul tabindex=\"0\" class=\"dropdown-content menu bg-base-100 rounded-xl z-50 w-56 p-2\n                       shadow-xl border border-base-300 mt-3\">\n              <li class=\"menu-title px-4 py-2 text-xs text-base-content/60\">\n                <span id=\"authStatus\">Account</span>\n              </li>\n              <li>\n                <div class=\"px-4 py-3 flex items-center gap-3\">\n                  <div class=\"w-10 h-10 rounded-full bg-gradient-to-br from-primary to-secondary\n                              flex items-center justify-center text-primary-content font-medium\">\n                    <span id=\"userInitialsMenu\">?</span>\n                  </div>\n                  <div class=\"flex-1 min-w-0\">\n                    <div class=\"font-medium text-sm truncate\" id=\"usernameDisplay\">User</div>\n                    <div class=\"text-xs text-base-content/60\" id=\"userEmailDisplay\">user@example.com</div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <hr class=\"my-2 border-base-200\">\n              </li>\n              <li>\n                <a href=\"#\" class=\"flex items-center gap-3 px-4 py-2 hover:bg-base-200 rounded-lg\">\n                  <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                      d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                  </svg>\n                  Settings\n                </a>\n              </li>\n              <li>\n                <button id=\"logoutBtn\"\n                  class=\"flex items-center gap-3 px-4 py-2 text-error hover:bg-error/10 rounded-lg w-full\">\n                  <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                      d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                  </svg>\n                  Logout\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <!-- Main Layout -->\n  <div class=\"flex flex-1 overflow-hidden\">\n    <!-- Enhanced Sidebar -->\n    <nav id=\"mainSidebar\" class=\"sidebar fixed md:relative inset-y-0 left-0 z-50\n            w-80 max-w-[85vw] md:w-72\n            transform -translate-x-full md:translate-x-0\n            transition-transform duration-300 ease-in-out\n            bg-base-100 border-r border-base-200\n            flex flex-col h-full\n            md:shadow-lg shadow-2xl\" aria-label=\"Main navigation\">\n\n      <!-- Sidebar Header -->\n      <div class=\"flex items-center justify-between p-4 border-b border-base-200 bg-base-100/50 backdrop-blur-sm\">\n        <h2 class=\"text-lg font-semibold\">Navigation</h2>\n        <button id=\"closeSidebarBtn\" type=\"button\" class=\"btn btn-ghost btn-square btn-sm md:hidden\"\n          aria-label=\"Close navigation menu\">\n          <svg class=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      <!-- Sidebar Content -->\n      <div class=\"flex-1 flex flex-col min-h-0 overflow-y-auto\">\n        <!-- New Chat Button -->\n        <div class=\"p-4\">\n          <a href=\"/\" class=\"btn btn-primary w-full\">\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n            </svg>\n            New Chat\n          </a>\n        </div>\n\n        <!-- Enhanced Tabs -->\n        <div class=\"px-4 mb-3\">\n          <div class=\"tabs tabs-boxed bg-base-200/50\" role=\"tablist\">\n            <button id=\"recentChatsTab\" class=\"tab tab-active flex-1\" role=\"tab\" aria-selected=\"true\"\n              aria-controls=\"recentChatsSection\">\n              <svg class=\"w-4 h-4 mr-1.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              Recent\n            </button>\n            <button id=\"starredChatsTab\" class=\"tab flex-1\" role=\"tab\" aria-selected=\"false\"\n              aria-controls=\"starredChatsSection\">\n              <svg class=\"w-4 h-4 mr-1.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\n              </svg>\n              Starred\n            </button>\n            <button id=\"projectsTab\" class=\"tab flex-1\" role=\"tab\" aria-selected=\"false\"\n              aria-controls=\"projectsSection\">\n              <svg class=\"w-4 h-4 mr-1.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\" />\n              </svg>\n              Projects\n            </button>\n          </div>\n        </div>\n\n        <!-- Recent Chats Section -->\n        <div id=\"recentChatsSection\" class=\"flex-1 flex flex-col min-h-0 px-4\" role=\"tabpanel\"\n          aria-labelledby=\"recentChatsTab\">\n          <div class=\"mb-3\">\n            <div class=\"relative\">\n              <svg class=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-base-content/50\" fill=\"none\"\n                stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n              <input id=\"chatSearchInput\" type=\"search\" placeholder=\"Search conversations...\"\n                class=\"input input-sm w-full pl-9 pr-9 placeholder:text-base-content/60 focus:outline-none focus:ring-2 focus:ring-primary\" aria-label=\"Search conversations\">\n              <button id=\"clearChatSearchBtn\"\n                class=\"btn btn-ghost btn-square btn-xs absolute right-1 top-1/2 -translate-y-1/2 hidden\"\n                aria-label=\"Clear search\">\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n          <div class=\"flex-1 overflow-y-auto -mx-2\">\n            <ul class=\"space-y-1\" role=\"list\">\n              <li class=\"empty-state py-8\">\n                <svg class=\"w-12 h-12 mx-auto text-base-content/20 mb-3\" fill=\"none\" stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\"\n                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                </svg>\n                <p class=\"text-center text-sm text-base-content/60\">No recent conversations</p>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <!-- Starred Chats Section -->\n        <div id=\"starredChatsSection\" class=\"flex-1 flex flex-col min-h-0 px-4 hidden\" role=\"tabpanel\"\n          aria-labelledby=\"starredChatsTab\">\n          <div class=\"mb-3\">\n            <div class=\"relative\">\n              <svg class=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-base-content/50\" fill=\"none\"\n                stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n              <input type=\"search\" placeholder=\"Search starred...\" class=\"input input-sm w-full pl-9 pr-9\"\n                aria-label=\"Search starred conversations\">\n            </div>\n          </div>\n          <div class=\"flex-1 overflow-y-auto -mx-2\">\n            <ul class=\"space-y-1\" role=\"list\">\n              <li class=\"empty-state py-8\">\n                <svg class=\"w-12 h-12 mx-auto text-base-content/20 mb-3\" fill=\"none\" stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\"\n                    d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\n                </svg>\n                <p class=\"text-center text-sm text-base-content/60\">No starred conversations</p>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <!-- Projects Section -->\n        <div id=\"projectsSection\" class=\"flex-1 flex flex-col min-h-0 px-4 hidden\" role=\"tabpanel\"\n          aria-labelledby=\"projectsTab\">\n          <div class=\"mb-3\">\n            <div class=\"relative\">\n              <svg class=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-base-content/50\" fill=\"none\"\n                stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n              <input id=\"sidebarProjectSearch\" type=\"search\" placeholder=\"Search projects...\"\n                class=\"input input-sm w-full pl-9 pr-9\" aria-label=\"Search projects\">\n            </div>\n          </div>\n          <div class=\"flex-1 overflow-y-auto -mx-2\">\n            <ul class=\"space-y-1\" role=\"list\">\n              <li class=\"empty-state py-8\">\n                <svg class=\"w-12 h-12 mx-auto text-base-content/20 mb-3\" fill=\"none\" stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\"\n                    d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n                </svg>\n                <p class=\"text-center text-sm text-base-content/60\">No projects yet</p>\n                <div class=\"text-center mt-3\">\n                  <button class=\"btn btn-primary btn-sm\">Create Project</button>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <!-- Enhanced Sidebar Auth Form -->\n      <div id=\"sidebarAuthFormContainer\" class=\"border-t border-base-200 bg-base-100/50 backdrop-blur-sm p-4\">\n        <h3 id=\"sidebarAuthFormTitle\" class=\"text-lg font-semibold mb-4\">Welcome Back</h3>\n        <form id=\"sidebarAuthForm\" class=\"space-y-3\">\n          <!-- Username (for registration) -->\n          <div id=\"sidebarUsernameContainer\" class=\"hidden\">\n            <label for=\"sidebarUsername\" class=\"label\">\n              <span class=\"label-text text-sm\">Username</span>\n            </label>\n            <input type=\"text\" id=\"sidebarUsername\" name=\"username\" placeholder=\"Choose a username\"\n              autocomplete=\"username\" class=\"input input-bordered w-full\" />\n          </div>\n\n          <!-- Username (for login) -->\n          <div>\n            <label for=\"sidebarUsernameLogin\" class=\"label\">\n              <span class=\"label-text text-sm\">Username</span>\n            </label>\n            <input type=\"text\" id=\"sidebarUsernameLogin\" name=\"username\" placeholder=\"Your username\"\n              autocomplete=\"username\" required class=\"input input-bordered w-full\" />\n          </div>\n\n          <!-- Password -->\n          <div>\n            <label for=\"sidebarPassword\" class=\"label\">\n              <span class=\"label-text text-sm\">Password</span>\n            </label>\n            <input type=\"password\" id=\"sidebarPassword\" name=\"password\" placeholder=\"••••••••\"\n              autocomplete=\"current-password\" required class=\"input input-bordered w-full\" />\n          </div>\n\n          <!-- Confirm Password (for registration) -->\n          <div id=\"sidebarConfirmPasswordContainer\" class=\"hidden\">\n            <label for=\"sidebarConfirmPassword\" class=\"label\">\n              <span class=\"label-text text-sm\">Confirm Password</span>\n            </label>\n            <input type=\"password\" id=\"sidebarConfirmPassword\" name=\"confirmPassword\" placeholder=\"••••••••\"\n              autocomplete=\"new-password\" class=\"input input-bordered w-full\" />\n          </div>\n\n          <button type=\"submit\" id=\"sidebarAuthBtn\" class=\"btn btn-primary w-full\">\n            Sign In\n          </button>\n\n          <div id=\"sidebarAuthError\" class=\"alert alert-error hidden\">\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <span class=\"text-sm\"></span>\n          </div>\n        </form>\n\n        <div class=\"text-center mt-4\">\n          <a href=\"#\" id=\"sidebarAuthToggle\" class=\"link link-primary text-sm\">\n            Need an account? Register\n          </a>\n        </div>\n      </div>\n\n      <!-- Sidebar Settings Panel -->\n      <div id=\"sidebarSettingsPanel\" class=\"hidden border-t border-base-200 bg-base-100/50 backdrop-blur-sm p-4\">\n        <!-- Settings content will be dynamically inserted here -->\n      </div>\n    </nav>\n\n    <!-- Main Content Area -->\n    <main id=\"mainContent\" class=\"flex-1 flex flex-col overflow-hidden bg-base-200 pt-4 md:pt-6\">\n      <div class=\"flex-1 overflow-y-auto\">\n        <div class=\"p-4 md:p-6\">\n          <!-- Project Manager Panel -->\n          <section id=\"projectManagerPanel\" class=\"bg-base-100 rounded-2xl shadow-sm border border-base-200 p-6 mb-6\">\n            <div id=\"projectListView\" class=\"project-list-view\">\n              <!-- Project list will be dynamically loaded here -->\n              <div class=\"loading-grid\">\n                <div class=\"skeleton-card\"></div>\n                <div class=\"skeleton-card\"></div>\n                <div class=\"skeleton-card\"></div>\n              </div>\n            </div>\n            <div id=\"projectDetailsView\" class=\"project-details-view hidden\">\n              <!-- Project details will be dynamically loaded here -->\n            </div>\n          </section>\n        </div>\n      </div>\n    </main>\n  </div>\n\n  <!-- Enhanced Loading Spinner -->\n  <div id=\"loadingSpinner\" class=\"fixed inset-0 bg-base-100/90 backdrop-blur-sm z-50\n              flex items-center justify-center hidden\" role=\"status\" aria-label=\"Loading\">\n    <div class=\"flex flex-col items-center gap-4\">\n      <div class=\"loading loading-spinner loading-lg text-primary\"></div>\n      <span class=\"text-lg font-medium\">Loading...</span>\n    </div>\n  </div>\n\n  <!-- Modals Container -->\n  <div id=\"modalsContainer\" aria-live=\"polite\" role=\"complementary\" class=\"hidden\">\n    <!-- modals.html will be dynamically loaded here -->\n  </div>\n\n  <!-- Enhanced Keyboard Shortcuts Help -->\n  <div id=\"keyboardHelp\" class=\"hidden fixed inset-0 bg-base-300/80 backdrop-blur-sm z-50\n              flex items-center justify-center p-4\" role=\"dialog\" aria-modal=\"true\"\n    aria-labelledby=\"keyboardHelpTitle\">\n    <div class=\"card max-w-2xl w-full bg-base-100 shadow-2xl\">\n      <div class=\"card-body\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 id=\"keyboardHelpTitle\" class=\"text-xl font-bold\">Keyboard Shortcuts</h3>\n          <button class=\"btn btn-ghost btn-square btn-sm\" aria-label=\"Close keyboard shortcuts\">\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n          <div>\n            <h4 class=\"font-semibold mb-2\">Navigation</h4>\n            <div class=\"space-y-2 text-sm\">\n              <div class=\"flex items-center justify-between\">\n                <span>Toggle sidebar</span>\n                <kbd class=\"kbd kbd-sm\">Ctrl+B</kbd>\n              </div>\n              <div class=\"flex items-center justify-between\">\n                <span>Search</span>\n                <kbd class=\"kbd kbd-sm\">Ctrl+K</kbd>\n              </div>\n              <div class=\"flex items-center justify-between\">\n                <span>New chat</span>\n                <kbd class=\"kbd kbd-sm\">Ctrl+N</kbd>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <h4 class=\"font-semibold mb-2\">Chat</h4>\n            <div class=\"space-y-2 text-sm\">\n              <div class=\"flex items-center justify-between\">\n                <span>Send message</span>\n                <kbd class=\"kbd kbd-sm\">Enter</kbd>\n              </div>\n              <div class=\"flex items-center justify-between\">\n                <span>New line</span>\n                <kbd class=\"kbd kbd-sm\">Shift+Enter</kbd>\n              </div>\n              <div class=\"flex items-center justify-between\">\n                <span>Focus input</span>\n                <kbd class=\"kbd kbd-sm\">/</kbd>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"mt-4 text-sm text-base-content/60\">\n          <p>Press <kbd class=\"kbd kbd-xs\">?</kbd> to toggle this help</p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Scripts -->\n  <script type=\"module\" src=\"/static/js/vendor/dompurify-global.js\"></script>\n  <script type=\"module\" src=\"/static/js/app.js\"></script>\n\n  <!-- Enhanced initialization script -->\n  <script>\n    // Remove loading state when app is ready\n    window.addEventListener('app:ready', function () {\n      const appLoading = document.getElementById('appLoading');\n      if (appLoading) {\n        appLoading.style.opacity = '0';\n        setTimeout(() => appLoading.style.display = 'none', 300);\n      }\n    });\n\n    // Error handling\n    window.addEventListener('app:error', function (e) {\n      const errorEl = document.getElementById('appInitError');\n      const errorText = document.getElementById('appInitErrorText');\n      if (errorEl && errorText) {\n        errorText.textContent = e.detail?.message || 'An error occurred during initialization';\n        errorEl.classList.remove('hidden');\n        errorEl.classList.add('translate-y-0');\n      }\n    });\n  </script>\n</body>\n\n</html>\n"
          },
          "redirectURL": "",
          "headersSize": 1052,
          "bodySize": 35496,
          "_transferSize": 36548,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:31.646Z",
        "time": 277.05100000914376,
        "timings": {
          "blocked": 3.4950000138487667,
          "dns": 0.008000000000000007,
          "ssl": -1,
          "connect": 0.3440000000000001,
          "send": 0.21999999999999997,
          "wait": 231.62299999933597,
          "receive": 41.36099999595899,
          "_blocked_queueing": 2.6200000138487667,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126320",
        "_initiator": {
          "type": "parser",
          "url": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b",
          "lineNumber": 0
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1409,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "3906"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:27 GMT"
            },
            {
              "name": "etag",
              "value": "\"b27699085ba36a6b4c3aac899487a763\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 09:41:17 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3906,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/* app.js\n * Root application entrypoint (NO side effects or singleton registration here!)\n * All startup logic—including DependencySystem registration, event handlers, browser/session wiring, sanitizer checks—\n * must now be invoked within static/js/init/appInitializer.js as clearly named functions or within the initialization sequence.\n */\n\n // CustomEvent polyfill (DI-safe factory)\nimport { createCustomEventPolyfill } from './utils/polyfillCustomEvent.js';\n\n// Core config & factory imports for bootstrapping\nimport { APP_CONFIG } from './appConfig.js';\nimport { createBrowserService } from './utils/browserService.js';\nimport { createAppInitializer } from './init/appInitializer.js';\n\n// Factories and utilities to be passed to appInitializer\nimport {\n  shouldSkipDedup,\n  stableStringify,\n  isAbsoluteUrl,\n  formatBytes as globalFormatBytes,\n  formatDate as globalFormatDate,\n  fileIcon as globalFileIcon\n} from './utils/globalUtils.js';\n\nimport { isValidProjectId } from './projectManager.js';\nimport { createApiEndpoints } from './utils/apiEndpoints.js';\nimport { createApiClient } from './utils/apiClient.js';\nimport { createHtmlTemplateLoader } from './utils/htmlTemplateLoader.js';\nimport { MODAL_MAPPINGS } from './modalConstants.js';\nimport { createFileUploadComponent } from './FileUploadComponent.js';\nimport { createAccessibilityEnhancements } from './accessibility-utils.js';\nimport { createNavigationService } from './navigationService.js';\nimport { createUiRenderer } from './uiRenderer.js';\nimport { createKnowledgeBaseComponent } from './knowledgeBaseComponent.js';\nimport { createProjectDetailsEnhancements } from './project-details-enhancements.js';\nimport { createTokenStatsManager } from './tokenStatsManager.js';\nimport { createModalManager } from './modalManager.js';\nimport { createAuthModule } from './auth.js';\nimport { createProjectManager } from './projectManager.js';\nimport { createModelConfig } from './modelConfig.js';\nimport { createProjectDashboard } from './projectDashboard.js';\nimport { createChatManager } from './chat.js';\nimport { createProjectDetailsComponent } from './projectDetailsComponent.js';\nimport { createProjectListComponent } from './projectListComponent.js';\nimport { createProjectModal } from './modalManager.js';\nimport { createSidebar } from './sidebar.js';\n\n/**\n * STRICT: The only initialization code here is to create the 'browserService',\n * acquire the DependencySystem instance, and pass factories to the AppInitializer.\n * All wiring, DI registration, side effects or checks have been migrated to appInitializer.js.\n */\nconst browserService = createBrowserService({\n  windowObject: (typeof window !== 'undefined') ? window : undefined\n});\n\n// Ensure CustomEvent exists in the injected window\ncreateCustomEventPolyfill({ browserService });\n\nconst DependencySystem = browserService.getDependencySystem();\n\n// Instantiate and run the app initializer\nconst appInit = createAppInitializer({\n  DependencySystem,\n  browserService,\n  APP_CONFIG,\n  shouldSkipDedup,\n  stableStringify,\n  isAbsoluteUrl,\n  globalFormatBytes,\n  globalFormatDate,\n  globalFileIcon,\n  isValidProjectId,\n  createApiEndpoints,\n  createApiClient,\n  createHtmlTemplateLoader,\n  MODAL_MAPPINGS,\n  createFileUploadComponent,\n  createAccessibilityEnhancements,\n  createNavigationService,\n  createUiRenderer,\n  createKnowledgeBaseComponent,\n  createProjectDetailsEnhancements,\n  createTokenStatsManager,\n  createModalManager,\n  createAuthModule,\n  createProjectManager,\n  createModelConfig,\n  createProjectDashboard,\n  createChatManager,\n  createProjectDetailsComponent,\n  createProjectListComponent,\n  createProjectModal,\n  createSidebar\n});\n\n// The ONLY orchestration in app.js: start up through the unified initializer\nappInit.initializeApp();\n\n// Optionally re-export the appConfig for test harnessing or diagnostics\nexport { createAppConfig } from './appConfig.js';\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 3906,
          "_transferSize": 5094,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:31.965Z",
        "time": 43.26900000160094,
        "timings": {
          "blocked": 1.2200000032903626,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.10699999999999998,
          "wait": 36.588000004779545,
          "receive": 5.353999993531033,
          "_blocked_queueing": 0.6330000032903627,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126339",
        "_initiator": {
          "type": "parser",
          "url": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b",
          "lineNumber": 119
        },
        "_priority": "VeryHigh",
        "_resourceType": "stylesheet",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/css/dist/mobile.css",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "text/css,*/*;q=0.1"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "style"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1484,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "201708"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/css; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:27 GMT"
            },
            {
              "name": "etag",
              "value": "\"c91ba4b94a2d1f13dea3fd221da2912e\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 08 Jun 2025 05:05:32 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 201708,
            "mimeType": "text/css",
            "compression": 0,
            "text": "/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */\n@layer properties;\n@layer theme, base, components, utilities;\n@layer theme {\n  :root, :host {\n    --font-sans: ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\",\n      \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\",\n      \"Courier New\", monospace;\n    --color-blue-400: oklch(70.7% 0.165 254.624);\n    --color-blue-500: oklch(62.3% 0.214 259.815);\n    --color-gray-300: oklch(87.2% 0.01 258.338);\n    --color-gray-400: oklch(70.7% 0.022 261.325);\n    --color-gray-500: oklch(55.1% 0.027 264.364);\n    --color-gray-600: oklch(44.6% 0.03 256.802);\n    --color-gray-700: oklch(37.3% 0.034 259.733);\n    --color-black: #000;\n    --color-white: #fff;\n    --spacing: 0.25rem;\n    --container-xs: 20rem;\n    --container-sm: 24rem;\n    --container-md: 28rem;\n    --container-lg: 32rem;\n    --container-xl: 36rem;\n    --container-2xl: 42rem;\n    --container-3xl: 48rem;\n    --container-4xl: 56rem;\n    --container-6xl: 72rem;\n    --container-7xl: 80rem;\n    --text-xs: 0.75rem;\n    --text-xs--line-height: calc(1 / 0.75);\n    --text-sm: 0.875rem;\n    --text-sm--line-height: calc(1.25 / 0.875);\n    --text-base: 1rem;\n    --text-base--line-height: calc(1.5 / 1);\n    --text-lg: 1.125rem;\n    --text-lg--line-height: calc(1.75 / 1.125);\n    --text-xl: 1.25rem;\n    --text-xl--line-height: calc(1.75 / 1.25);\n    --text-2xl: 1.5rem;\n    --text-2xl--line-height: calc(2 / 1.5);\n    --font-weight-medium: 500;\n    --font-weight-semibold: 600;\n    --font-weight-bold: 700;\n    --tracking-wider: 0.05em;\n    --leading-tight: 1.25;\n    --radius-md: 0.375rem;\n    --radius-lg: 0.5rem;\n    --radius-xl: 0.75rem;\n    --radius-2xl: 1rem;\n    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);\n    --animate-spin: spin 1s linear infinite;\n    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n    --blur-sm: 8px;\n    --blur-md: 12px;\n    --default-transition-duration: 150ms;\n    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    --default-font-family: var(--font-sans);\n    --default-mono-font-family: var(--font-mono);\n    --color-primary: oklch(0.63 0.22 268);\n    --color-primary-content: oklch(0.98 0.02 270);\n    --color-secondary: oklch(0.67 0.21 286);\n    --color-secondary-content: oklch(0.98 0.02 270);\n    --color-accent: oklch(0.76 0.18 220);\n    --color-base-100: oklch(1.00 0.00 0);\n    --color-base-200: oklch(0.95 0.01 286);\n    --color-base-300: oklch(0.90 0.02 286);\n    --color-base-content: oklch(0.20 0.02 286);\n    --color-success: oklch(0.72 0.15 142);\n    --color-success-content: oklch(0.98 0.02 142);\n    --color-warning: oklch(0.84 0.15 85);\n    --color-warning-content: oklch(0.15 0.05 85);\n    --color-error: oklch(0.65 0.20 25);\n    --color-error-content: oklch(0.98 0.02 25);\n    --default-ring-width: 2px;\n  }\n}\n@layer base {\n  *, ::after, ::before, ::backdrop, ::file-selector-button {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    border: 0 solid;\n  }\n  html, :host {\n    line-height: 1.5;\n    -webkit-text-size-adjust: 100%;\n    tab-size: 4;\n    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\");\n    font-feature-settings: var(--default-font-feature-settings, normal);\n    font-variation-settings: var(--default-font-variation-settings, normal);\n    -webkit-tap-highlight-color: transparent;\n  }\n  hr {\n    height: 0;\n    color: inherit;\n    border-top-width: 1px;\n  }\n  abbr:where([title]) {\n    -webkit-text-decoration: underline dotted;\n    text-decoration: underline dotted;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    font-size: inherit;\n    font-weight: inherit;\n  }\n  a {\n    color: inherit;\n    -webkit-text-decoration: inherit;\n    text-decoration: inherit;\n  }\n  b, strong {\n    font-weight: bolder;\n  }\n  code, kbd, samp, pre {\n    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace);\n    font-feature-settings: var(--default-mono-font-feature-settings, normal);\n    font-variation-settings: var(--default-mono-font-variation-settings, normal);\n    font-size: 1em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub, sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  table {\n    text-indent: 0;\n    border-color: inherit;\n    border-collapse: collapse;\n  }\n  :-moz-focusring {\n    outline: auto;\n  }\n  progress {\n    vertical-align: baseline;\n  }\n  summary {\n    display: list-item;\n  }\n  ol, ul, menu {\n    list-style: none;\n  }\n  img, svg, video, canvas, audio, iframe, embed, object {\n    display: block;\n    vertical-align: middle;\n  }\n  img, video {\n    max-width: 100%;\n    height: auto;\n  }\n  button, input, select, optgroup, textarea, ::file-selector-button {\n    font: inherit;\n    font-feature-settings: inherit;\n    font-variation-settings: inherit;\n    letter-spacing: inherit;\n    color: inherit;\n    border-radius: 0;\n    background-color: transparent;\n    opacity: 1;\n  }\n  :where(select:is([multiple], [size])) optgroup {\n    font-weight: bolder;\n  }\n  :where(select:is([multiple], [size])) optgroup option {\n    padding-inline-start: 20px;\n  }\n  ::file-selector-button {\n    margin-inline-end: 4px;\n  }\n  ::placeholder {\n    opacity: 1;\n  }\n  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {\n    ::placeholder {\n      color: currentcolor;\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, currentcolor 50%, transparent);\n      }\n    }\n  }\n  textarea {\n    resize: vertical;\n  }\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  ::-webkit-date-and-time-value {\n    min-height: 1lh;\n    text-align: inherit;\n  }\n  ::-webkit-datetime-edit {\n    display: inline-flex;\n  }\n  ::-webkit-datetime-edit-fields-wrapper {\n    padding: 0;\n  }\n  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {\n    padding-block: 0;\n  }\n  :-moz-ui-invalid {\n    box-shadow: none;\n  }\n  button, input:where([type=\"button\"], [type=\"reset\"], [type=\"submit\"]), ::file-selector-button {\n    appearance: button;\n  }\n  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\n    height: auto;\n  }\n  [hidden]:where(:not([hidden=\"until-found\"])) {\n    display: none !important;\n  }\n}\n@layer utilities {\n  .modal {\n    pointer-events: none;\n    visibility: hidden;\n    position: fixed;\n    inset: calc(0.25rem * 0);\n    margin: calc(0.25rem * 0);\n    display: grid;\n    height: 100%;\n    max-height: none;\n    width: 100%;\n    max-width: none;\n    align-items: center;\n    justify-items: center;\n    background-color: transparent;\n    padding: calc(0.25rem * 0);\n    color: inherit;\n    overflow-x: hidden;\n    transition: translate 0.3s ease-out, visibility 0.3s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;\n    overflow-y: hidden;\n    overscroll-behavior: contain;\n    z-index: 999;\n    &::backdrop {\n      display: none;\n    }\n    &.modal-open, &[open], &:target {\n      pointer-events: auto;\n      visibility: visible;\n      opacity: 100%;\n      background-color: oklch(0% 0 0/ 0.4);\n      .modal-box {\n        translate: 0 0;\n        scale: 1;\n        opacity: 1;\n      }\n    }\n    @starting-style {\n      &.modal-open, &[open], &:target {\n        visibility: hidden;\n        opacity: 0%;\n      }\n    }\n  }\n  .tooltip {\n    position: relative;\n    display: inline-block;\n    --tt-bg: var(--color-neutral);\n    --tt-off: calc(100% + 0.5rem);\n    --tt-tail: calc(100% + 1px + 0.25rem);\n    > :where(.tooltip-content), &:where([data-tip]):before {\n      position: absolute;\n      max-width: 20rem;\n      border-radius: var(--radius-field);\n      padding-inline: calc(0.25rem * 2);\n      padding-block: calc(0.25rem * 1);\n      text-align: center;\n      white-space: normal;\n      color: var(--color-neutral-content);\n      opacity: 0%;\n      font-size: 0.875rem;\n      line-height: 1.25;\n      transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;\n      background-color: var(--tt-bg);\n      width: max-content;\n      pointer-events: none;\n      z-index: 2;\n      --tw-content: attr(data-tip);\n      content: var(--tw-content);\n    }\n    &:after {\n      position: absolute;\n      position: absolute;\n      opacity: 0%;\n      background-color: var(--tt-bg);\n      transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;\n      content: \"\";\n      pointer-events: none;\n      width: 0.625rem;\n      height: 0.25rem;\n      display: block;\n      mask-repeat: no-repeat;\n      mask-position: -1px 0;\n      --mask-tooltip: url(\"data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A\");\n      mask-image: var(--mask-tooltip);\n    }\n    &.tooltip-open, &[data-tip]:not([data-tip=\"\"]):hover, &:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover, &:has(:focus-visible) {\n      > .tooltip-content, &[data-tip]:before, &:after {\n        opacity: 100%;\n        --tt-pos: 0rem;\n        transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n      }\n    }\n    > .tooltip-content, &[data-tip]:before {\n      transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));\n      inset: auto auto var(--tt-off) 50%;\n    }\n    &:after {\n      transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));\n      inset: auto auto var(--tt-tail) 50%;\n    }\n  }\n  .tab {\n    position: relative;\n    display: inline-flex;\n    cursor: pointer;\n    appearance: none;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    webkit-user-select: none;\n    user-select: none;\n    &:hover {\n      @media (hover: hover) {\n        color: var(--color-base-content);\n      }\n    }\n    --tab-p: 1rem;\n    --tab-bg: var(--color-base-100);\n    --tab-border-color: var(--color-base-300);\n    --tab-radius-ss: 0;\n    --tab-radius-se: 0;\n    --tab-radius-es: 0;\n    --tab-radius-ee: 0;\n    --tab-order: 0;\n    --tab-radius-min: calc(0.75rem - var(--border));\n    border-color: #0000;\n    order: var(--tab-order);\n    height: var(--tab-height);\n    font-size: 0.875rem;\n    padding-inline-start: var(--tab-p);\n    padding-inline-end: var(--tab-p);\n    &:is(input[type=\"radio\"]) {\n      min-width: fit-content;\n      &:after {\n        content: attr(aria-label);\n      }\n    }\n    &:is(label) {\n      position: relative;\n      input {\n        position: absolute;\n        inset: calc(0.25rem * 0);\n        cursor: pointer;\n        appearance: none;\n        opacity: 0%;\n      }\n    }\n    &:checked, &:is(label:has(:checked)), &:is(.tab-active, [aria-selected=\"true\"]) {\n      & + .tab-content {\n        display: block;\n        height: calc(100% - var(--tab-height) + var(--border));\n      }\n    }\n    &:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected=\"true\"]) {\n      color: color-mix(in srgb, oklch(0.20 0.02 286) 50%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);\n      }\n    }\n    &:not(input):empty {\n      flex-grow: 1;\n      cursor: default;\n    }\n    &:focus {\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n    }\n    &:focus-visible, &:is(label:has(:checked:focus-visible)) {\n      outline: 2px solid currentColor;\n      outline-offset: -5px;\n    }\n    &[disabled] {\n      pointer-events: none;\n      opacity: 40%;\n    }\n  }\n  .menu {\n    display: flex;\n    width: fit-content;\n    flex-direction: column;\n    flex-wrap: wrap;\n    padding: calc(0.25rem * 2);\n    --menu-active-fg: var(--color-neutral-content);\n    --menu-active-bg: var(--color-neutral);\n    font-size: 0.875rem;\n    :where(li ul) {\n      position: relative;\n      margin-inline-start: calc(0.25rem * 4);\n      padding-inline-start: calc(0.25rem * 2);\n      white-space: nowrap;\n      &:before {\n        position: absolute;\n        inset-inline-start: calc(0.25rem * 0);\n        top: calc(0.25rem * 3);\n        bottom: calc(0.25rem * 3);\n        background-color: var(--color-base-content);\n        opacity: 10%;\n        width: var(--border);\n        content: \"\";\n      }\n    }\n    :where(li > .menu-dropdown:not(.menu-dropdown-show)) {\n      display: none;\n    }\n    :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {\n      display: grid;\n      grid-auto-flow: column;\n      align-content: flex-start;\n      align-items: center;\n      gap: calc(0.25rem * 2);\n      border-radius: var(--radius-field);\n      padding-inline: calc(0.25rem * 3);\n      padding-block: calc(0.25rem * 1.5);\n      text-align: start;\n      transition-property: color, background-color, box-shadow;\n      transition-duration: 0.2s;\n      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\n      grid-auto-columns: minmax(auto, max-content) auto max-content;\n      text-wrap: balance;\n      user-select: none;\n    }\n    :where(li > details > summary) {\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n      &::-webkit-details-marker {\n        display: none;\n      }\n    }\n    :where(li > details > summary), :where(li > .menu-dropdown-toggle) {\n      &:after {\n        justify-self: flex-end;\n        display: block;\n        height: 0.375rem;\n        width: 0.375rem;\n        rotate: -135deg;\n        translate: 0 -1px;\n        transition-property: rotate, translate;\n        transition-duration: 0.2s;\n        content: \"\";\n        transform-origin: 50% 50%;\n        box-shadow: 2px 2px inset;\n        pointer-events: none;\n      }\n    }\n    :where(li > details[open] > summary):after, :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {\n      rotate: 45deg;\n      translate: 0 1px;\n    }\n    :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn) {\n      &.menu-focus, &:focus-visible {\n        cursor: pointer;\n        background-color: color-mix(in srgb, oklch(0.20 0.02 286) 10%, transparent);\n        @supports (color: color-mix(in lab, red, red)) {\n          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);\n        }\n        color: var(--color-base-content);\n        --tw-outline-style: none;\n        outline-style: none;\n        @media (forced-colors: active) {\n          outline: 2px solid transparent;\n          outline-offset: 2px;\n        }\n      }\n    }\n    :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {\n      cursor: pointer;\n      background-color: color-mix(in srgb, oklch(0.20 0.02 286) 10%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);\n      }\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n      box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;\n    }\n    :where(li:empty) {\n      background-color: var(--color-base-content);\n      opacity: 10%;\n      margin: 0.5rem 1rem;\n      height: 1px;\n    }\n    :where(li) {\n      position: relative;\n      display: flex;\n      flex-shrink: 0;\n      flex-direction: column;\n      flex-wrap: wrap;\n      align-items: stretch;\n      .badge {\n        justify-self: flex-end;\n      }\n      & > *:not(ul, .menu-title, details, .btn):active, & > *:not(ul, .menu-title, details, .btn).menu-active, & > details > summary:active {\n        --tw-outline-style: none;\n        outline-style: none;\n        @media (forced-colors: active) {\n          outline: 2px solid transparent;\n          outline-offset: 2px;\n        }\n        color: var(--menu-active-fg);\n        background-color: var(--menu-active-bg);\n        background-size: auto, calc(var(--noise) * 100%);\n        background-image: none, var(--fx-noise);\n        &:not(&:active) {\n          box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);\n        }\n      }\n      &.menu-disabled {\n        pointer-events: none;\n        color: color-mix(in srgb, oklch(0.20 0.02 286) 20%, transparent);\n        @supports (color: color-mix(in lab, red, red)) {\n          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n        }\n      }\n    }\n    .dropdown:focus-within {\n      .menu-dropdown-toggle:after {\n        rotate: 45deg;\n        translate: 0 1px;\n      }\n    }\n    .dropdown-content {\n      margin-top: calc(0.25rem * 2);\n      padding: calc(0.25rem * 2);\n      &:before {\n        display: none;\n      }\n    }\n  }\n  .collapse-arrow {\n    > .collapse-title:after {\n      position: absolute;\n      display: block;\n      height: 0.5rem;\n      width: 0.5rem;\n      transform: translateY(-100%) rotate(45deg);\n      transition-property: all;\n      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      transition-duration: 0.2s;\n      top: 1.9rem;\n      inset-inline-end: 1.4rem;\n      content: \"\";\n      transform-origin: 75% 75%;\n      box-shadow: 2px 2px;\n      pointer-events: none;\n    }\n  }\n  .dock {\n    position: fixed;\n    right: calc(0.25rem * 0);\n    bottom: calc(0.25rem * 0);\n    left: calc(0.25rem * 0);\n    z-index: 1;\n    display: flex;\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-around;\n    background-color: var(--color-base-100);\n    padding: calc(0.25rem * 2);\n    color: currentColor;\n    border-top: 0.5px solid color-mix(in srgb, oklch(0.20 0.02 286) 5%, #0000);\n    @supports (color: color-mix(in lab, red, red)) {\n      border-top: 0.5px solid color-mix(in oklab, var(--color-base-content) 5%, #0000);\n    }\n    height: 4rem;\n    height: calc(4rem + env(safe-area-inset-bottom));\n    padding-bottom: env(safe-area-inset-bottom);\n    > * {\n      position: relative;\n      margin-bottom: calc(0.25rem * 2);\n      display: flex;\n      height: 100%;\n      max-width: calc(0.25rem * 32);\n      flex-shrink: 1;\n      flex-basis: 100%;\n      cursor: pointer;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      gap: 1px;\n      border-radius: var(--radius-box);\n      background-color: transparent;\n      transition: opacity 0.2s ease-out;\n      @media (hover: hover) {\n        &:hover {\n          opacity: 80%;\n        }\n      }\n      &[aria-disabled=\"true\"], &[disabled] {\n        &, &:hover {\n          pointer-events: none;\n          color: color-mix(in srgb, oklch(0.20 0.02 286) 10%, transparent);\n          @supports (color: color-mix(in lab, red, red)) {\n            color: color-mix(in oklab, var(--color-base-content) 10%, transparent);\n          }\n          opacity: 100%;\n        }\n      }\n      .dock-label {\n        font-size: 0.6875rem;\n      }\n      &:after {\n        content: \"\";\n        position: absolute;\n        height: calc(0.25rem * 1);\n        width: calc(0.25rem * 6);\n        border-radius: calc(infinity * 1px);\n        background-color: transparent;\n        bottom: 0.2rem;\n        border-top: 3px solid transparent;\n        transition: background-color 0.1s ease-out, text-color 0.1s ease-out, width 0.1s ease-out;\n      }\n    }\n  }\n  .dropdown {\n    position: relative;\n    display: inline-block;\n    position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);\n    & > *:not(summary):focus {\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n    }\n    .dropdown-content {\n      position: absolute;\n    }\n    &:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) {\n      .dropdown-content {\n        display: none;\n        transform-origin: top;\n        opacity: 0%;\n        scale: 95%;\n      }\n    }\n    &[popover], .dropdown-content {\n      z-index: 999;\n      animation: dropdown 0.2s;\n      transition-property: opacity, scale, display;\n      transition-behavior: allow-discrete;\n      transition-duration: 0.2s;\n      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    }\n    @starting-style {\n      &[popover], .dropdown-content {\n        scale: 95%;\n        opacity: 0;\n      }\n    }\n    &.dropdown-open, &:not(.dropdown-hover):focus, &:focus-within {\n      > [tabindex]:first-child {\n        pointer-events: none;\n      }\n      .dropdown-content {\n        opacity: 100%;\n      }\n    }\n    &.dropdown-hover:hover {\n      .dropdown-content {\n        opacity: 100%;\n        scale: 100%;\n      }\n    }\n    &:is(details) {\n      summary {\n        &::-webkit-details-marker {\n          display: none;\n        }\n      }\n    }\n    &.dropdown-open, &:focus, &:focus-within {\n      .dropdown-content {\n        scale: 100%;\n      }\n    }\n    &:where([popover]) {\n      background: #0000;\n    }\n    &[popover] {\n      position: fixed;\n      color: inherit;\n      @supports not (position-area: bottom) {\n        margin: auto;\n        &.dropdown-open:not(:popover-open) {\n          display: none;\n          transform-origin: top;\n          opacity: 0%;\n          scale: 95%;\n        }\n        &::backdrop {\n          background-color: color-mix(in oklab, #000 30%, #0000);\n        }\n      }\n      &:not(.dropdown-open, :popover-open) {\n        display: none;\n        transform-origin: top;\n        opacity: 0%;\n        scale: 95%;\n      }\n    }\n  }\n  .btn {\n    :where(&) {\n      width: unset;\n    }\n    display: inline-flex;\n    flex-shrink: 0;\n    cursor: pointer;\n    flex-wrap: nowrap;\n    align-items: center;\n    justify-content: center;\n    gap: calc(0.25rem * 1.5);\n    text-align: center;\n    vertical-align: middle;\n    outline-offset: 2px;\n    webkit-user-select: none;\n    user-select: none;\n    padding-inline: var(--btn-p);\n    color: var(--btn-fg);\n    --tw-prose-links: var(--btn-fg);\n    height: var(--size);\n    font-size: var(--fontsize, 0.875rem);\n    font-weight: 600;\n    outline-color: var(--btn-color, var(--color-base-content));\n    transition-property: color, background-color, border-color, box-shadow;\n    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\n    transition-duration: 0.2s;\n    border-start-start-radius: var(--join-ss, var(--radius-field));\n    border-start-end-radius: var(--join-se, var(--radius-field));\n    border-end-start-radius: var(--join-es, var(--radius-field));\n    border-end-end-radius: var(--join-ee, var(--radius-field));\n    background-color: var(--btn-bg);\n    background-size: auto, calc(var(--noise) * 100%);\n    background-image: none, var(--btn-noise);\n    border-width: var(--border);\n    border-style: solid;\n    border-color: var(--btn-border);\n    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));\n    touch-action: manipulation;\n    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);\n    --size: calc(var(--size-field, 0.25rem) * 10);\n    --btn-bg: var(--btn-color, var(--color-base-200));\n    --btn-fg: var(--color-base-content);\n    --btn-p: 1rem;\n    --btn-border: var(--btn-bg);\n    @supports (color: color-mix(in lab, red, red)) {\n      --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));\n    }\n    --btn-shadow: 0 3px 2px -2px var(--btn-bg),\n    0 4px 3px -2px var(--btn-bg);\n    @supports (color: color-mix(in lab, red, red)) {\n      --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),\n    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);\n    }\n    --btn-noise: var(--fx-noise);\n    .prose & {\n      text-decoration-line: none;\n    }\n    @media (hover: hover) {\n      &:hover {\n        --btn-bg: var(--btn-color, oklch(0.95 0.01 286));\n        @supports (color: color-mix(in lab, red, red)) {\n          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);\n        }\n      }\n    }\n    &:focus-visible {\n      outline-width: 2px;\n      outline-style: solid;\n      isolation: isolate;\n    }\n    &:active:not(.btn-active) {\n      translate: 0 0.5px;\n      --btn-bg: var(--btn-color, oklch(0.95 0.01 286));\n      @supports (color: color-mix(in lab, red, red)) {\n        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);\n      }\n      --btn-border: var(--btn-color, oklch(0.95 0.01 286));\n      @supports (color: color-mix(in lab, red, red)) {\n        --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);\n      }\n      --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);\n    }\n    &:is(:disabled, [disabled], .btn-disabled) {\n      &:not(.btn-link, .btn-ghost) {\n        background-color: color-mix(in srgb, oklch(0.20 0.02 286) 10%, transparent);\n        @supports (color: color-mix(in lab, red, red)) {\n          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);\n        }\n        box-shadow: none;\n      }\n      pointer-events: none;\n      --btn-border: #0000;\n      --btn-noise: none;\n      --btn-fg: color-mix(in srgb, oklch(0.20 0.02 286) 20%, #0000);\n      @supports (color: color-mix(in lab, red, red)) {\n        --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);\n      }\n      @media (hover: hover) {\n        &:hover {\n          pointer-events: none;\n          background-color: var(--color-neutral);\n          @supports (color: color-mix(in lab, red, red)) {\n            background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);\n          }\n          --btn-border: #0000;\n          --btn-fg: color-mix(in srgb, oklch(0.20 0.02 286) 20%, #0000);\n          @supports (color: color-mix(in lab, red, red)) {\n            --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);\n          }\n        }\n      }\n    }\n    &:is(input[type=\"checkbox\"], input[type=\"radio\"]) {\n      appearance: none;\n      &::after {\n        content: attr(aria-label);\n      }\n    }\n    &:where(input:checked:not(.filter .btn)) {\n      --btn-color: var(--color-primary);\n      --btn-fg: var(--color-primary-content);\n      isolation: isolate;\n    }\n  }\n  .loading {\n    pointer-events: none;\n    display: inline-block;\n    aspect-ratio: 1 / 1;\n    background-color: currentColor;\n    vertical-align: middle;\n    width: calc(var(--size-selector, 0.25rem) * 6);\n    mask-size: 100%;\n    mask-repeat: no-repeat;\n    mask-position: center;\n    mask-image: url(\"data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n  }\n  .pointer-events-none {\n    pointer-events: none;\n  }\n  .collapse {\n    &:not(td, tr, colgroup) {\n      visibility: visible;\n    }\n    position: relative;\n    display: grid;\n    overflow: hidden;\n    border-radius: var(--radius-box, 1rem);\n    width: 100%;\n    grid-template-rows: max-content 0fr;\n    transition: grid-template-rows 0.2s;\n    isolation: isolate;\n    > input:is([type=\"checkbox\"], [type=\"radio\"]) {\n      grid-column-start: 1;\n      grid-row-start: 1;\n      appearance: none;\n      opacity: 0;\n      z-index: 1;\n      width: 100%;\n      padding: 1rem;\n      padding-inline-end: 3rem;\n      min-height: 1lh;\n      transition: background-color 0.2s ease-out;\n    }\n    &:is([open], :focus:not(.collapse-close)), &:not(.collapse-close):has(> input:is([type=\"checkbox\"], [type=\"radio\"]):checked) {\n      grid-template-rows: max-content 1fr;\n    }\n    &:is([open], :focus:not(.collapse-close)) > .collapse-content, &:not(.collapse-close) > :where(input:is([type=\"checkbox\"], [type=\"radio\"]):checked ~ .collapse-content) {\n      visibility: visible;\n      min-height: fit-content;\n    }\n    &:focus-visible, &:has(> input:is([type=\"checkbox\"], [type=\"radio\"]):focus-visible) {\n      outline-color: var(--color-base-content);\n      outline-style: solid;\n      outline-width: 2px;\n      outline-offset: 2px;\n    }\n    &:not(.collapse-close) {\n      > input[type=\"checkbox\"], > input[type=\"radio\"]:not(:checked), > .collapse-title {\n        cursor: pointer;\n      }\n    }\n    &:focus:not(.collapse-close, .collapse[open]) > .collapse-title {\n      cursor: unset;\n    }\n    &:is([open], :focus:not(.collapse-close)) > :where(.collapse-content), &:not(.collapse-close) > :where(input:is([type=\"checkbox\"], [type=\"radio\"]):checked ~ .collapse-content) {\n      padding-bottom: 1rem;\n      transition: padding 0.2s ease-out, background-color 0.2s ease-out;\n    }\n    &:is([open]) {\n      &.collapse-arrow {\n        > .collapse-title:after {\n          transform: translateY(-50%) rotate(225deg);\n        }\n      }\n    }\n    &.collapse-open {\n      &.collapse-arrow {\n        > .collapse-title:after {\n          transform: translateY(-50%) rotate(225deg);\n        }\n      }\n      &.collapse-plus {\n        > .collapse-title:after {\n          content: \"−\";\n        }\n      }\n    }\n    &.collapse-arrow:focus:not(.collapse-close) {\n      > .collapse-title:after {\n        transform: translateY(-50%) rotate(225deg);\n      }\n    }\n    &.collapse-arrow:not(.collapse-close) {\n      > input:is([type=\"checkbox\"], [type=\"radio\"]):checked ~ .collapse-title:after {\n        transform: translateY(-50%) rotate(225deg);\n      }\n    }\n    &[open] {\n      &.collapse-plus {\n        > .collapse-title:after {\n          content: \"−\";\n        }\n      }\n    }\n    &.collapse-plus:focus:not(.collapse-close) {\n      > .collapse-title:after {\n        content: \"−\";\n      }\n    }\n    &.collapse-plus:not(.collapse-close) {\n      > input:is([type=\"checkbox\"], [type=\"radio\"]):checked ~ .collapse-title:after {\n        content: \"−\";\n      }\n    }\n    &:is(details) {\n      width: 100%;\n      & summary {\n        position: relative;\n        display: block;\n        &::-webkit-details-marker {\n          display: none;\n        }\n      }\n    }\n    &:is(details) summary {\n      outline: none;\n    }\n  }\n  .collapse-content {\n    grid-column-start: 1;\n    grid-row-start: 1;\n    visibility: hidden;\n    grid-column-start: 1;\n    grid-row-start: 2;\n    min-height: 0;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    cursor: unset;\n    transition: visibility 0.2s, padding 0.2s ease-out, background-color 0.2s ease-out;\n  }\n  .validator-hint {\n    visibility: hidden;\n    margin-top: calc(0.25rem * 2);\n    font-size: 0.75rem;\n  }\n  .validator {\n    &:user-valid, &:has(:user-valid) {\n      &, &:focus, &:checked, &[aria-checked=\"true\"], &:focus-within {\n        --input-color: var(--color-success);\n      }\n    }\n    &:user-invalid, &:has(:user-invalid), &[aria-invalid]:not([aria-invalid=\"false\"]) {\n      &, &:focus, &:checked, &[aria-checked=\"true\"], &:focus-within {\n        --input-color: var(--color-error);\n      }\n      & ~ .validator-hint {\n        visibility: visible;\n        display: block;\n        color: var(--color-error);\n      }\n    }\n  }\n  .collapse {\n    visibility: collapse;\n  }\n  .visible {\n    visibility: visible;\n  }\n  .list {\n    display: flex;\n    flex-direction: column;\n    font-size: 0.875rem;\n    :where(.list-row) {\n      --list-grid-cols: minmax(0, auto) 1fr;\n      position: relative;\n      display: grid;\n      grid-auto-flow: column;\n      gap: calc(0.25rem * 4);\n      border-radius: var(--radius-box);\n      padding: calc(0.25rem * 4);\n      word-break: break-word;\n      grid-template-columns: var(--list-grid-cols);\n      &:has(.list-col-grow:nth-child(1)) {\n        --list-grid-cols: 1fr;\n      }\n      &:has(.list-col-grow:nth-child(2)) {\n        --list-grid-cols: minmax(0, auto) 1fr;\n      }\n      &:has(.list-col-grow:nth-child(3)) {\n        --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;\n      }\n      &:has(.list-col-grow:nth-child(4)) {\n        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;\n      }\n      &:has(.list-col-grow:nth-child(5)) {\n        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;\n      }\n      &:has(.list-col-grow:nth-child(6)) {\n        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)\n        minmax(0, auto) 1fr;\n      }\n      :not(.list-col-wrap) {\n        grid-row-start: 1;\n      }\n    }\n    & > :not(:last-child) {\n      &.list-row, .list-row {\n        &:after {\n          content: \"\";\n          border-bottom: var(--border) solid;\n          inset-inline: var(--radius-box);\n          position: absolute;\n          bottom: calc(0.25rem * 0);\n          border-color: color-mix(in srgb, oklch(0.20 0.02 286) 5%, transparent);\n          @supports (color: color-mix(in lab, red, red)) {\n            border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);\n          }\n        }\n      }\n    }\n  }\n  .toast {\n    position: fixed;\n    inset-inline-start: auto;\n    inset-inline-end: calc(0.25rem * 4);\n    top: auto;\n    bottom: calc(0.25rem * 4);\n    display: flex;\n    flex-direction: column;\n    gap: calc(0.25rem * 2);\n    background-color: transparent;\n    translate: var(--toast-x, 0) var(--toast-y, 0);\n    width: max-content;\n    max-width: calc(100vw - 2rem);\n    & > * {\n      animation: toast 0.25s ease-out;\n    }\n    &:where(.toast-start) {\n      inset-inline-start: calc(0.25rem * 4);\n      inset-inline-end: auto;\n      --toast-x: 0;\n    }\n    &:where(.toast-center) {\n      inset-inline-start: calc(1/2 * 100%);\n      inset-inline-end: calc(1/2 * 100%);\n      --toast-x: -50%;\n    }\n    &:where(.toast-end) {\n      inset-inline-start: auto;\n      inset-inline-end: calc(0.25rem * 4);\n      --toast-x: 0;\n    }\n    &:where(.toast-bottom) {\n      top: auto;\n      bottom: calc(0.25rem * 4);\n      --toast-y: 0;\n    }\n    &:where(.toast-middle) {\n      top: calc(1/2 * 100%);\n      bottom: auto;\n      --toast-y: -50%;\n    }\n    &:where(.toast-top) {\n      top: calc(0.25rem * 4);\n      bottom: auto;\n      --toast-y: 0;\n    }\n  }\n  .toggle {\n    border: var(--border) solid currentColor;\n    color: var(--input-color);\n    position: relative;\n    display: inline-grid;\n    flex-shrink: 0;\n    cursor: pointer;\n    appearance: none;\n    place-content: center;\n    vertical-align: middle;\n    webkit-user-select: none;\n    user-select: none;\n    grid-template-columns: 0fr 1fr 1fr;\n    --radius-selector-max: calc(\n    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)\n  );\n    border-radius: calc( var(--radius-selector) + min(var(--toggle-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) );\n    padding: var(--toggle-p);\n    box-shadow: 0 1px currentColor inset;\n    @supports (color: color-mix(in lab, red, red)) {\n      box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;\n    }\n    transition: color 0.3s, grid-template-columns 0.2s;\n    --input-color: color-mix(in srgb, oklch(0.20 0.02 286) 50%, #0000);\n    @supports (color: color-mix(in lab, red, red)) {\n      --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);\n    }\n    --toggle-p: calc(var(--size) * 0.125);\n    --size: calc(var(--size-selector, 0.25rem) * 6);\n    width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2);\n    height: var(--size);\n    > * {\n      z-index: 1;\n      grid-column: span 1 / span 1;\n      grid-column-start: 2;\n      grid-row-start: 1;\n      height: 100%;\n      cursor: pointer;\n      appearance: none;\n      background-color: transparent;\n      padding: calc(0.25rem * 0.5);\n      transition: opacity 0.2s, rotate 0.4s;\n      border: none;\n      &:focus {\n        --tw-outline-style: none;\n        outline-style: none;\n        @media (forced-colors: active) {\n          outline: 2px solid transparent;\n          outline-offset: 2px;\n        }\n      }\n      &:nth-child(2) {\n        color: var(--color-base-100);\n        rotate: 0deg;\n      }\n      &:nth-child(3) {\n        color: var(--color-base-100);\n        opacity: 0%;\n        rotate: -15deg;\n      }\n    }\n    &:has(:checked) {\n      > :nth-child(2) {\n        opacity: 0%;\n        rotate: 15deg;\n      }\n      > :nth-child(3) {\n        opacity: 100%;\n        rotate: 0deg;\n      }\n    }\n    &:before {\n      position: relative;\n      inset-inline-start: calc(0.25rem * 0);\n      grid-column-start: 2;\n      grid-row-start: 1;\n      aspect-ratio: 1 / 1;\n      height: 100%;\n      border-radius: var(--radius-selector);\n      background-color: currentColor;\n      translate: 0;\n      --tw-content: \"\";\n      content: var(--tw-content);\n      transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;\n      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor;\n      @supports (color: color-mix(in lab, red, red)) {\n        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);\n      }\n      background-size: auto, calc(var(--noise) * 100%);\n      background-image: none, var(--fx-noise);\n    }\n    @media (forced-colors: active) {\n      &:before {\n        outline-style: var(--tw-outline-style);\n        outline-width: 1px;\n        outline-offset: calc(1px * -1);\n      }\n    }\n    @media print {\n      &:before {\n        outline: 0.25rem solid;\n        outline-offset: -1rem;\n      }\n    }\n    &:focus-visible, &:has(:focus-visible) {\n      outline: 2px solid currentColor;\n      outline-offset: 2px;\n    }\n    &:checked, &[aria-checked=\"true\"], &:has(> input:checked) {\n      grid-template-columns: 1fr 1fr 0fr;\n      background-color: var(--color-base-100);\n      --input-color: var(--color-base-content);\n      &:before {\n        background-color: currentColor;\n      }\n      @starting-style {\n        &:before {\n          opacity: 0;\n        }\n      }\n    }\n    &:indeterminate {\n      grid-template-columns: 0.5fr 1fr 0.5fr;\n    }\n    &:disabled {\n      cursor: not-allowed;\n      opacity: 30%;\n      &:before {\n        background-color: transparent;\n        border: var(--border) solid currentColor;\n      }\n    }\n  }\n  .input {\n    cursor: text;\n    border: var(--border) solid #0000;\n    position: relative;\n    display: inline-flex;\n    flex-shrink: 1;\n    appearance: none;\n    align-items: center;\n    gap: calc(0.25rem * 2);\n    background-color: var(--color-base-100);\n    padding-inline: calc(0.25rem * 3);\n    vertical-align: middle;\n    white-space: nowrap;\n    width: clamp(3rem, 20rem, 100%);\n    height: var(--size);\n    font-size: 0.875rem;\n    touch-action: manipulation;\n    border-start-start-radius: var(--join-ss, var(--radius-field));\n    border-start-end-radius: var(--join-se, var(--radius-field));\n    border-end-start-radius: var(--join-es, var(--radius-field));\n    border-end-end-radius: var(--join-ee, var(--radius-field));\n    border-color: var(--input-color);\n    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n    @supports (color: color-mix(in lab, red, red)) {\n      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n    }\n    --size: calc(var(--size-field, 0.25rem) * 10);\n    --input-color: color-mix(in srgb, oklch(0.20 0.02 286) 20%, #0000);\n    @supports (color: color-mix(in lab, red, red)) {\n      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);\n    }\n    &:where(input) {\n      display: inline-flex;\n    }\n    :where(input) {\n      display: inline-flex;\n      height: 100%;\n      width: 100%;\n      appearance: none;\n      background-color: transparent;\n      border: none;\n      &:focus, &:focus-within {\n        --tw-outline-style: none;\n        outline-style: none;\n        @media (forced-colors: active) {\n          outline: 2px solid transparent;\n          outline-offset: 2px;\n        }\n      }\n    }\n    :where(input[type=\"url\"]), :where(input[type=\"email\"]) {\n      direction: ltr;\n    }\n    :where(input[type=\"date\"]) {\n      display: inline-block;\n    }\n    &:focus, &:focus-within {\n      --input-color: var(--color-base-content);\n      box-shadow: 0 1px var(--input-color);\n      @supports (color: color-mix(in lab, red, red)) {\n        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);\n      }\n      outline: 2px solid var(--input-color);\n      outline-offset: 2px;\n      isolation: isolate;\n      z-index: 1;\n    }\n    &:has(> input[disabled]), &:is(:disabled, [disabled]) {\n      cursor: not-allowed;\n      border-color: var(--color-base-200);\n      background-color: var(--color-base-200);\n      color: color-mix(in srgb, oklch(0.20 0.02 286) 40%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);\n      }\n      &::placeholder {\n        color: color-mix(in srgb, oklch(0.20 0.02 286) 20%, transparent);\n        @supports (color: color-mix(in lab, red, red)) {\n          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n        }\n      }\n      box-shadow: none;\n    }\n    &:has(> input[disabled]) > input[disabled] {\n      cursor: not-allowed;\n    }\n    &::-webkit-date-and-time-value {\n      text-align: inherit;\n    }\n    &[type=\"number\"] {\n      &::-webkit-inner-spin-button {\n        margin-block: calc(0.25rem * -3);\n        margin-inline-end: calc(0.25rem * -3);\n      }\n    }\n    &::-webkit-calendar-picker-indicator {\n      position: absolute;\n      inset-inline-end: 0.75em;\n    }\n  }\n  .indicator {\n    position: relative;\n    display: inline-flex;\n    width: max-content;\n    :where(.indicator-item) {\n      z-index: 1;\n      position: absolute;\n      white-space: nowrap;\n      top: var(--indicator-t, 0);\n      bottom: var(--indicator-b, auto);\n      left: var(--indicator-s, auto);\n      right: var(--indicator-e, 0);\n      translate: var(--indicator-x, 50%) var(--indicator-y, -50%);\n    }\n  }\n  .table {\n    font-size: 0.875rem;\n    position: relative;\n    width: 100%;\n    border-radius: var(--radius-box);\n    text-align: left;\n    &:where(:dir(rtl), [dir=\"rtl\"], [dir=\"rtl\"] *) {\n      text-align: right;\n    }\n    tr.row-hover {\n      &, &:nth-child(even) {\n        &:hover {\n          @media (hover: hover) {\n            background-color: var(--color-base-200);\n          }\n        }\n      }\n    }\n    :where(th, td) {\n      padding-inline: calc(0.25rem * 4);\n      padding-block: calc(0.25rem * 3);\n      vertical-align: middle;\n    }\n    :where(thead, tfoot) {\n      white-space: nowrap;\n      color: color-mix(in srgb, oklch(0.20 0.02 286) 60%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n      }\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n    :where(tfoot) {\n      border-top: var(--border) solid color-mix(in srgb, oklch(0.20 0.02 286) 5%, #0000);\n      @supports (color: color-mix(in lab, red, red)) {\n        border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);\n      }\n    }\n    :where(.table-pin-rows thead tr) {\n      position: sticky;\n      top: calc(0.25rem * 0);\n      z-index: 1;\n      background-color: var(--color-base-100);\n    }\n    :where(.table-pin-rows tfoot tr) {\n      position: sticky;\n      bottom: calc(0.25rem * 0);\n      z-index: 1;\n      background-color: var(--color-base-100);\n    }\n    :where(.table-pin-cols tr th) {\n      position: sticky;\n      right: calc(0.25rem * 0);\n      left: calc(0.25rem * 0);\n      background-color: var(--color-base-100);\n    }\n    :where(thead tr, tbody tr:not(:last-child)) {\n      border-bottom: var(--border) solid color-mix(in srgb, oklch(0.20 0.02 286) 5%, #0000);\n      @supports (color: color-mix(in lab, red, red)) {\n        border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);\n      }\n    }\n  }\n  .steps {\n    display: inline-grid;\n    grid-auto-flow: column;\n    overflow: hidden;\n    overflow-x: auto;\n    counter-reset: step;\n    grid-auto-columns: 1fr;\n    .step {\n      display: grid;\n      grid-template-columns: repeat(1, minmax(0, 1fr));\n      grid-template-columns: auto;\n      grid-template-rows: repeat(2, minmax(0, 1fr));\n      grid-template-rows: 40px 1fr;\n      place-items: center;\n      text-align: center;\n      min-width: 4rem;\n      --step-bg: var(--color-base-300);\n      --step-fg: var(--color-base-content);\n      &:before {\n        top: calc(0.25rem * 0);\n        grid-column-start: 1;\n        grid-row-start: 1;\n        height: calc(0.25rem * 2);\n        width: 100%;\n        border: 1px solid;\n        color: var(--step-bg);\n        background-color: var(--step-bg);\n        --tw-content: \"\";\n        content: var(--tw-content);\n        margin-inline-start: -100%;\n      }\n      > .step-icon, &:not(:has(.step-icon)):after {\n        content: counter(step);\n        counter-increment: step;\n        z-index: 1;\n        color: var(--step-fg);\n        background-color: var(--step-bg);\n        border: 1px solid var(--step-bg);\n        position: relative;\n        grid-column-start: 1;\n        grid-row-start: 1;\n        display: grid;\n        height: calc(0.25rem * 8);\n        width: calc(0.25rem * 8);\n        place-items: center;\n        place-self: center;\n        border-radius: calc(infinity * 1px);\n      }\n      &:first-child:before {\n        content: none;\n      }\n      &[data-content]:after {\n        content: attr(data-content);\n      }\n    }\n    .step-neutral {\n      + .step-neutral:before, &:after, > .step-icon {\n        --step-bg: var(--color-neutral);\n        --step-fg: var(--color-neutral-content);\n      }\n    }\n    .step-primary {\n      + .step-primary:before, &:after, > .step-icon {\n        --step-bg: var(--color-primary);\n        --step-fg: var(--color-primary-content);\n      }\n    }\n    .step-secondary {\n      + .step-secondary:before, &:after, > .step-icon {\n        --step-bg: var(--color-secondary);\n        --step-fg: var(--color-secondary-content);\n      }\n    }\n    .step-accent {\n      + .step-accent:before, &:after, > .step-icon {\n        --step-bg: var(--color-accent);\n        --step-fg: var(--color-accent-content);\n      }\n    }\n    .step-info {\n      + .step-info:before, &:after, > .step-icon {\n        --step-bg: var(--color-info);\n        --step-fg: var(--color-info-content);\n      }\n    }\n    .step-success {\n      + .step-success:before, &:after, > .step-icon {\n        --step-bg: var(--color-success);\n        --step-fg: var(--color-success-content);\n      }\n    }\n    .step-warning {\n      + .step-warning:before, &:after, > .step-icon {\n        --step-bg: var(--color-warning);\n        --step-fg: var(--color-warning-content);\n      }\n    }\n    .step-error {\n      + .step-error:before, &:after, > .step-icon {\n        --step-bg: var(--color-error);\n        --step-fg: var(--color-error-content);\n      }\n    }\n  }\n  .range {\n    appearance: none;\n    webkit-appearance: none;\n    --range-thumb: var(--color-base-100);\n    --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);\n    --range-progress: currentColor;\n    --range-fill: 1;\n    --range-p: 0.25rem;\n    --range-bg: currentColor;\n    @supports (color: color-mix(in lab, red, red)) {\n      --range-bg: color-mix(in oklab, currentColor 10%, #0000);\n    }\n    cursor: pointer;\n    overflow: hidden;\n    background-color: transparent;\n    vertical-align: middle;\n    width: clamp(3rem, 20rem, 100%);\n    --radius-selector-max: calc(\n    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)\n  );\n    border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));\n    border: none;\n    height: var(--range-thumb-size);\n    [dir=\"rtl\"] & {\n      --range-dir: -1;\n    }\n    &:focus {\n      outline: none;\n    }\n    &:focus-visible {\n      outline: 2px solid;\n      outline-offset: 2px;\n    }\n    &::-webkit-slider-runnable-track {\n      width: 100%;\n      background-color: var(--range-bg);\n      border-radius: var(--radius-selector);\n      height: calc(var(--range-thumb-size) * 0.5);\n    }\n    @media (forced-colors: active) {\n      &::-webkit-slider-runnable-track {\n        border: 1px solid;\n      }\n    }\n    @media (forced-colors: active) {\n      &::-moz-range-track {\n        border: 1px solid;\n      }\n    }\n    &::-webkit-slider-thumb {\n      position: relative;\n      box-sizing: border-box;\n      border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));\n      background-color: currentColor;\n      height: var(--range-thumb-size);\n      width: var(--range-thumb-size);\n      border: var(--range-p) solid;\n      appearance: none;\n      webkit-appearance: none;\n      top: 50%;\n      color: var(--range-progress);\n      transform: translateY(-50%);\n      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));\n      @supports (color: color-mix(in lab, red, red)) {\n        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));\n      }\n    }\n    &::-moz-range-track {\n      width: 100%;\n      background-color: var(--range-bg);\n      border-radius: var(--radius-selector);\n      height: calc(var(--range-thumb-size) * 0.5);\n    }\n    &::-moz-range-thumb {\n      position: relative;\n      box-sizing: border-box;\n      border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));\n      background-color: currentColor;\n      height: var(--range-thumb-size);\n      width: var(--range-thumb-size);\n      border: var(--range-p) solid;\n      top: 50%;\n      color: var(--range-progress);\n      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));\n      @supports (color: color-mix(in lab, red, red)) {\n        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));\n      }\n    }\n    &:disabled {\n      cursor: not-allowed;\n      opacity: 30%;\n    }\n  }\n  .select {\n    border: var(--border) solid #0000;\n    position: relative;\n    display: inline-flex;\n    flex-shrink: 1;\n    appearance: none;\n    align-items: center;\n    gap: calc(0.25rem * 1.5);\n    background-color: var(--color-base-100);\n    padding-inline-start: calc(0.25rem * 4);\n    padding-inline-end: calc(0.25rem * 7);\n    vertical-align: middle;\n    width: clamp(3rem, 20rem, 100%);\n    height: var(--size);\n    font-size: 0.875rem;\n    touch-action: manipulation;\n    border-start-start-radius: var(--join-ss, var(--radius-field));\n    border-start-end-radius: var(--join-se, var(--radius-field));\n    border-end-start-radius: var(--join-es, var(--radius-field));\n    border-end-end-radius: var(--join-ee, var(--radius-field));\n    background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);\n    background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);\n    background-size: 4px 4px, 4px 4px;\n    background-repeat: no-repeat;\n    text-overflow: ellipsis;\n    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n    @supports (color: color-mix(in lab, red, red)) {\n      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n    }\n    border-color: var(--input-color);\n    --input-color: color-mix(in srgb, oklch(0.20 0.02 286) 20%, #0000);\n    @supports (color: color-mix(in lab, red, red)) {\n      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);\n    }\n    --size: calc(var(--size-field, 0.25rem) * 10);\n    [dir=\"rtl\"] & {\n      background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);\n    }\n    select {\n      margin-inline-start: calc(0.25rem * -4);\n      margin-inline-end: calc(0.25rem * -7);\n      width: calc(100% + 2.75rem);\n      appearance: none;\n      padding-inline-start: calc(0.25rem * 4);\n      padding-inline-end: calc(0.25rem * 7);\n      height: calc(100% - 2px);\n      background: inherit;\n      border-radius: inherit;\n      border-style: none;\n      &:focus, &:focus-within {\n        --tw-outline-style: none;\n        outline-style: none;\n        @media (forced-colors: active) {\n          outline: 2px solid transparent;\n          outline-offset: 2px;\n        }\n      }\n      &:not(:last-child) {\n        margin-inline-end: calc(0.25rem * -5.5);\n        background-image: none;\n      }\n    }\n    &:focus, &:focus-within {\n      --input-color: var(--color-base-content);\n      box-shadow: 0 1px var(--input-color);\n      @supports (color: color-mix(in lab, red, red)) {\n        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);\n      }\n      outline: 2px solid var(--input-color);\n      outline-offset: 2px;\n      isolation: isolate;\n      z-index: 1;\n    }\n    &:has(> select[disabled]), &:is(:disabled, [disabled]) {\n      cursor: not-allowed;\n      border-color: var(--color-base-200);\n      background-color: var(--color-base-200);\n      color: color-mix(in srgb, oklch(0.20 0.02 286) 40%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);\n      }\n      &::placeholder {\n        color: color-mix(in srgb, oklch(0.20 0.02 286) 20%, transparent);\n        @supports (color: color-mix(in lab, red, red)) {\n          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n        }\n      }\n    }\n    &:has(> select[disabled]) > select[disabled] {\n      cursor: not-allowed;\n    }\n  }\n  .card {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    border-radius: var(--radius-box);\n    outline-width: 2px;\n    transition: outline 0.2s ease-in-out;\n    outline: 0 solid #0000;\n    outline-offset: 2px;\n    &:focus {\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n    }\n    &:focus-visible {\n      outline-color: currentColor;\n    }\n    :where(figure:first-child) {\n      overflow: hidden;\n      border-start-start-radius: inherit;\n      border-start-end-radius: inherit;\n      border-end-start-radius: unset;\n      border-end-end-radius: unset;\n    }\n    :where(figure:last-child) {\n      overflow: hidden;\n      border-start-start-radius: unset;\n      border-start-end-radius: unset;\n      border-end-start-radius: inherit;\n      border-end-end-radius: inherit;\n    }\n    &:where(.card-border) {\n      border: var(--border) solid var(--color-base-200);\n    }\n    &:where(.card-dash) {\n      border: var(--border) dashed var(--color-base-200);\n    }\n    &.image-full {\n      display: grid;\n      > * {\n        grid-column-start: 1;\n        grid-row-start: 1;\n      }\n      > .card-body {\n        position: relative;\n        color: var(--color-neutral-content);\n      }\n      :where(figure) {\n        overflow: hidden;\n        border-radius: inherit;\n      }\n      > figure img {\n        height: 100%;\n        object-fit: cover;\n        filter: brightness(28%);\n      }\n    }\n    figure {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    &:has(> input:is(input[type=\"checkbox\"], input[type=\"radio\"])) {\n      cursor: pointer;\n      user-select: none;\n    }\n    &:has(> :checked) {\n      outline: 2px solid currentColor;\n    }\n  }\n  .collapse-title {\n    grid-column-start: 1;\n    grid-row-start: 1;\n    position: relative;\n    width: 100%;\n    padding: 1rem;\n    padding-inline-end: 3rem;\n    min-height: 1lh;\n    transition: background-color 0.2s ease-out;\n  }\n  .sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border-width: 0;\n  }\n  .avatar {\n    position: relative;\n    display: inline-flex;\n    vertical-align: middle;\n    & > div {\n      display: block;\n      aspect-ratio: 1 / 1;\n      overflow: hidden;\n    }\n    img {\n      height: 100%;\n      width: 100%;\n      object-fit: cover;\n    }\n  }\n  .checkbox {\n    border: var(--border) solid var(--input-color, color-mix(in srgb, oklch(0.20 0.02 286) 20%, #0000));\n    @supports (color: color-mix(in lab, red, red)) {\n      border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));\n    }\n    position: relative;\n    display: inline-block;\n    flex-shrink: 0;\n    cursor: pointer;\n    appearance: none;\n    border-radius: var(--radius-selector);\n    padding: calc(0.25rem * 1);\n    vertical-align: middle;\n    color: var(--color-base-content);\n    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;\n    transition: background-color 0.2s, box-shadow 0.2s;\n    --size: calc(var(--size-selector, 0.25rem) * 6);\n    width: var(--size);\n    height: var(--size);\n    background-size: auto, calc(var(--noise) * 100%);\n    background-image: none, var(--fx-noise);\n    &:before {\n      --tw-content: \"\";\n      content: var(--tw-content);\n      display: block;\n      width: 100%;\n      height: 100%;\n      rotate: 45deg;\n      background-color: currentColor;\n      opacity: 0%;\n      transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;\n      transition-delay: 0.1s;\n      clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);\n      box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n      font-size: 1rem;\n      line-height: 0.75;\n    }\n    &:focus-visible {\n      outline: 2px solid var(--input-color, currentColor);\n      outline-offset: 2px;\n    }\n    &:checked, &[aria-checked=\"true\"] {\n      background-color: var(--input-color, #0000);\n      box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));\n      &:before {\n        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);\n        opacity: 100%;\n      }\n      @media (forced-colors: active) {\n        &:before {\n          rotate: 0deg;\n          background-color: transparent;\n          --tw-content: \"✔︎\";\n          clip-path: none;\n        }\n      }\n      @media print {\n        &:before {\n          rotate: 0deg;\n          background-color: transparent;\n          --tw-content: \"✔︎\";\n          clip-path: none;\n        }\n      }\n    }\n    &:indeterminate {\n      &:before {\n        rotate: 0deg;\n        opacity: 100%;\n        translate: 0 -35%;\n        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);\n      }\n    }\n    &:disabled {\n      cursor: not-allowed;\n      opacity: 20%;\n    }\n  }\n  .drawer {\n    position: relative;\n    display: grid;\n    width: 100%;\n    grid-auto-columns: max-content auto;\n  }\n  .stats {\n    position: relative;\n    display: inline-grid;\n    grid-auto-flow: column;\n    overflow-x: auto;\n    border-radius: var(--radius-box);\n  }\n  .progress {\n    position: relative;\n    height: calc(0.25rem * 2);\n    width: 100%;\n    appearance: none;\n    overflow: hidden;\n    border-radius: var(--radius-box);\n    background-color: currentColor;\n    @supports (color: color-mix(in lab, red, red)) {\n      background-color: color-mix(in oklab, currentColor 20%, transparent);\n    }\n    color: var(--color-base-content);\n    &:indeterminate {\n      background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );\n      background-size: 200%;\n      background-position-x: 15%;\n      animation: progress 5s ease-in-out infinite;\n      @supports (-moz-appearance: none) {\n        &::-moz-progress-bar {\n          background-color: transparent;\n          background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );\n          background-size: 200%;\n          background-position-x: 15%;\n          animation: progress 5s ease-in-out infinite;\n        }\n      }\n    }\n    @supports (-moz-appearance: none) {\n      &::-moz-progress-bar {\n        border-radius: var(--radius-box);\n        background-color: currentColor;\n      }\n    }\n    @supports (-webkit-appearance: none) {\n      &::-webkit-progress-bar {\n        border-radius: var(--radius-box);\n        background-color: transparent;\n      }\n      &::-webkit-progress-value {\n        border-radius: var(--radius-box);\n        background-color: currentColor;\n      }\n    }\n  }\n  .absolute {\n    position: absolute;\n  }\n  .fixed {\n    position: fixed;\n  }\n  .relative {\n    position: relative;\n  }\n  .static {\n    position: static;\n  }\n  .sticky {\n    position: sticky;\n  }\n  .inset-0 {\n    inset: calc(var(--spacing) * 0);\n  }\n  .inset-x-0 {\n    inset-inline: calc(var(--spacing) * 0);\n  }\n  .inset-y-0 {\n    inset-block: calc(var(--spacing) * 0);\n  }\n  .dropdown-end {\n    --anchor-h: span-left;\n    :where(.dropdown-content) {\n      inset-inline-end: calc(0.25rem * 0);\n      translate: 0 0;\n    }\n    &.dropdown-left {\n      --anchor-h: left;\n      --anchor-v: span-top;\n      .dropdown-content {\n        top: auto;\n        bottom: calc(0.25rem * 0);\n      }\n    }\n    &.dropdown-right {\n      --anchor-h: right;\n      --anchor-v: span-top;\n      .dropdown-content {\n        top: auto;\n        bottom: calc(0.25rem * 0);\n      }\n    }\n  }\n  .top-0 {\n    top: calc(var(--spacing) * 0);\n  }\n  .top-1\\/2 {\n    top: calc(1/2 * 100%);\n  }\n  .top-2 {\n    top: calc(var(--spacing) * 2);\n  }\n  .right-0 {\n    right: calc(var(--spacing) * 0);\n  }\n  .right-1 {\n    right: calc(var(--spacing) * 1);\n  }\n  .right-2 {\n    right: calc(var(--spacing) * 2);\n  }\n  .right-4 {\n    right: calc(var(--spacing) * 4);\n  }\n  .bottom-20 {\n    bottom: calc(var(--spacing) * 20);\n  }\n  .left-0 {\n    left: calc(var(--spacing) * 0);\n  }\n  .left-3 {\n    left: calc(var(--spacing) * 3);\n  }\n  .textarea {\n    border: var(--border) solid #0000;\n    min-height: calc(0.25rem * 20);\n    flex-shrink: 1;\n    appearance: none;\n    border-radius: var(--radius-field);\n    background-color: var(--color-base-100);\n    padding-block: calc(0.25rem * 2);\n    vertical-align: middle;\n    width: clamp(3rem, 20rem, 100%);\n    padding-inline-start: 0.75rem;\n    padding-inline-end: 0.75rem;\n    font-size: 0.875rem;\n    touch-action: manipulation;\n    border-color: var(--input-color);\n    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n    @supports (color: color-mix(in lab, red, red)) {\n      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;\n    }\n    --input-color: color-mix(in srgb, oklch(0.20 0.02 286) 20%, #0000);\n    @supports (color: color-mix(in lab, red, red)) {\n      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);\n    }\n    textarea {\n      appearance: none;\n      background-color: transparent;\n      border: none;\n      &:focus, &:focus-within {\n        --tw-outline-style: none;\n        outline-style: none;\n        @media (forced-colors: active) {\n          outline: 2px solid transparent;\n          outline-offset: 2px;\n        }\n      }\n    }\n    &:focus, &:focus-within {\n      --input-color: var(--color-base-content);\n      box-shadow: 0 1px var(--input-color);\n      @supports (color: color-mix(in lab, red, red)) {\n        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);\n      }\n      outline: 2px solid var(--input-color);\n      outline-offset: 2px;\n      isolation: isolate;\n    }\n    &:has(> textarea[disabled]), &:is(:disabled, [disabled]) {\n      cursor: not-allowed;\n      border-color: var(--color-base-200);\n      background-color: var(--color-base-200);\n      color: color-mix(in srgb, oklch(0.20 0.02 286) 40%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);\n      }\n      &::placeholder {\n        color: color-mix(in srgb, oklch(0.20 0.02 286) 20%, transparent);\n        @supports (color: color-mix(in lab, red, red)) {\n          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n        }\n      }\n      box-shadow: none;\n    }\n    &:has(> textarea[disabled]) > textarea[disabled] {\n      cursor: not-allowed;\n    }\n  }\n  .stack {\n    display: inline-grid;\n    grid-template-columns: 3px 4px 1fr 4px 3px;\n    grid-template-rows: 3px 4px 1fr 4px 3px;\n    & > * {\n      height: 100%;\n      width: 100%;\n      &:nth-child(n + 2) {\n        width: 100%;\n        opacity: 70%;\n      }\n      &:nth-child(2) {\n        z-index: 2;\n        opacity: 90%;\n      }\n      &:nth-child(1) {\n        z-index: 3;\n        width: 100%;\n      }\n    }\n    &, &.stack-bottom {\n      > * {\n        grid-column: 3 / 4;\n        grid-row: 3 / 6;\n        &:nth-child(2) {\n          grid-column: 2 / 5;\n          grid-row: 2 / 5;\n        }\n        &:nth-child(1) {\n          grid-column: 1 / 6;\n          grid-row: 1 / 4;\n        }\n      }\n    }\n    &.stack-top {\n      > * {\n        grid-column: 3 / 4;\n        grid-row: 1 / 4;\n        &:nth-child(2) {\n          grid-column: 2 / 5;\n          grid-row: 2 / 5;\n        }\n        &:nth-child(1) {\n          grid-column: 1 / 6;\n          grid-row: 3 / 6;\n        }\n      }\n    }\n    &.stack-start {\n      > * {\n        grid-column: 1 / 4;\n        grid-row: 3 / 4;\n        &:nth-child(2) {\n          grid-column: 2 / 5;\n          grid-row: 2 / 5;\n        }\n        &:nth-child(1) {\n          grid-column: 3 / 6;\n          grid-row: 1 / 6;\n        }\n      }\n    }\n    &.stack-end {\n      > * {\n        grid-column: 3 / 6;\n        grid-row: 3 / 4;\n        &:nth-child(2) {\n          grid-column: 2 / 5;\n          grid-row: 2 / 5;\n        }\n        &:nth-child(1) {\n          grid-column: 1 / 4;\n          grid-row: 1 / 6;\n        }\n      }\n    }\n  }\n  .modal-backdrop {\n    grid-column-start: 1;\n    grid-row-start: 1;\n    display: grid;\n    align-self: stretch;\n    justify-self: stretch;\n    color: transparent;\n    z-index: -1;\n    button {\n      cursor: pointer;\n    }\n  }\n  .z-40 {\n    z-index: 40;\n  }\n  .z-50 {\n    z-index: 50;\n  }\n  .col-span-1 {\n    grid-column: span 1 / span 1;\n  }\n  .modal-box {\n    grid-column-start: 1;\n    grid-row-start: 1;\n    max-height: 100vh;\n    width: calc(11/12 * 100%);\n    max-width: 32rem;\n    background-color: var(--color-base-100);\n    padding: calc(0.25rem * 6);\n    transition: translate 0.3s ease-out, scale 0.3s ease-out, opacity 0.2s ease-out 0.05s, box-shadow 0.3s ease-out;\n    border-top-left-radius: var(--modal-tl, var(--radius-box));\n    border-top-right-radius: var(--modal-tr, var(--radius-box));\n    border-bottom-left-radius: var(--modal-bl, var(--radius-box));\n    border-bottom-right-radius: var(--modal-br, var(--radius-box));\n    scale: 95%;\n    opacity: 0;\n    box-shadow: oklch(0% 0 0/ 0.25) 0px 25px 50px -12px;\n    overflow-y: auto;\n    overscroll-behavior: contain;\n  }\n  .stat-value {\n    grid-column-start: 1;\n    white-space: nowrap;\n    font-size: 2rem;\n    font-weight: 800;\n  }\n  .stat-desc {\n    grid-column-start: 1;\n    white-space: nowrap;\n    color: color-mix(in srgb, oklch(0.20 0.02 286) 60%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n    }\n    font-size: 0.75rem;\n  }\n  .stat-title {\n    grid-column-start: 1;\n    white-space: nowrap;\n    color: color-mix(in srgb, oklch(0.20 0.02 286) 60%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n    }\n    font-size: 0.75rem;\n  }\n  .chat-header {\n    grid-row-start: 1;\n    display: flex;\n    gap: calc(0.25rem * 1);\n    font-size: 0.6875rem;\n  }\n  .container {\n    width: 100%;\n    @media (width >= 40rem) {\n      max-width: 40rem;\n    }\n    @media (width >= 48rem) {\n      max-width: 48rem;\n    }\n    @media (width >= 64rem) {\n      max-width: 64rem;\n    }\n    @media (width >= 80rem) {\n      max-width: 80rem;\n    }\n    @media (width >= 96rem) {\n      max-width: 96rem;\n    }\n  }\n  .m-9 {\n    margin: calc(var(--spacing) * 9);\n  }\n  .filter {\n    display: flex;\n    flex-wrap: wrap;\n    input[type=\"radio\"] {\n      width: auto;\n    }\n    input {\n      overflow: hidden;\n      opacity: 100%;\n      scale: 1;\n      transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;\n      &:not(:last-child) {\n        margin-inline-end: calc(0.25rem * 1);\n      }\n      &.filter-reset {\n        aspect-ratio: 1 / 1;\n        &::after {\n          content: \"×\";\n        }\n      }\n    }\n    &:not(:has(input:checked:not(.filter-reset))) {\n      .filter-reset, input[type=\"reset\"] {\n        scale: 0;\n        border-width: 0;\n        margin-inline: calc(0.25rem * 0);\n        width: calc(0.25rem * 0);\n        padding-inline: calc(0.25rem * 0);\n        opacity: 0%;\n      }\n    }\n    &:has(input:checked:not(.filter-reset)) {\n      input:not(:checked, .filter-reset, input[type=\"reset\"]) {\n        scale: 0;\n        border-width: 0;\n        margin-inline: calc(0.25rem * 0);\n        width: calc(0.25rem * 0);\n        padding-inline: calc(0.25rem * 0);\n        opacity: 0%;\n      }\n    }\n  }\n  .-mx-2 {\n    margin-inline: calc(var(--spacing) * -2);\n  }\n  .mx-1 {\n    margin-inline: calc(var(--spacing) * 1);\n  }\n  .mx-auto {\n    margin-inline: auto;\n  }\n  .input-sm {\n    --size: calc(var(--size-field, 0.25rem) * 8);\n    font-size: 0.75rem;\n    &[type=\"number\"] {\n      &::-webkit-inner-spin-button {\n        margin-block: calc(0.25rem * -2);\n        margin-inline-end: calc(0.25rem * -3);\n      }\n    }\n  }\n  .my-2 {\n    margin-block: calc(var(--spacing) * 2);\n  }\n  .my-4 {\n    margin-block: calc(var(--spacing) * 4);\n  }\n  .label {\n    display: inline-flex;\n    align-items: center;\n    gap: calc(0.25rem * 1.5);\n    white-space: nowrap;\n    color: currentColor;\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, currentColor 60%, transparent);\n    }\n    &:has(input) {\n      cursor: pointer;\n    }\n    &:is(.input > *, .select > *) {\n      display: flex;\n      height: calc(100% - 0.5rem);\n      align-items: center;\n      padding-inline: calc(0.25rem * 3);\n      white-space: nowrap;\n      font-size: inherit;\n      &:first-child {\n        margin-inline-start: calc(0.25rem * -3);\n        margin-inline-end: calc(0.25rem * 3);\n        border-inline-end: var(--border) solid currentColor;\n        @supports (color: color-mix(in lab, red, red)) {\n          border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);\n        }\n      }\n      &:last-child {\n        margin-inline-start: calc(0.25rem * 3);\n        margin-inline-end: calc(0.25rem * -3);\n        border-inline-start: var(--border) solid currentColor;\n        @supports (color: color-mix(in lab, red, red)) {\n          border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);\n        }\n      }\n    }\n  }\n  .modal-action {\n    margin-top: calc(0.25rem * 6);\n    display: flex;\n    justify-content: flex-end;\n    gap: calc(0.25rem * 2);\n  }\n  .mt-0\\.5 {\n    margin-top: calc(var(--spacing) * 0.5);\n  }\n  .mt-1 {\n    margin-top: calc(var(--spacing) * 1);\n  }\n  .mt-2 {\n    margin-top: calc(var(--spacing) * 2);\n  }\n  .mt-3 {\n    margin-top: calc(var(--spacing) * 3);\n  }\n  .mt-4 {\n    margin-top: calc(var(--spacing) * 4);\n  }\n  .mt-6 {\n    margin-top: calc(var(--spacing) * 6);\n  }\n  .mt-auto {\n    margin-top: auto;\n  }\n  .breadcrumbs {\n    max-width: 100%;\n    overflow-x: auto;\n    padding-block: calc(0.25rem * 2);\n    > menu, > ul, > ol {\n      display: flex;\n      min-height: min-content;\n      align-items: center;\n      white-space: nowrap;\n      > li {\n        display: flex;\n        align-items: center;\n        > * {\n          display: flex;\n          cursor: pointer;\n          align-items: center;\n          gap: calc(0.25rem * 2);\n          &:hover {\n            @media (hover: hover) {\n              text-decoration-line: underline;\n            }\n          }\n          &:focus {\n            --tw-outline-style: none;\n            outline-style: none;\n            @media (forced-colors: active) {\n              outline: 2px solid transparent;\n              outline-offset: 2px;\n            }\n          }\n          &:focus-visible {\n            outline: 2px solid currentColor;\n            outline-offset: 2px;\n          }\n        }\n        & + *:before {\n          content: \"\";\n          margin-right: calc(0.25rem * 3);\n          margin-left: calc(0.25rem * 2);\n          display: block;\n          height: calc(0.25rem * 1.5);\n          width: calc(0.25rem * 1.5);\n          opacity: 40%;\n          rotate: 45deg;\n          border-top: 1px solid;\n          border-right: 1px solid;\n          background-color: #0000;\n        }\n        [dir=\"rtl\"] & + *:before {\n          rotate: -135deg;\n        }\n      }\n    }\n  }\n  .mr-1 {\n    margin-right: calc(var(--spacing) * 1);\n  }\n  .mr-1\\.5 {\n    margin-right: calc(var(--spacing) * 1.5);\n  }\n  .mr-2 {\n    margin-right: calc(var(--spacing) * 2);\n  }\n  .mr-auto {\n    margin-right: auto;\n  }\n  .mb-1 {\n    margin-bottom: calc(var(--spacing) * 1);\n  }\n  .mb-2 {\n    margin-bottom: calc(var(--spacing) * 2);\n  }\n  .mb-3 {\n    margin-bottom: calc(var(--spacing) * 3);\n  }\n  .mb-4 {\n    margin-bottom: calc(var(--spacing) * 4);\n  }\n  .mb-6 {\n    margin-bottom: calc(var(--spacing) * 6);\n  }\n  .ml-2 {\n    margin-left: calc(var(--spacing) * 2);\n  }\n  .ml-7 {\n    margin-left: calc(var(--spacing) * 7);\n  }\n  .status {\n    display: inline-block;\n    aspect-ratio: 1 / 1;\n    width: calc(0.25rem * 2);\n    height: calc(0.25rem * 2);\n    border-radius: var(--radius-selector);\n    background-color: color-mix(in srgb, oklch(0.20 0.02 286) 20%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n    }\n    background-position: center;\n    background-repeat: no-repeat;\n    vertical-align: middle;\n    color: color-mix(in srgb, #000 30%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in srgb, #000 30%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-black) 30%, transparent);\n      }\n    }\n    background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );\n    box-shadow: 0 2px 3px -1px currentColor;\n    @supports (color: color-mix(in lab, red, red)) {\n      box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);\n    }\n  }\n  .badge {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: calc(0.25rem * 2);\n    border-radius: var(--radius-selector);\n    vertical-align: middle;\n    color: var(--badge-fg);\n    border: var(--border) solid var(--badge-color, var(--color-base-200));\n    font-size: 0.875rem;\n    width: fit-content;\n    padding-inline: calc(0.25rem * 3 - var(--border));\n    background-size: auto, calc(var(--noise) * 100%);\n    background-image: none, var(--fx-noise);\n    background-color: var(--badge-bg);\n    --badge-bg: var(--badge-color, var(--color-base-100));\n    --badge-fg: var(--color-base-content);\n    --size: calc(var(--size-selector, 0.25rem) * 6);\n    height: var(--size);\n  }\n  .kbd {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--radius-field);\n    background-color: var(--color-base-200);\n    vertical-align: middle;\n    padding-left: 0.5em;\n    padding-right: 0.5em;\n    border: var(--border) solid color-mix(in srgb, oklch(0.20 0.02 286) 20%, #0000);\n    @supports (color: color-mix(in lab, red, red)) {\n      border: var(--border) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);\n    }\n    border-bottom: calc(var(--border) + 1px) solid color-mix(in srgb, oklch(0.20 0.02 286) 20%, #0000);\n    @supports (color: color-mix(in lab, red, red)) {\n      border-bottom: calc(var(--border) + 1px) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);\n    }\n    --size: calc(var(--size-selector, 0.25rem) * 6);\n    font-size: 0.875rem;\n    height: var(--size);\n    min-width: var(--size);\n  }\n  .tabs {\n    display: flex;\n    flex-wrap: wrap;\n    --tabs-height: auto;\n    --tabs-direction: row;\n    --tab-height: calc(var(--size-field, 0.25rem) * 10);\n    height: var(--tabs-height);\n    flex-direction: var(--tabs-direction);\n  }\n  .btn {\n    display: inline-flex;\n    min-height: calc(var(--spacing) * 12);\n    min-width: calc(var(--spacing) * 12);\n    cursor: pointer;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--radius-lg);\n    border-style: var(--tw-border-style);\n    border-width: 1px;\n    border-color: transparent;\n    padding-inline: calc(var(--spacing) * 4);\n    padding-block: calc(var(--spacing) * 2);\n    --tw-font-weight: var(--font-weight-medium);\n    font-weight: var(--font-weight-medium);\n    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n    --tw-duration: 200ms;\n    transition-duration: 200ms;\n  }\n  .footer {\n    display: grid;\n    width: 100%;\n    grid-auto-flow: row;\n    place-items: start;\n    column-gap: calc(0.25rem * 4);\n    row-gap: calc(0.25rem * 10);\n    font-size: 0.875rem;\n    line-height: 1.25rem;\n    & > * {\n      display: grid;\n      place-items: start;\n      gap: calc(0.25rem * 2);\n    }\n    &.footer-center {\n      grid-auto-flow: column dense;\n      place-items: center;\n      text-align: center;\n      & > * {\n        place-items: center;\n      }\n    }\n  }\n  .stat {\n    display: inline-grid;\n    width: 100%;\n    column-gap: calc(0.25rem * 4);\n    padding-inline: calc(0.25rem * 6);\n    padding-block: calc(0.25rem * 4);\n    grid-template-columns: repeat(1, 1fr);\n    &:not(:last-child) {\n      border-inline-end: var(--border) dashed currentColor;\n      @supports (color: color-mix(in lab, red, red)) {\n        border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);\n      }\n      border-block-end: none;\n    }\n  }\n  .card-body {\n    display: flex;\n    flex: auto;\n    flex-direction: column;\n    gap: calc(0.25rem * 2);\n    padding: var(--card-p, 1.5rem);\n    font-size: var(--card-fs, 0.875rem);\n    :where(p) {\n      flex-grow: 1;\n    }\n  }\n  .alert {\n    display: grid;\n    align-items: center;\n    gap: calc(0.25rem * 4);\n    border-radius: var(--radius-box);\n    padding-inline: calc(0.25rem * 4);\n    padding-block: calc(0.25rem * 3);\n    color: var(--color-base-content);\n    background-color: var(--alert-color, var(--color-base-200));\n    justify-content: start;\n    justify-items: start;\n    grid-auto-flow: column;\n    grid-template-columns: auto;\n    text-align: start;\n    border: var(--border) solid var(--color-base-200);\n    font-size: 0.875rem;\n    line-height: 1.25rem;\n    background-size: auto, calc(var(--noise) * 100%);\n    background-image: none, var(--fx-noise);\n    box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px #000, 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));\n    @supports (color: color-mix(in lab, red, red)) {\n      box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));\n    }\n    &:has(:nth-child(2)) {\n      grid-template-columns: auto minmax(auto, 1fr);\n    }\n    &.alert-outline {\n      background-color: transparent;\n      color: var(--alert-color);\n      box-shadow: none;\n      background-image: none;\n    }\n    &.alert-dash {\n      background-color: transparent;\n      color: var(--alert-color);\n      border-style: dashed;\n      box-shadow: none;\n      background-image: none;\n    }\n    &.alert-soft {\n      color: var(--alert-color, var(--color-base-content));\n      background: var(--alert-color, oklch(0.20 0.02 286));\n      @supports (color: color-mix(in lab, red, red)) {\n        background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );\n      }\n      border-color: var(--alert-color, oklch(0.20 0.02 286));\n      @supports (color: color-mix(in lab, red, red)) {\n        border-color: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 10%, var(--color-base-100) );\n      }\n      box-shadow: none;\n      background-image: none;\n    }\n  }\n  .fieldset {\n    display: grid;\n    gap: calc(0.25rem * 1.5);\n    padding-block: calc(0.25rem * 1);\n    font-size: 0.75rem;\n    grid-template-columns: 1fr;\n    grid-auto-rows: max-content;\n  }\n  .card-title {\n    display: flex;\n    align-items: center;\n    gap: calc(0.25rem * 2);\n    font-size: var(--cardtitle-fs, 1.125rem);\n    font-weight: 600;\n  }\n  .chat {\n    display: grid;\n    column-gap: calc(0.25rem * 3);\n    padding-block: calc(0.25rem * 1);\n    --mask-chat: url(\"data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e\");\n  }\n  .line-clamp-2 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n  }\n  .mask {\n    display: inline-block;\n    vertical-align: middle;\n    mask-size: contain;\n    mask-repeat: no-repeat;\n    mask-position: center;\n  }\n  .block {\n    display: block;\n  }\n  .contents {\n    display: contents;\n  }\n  .flex {\n    display: flex;\n  }\n  .grid {\n    display: grid;\n  }\n  .hidden {\n    display: none;\n  }\n  .inline {\n    display: inline;\n  }\n  .table {\n    display: table;\n  }\n  .modal-bottom {\n    place-items: end;\n    :where(.modal-box) {\n      height: auto;\n      width: 100%;\n      max-width: none;\n      max-height: calc(100vh - 5em);\n      translate: 0 100%;\n      scale: 1;\n      --modal-tl: var(--radius-box);\n      --modal-tr: var(--radius-box);\n      --modal-bl: 0;\n      --modal-br: 0;\n    }\n  }\n  .btn-circle {\n    border-radius: calc(infinity * 1px);\n    padding-inline: calc(0.25rem * 0);\n    width: var(--size);\n    height: var(--size);\n  }\n  .btn-square {\n    padding-inline: calc(0.25rem * 0);\n    width: var(--size);\n    height: var(--size);\n  }\n  .h-3 {\n    height: calc(var(--spacing) * 3);\n  }\n  .h-4 {\n    height: calc(var(--spacing) * 4);\n  }\n  .h-5 {\n    height: calc(var(--spacing) * 5);\n  }\n  .h-6 {\n    height: calc(var(--spacing) * 6);\n  }\n  .h-8 {\n    height: calc(var(--spacing) * 8);\n  }\n  .h-10 {\n    height: calc(var(--spacing) * 10);\n  }\n  .h-12 {\n    height: calc(var(--spacing) * 12);\n  }\n  .h-14 {\n    height: calc(var(--spacing) * 14);\n  }\n  .h-16 {\n    height: calc(var(--spacing) * 16);\n  }\n  .h-20 {\n    height: calc(var(--spacing) * 20);\n  }\n  .h-full {\n    height: 100%;\n  }\n  .max-h-32 {\n    max-height: calc(var(--spacing) * 32);\n  }\n  .max-h-\\[90vh\\] {\n    max-height: 90vh;\n  }\n  .btn-lg {\n    min-height: calc(var(--spacing) * 14);\n    padding-inline: calc(var(--spacing) * 6);\n    padding-block: calc(var(--spacing) * 3);\n    font-size: var(--text-lg);\n    line-height: var(--tw-leading, var(--text-lg--line-height));\n  }\n  .min-h-0 {\n    min-height: calc(var(--spacing) * 0);\n  }\n  .min-h-\\[36px\\] {\n    min-height: 36px;\n  }\n  .min-h-\\[44px\\] {\n    min-height: 44px;\n  }\n  .min-h-\\[80px\\] {\n    min-height: 80px;\n  }\n  .min-h-\\[calc\\(100vh_-_var\\(--header-height\\)_-_32px\\)\\] {\n    min-height: calc(100vh - var(--header-height) - 32px);\n  }\n  .min-h-screen {\n    min-height: 100vh;\n  }\n  .loading-lg {\n    width: calc(var(--size-selector, 0.25rem) * 7);\n  }\n  .loading-md {\n    width: calc(var(--size-selector, 0.25rem) * 6);\n  }\n  .loading-xs {\n    width: calc(var(--size-selector, 0.25rem) * 4);\n  }\n  .w-1\\/3 {\n    width: calc(1/3 * 100%);\n  }\n  .w-2\\/3 {\n    width: calc(2/3 * 100%);\n  }\n  .w-3 {\n    width: calc(var(--spacing) * 3);\n  }\n  .w-3\\/4 {\n    width: calc(3/4 * 100%);\n  }\n  .w-3\\/5 {\n    width: calc(3/5 * 100%);\n  }\n  .w-4 {\n    width: calc(var(--spacing) * 4);\n  }\n  .w-4\\/5 {\n    width: calc(4/5 * 100%);\n  }\n  .w-5 {\n    width: calc(var(--spacing) * 5);\n  }\n  .w-6 {\n    width: calc(var(--spacing) * 6);\n  }\n  .w-8 {\n    width: calc(var(--spacing) * 8);\n  }\n  .w-10 {\n    width: calc(var(--spacing) * 10);\n  }\n  .w-12 {\n    width: calc(var(--spacing) * 12);\n  }\n  .w-14 {\n    width: calc(var(--spacing) * 14);\n  }\n  .w-16 {\n    width: calc(var(--spacing) * 16);\n  }\n  .w-48 {\n    width: calc(var(--spacing) * 48);\n  }\n  .w-56 {\n    width: calc(var(--spacing) * 56);\n  }\n  .w-80 {\n    width: calc(var(--spacing) * 80);\n  }\n  .w-full {\n    width: 100%;\n  }\n  .max-w-2xl {\n    max-width: var(--container-2xl);\n  }\n  .max-w-3xl {\n    max-width: var(--container-3xl);\n  }\n  .max-w-4xl {\n    max-width: var(--container-4xl);\n  }\n  .max-w-7xl {\n    max-width: var(--container-7xl);\n  }\n  .max-w-\\[85vw\\] {\n    max-width: 85vw;\n  }\n  .max-w-full {\n    max-width: 100%;\n  }\n  .max-w-lg {\n    max-width: var(--container-lg);\n  }\n  .max-w-md {\n    max-width: var(--container-md);\n  }\n  .max-w-sm {\n    max-width: var(--container-sm);\n  }\n  .min-w-0 {\n    min-width: calc(var(--spacing) * 0);\n  }\n  .min-w-\\[36px\\] {\n    min-width: 36px;\n  }\n  .min-w-\\[44px\\] {\n    min-width: 44px;\n  }\n  .flex-1 {\n    flex: 1;\n  }\n  .flex-shrink-0 {\n    flex-shrink: 0;\n  }\n  .shrink {\n    flex-shrink: 1;\n  }\n  .shrink-0 {\n    flex-shrink: 0;\n  }\n  .flex-grow {\n    flex-grow: 1;\n  }\n  .-translate-x-full {\n    --tw-translate-x: -100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n  .-translate-y-1\\/2 {\n    --tw-translate-y: calc(calc(1/2 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n  .-translate-y-full {\n    --tw-translate-y: -100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n  .translate-y-0 {\n    --tw-translate-y: calc(var(--spacing) * 0);\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n  .transform {\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);\n  }\n  .skeleton {\n    border-radius: var(--radius-box);\n    background-color: var(--color-base-300);\n    @media (prefers-reduced-motion: reduce) {\n      transition-duration: 15s;\n    }\n    will-change: background-position;\n    animation: skeleton 1.8s ease-in-out infinite;\n    background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );\n    background-size: 200% auto;\n    background-repeat: no-repeat;\n    background-position-x: -50%;\n  }\n  .skeleton {\n    background: linear-gradient(90deg,\n    var(--color-base-300) 25%,\n    var(--color-base-200) 50%,\n    var(--color-base-300) 75%);\n    background-size: 200% 100%;\n    animation: skeleton-shimmer 1.5s ease-in-out infinite;\n  }\n  .animate-pulse {\n    animation: var(--animate-pulse);\n  }\n  .animate-spin {\n    animation: var(--animate-spin);\n  }\n  .link {\n    cursor: pointer;\n    text-decoration-line: underline;\n    &:focus {\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n    }\n    &:focus-visible {\n      outline: 2px solid currentColor;\n      outline-offset: 2px;\n    }\n  }\n  .cursor-not-allowed {\n    cursor: not-allowed;\n  }\n  .cursor-pointer {\n    cursor: pointer;\n  }\n  .resize {\n    resize: both;\n  }\n  .resize-none {\n    resize: none;\n  }\n  .grid-cols-1 {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n  .grid-cols-2 {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n  .grid-cols-3 {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n  .flex-col {\n    flex-direction: column;\n  }\n  .flex-wrap {\n    flex-wrap: wrap;\n  }\n  .items-center {\n    align-items: center;\n  }\n  .items-start {\n    align-items: flex-start;\n  }\n  .justify-between {\n    justify-content: space-between;\n  }\n  .justify-center {\n    justify-content: center;\n  }\n  .justify-end {\n    justify-content: flex-end;\n  }\n  .gap-1 {\n    gap: calc(var(--spacing) * 1);\n  }\n  .gap-2 {\n    gap: calc(var(--spacing) * 2);\n  }\n  .gap-3 {\n    gap: calc(var(--spacing) * 3);\n  }\n  .gap-4 {\n    gap: calc(var(--spacing) * 4);\n  }\n  .space-y-1 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-y-2 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-y-3 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-y-4 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-y-6 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-x-2 {\n    :where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));\n    }\n  }\n  .truncate {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n  .overflow-auto {\n    overflow: auto;\n  }\n  .overflow-hidden {\n    overflow: hidden;\n  }\n  .overflow-x-auto {\n    overflow-x: auto;\n  }\n  .overflow-y-auto {\n    overflow-y: auto;\n  }\n  .rounded {\n    border-radius: 0.25rem;\n  }\n  .rounded-2xl {\n    border-radius: var(--radius-2xl);\n  }\n  .rounded-box {\n    border-radius: var(--radius-box);\n  }\n  .rounded-box {\n    border-radius: var(--radius-box);\n  }\n  .rounded-full {\n    border-radius: calc(infinity * 1px);\n  }\n  .rounded-lg {\n    border-radius: var(--radius-lg);\n  }\n  .rounded-md {\n    border-radius: var(--radius-md);\n  }\n  .rounded-xl {\n    border-radius: var(--radius-xl);\n  }\n  .rounded-t-lg {\n    border-top-left-radius: var(--radius-lg);\n    border-top-right-radius: var(--radius-lg);\n  }\n  .rounded-l-md {\n    border-top-left-radius: var(--radius-md);\n    border-bottom-left-radius: var(--radius-md);\n  }\n  .rounded-r-md {\n    border-top-right-radius: var(--radius-md);\n    border-bottom-right-radius: var(--radius-md);\n  }\n  .border {\n    border-style: var(--tw-border-style);\n    border-width: 1px;\n  }\n  .border-t {\n    border-top-style: var(--tw-border-style);\n    border-top-width: 1px;\n  }\n  .border-r {\n    border-right-style: var(--tw-border-style);\n    border-right-width: 1px;\n  }\n  .border-b {\n    border-bottom-style: var(--tw-border-style);\n    border-bottom-width: 1px;\n  }\n  .border-dashed {\n    --tw-border-style: dashed;\n    border-style: dashed;\n  }\n  .badge-ghost {\n    border-color: var(--color-base-200);\n    background-color: var(--color-base-200);\n    color: var(--color-base-content);\n    background-image: none;\n  }\n  .badge-outline {\n    color: var(--badge-color);\n    --badge-bg: #0000;\n    background-image: none;\n    border-color: currentColor;\n  }\n  .alert-error {\n    border-color: var(--color-error);\n    color: var(--color-error-content);\n    --alert-color: var(--color-error);\n  }\n  .alert-info {\n    border-color: var(--color-info);\n    color: var(--color-info-content);\n    --alert-color: var(--color-info);\n  }\n  .alert-success {\n    border-color: var(--color-success);\n    color: var(--color-success-content);\n    --alert-color: var(--color-success);\n  }\n  .alert-warning {\n    border-color: var(--color-warning);\n    color: var(--color-warning-content);\n    --alert-color: var(--color-warning);\n  }\n  .border-base-200 {\n    border-color: var(--color-base-200);\n  }\n  .border-base-300 {\n    border-color: var(--color-base-300);\n  }\n  .border-error\\/20 {\n    border-color: color-mix(in srgb, oklch(0.65 0.20 25) 20%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      border-color: color-mix(in oklab, var(--color-error) 20%, transparent);\n    }\n  }\n  .border-primary {\n    border-color: var(--color-primary);\n  }\n  .btn-primary {\n    background-color: var(--color-primary);\n    color: var(--color-primary-content);\n    &:hover {\n      @media (hover: hover) {\n        background-color: color-mix(in srgb, oklch(0.63 0.22 268) 90%, transparent);\n        @supports (color: color-mix(in lab, red, red)) {\n          background-color: color-mix(in oklab, var(--color-primary) 90%, transparent);\n        }\n      }\n    }\n  }\n  .status-success {\n    background-color: var(--color-success);\n    color: var(--color-success);\n  }\n  .bg-base-100 {\n    background-color: var(--color-base-100);\n  }\n  .bg-base-100\\/50 {\n    background-color: color-mix(in srgb, oklch(1.00 0.00 0) 50%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      background-color: color-mix(in oklab, var(--color-base-100) 50%, transparent);\n    }\n  }\n  .bg-base-100\\/90 {\n    background-color: color-mix(in srgb, oklch(1.00 0.00 0) 90%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      background-color: color-mix(in oklab, var(--color-base-100) 90%, transparent);\n    }\n  }\n  .bg-base-200 {\n    background-color: var(--color-base-200);\n  }\n  .bg-base-200\\/50 {\n    background-color: color-mix(in srgb, oklch(0.95 0.01 286) 50%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      background-color: color-mix(in oklab, var(--color-base-200) 50%, transparent);\n    }\n  }\n  .bg-base-300 {\n    background-color: var(--color-base-300);\n  }\n  .bg-base-300\\/80 {\n    background-color: color-mix(in srgb, oklch(0.90 0.02 286) 80%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      background-color: color-mix(in oklab, var(--color-base-300) 80%, transparent);\n    }\n  }\n  .bg-error {\n    background-color: var(--color-error);\n  }\n  .bg-primary {\n    background-color: var(--color-primary);\n  }\n  .bg-gradient-to-br {\n    --tw-gradient-position: to bottom right in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));\n  }\n  .from-primary {\n    --tw-gradient-from: var(--color-primary);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .to-secondary {\n    --tw-gradient-to: var(--color-secondary);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .loading-dots {\n    mask-image: url(\"data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E\");\n  }\n  .loading-spinner {\n    mask-image: url(\"data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n  }\n  .stroke-info {\n    stroke: var(--color-info);\n  }\n  .checkbox-sm {\n    padding: 0.1875rem;\n    --size: calc(var(--size-selector, 0.25rem) * 5);\n  }\n  .p-2 {\n    padding: calc(var(--spacing) * 2);\n  }\n  .p-3 {\n    padding: calc(var(--spacing) * 3);\n  }\n  .p-4 {\n    padding: calc(var(--spacing) * 4);\n  }\n  .p-6 {\n    padding: calc(var(--spacing) * 6);\n  }\n  .menu-title {\n    padding-inline: calc(0.25rem * 3);\n    padding-block: calc(0.25rem * 2);\n    color: color-mix(in srgb, oklch(0.20 0.02 286) 40%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);\n    }\n    font-size: 0.875rem;\n    font-weight: 600;\n  }\n  .badge-lg {\n    --size: calc(var(--size-selector, 0.25rem) * 7);\n    font-size: 1rem;\n    padding-inline: calc(0.25rem * 3.5 - var(--border));\n  }\n  .badge-sm {\n    --size: calc(var(--size-selector, 0.25rem) * 5);\n    font-size: 0.75rem;\n    padding-inline: calc(0.25rem * 2.5 - var(--border));\n  }\n  .px-1 {\n    padding-inline: calc(var(--spacing) * 1);\n  }\n  .px-2 {\n    padding-inline: calc(var(--spacing) * 2);\n  }\n  .px-3 {\n    padding-inline: calc(var(--spacing) * 3);\n  }\n  .px-4 {\n    padding-inline: calc(var(--spacing) * 4);\n  }\n  .py-1 {\n    padding-block: calc(var(--spacing) * 1);\n  }\n  .py-2 {\n    padding-block: calc(var(--spacing) * 2);\n  }\n  .py-3 {\n    padding-block: calc(var(--spacing) * 3);\n  }\n  .py-4 {\n    padding-block: calc(var(--spacing) * 4);\n  }\n  .py-8 {\n    padding-block: calc(var(--spacing) * 8);\n  }\n  .pt-1 {\n    padding-top: calc(var(--spacing) * 1);\n  }\n  .pt-2 {\n    padding-top: calc(var(--spacing) * 2);\n  }\n  .pt-4 {\n    padding-top: calc(var(--spacing) * 4);\n  }\n  .pr-3 {\n    padding-right: calc(var(--spacing) * 3);\n  }\n  .pr-9 {\n    padding-right: calc(var(--spacing) * 9);\n  }\n  .pr-12 {\n    padding-right: calc(var(--spacing) * 12);\n  }\n  .pb-8 {\n    padding-bottom: calc(var(--spacing) * 8);\n  }\n  .pl-3 {\n    padding-left: calc(var(--spacing) * 3);\n  }\n  .pl-9 {\n    padding-left: calc(var(--spacing) * 9);\n  }\n  .pl-12 {\n    padding-left: calc(var(--spacing) * 12);\n  }\n  .text-center {\n    text-align: center;\n  }\n  .font-sans {\n    font-family: var(--font-sans);\n  }\n  .text-2xl {\n    font-size: var(--text-2xl);\n    line-height: var(--tw-leading, var(--text-2xl--line-height));\n  }\n  .text-base {\n    font-size: var(--text-base);\n    line-height: var(--tw-leading, var(--text-base--line-height));\n  }\n  .text-lg {\n    font-size: var(--text-lg);\n    line-height: var(--tw-leading, var(--text-lg--line-height));\n  }\n  .text-sm {\n    font-size: var(--text-sm);\n    line-height: var(--tw-leading, var(--text-sm--line-height));\n  }\n  .text-xl {\n    font-size: var(--text-xl);\n    line-height: var(--tw-leading, var(--text-xl--line-height));\n  }\n  .text-xs {\n    font-size: var(--text-xs);\n    line-height: var(--tw-leading, var(--text-xs--line-height));\n  }\n  .kbd-sm {\n    --size: calc(var(--size-selector, 0.25rem) * 5);\n    font-size: 0.75rem;\n  }\n  .kbd-xs {\n    --size: calc(var(--size-selector, 0.25rem) * 4);\n    font-size: 0.625rem;\n  }\n  .select-xs {\n    --size: calc(var(--size-field, 0.25rem) * 6);\n    font-size: 0.6875rem;\n  }\n  .textarea-sm {\n    font-size: 0.75rem;\n  }\n  .leading-tight {\n    --tw-leading: var(--leading-tight);\n    line-height: var(--leading-tight);\n  }\n  .font-bold {\n    --tw-font-weight: var(--font-weight-bold);\n    font-weight: var(--font-weight-bold);\n  }\n  .font-medium {\n    --tw-font-weight: var(--font-weight-medium);\n    font-weight: var(--font-weight-medium);\n  }\n  .font-semibold {\n    --tw-font-weight: var(--font-weight-semibold);\n    font-weight: var(--font-weight-semibold);\n  }\n  .whitespace-pre-wrap {\n    white-space: pre-wrap;\n  }\n  .checkbox-primary {\n    color: var(--color-primary-content);\n    --input-color: var(--color-primary);\n  }\n  .link-primary {\n    color: var(--color-primary);\n    @media (hover: hover) {\n      &:hover {\n        color: color-mix(in srgb, oklch(0.63 0.22 268) 80%, #000);\n        @supports (color: color-mix(in lab, red, red)) {\n          color: color-mix(in oklab, var(--color-primary) 80%, #000);\n        }\n      }\n    }\n  }\n  .progress-error {\n    color: var(--color-error);\n  }\n  .progress-info {\n    color: var(--color-info);\n  }\n  .progress-primary {\n    color: var(--color-primary);\n  }\n  .progress-success {\n    color: var(--color-success);\n  }\n  .progress-warning {\n    color: var(--color-warning);\n  }\n  .text-accent {\n    color: var(--color-accent);\n  }\n  .text-base-content {\n    color: var(--color-base-content);\n  }\n  .text-base-content\\/20 {\n    color: color-mix(in srgb, oklch(0.20 0.02 286) 20%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n    }\n  }\n  .text-base-content\\/30 {\n    color: color-mix(in srgb, oklch(0.20 0.02 286) 30%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 30%, transparent);\n    }\n  }\n  .text-base-content\\/50 {\n    color: color-mix(in srgb, oklch(0.20 0.02 286) 50%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);\n    }\n  }\n  .text-base-content\\/60 {\n    color: color-mix(in srgb, oklch(0.20 0.02 286) 60%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n    }\n  }\n  .text-base-content\\/70 {\n    color: color-mix(in srgb, oklch(0.20 0.02 286) 70%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 70%, transparent);\n    }\n  }\n  .text-base-content\\/80 {\n    color: color-mix(in srgb, oklch(0.20 0.02 286) 80%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);\n    }\n  }\n  .text-error {\n    color: var(--color-error);\n  }\n  .text-error-content {\n    color: var(--color-error-content);\n  }\n  .text-error\\/60 {\n    color: color-mix(in srgb, oklch(0.65 0.20 25) 60%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-error) 60%, transparent);\n    }\n  }\n  .text-gray-500 {\n    color: var(--color-gray-500);\n  }\n  .text-gray-600 {\n    color: var(--color-gray-600);\n  }\n  .text-gray-700 {\n    color: var(--color-gray-700);\n  }\n  .text-info {\n    color: var(--color-info);\n  }\n  .text-primary {\n    color: var(--color-primary);\n  }\n  .text-primary-content {\n    color: var(--color-primary-content);\n  }\n  .text-secondary {\n    color: var(--color-secondary);\n  }\n  .text-success {\n    color: var(--color-success);\n  }\n  .text-warning {\n    color: var(--color-warning);\n  }\n  .text-white {\n    color: var(--color-white);\n  }\n  .capitalize {\n    text-transform: capitalize;\n  }\n  .lowercase {\n    text-transform: lowercase;\n  }\n  .uppercase {\n    text-transform: uppercase;\n  }\n  .italic {\n    font-style: italic;\n  }\n  .underline {\n    text-decoration-line: underline;\n  }\n  .opacity-0 {\n    opacity: 0%;\n  }\n  .opacity-40 {\n    opacity: 40%;\n  }\n  .opacity-50 {\n    opacity: 50%;\n  }\n  .opacity-70 {\n    opacity: 70%;\n  }\n  .shadow {\n    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-2xl {\n    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-lg {\n    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-md {\n    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-sm {\n    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-xl {\n    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-xs {\n    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .outline {\n    outline-style: var(--tw-outline-style);\n    outline-width: 1px;\n  }\n  .btn-ghost {\n    &:not(.btn-active, :hover, :active:focus, :focus-visible) {\n      --btn-shadow: \"\";\n      --btn-bg: #0000;\n      --btn-border: #0000;\n      --btn-noise: none;\n      &:not(:disabled, [disabled], .btn-disabled) {\n        outline-color: currentColor;\n        --btn-fg: currentColor;\n      }\n    }\n    @media (hover: none) {\n      &:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {\n        --btn-shadow: \"\";\n        --btn-bg: #0000;\n        --btn-border: #0000;\n        --btn-noise: none;\n        --btn-fg: currentColor;\n      }\n    }\n  }\n  .filter {\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);\n  }\n  .backdrop-blur-md {\n    --tw-backdrop-blur: blur(var(--blur-md));\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n  }\n  .backdrop-blur-sm {\n    --tw-backdrop-blur: blur(var(--blur-sm));\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n  }\n  .transition {\n    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-all {\n    transition-property: all;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-colors {\n    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-shadow {\n    transition-property: box-shadow;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-transform {\n    transition-property: transform, translate, scale, rotate;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .duration-200 {\n    --tw-duration: 200ms;\n    transition-duration: 200ms;\n  }\n  .duration-300 {\n    --tw-duration: 300ms;\n    transition-duration: 300ms;\n  }\n  .ease-in-out {\n    --tw-ease: var(--ease-in-out);\n    transition-timing-function: var(--ease-in-out);\n  }\n  .btn-outline {\n    &:not( .btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {\n      --btn-shadow: \"\";\n      --btn-bg: #0000;\n      --btn-fg: var(--btn-color);\n      --btn-border: var(--btn-color);\n      --btn-noise: none;\n    }\n    @media (hover: none) {\n      &:hover:not( .btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {\n        --btn-shadow: \"\";\n        --btn-bg: #0000;\n        --btn-fg: var(--btn-color);\n        --btn-border: var(--btn-color);\n        --btn-noise: none;\n      }\n    }\n  }\n  .btn-lg {\n    --fontsize: 1.125rem;\n    --btn-p: 1.25rem;\n    --size: calc(var(--size-field, 0.25rem) * 12);\n  }\n  .btn-sm {\n    --fontsize: 0.75rem;\n    --btn-p: 0.75rem;\n    --size: calc(var(--size-field, 0.25rem) * 8);\n  }\n  .btn-xs {\n    --fontsize: 0.6875rem;\n    --btn-p: 0.5rem;\n    --size: calc(var(--size-field, 0.25rem) * 6);\n  }\n  .badge-error {\n    --badge-color: var(--color-error);\n    --badge-fg: var(--color-error-content);\n  }\n  .badge-neutral {\n    --badge-color: var(--color-neutral);\n    --badge-fg: var(--color-neutral-content);\n  }\n  .badge-success {\n    --badge-color: var(--color-success);\n    --badge-fg: var(--color-success-content);\n  }\n  .badge-warning {\n    --badge-color: var(--color-warning);\n    --badge-fg: var(--color-warning-content);\n  }\n  .btn-error {\n    --btn-color: var(--color-error);\n    --btn-fg: var(--color-error-content);\n  }\n  .btn-primary {\n    --btn-color: var(--color-primary);\n    --btn-fg: var(--color-primary-content);\n  }\n  .btn-success {\n    --btn-color: var(--color-success);\n    --btn-fg: var(--color-success-content);\n  }\n  .btn-warning {\n    --btn-color: var(--color-warning);\n    --btn-fg: var(--color-warning-content);\n  }\n  .range-xs {\n    --range-thumb-size: calc(var(--size-selector, 0.25rem) * 4);\n  }\n  .toggle-primary {\n    &:checked, &[aria-checked=\"true\"] {\n      --input-color: var(--color-primary);\n    }\n  }\n  .toggle-sm {\n    &:is([type=\"checkbox\"]), &:has([type=\"checkbox\"]) {\n      --size: calc(var(--size-selector, 0.25rem) * 5);\n    }\n  }\n  .toggle-success {\n    &:checked, &[aria-checked=\"true\"] {\n      --input-color: var(--color-success);\n    }\n  }\n  .placeholder\\:text-base-content\\/60 {\n    &::placeholder {\n      color: color-mix(in srgb, oklch(0.20 0.02 286) 60%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n      }\n    }\n  }\n  .hover\\:bg-base-200 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-base-200);\n      }\n    }\n  }\n  .hover\\:bg-base-300 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-base-300);\n      }\n    }\n  }\n  .hover\\:bg-error\\/10 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: color-mix(in srgb, oklch(0.65 0.20 25) 10%, transparent);\n        @supports (color: color-mix(in lab, red, red)) {\n          background-color: color-mix(in oklab, var(--color-error) 10%, transparent);\n        }\n      }\n    }\n  }\n  .hover\\:bg-info\\/10 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-info);\n        @supports (color: color-mix(in lab, red, red)) {\n          background-color: color-mix(in oklab, var(--color-info) 10%, transparent);\n        }\n      }\n    }\n  }\n  .hover\\:shadow-lg {\n    &:hover {\n      @media (hover: hover) {\n        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n      }\n    }\n  }\n  .focus\\:not-sr-only {\n    &:focus {\n      position: static;\n      width: auto;\n      height: auto;\n      padding: 0;\n      margin: 0;\n      overflow: visible;\n      clip: auto;\n      white-space: normal;\n    }\n  }\n  .focus\\:border-primary {\n    &:focus {\n      border-color: var(--color-primary);\n    }\n  }\n  .focus\\:ring-2 {\n    &:focus {\n      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n  .focus\\:ring-primary {\n    &:focus {\n      --tw-ring-color: var(--color-primary);\n    }\n  }\n  .focus\\:outline-hidden {\n    &:focus {\n      --tw-outline-style: none;\n      outline-style: none;\n      @media (forced-colors: active) {\n        outline: 2px solid transparent;\n        outline-offset: 2px;\n      }\n    }\n  }\n  .focus\\:outline-none {\n    &:focus {\n      --tw-outline-style: none;\n      outline-style: none;\n    }\n  }\n  .sm\\:hidden {\n    @media (width >= 40rem) {\n      display: none;\n    }\n  }\n  .sm\\:inline {\n    @media (width >= 40rem) {\n      display: inline;\n    }\n  }\n  .sm\\:inline-flex {\n    @media (width >= 40rem) {\n      display: inline-flex;\n    }\n  }\n  .sm\\:modal-middle {\n    @media (width >= 40rem) {\n      place-items: center;\n      :where(.modal-box) {\n        height: auto;\n        width: calc(11/12 * 100%);\n        max-width: 32rem;\n        max-height: calc(100vh - 5em);\n        translate: 0 2%;\n        scale: 98%;\n        --modal-tl: var(--radius-box);\n        --modal-tr: var(--radius-box);\n        --modal-bl: var(--radius-box);\n        --modal-br: var(--radius-box);\n      }\n    }\n  }\n  .sm\\:w-auto {\n    @media (width >= 40rem) {\n      width: auto;\n    }\n  }\n  .sm\\:grid-cols-2 {\n    @media (width >= 40rem) {\n      grid-template-columns: repeat(2, minmax(0, 1fr));\n    }\n  }\n  .sm\\:grid-cols-4 {\n    @media (width >= 40rem) {\n      grid-template-columns: repeat(4, minmax(0, 1fr));\n    }\n  }\n  .sm\\:flex-row {\n    @media (width >= 40rem) {\n      flex-direction: row;\n    }\n  }\n  .sm\\:text-xl {\n    @media (width >= 40rem) {\n      font-size: var(--text-xl);\n      line-height: var(--tw-leading, var(--text-xl--line-height));\n    }\n  }\n  .md\\:relative {\n    @media (width >= 48rem) {\n      position: relative;\n    }\n  }\n  .md\\:col-span-2 {\n    @media (width >= 48rem) {\n      grid-column: span 2 / span 2;\n    }\n  }\n  .md\\:hidden {\n    @media (width >= 48rem) {\n      display: none;\n    }\n  }\n  .md\\:inline-flex {\n    @media (width >= 48rem) {\n      display: inline-flex;\n    }\n  }\n  .md\\:w-72 {\n    @media (width >= 48rem) {\n      width: calc(var(--spacing) * 72);\n    }\n  }\n  .md\\:translate-x-0 {\n    @media (width >= 48rem) {\n      --tw-translate-x: calc(var(--spacing) * 0);\n      translate: var(--tw-translate-x) var(--tw-translate-y);\n    }\n  }\n  .md\\:grid-cols-2 {\n    @media (width >= 48rem) {\n      grid-template-columns: repeat(2, minmax(0, 1fr));\n    }\n  }\n  .md\\:grid-cols-3 {\n    @media (width >= 48rem) {\n      grid-template-columns: repeat(3, minmax(0, 1fr));\n    }\n  }\n  .md\\:p-6 {\n    @media (width >= 48rem) {\n      padding: calc(var(--spacing) * 6);\n    }\n  }\n  .md\\:px-0 {\n    @media (width >= 48rem) {\n      padding-inline: calc(var(--spacing) * 0);\n    }\n  }\n  .md\\:px-8 {\n    @media (width >= 48rem) {\n      padding-inline: calc(var(--spacing) * 8);\n    }\n  }\n  .md\\:pt-6 {\n    @media (width >= 48rem) {\n      padding-top: calc(var(--spacing) * 6);\n    }\n  }\n  .md\\:shadow-lg {\n    @media (width >= 48rem) {\n      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n  .lg\\:hidden {\n    @media (width >= 64rem) {\n      display: none;\n    }\n  }\n  .lg\\:grid-cols-5 {\n    @media (width >= 64rem) {\n      grid-template-columns: repeat(5, minmax(0, 1fr));\n    }\n  }\n  .lg\\:text-2xl {\n    @media (width >= 64rem) {\n      font-size: var(--text-2xl);\n      line-height: var(--tw-leading, var(--text-2xl--line-height));\n    }\n  }\n  .dark\\:text-gray-300 {\n    @media (prefers-color-scheme: dark) {\n      color: var(--color-gray-300);\n    }\n  }\n  .dark\\:text-gray-400 {\n    @media (prefers-color-scheme: dark) {\n      color: var(--color-gray-400);\n    }\n  }\n}\n@layer base {\n  :root {\n    --b1: 255 255 255;\n    --b2: 243 244 246;\n    --b3: 229 231 235;\n    --p: 59 130 246;\n    --s: 124  58 237;\n    --a: 96 165 250;\n    --pc: 255 255 255;\n    --sc: 255 255 255;\n    --su: 34 197  94;\n    --wa: 234 179   8;\n    --er: 239  68  68;\n    --color-base-100: rgb(var(--b1) / 1);\n    --color-base-200: rgb(var(--b2) / 1);\n    --color-base-300: rgb(var(--b3) / 1);\n    --color-primary: rgb(var(--p)  / 1);\n    --color-secondary: rgb(var(--s)  / 1);\n    --color-accent: rgb(var(--a)  / 1);\n  }\n  html.dark,\n  [data-theme=\"dracula-enhanced\"] {\n    --b1: 40 42 54;\n    --b2: 33 34 44;\n    --b3: 26 27 34;\n    --p: 135  56 239;\n    --s: 59 130 246;\n    --a: 96 165 250;\n    --pc: 0 0 0;\n    --sc: 0 0 0;\n    --color-base-100: rgb(var(--b1) / 1);\n    --color-base-200: rgb(var(--b2) / 1);\n    --color-base-300: rgb(var(--b3) / 1);\n    --color-base-content: oklch(0.80 0.02 286);\n    --color-primary: rgb(var(--p)  / 1);\n    --color-secondary: rgb(var(--s)  / 1);\n  }\n  :root {\n    --spacing-xs: 0.25rem;\n    --spacing-sm: 0.5rem;\n    --spacing-md: 0.75rem;\n    --spacing-lg: 1.25rem;\n    --spacing-xl: 2rem;\n    --spacing-2xl: 3rem;\n    --font-size-xs: 0.75rem;\n    --font-size-sm: 0.875rem;\n    --font-size-base: 1rem;\n    --font-size-lg: 1.125rem;\n    --font-size-xl: 1.25rem;\n    --font-size-2xl: 1.5rem;\n  }\n  html.dark,\n  [data-theme=\"dracula-enhanced\"] {\n    --spacing-xs: 0.25rem;\n    --spacing-sm: 0.5rem;\n    --spacing-md: 0.75rem;\n    --spacing-lg: 1.25rem;\n    --spacing-xl: 2rem;\n    --spacing-2xl: 3rem;\n    --font-size-xs: 0.75rem;\n    --font-size-sm: 0.875rem;\n    --font-size-base: 1rem;\n    --font-size-lg: 1.125rem;\n    --font-size-xl: 1.25rem;\n    --font-size-2xl: 1.5rem;\n  }\n}\n@keyframes mobile-fade-in {\n  from {\n    opacity: 0;\n    transform: translateY(var(--spacing-sm)) scale(0.98);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n@keyframes mobile-slide-in {\n  from {\n    transform: translateX(-100%);\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n@keyframes mobile-pulse {\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.7;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes skeleton-shimmer {\n  0% {\n    background-position: -200% 0;\n  }\n  100% {\n    background-position: 200% 0;\n  }\n}\n@media (prefers-reduced-motion: reduce) {\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n  }\n}\n.animate-mobile-fade-in {\n  animation: mobile-fade-in var(--transition-slow) ease-out forwards;\n}\n.animate-mobile-slide-in {\n  animation: mobile-slide-in var(--transition-slow) ease-out forwards;\n}\n.animate-mobile-pulse {\n  animation: mobile-pulse 2s infinite;\n}\n.text-responsive-xs {\n  font-size: var(--font-size-xs);\n}\n.text-responsive-sm {\n  font-size: var(--font-size-sm);\n}\n.text-responsive-base {\n  font-size: var(--font-size-base);\n}\n.text-responsive-lg {\n  font-size: var(--font-size-lg);\n}\n.text-responsive-xl {\n  font-size: var(--font-size-xl);\n}\n.text-responsive-2xl {\n  font-size: var(--font-size-2xl);\n}\n.focus-ring:focus {\n  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  --tw-ring-color: var(--color-primary);\n  --tw-ring-offset-width: 2px;\n  --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n  --tw-ring-offset-color: var(--color-base-100);\n  --tw-outline-style: none;\n  outline-style: none;\n}\n:root {\n  --mobile-touch-target: 44px;\n  --mobile-safe-font: 16px;\n  --mobile-border-radius: 12px;\n  --mobile-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  --mobile-shadow-elevated: 0 4px 16px rgba(0,0,0,0.15);\n  --icon-size-sm: 20px;\n  --icon-size-md: 24px;\n  --icon-size-lg: 32px;\n  --icon-stroke-width: 2px;\n  --btn-height-sm: 36px;\n  --btn-height-md: 44px;\n  --btn-height-lg: 52px;\n  --btn-height-xs: 32px;\n}\n.input[type=\"search\"], .input {\n  display: block !important;\n  width: 100% !important;\n  min-width: 0 !important;\n  position: relative !important;\n  box-sizing: border-box !important;\n}\n.relative > .absolute.left-0, .relative > .absolute.right-0 {\n  width: 40px !important;\n  min-width: 40px !important;\n  max-width: 40px !important;\n  pointer-events: none;\n}\n.relative > .absolute.right-0 {\n  pointer-events: auto;\n}\n#userMenu .avatar > div {\n  display: flex !important;\n  align-items: center !important;\n  justify-content: center !important;\n  width: 40px !important;\n  height: 40px !important;\n}\n#userMenu .avatar #userInitials {\n  display: block !important;\n  width: 100% !important;\n  height: 100% !important;\n  font-size: 1.1rem !important;\n  font-weight: 500 !important;\n  text-align: center !important;\n  line-height: 40px !important;\n}\n.btn, button, [role=\"button\"], a[href], input[type=\"button\"], input[type=\"submit\"], .tab, .project-card .btn-ghost, [data-action], .file-preview-delete, .message-action-btn {\n  min-width: var(--mobile-touch-target);\n  min-height: var(--mobile-touch-target);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  touch-action: manipulation;\n  -webkit-tap-highlight-color: transparent;\n  position: relative;\n  isolation: isolate;\n}\nhtml {\n  font-size: var(--mobile-safe-font);\n  -webkit-text-size-adjust: 100%;\n}\ninput, select, textarea {\n  font-size: var(--mobile-safe-font);\n  min-height: var(--mobile-touch-target);\n  line-height: 1.5;\n  &::placeholder {\n    color: color-mix(in srgb, oklch(0.20 0.02 286) 60%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n    }\n  }\n}\n.btn {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  border-radius: var(--radius-xl);\n  padding-inline: calc(var(--spacing) * 4);\n  padding-block: calc(var(--spacing) * 2);\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: transparent;\n  height: var(--btn-height-md);\n  min-width: var(--mobile-touch-target);\n  gap: var(--spacing-sm);\n  &:focus {\n    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  &:focus {\n    --tw-ring-color: var(--color-primary);\n  }\n  &:focus {\n    --tw-ring-offset-width: 2px;\n    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n  }\n  &:focus {\n    --tw-ring-offset-color: var(--color-base-100);\n  }\n  &:focus {\n    --tw-outline-style: none;\n    outline-style: none;\n  }\n}\n.btn-xs {\n  height: var(--btn-height-xs);\n  min-width: var(--btn-height-xs);\n  padding-inline: calc(var(--spacing) * 2);\n  font-size: var(--text-xs);\n  line-height: var(--tw-leading, var(--text-xs--line-height));\n}\n.btn-sm {\n  height: var(--btn-height-sm);\n  padding-inline: calc(var(--spacing) * 3);\n  font-size: var(--text-sm);\n  line-height: var(--tw-leading, var(--text-sm--line-height));\n  min-width: var(--mobile-touch-target);\n}\n.btn-lg {\n  height: var(--btn-height-lg);\n  padding-inline: calc(var(--spacing) * 6);\n  font-size: var(--text-lg);\n  line-height: var(--tw-leading, var(--text-lg--line-height));\n  min-width: var(--mobile-touch-target);\n}\n.btn:hover:not(:disabled) {\n  transform: translateY(-1px);\n  box-shadow: var(--mobile-shadow);\n}\n.btn:active:not(:disabled) {\n  transform: translateY(0);\n  transition-duration: 100ms;\n}\n.btn:disabled {\n  cursor: not-allowed;\n  opacity: 50%;\n}\n.input, .select, .textarea {\n  width: 100%;\n  padding-inline: calc(var(--spacing) * 4);\n  padding-block: calc(var(--spacing) * 3);\n  border-radius: var(--radius-xl);\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  border-color: var(--color-base-300);\n  background-color: var(--color-base-100);\n  color: var(--color-base-content);\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n  min-height: var(--mobile-touch-target);\n  font-size: var(--mobile-safe-font);\n}\n.input-sm {\n  font-size: var(--mobile-safe-font);\n  padding-inline: calc(var(--spacing) * 3);\n  padding-block: calc(var(--spacing) * 2);\n}\n.select-sm, .textarea-sm {\n  font-size: var(--mobile-safe-font);\n}\n.dropdown-content .menu {\n  font-size: var(--mobile-safe-font);\n}\n#sidebarSettingsPanel {\n  border-color: var(--color-base-200);\n  background-color: var(--color-base-100);\n  min-height: 200px;\n  max-height: 60vh;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}\n.model-config-container {\n  :where(& > :not(:last-child)) {\n    --tw-space-y-reverse: 0;\n    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));\n    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));\n  }\n  padding: calc(var(--spacing) * 1);\n}\n.model-config-container select {\n  min-height: 44px;\n  width: 100%;\n  font-size: var(--text-base);\n  line-height: var(--tw-leading, var(--text-base--line-height));\n  font-size: var(--mobile-safe-font) !important;\n  border-radius: var(--radius-xl);\n  padding-inline: calc(var(--spacing) * 4);\n  padding-block: calc(var(--spacing) * 3);\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  border-color: var(--color-base-300);\n  background-color: var(--color-base-100);\n  &:focus {\n    border-color: var(--color-primary);\n  }\n}\n.model-config-container input[type=\"range\"] {\n  height: calc(var(--spacing) * 8);\n  width: 100%;\n  cursor: pointer;\n  appearance: none;\n  background-color: transparent;\n  min-height: 32px;\n  padding: 8px 0;\n}\n.model-config-container input[type=\"range\"]::-webkit-slider-track {\n  border-radius: calc(infinity * 1px);\n  background-color: var(--color-base-300);\n  height: 6px;\n  border: none;\n}\n.model-config-container input[type=\"range\"]::-webkit-slider-thumb {\n  appearance: none;\n  background-color: var(--color-primary);\n  height: 24px;\n  width: 24px;\n  border-radius: 50%;\n  border: 2px solid white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n  cursor: pointer;\n  margin-top: -9px;\n}\n.model-config-container input[type=\"range\"]::-moz-range-track {\n  border-radius: calc(infinity * 1px);\n  background-color: var(--color-base-300);\n  height: 6px;\n  border: none;\n}\n.model-config-container input[type=\"range\"]::-moz-range-thumb {\n  --tw-border-style: none;\n  border-style: none;\n  background-color: var(--color-primary);\n  height: 24px;\n  width: 24px;\n  border-radius: 50%;\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n}\n.model-config-container .toggle {\n  --tw-scale-x: 125%;\n  --tw-scale-y: 125%;\n  --tw-scale-z: 125%;\n  scale: var(--tw-scale-x) var(--tw-scale-y);\n  min-width: 44px;\n  min-height: 24px;\n}\n.model-config-container label {\n  font-size: var(--text-sm);\n  line-height: var(--tw-leading, var(--text-sm--line-height));\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n  color: var(--color-base-content);\n  margin-bottom: calc(var(--spacing) * 2);\n  display: block;\n  font-size: var(--mobile-safe-font);\n}\n.model-config-container .text-xs {\n  font-size: 14px !important;\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n  color: color-mix(in srgb, oklch(0.20 0.02 286) 80%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    color: color-mix(in oklab, var(--color-base-content) 80%, transparent);\n  }\n}\n.model-config-section {\n  margin-bottom: calc(var(--spacing) * 3);\n  border-radius: var(--radius-xl);\n  background-color: var(--color-base-100);\n  padding: calc(var(--spacing) * 4);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: var(--color-base-200);\n}\n.model-config-section:last-child {\n  margin-bottom: calc(var(--spacing) * 0);\n}\n.model-config-container .flex.items-center {\n  gap: calc(var(--spacing) * 3);\n  padding-block: calc(var(--spacing) * 2);\n  min-height: 44px;\n}\n.model-config-container .flex.items-center label {\n  margin-bottom: calc(var(--spacing) * 0);\n  flex: 1;\n  cursor: pointer;\n  font-size: var(--text-base);\n  line-height: var(--tw-leading, var(--text-base--line-height));\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n  font-size: var(--mobile-safe-font);\n  line-height: 1.4;\n}\n.input:focus, .select:focus, .textarea:focus {\n  border-color: var(--color-primary);\n  --tw-outline-style: none;\n  outline-style: none;\n  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  --tw-ring-color: var(--color-primary);\n  --tw-ring-offset-width: 2px;\n  --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n  --tw-ring-offset-color: var(--color-base-100);\n}\n.modal-box {\n  border-radius: var(--radius-2xl);\n  background-color: var(--color-base-100);\n  --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  margin-inline: calc(var(--spacing) * 4);\n  width: 100%;\n  max-width: var(--container-md);\n  max-height: 90vh;\n  overflow-y: auto;\n  padding: var(--spacing-lg);\n}\n@media (max-width: 640px) {\n  .modal-box {\n    height: 100vh;\n    width: 100vw;\n    max-width: none;\n    margin: calc(var(--spacing) * 0);\n    border-radius: 0;\n    padding-top: calc(env(safe-area-inset-top, 0) + var(--spacing-lg));\n    padding-bottom: calc(env(safe-area-inset-bottom, 0) + var(--spacing-lg));\n  }\n}\n.card, .project-card {\n  border-radius: var(--radius-2xl);\n  background-color: var(--color-base-100);\n  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  border-color: var(--color-base-200);\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n  padding: var(--spacing-md);\n}\n.card:hover, .project-card:hover {\n  border-color: var(--color-base-300);\n  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  transform: translateY(-2px);\n}\n.chat-message-container {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-md);\n  padding: var(--spacing-md);\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  -webkit-overflow-scrolling: touch;\n}\n.message-bubble {\n  display: inline-block;\n  border-radius: var(--radius-2xl);\n  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  padding: var(--spacing-md) var(--spacing-lg);\n  max-width: min(85%, 600px);\n  position: relative;\n  font-size: var(--font-size-base);\n  line-height: 1.6;\n}\n.user-message .message-bubble {\n  background-color: var(--color-user-message-bg);\n  color: var(--color-user-message-text);\n  border-bottom-right-radius: var(--radius-md);\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n.ai-message .message-bubble {\n  background-color: var(--color-ai-message-bg);\n  color: var(--color-ai-message-text);\n  border-bottom-left-radius: var(--radius-md);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: var(--color-base-300);\n}\n.user-message .message-bubble::after {\n  content: '';\n  position: absolute;\n  right: -8px;\n  bottom: 12px;\n  width: 0;\n  height: 0;\n  border: 8px solid transparent;\n  border-left-color: var(--color-user-message-bg);\n  border-right: 0;\n}\n.ai-message .message-bubble::before {\n  content: '';\n  position: absolute;\n  left: -8px;\n  bottom: 12px;\n  width: 0;\n  height: 0;\n  border: 8px solid transparent;\n  border-right-color: var(--color-ai-message-bg);\n  border-left: 0;\n}\n.skeleton {\n  border-radius: 0.25rem;\n  background-color: var(--color-base-300);\n  background: linear-gradient( 90deg, var(--color-base-300) 0%, var(--color-base-200) 50%, var(--color-base-300) 100% );\n  background-size: 200% 100%;\n  animation: skeleton-shimmer 1.5s ease-in-out infinite;\n}\n.skeleton-text {\n  border-radius: var(--radius-box);\n  background-color: var(--color-base-300);\n  @media (prefers-reduced-motion: reduce) {\n    transition-duration: 15s;\n  }\n  will-change: background-position;\n  animation: skeleton 1.8s ease-in-out infinite;\n  background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );\n  background-size: 200% auto;\n  background-repeat: no-repeat;\n  background-position-x: -50%;\n  background: linear-gradient(90deg,\n    var(--color-base-300) 25%,\n    var(--color-base-200) 50%,\n    var(--color-base-300) 75%);\n  background-size: 200% 100%;\n  animation: skeleton-shimmer 1.5s ease-in-out infinite;\n  height: 1em;\n  margin-bottom: var(--spacing-xs);\n  border-radius: 4px;\n}\n.skeleton-card {\n  border-radius: var(--radius-box);\n  background-color: var(--color-base-300);\n  @media (prefers-reduced-motion: reduce) {\n    transition-duration: 15s;\n  }\n  will-change: background-position;\n  animation: skeleton 1.8s ease-in-out infinite;\n  background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );\n  background-size: 200% auto;\n  background-repeat: no-repeat;\n  background-position-x: -50%;\n  background: linear-gradient(90deg,\n    var(--color-base-300) 25%,\n    var(--color-base-200) 50%,\n    var(--color-base-300) 75%);\n  background-size: 200% 100%;\n  animation: skeleton-shimmer 1.5s ease-in-out infinite;\n  border-radius: var(--radius-2xl);\n  height: 200px;\n  width: 100%;\n}\n.status-indicator {\n  display: inline-flex;\n  align-items: center;\n  gap: calc(var(--spacing) * 2);\n  padding: var(--spacing-xs) var(--spacing-sm);\n  border-radius: calc(infinity * 1px);\n  font-size: var(--text-sm);\n  line-height: var(--tw-leading, var(--text-sm--line-height));\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n}\n.status-success {\n  background-color: color-mix(in srgb, oklch(0.72 0.15 142) 20%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    background-color: color-mix(in oklab, var(--color-success) 20%, transparent);\n  }\n  color: var(--color-success);\n}\n.status-success::before {\n  content: '✓';\n  height: calc(var(--spacing) * 5);\n  width: calc(var(--spacing) * 5);\n  border-radius: calc(infinity * 1px);\n  background-color: var(--color-success);\n  color: var(--color-success-content);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--text-xs);\n  line-height: var(--tw-leading, var(--text-xs--line-height));\n}\n.status-warning {\n  background-color: color-mix(in srgb, oklch(0.84 0.15 85) 20%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    background-color: color-mix(in oklab, var(--color-warning) 20%, transparent);\n  }\n  color: var(--color-warning);\n}\n.status-warning::before {\n  content: '⏸';\n  height: calc(var(--spacing) * 5);\n  width: calc(var(--spacing) * 5);\n  border-radius: calc(infinity * 1px);\n  background-color: var(--color-warning);\n  color: var(--color-warning-content);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--text-xs);\n  line-height: var(--tw-leading, var(--text-xs--line-height));\n}\n.status-error {\n  background-color: color-mix(in srgb, oklch(0.65 0.20 25) 20%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    background-color: color-mix(in oklab, var(--color-error) 20%, transparent);\n  }\n  color: var(--color-error);\n}\n.status-error::before {\n  content: '✕';\n  height: calc(var(--spacing) * 5);\n  width: calc(var(--spacing) * 5);\n  border-radius: calc(infinity * 1px);\n  background-color: var(--color-error);\n  color: var(--color-error-content);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--text-xs);\n  line-height: var(--tw-leading, var(--text-xs--line-height));\n}\n.file-upload-container {\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  --tw-border-style: dashed;\n  border-style: dashed;\n  border-color: var(--color-base-300);\n  border-radius: var(--radius-2xl);\n  background-color: color-mix(in srgb, oklch(0.95 0.01 286) 30%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    background-color: color-mix(in oklab, var(--color-base-200) 30%, transparent);\n  }\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 300ms;\n  transition-duration: 300ms;\n  padding: var(--spacing-xl);\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.file-upload-container:hover {\n  border-color: color-mix(in srgb, oklch(0.63 0.22 268) 70%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    border-color: color-mix(in oklab, var(--color-primary) 70%, transparent);\n  }\n  background-color: color-mix(in srgb, oklch(0.63 0.22 268) 5%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    background-color: color-mix(in oklab, var(--color-primary) 5%, transparent);\n  }\n}\n.file-upload-container.drag-active {\n  border-color: var(--color-primary);\n  background-color: color-mix(in srgb, oklch(0.63 0.22 268) 10%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);\n  }\n  scale: 1.02;\n}\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--spacing-2xl);\n  text-align: center;\n}\n.empty-state-icon {\n  margin-bottom: calc(var(--spacing) * 4);\n  height: calc(var(--spacing) * 20);\n  width: calc(var(--spacing) * 20);\n  color: color-mix(in srgb, oklch(0.20 0.02 286) 20%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n  }\n  stroke-width: 1.5;\n}\n.empty-state-title {\n  font-size: var(--font-size-lg);\n  margin-bottom: calc(var(--spacing) * 2);\n  --tw-font-weight: var(--font-weight-semibold);\n  font-weight: var(--font-weight-semibold);\n}\n.empty-state-description {\n  margin-bottom: calc(var(--spacing) * 6);\n  color: color-mix(in srgb, oklch(0.20 0.02 286) 60%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n  }\n  max-width: 400px;\n}\n.empty-state-action {\n  :where(&) {\n    width: unset;\n  }\n  display: inline-flex;\n  flex-shrink: 0;\n  cursor: pointer;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: center;\n  gap: calc(0.25rem * 1.5);\n  text-align: center;\n  vertical-align: middle;\n  outline-offset: 2px;\n  webkit-user-select: none;\n  user-select: none;\n  padding-inline: var(--btn-p);\n  color: var(--btn-fg);\n  --tw-prose-links: var(--btn-fg);\n  height: var(--size);\n  font-size: var(--fontsize, 0.875rem);\n  font-weight: 600;\n  outline-color: var(--btn-color, var(--color-base-content));\n  transition-property: color, background-color, border-color, box-shadow;\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  transition-duration: 0.2s;\n  border-start-start-radius: var(--join-ss, var(--radius-field));\n  border-start-end-radius: var(--join-se, var(--radius-field));\n  border-end-start-radius: var(--join-es, var(--radius-field));\n  border-end-end-radius: var(--join-ee, var(--radius-field));\n  background-color: var(--btn-bg);\n  background-size: auto, calc(var(--noise) * 100%);\n  background-image: none, var(--btn-noise);\n  border-width: var(--border);\n  border-style: solid;\n  border-color: var(--btn-border);\n  text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));\n  touch-action: manipulation;\n  box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);\n  --size: calc(var(--size-field, 0.25rem) * 10);\n  --btn-bg: var(--btn-color, var(--color-base-200));\n  --btn-fg: var(--color-base-content);\n  --btn-p: 1rem;\n  --btn-border: var(--btn-bg);\n  @supports (color: color-mix(in lab, red, red)) {\n    --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));\n  }\n  --btn-shadow: 0 3px 2px -2px var(--btn-bg),\n    0 4px 3px -2px var(--btn-bg);\n  @supports (color: color-mix(in lab, red, red)) {\n    --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),\n    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);\n  }\n  --btn-noise: var(--fx-noise);\n  .prose & {\n    text-decoration-line: none;\n  }\n  @media (hover: hover) {\n    &:hover {\n      --btn-bg: var(--btn-color, oklch(0.95 0.01 286));\n      @supports (color: color-mix(in lab, red, red)) {\n        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);\n      }\n    }\n  }\n  &:focus-visible {\n    outline-width: 2px;\n    outline-style: solid;\n    isolation: isolate;\n  }\n  &:active:not(.btn-active) {\n    translate: 0 0.5px;\n    --btn-bg: var(--btn-color, oklch(0.95 0.01 286));\n    @supports (color: color-mix(in lab, red, red)) {\n      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);\n    }\n    --btn-border: var(--btn-color, oklch(0.95 0.01 286));\n    @supports (color: color-mix(in lab, red, red)) {\n      --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);\n    }\n    --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);\n  }\n  &:is(:disabled, [disabled], .btn-disabled) {\n    &:not(.btn-link, .btn-ghost) {\n      background-color: color-mix(in srgb, oklch(0.20 0.02 286) 10%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);\n      }\n      box-shadow: none;\n    }\n    pointer-events: none;\n    --btn-border: #0000;\n    --btn-noise: none;\n    --btn-fg: color-mix(in srgb, oklch(0.20 0.02 286) 20%, #0000);\n    @supports (color: color-mix(in lab, red, red)) {\n      --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);\n    }\n    @media (hover: hover) {\n      &:hover {\n        pointer-events: none;\n        background-color: var(--color-neutral);\n        @supports (color: color-mix(in lab, red, red)) {\n          background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);\n        }\n        --btn-border: #0000;\n        --btn-fg: color-mix(in srgb, oklch(0.20 0.02 286) 20%, #0000);\n        @supports (color: color-mix(in lab, red, red)) {\n          --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);\n        }\n      }\n    }\n  }\n  &:is(input[type=\"checkbox\"], input[type=\"radio\"]) {\n    appearance: none;\n    &::after {\n      content: attr(aria-label);\n    }\n  }\n  &:where(input:checked:not(.filter .btn)) {\n    --btn-color: var(--color-primary);\n    --btn-fg: var(--color-primary-content);\n    isolation: isolate;\n  }\n  display: inline-flex;\n  min-height: calc(var(--spacing) * 12);\n  min-width: calc(var(--spacing) * 12);\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-lg);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: transparent;\n  padding-inline: calc(var(--spacing) * 4);\n  padding-block: calc(var(--spacing) * 2);\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n  background-color: var(--color-primary);\n  color: var(--color-primary-content);\n  &:hover {\n    @media (hover: hover) {\n      background-color: color-mix(in srgb, oklch(0.63 0.22 268) 90%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        background-color: color-mix(in oklab, var(--color-primary) 90%, transparent);\n      }\n    }\n  }\n  --btn-color: var(--color-primary);\n  --btn-fg: var(--color-primary-content);\n}\n.icon-sm {\n  width: var(--icon-size-sm);\n  height: var(--icon-size-sm);\n  stroke-width: var(--icon-stroke-width);\n}\n.icon-md {\n  width: var(--icon-size-md);\n  height: var(--icon-size-md);\n  stroke-width: var(--icon-stroke-width);\n}\n.icon-lg {\n  width: var(--icon-size-lg);\n  height: var(--icon-size-lg);\n  stroke-width: calc(var(--icon-stroke-width) * 0.875);\n}\n.expandable-section {\n  overflow: hidden;\n  border-radius: var(--radius-xl);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: var(--color-base-300);\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 300ms;\n  transition-duration: 300ms;\n}\n.expandable-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: calc(var(--spacing) * 4);\n  cursor: pointer;\n  -webkit-user-select: none;\n  user-select: none;\n  min-height: var(--mobile-touch-target);\n}\n.expandable-header:hover {\n  background-color: var(--color-base-200);\n}\n.expandable-indicator {\n  transition-property: transform, translate, scale, rotate;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 300ms;\n  transition-duration: 300ms;\n  color: color-mix(in srgb, oklch(0.20 0.02 286) 60%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n  }\n}\n.expandable-section[aria-expanded=\"true\"] .expandable-indicator {\n  transform: rotate(180deg);\n}\n.expandable-content {\n  border-top-style: var(--tw-border-style);\n  border-top-width: 1px;\n  border-color: var(--color-base-300);\n  padding: var(--spacing-md);\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 300ms;\n  transition-duration: 300ms;\n  max-height: 0;\n  overflow: hidden;\n}\n.expandable-section[aria-expanded=\"true\"] .expandable-content {\n  max-height: 1000px;\n}\n[role=\"tablist\"] {\n  display: flex;\n  gap: calc(var(--spacing) * 1);\n}\n[role=\"tab\"] {\n  --tw-outline-style: none;\n  outline-style: none;\n}\n[role=\"tab\"]:focus {\n  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  --tw-ring-color: var(--color-primary);\n  --tw-ring-offset-width: 2px;\n  --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n  --tw-ring-offset-color: var(--color-base-100);\n  --tw-outline-style: none;\n  outline-style: none;\n}\n[role=\"tab\"][aria-selected=\"true\"] {\n  background-color: var(--color-primary);\n  color: var(--color-primary-content);\n}\n.swipeable-item {\n  position: relative;\n  overflow: hidden;\n  touch-action: pan-y;\n}\n.swipe-action {\n  position: absolute;\n  inset-block: calc(var(--spacing) * 0);\n  right: calc(var(--spacing) * 0);\n  display: flex;\n  align-items: center;\n  background-color: var(--color-error);\n  padding-inline: calc(var(--spacing) * 6);\n  color: var(--color-error-content);\n  transform: translateX(100%);\n  transition-property: transform, translate, scale, rotate;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 300ms;\n  transition-duration: 300ms;\n}\n.swipeable-item.swiping .swipe-action {\n  transform: translateX(0);\n}\n.conversation-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: calc(var(--spacing) * 3);\n  border-radius: var(--radius-xl);\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  border-color: var(--color-base-200);\n  background-color: var(--color-base-100);\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n  cursor: pointer;\n  padding: var(--spacing-md);\n  min-height: calc(var(--mobile-touch-target) + var(--spacing-sm));\n}\n.conversation-item:hover {\n  border-color: var(--color-base-300);\n  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  transform: translateX(2px);\n}\n.conversation-item.active {\n  border-color: var(--color-primary);\n  background-color: color-mix(in srgb, oklch(0.63 0.22 268) 10%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);\n  }\n  box-shadow: inset 3px 0 0 var(--color-primary);\n}\n.conversation-item .badge {\n  --tw-border-style: none;\n  border-style: none;\n  background-color: var(--color-base-200);\n  font-size: var(--text-xs);\n  line-height: var(--tw-leading, var(--text-xs--line-height));\n  padding: var(--spacing-xs) var(--spacing-sm);\n}\n.icon-btn {\n  display: flex;\n  min-height: 44px;\n  min-width: 44px;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-lg);\n}\n.icon-sm {\n  height: calc(var(--spacing) * 6);\n  width: calc(var(--spacing) * 6);\n}\n.mobile-grid {\n  display: grid;\n  gap: calc(var(--spacing) * 4);\n  padding: calc(var(--spacing) * 4);\n  grid-template-columns: repeat(auto-fit, minmax(min(300px, 100%), 1fr));\n  @media (width >= 40rem) {\n    gap: calc(var(--spacing) * 6);\n  }\n  @media (width >= 64rem) {\n    gap: calc(var(--spacing) * 8);\n  }\n  @media (width >= 64rem) {\n    padding-top: calc(var(--spacing) * 6);\n  }\n}\n.chat-container {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  max-height: calc(100vh - 120px);\n  border-radius: var(--radius-xl);\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  border-color: var(--color-base-200);\n  background-color: var(--color-base-100);\n  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n}\n.chat-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-style: var(--tw-border-style);\n  border-bottom-width: 1px;\n  border-color: var(--color-base-200);\n  padding: var(--spacing-md);\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 300ms;\n  transition-duration: 300ms;\n  cursor: pointer;\n}\n.chat-header.collapsed {\n  padding: var(--spacing-sm);\n}\n.chat-header.collapsed .chat-metadata {\n  display: none;\n}\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: var(--spacing-md);\n  -webkit-overflow-scrolling: touch;\n  overscroll-behavior: contain;\n  scroll-padding-top: var(--spacing-md);\n  scroll-padding-bottom: var(--spacing-md);\n  min-height: 300px;\n  scrollbar-gutter: stable;\n}\n.chat-input-container {\n  position: sticky;\n  bottom: calc(var(--spacing) * 0);\n  z-index: 20;\n  background-color: color-mix(in srgb, oklch(1.00 0.00 0) 95%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    background-color: color-mix(in oklab, var(--color-base-100) 95%, transparent);\n  }\n  --tw-backdrop-blur: blur(var(--blur-sm));\n  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n  border-top-style: var(--tw-border-style);\n  border-top-width: 2px;\n  border-color: var(--color-base-200);\n  padding: var(--spacing-md);\n  padding-bottom: calc(env(safe-area-inset-bottom, 0) + var(--spacing-md));\n}\n.chat-input-row {\n  display: flex;\n  align-items: center;\n  gap: calc(var(--spacing) * 3);\n}\n.chat-input {\n  flex: 1;\n  padding: var(--spacing-sm) var(--spacing-lg);\n  border-radius: calc(infinity * 1px);\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  border-color: var(--color-base-300);\n  background-color: var(--color-base-200);\n  color: var(--color-base-content);\n  font-size: var(--mobile-safe-font);\n  min-height: var(--mobile-touch-target);\n  line-height: 1.6;\n}\n.chat-input:focus {\n  border-color: var(--color-primary);\n  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  --tw-ring-color: var(--color-primary);\n}\n.chat-send-btn {\n  width: var(--mobile-touch-target);\n  height: var(--mobile-touch-target);\n  flex-shrink: 0;\n  border-radius: calc(infinity * 1px);\n  background-color: var(--color-primary);\n  color: var(--color-primary-content);\n  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.chat-send-btn:hover {\n  background-color: color-mix(in srgb, oklch(0.63 0.22 268) 90%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    background-color: color-mix(in oklab, var(--color-primary) 90%, transparent);\n  }\n}\n.chat-send-btn:active {\n  --tw-scale-x: 95%;\n  --tw-scale-y: 95%;\n  --tw-scale-z: 95%;\n  scale: var(--tw-scale-x) var(--tw-scale-y);\n}\ninput::placeholder, textarea::placeholder {\n  color: color-mix(in srgb, oklch(0.20 0.02 286) 60%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n  }\n}\ninput:focus, textarea:focus, select:focus {\n  border-color: var(--color-primary);\n  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  --tw-ring-color: var(--color-primary);\n  --tw-outline-style: none;\n  outline-style: none;\n}\n.project-details {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-lg);\n  padding: var(--spacing-md);\n  margin-inline: auto;\n  max-width: var(--container-6xl);\n}\n.project-header {\n  border-radius: var(--radius-2xl);\n  background-color: var(--color-base-100);\n  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  border-color: var(--color-base-200);\n  padding: var(--spacing-lg);\n}\n.project-tabs {\n  display: flex;\n  gap: calc(var(--spacing) * 2);\n  overflow-x: auto;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n  scroll-snap-type: x mandatory;\n  scroll-padding: var(--spacing-sm);\n  position: relative;\n  padding: 0 var(--spacing-sm);\n}\n.project-tabs::-webkit-scrollbar {\n  display: none;\n}\n.project-tabs::before, .project-tabs::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 20px;\n  pointer-events: none;\n  z-index: 1;\n}\n.project-tabs::before {\n  left: 0;\n  background: linear-gradient(to right, var(--color-base-100), transparent);\n}\n.project-tabs::after {\n  right: 0;\n  background: linear-gradient(to left, var(--color-base-100), transparent);\n}\n.project-tab {\n  flex-shrink: 0;\n  padding: var(--spacing-sm) var(--spacing-lg);\n  border-radius: var(--radius-xl);\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  border-color: transparent;\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n  scroll-snap-align: start;\n  min-width: 120px;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: calc(var(--spacing) * 2);\n  white-space: nowrap;\n  min-height: var(--mobile-touch-target);\n}\n.project-tab:hover:not(.active) {\n  border-color: var(--color-base-300);\n  background-color: var(--color-base-200);\n}\n.project-tab.active {\n  background-color: var(--color-primary);\n  color: var(--color-primary-content);\n  border-color: var(--color-primary);\n  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  font-weight: 500;\n}\n.project-card-actions {\n  padding-top: 0.25rem;\n}\n.project-tab:focus-visible {\n  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  --tw-ring-color: var(--color-primary);\n  --tw-ring-offset-width: 2px;\n  --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n  --tw-outline-style: none;\n  outline-style: none;\n}\n.sidebar {\n  border-radius: var(--radius-xl);\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  border-color: var(--color-base-200);\n  background-color: var(--color-base-100);\n  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n}\n@media (max-width: 1024px) {\n  .sidebar {\n    position: fixed;\n    inset: calc(var(--spacing) * 0);\n    z-index: 50;\n    width: calc(4/5 * 100%);\n    max-width: var(--container-sm);\n    --tw-translate-x: -100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);\n    transition-property: transform, translate, scale, rotate;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n    --tw-duration: 300ms;\n    transition-duration: 300ms;\n    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    height: 100dvh;\n    padding-top: env(safe-area-inset-top, 0);\n    padding-bottom: env(safe-area-inset-bottom, 0);\n  }\n  .sidebar.open {\n    --tw-translate-x: calc(var(--spacing) * 0);\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n  .sidebar-backdrop {\n    position: fixed;\n    inset: calc(var(--spacing) * 0);\n    z-index: 40;\n    background-color: color-mix(in srgb, #000 50%, transparent);\n    @supports (color: color-mix(in lab, red, red)) {\n      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);\n    }\n    transition-property: opacity;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n    --tw-duration: 300ms;\n    transition-duration: 300ms;\n    pointer-events: none;\n    opacity: 0%;\n  }\n  .sidebar.open~.sidebar-backdrop {\n    pointer-events: auto;\n    opacity: 100%;\n  }\n}\n.sidebar-dock {\n  position: fixed;\n  right: calc(var(--spacing) * 0);\n  bottom: calc(var(--spacing) * 0);\n  left: calc(var(--spacing) * 0);\n  z-index: 40;\n  background-color: color-mix(in srgb, oklch(1.00 0.00 0) 95%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    background-color: color-mix(in oklab, var(--color-base-100) 95%, transparent);\n  }\n  --tw-backdrop-blur: blur(var(--blur-md));\n  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n  border-top-style: var(--tw-border-style);\n  border-top-width: 1px;\n  border-color: var(--color-base-200);\n  padding-bottom: env(safe-area-inset-bottom, 0);\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\n}\n.dock-nav {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  height: 64px;\n}\n.dock-btn {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  height: 100%;\n  flex: 1;\n  color: color-mix(in srgb, oklch(0.20 0.02 286) 60%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n  }\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  min-width: 64px;\n  gap: 2px;\n}\n.dock-btn--active {\n  color: var(--color-primary);\n}\n.dock-icon {\n  height: calc(var(--spacing) * 6);\n  width: calc(var(--spacing) * 6);\n  transition-property: transform, translate, scale, rotate;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n}\n.dock-btn--active .dock-icon {\n  transform: translateY(-2px);\n}\n.dock-label {\n  font-size: var(--text-xs);\n  line-height: var(--tw-leading, var(--text-xs--line-height));\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n}\n.dock-indicator {\n  position: absolute;\n  bottom: calc(var(--spacing) * 0);\n  left: calc(1/2 * 100%);\n  --tw-translate-x: calc(calc(1/2 * 100%) * -1);\n  translate: var(--tw-translate-x) var(--tw-translate-y);\n  height: calc(var(--spacing) * 1);\n  width: calc(var(--spacing) * 12);\n  border-radius: calc(infinity * 1px);\n  background-color: var(--color-primary);\n  --tw-scale-x: 0%;\n  scale: var(--tw-scale-x) var(--tw-scale-y);\n  opacity: 0%;\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n}\n.dock-btn--active .dock-indicator {\n  --tw-scale-x: 100%;\n  scale: var(--tw-scale-x) var(--tw-scale-y);\n  opacity: 100%;\n}\n#dockSettingsBtn {\n  position: relative;\n}\n#dockSettingsBtn::before {\n  content: '';\n  position: absolute;\n  top: calc(var(--spacing) * 1);\n  right: calc(var(--spacing) * 1);\n  height: calc(var(--spacing) * 2);\n  width: calc(var(--spacing) * 2);\n  border-radius: calc(infinity * 1px);\n  background-color: var(--color-primary);\n  opacity: 70%;\n}\n#dockSettingsBtn .dock-icon {\n  color: color-mix(in srgb, oklch(0.63 0.22 268) 80%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    color: color-mix(in oklab, var(--color-primary) 80%, transparent);\n  }\n}\n.dock-btn:focus-visible {\n  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  --tw-ring-color: var(--color-primary);\n  --tw-ring-offset-width: 2px;\n  --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n  --tw-outline-style: none;\n  outline-style: none;\n}\n.dock-fab {\n  position: absolute;\n  top: calc(var(--spacing) * -6);\n  right: calc(var(--spacing) * 4);\n  height: calc(var(--spacing) * 14);\n  width: calc(var(--spacing) * 14);\n  background-color: var(--color-primary);\n  color: var(--color-primary-content);\n  border-radius: calc(infinity * 1px);\n  --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    @media (hover: hover) {\n      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n  &:active {\n    --tw-scale-x: 95%;\n    --tw-scale-y: 95%;\n    --tw-scale-z: 95%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);\n  }\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n}\n.dock-badge {\n  position: absolute;\n  top: calc(var(--spacing) * -1);\n  right: calc(var(--spacing) * -1);\n  height: calc(var(--spacing) * 5);\n  width: calc(var(--spacing) * 5);\n  background-color: var(--color-error);\n  color: var(--color-error-content);\n  border-radius: calc(infinity * 1px);\n  font-size: var(--text-xs);\n  line-height: var(--tw-leading, var(--text-xs--line-height));\n  --tw-font-weight: var(--font-weight-bold);\n  font-weight: var(--font-weight-bold);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  animation: var(--animate-pulse);\n}\n.mobile-nav {\n  position: fixed;\n  right: calc(var(--spacing) * 0);\n  bottom: calc(var(--spacing) * 0);\n  left: calc(var(--spacing) * 0);\n  z-index: 40;\n  border-top-style: var(--tw-border-style);\n  border-top-width: 2px;\n  border-color: var(--color-base-200);\n  background-color: var(--color-base-100);\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  height: calc(var(--mobile-touch-target) + var(--spacing-md));\n  padding-bottom: env(safe-area-inset-bottom, 0);\n  box-shadow: 0 -4px 16px rgba(0, 0, 0, 0.1);\n}\n.mobile-nav-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: calc(var(--spacing) * 12);\n  min-width: calc(var(--spacing) * 12);\n  padding: calc(var(--spacing) * 2);\n  font-size: var(--text-xs);\n  line-height: var(--tw-leading, var(--text-xs--line-height));\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n  position: relative;\n}\n.mobile-nav-item.active {\n  color: var(--color-primary);\n}\n.mobile-nav-item.active::before {\n  content: '';\n  position: absolute;\n  top: calc(var(--spacing) * 0);\n  left: calc(1/2 * 100%);\n  --tw-translate-x: calc(calc(1/2 * 100%) * -1);\n  translate: var(--tw-translate-x) var(--tw-translate-y);\n  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);\n  height: calc(var(--spacing) * 1);\n  width: calc(var(--spacing) * 8);\n  border-radius: calc(infinity * 1px);\n  background-color: var(--color-primary);\n}\n.loading-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--spacing-2xl);\n}\n.loading-grid {\n  display: grid;\n  gap: calc(var(--spacing) * 4);\n  grid-template-columns: repeat(auto-fit, minmax(min(300px, 100%), 1fr));\n}\n.loading-card {\n  border-radius: var(--radius-box);\n  background-color: var(--color-base-300);\n  @media (prefers-reduced-motion: reduce) {\n    transition-duration: 15s;\n  }\n  will-change: background-position;\n  animation: skeleton 1.8s ease-in-out infinite;\n  background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );\n  background-size: 200% auto;\n  background-repeat: no-repeat;\n  background-position-x: -50%;\n  background: linear-gradient(90deg,\n    var(--color-base-300) 25%,\n    var(--color-base-200) 50%,\n    var(--color-base-300) 75%);\n  background-size: 200% 100%;\n  animation: skeleton-shimmer 1.5s ease-in-out infinite;\n  border-radius: var(--radius-2xl);\n  height: 200px;\n  width: 100%;\n}\n.loading-message {\n  display: flex;\n  gap: calc(var(--spacing) * 3);\n  padding: calc(var(--spacing) * 4);\n}\n.loading-message .skeleton-avatar {\n  flex-shrink: 0;\n  border-radius: var(--radius-box);\n  background-color: var(--color-base-300);\n  @media (prefers-reduced-motion: reduce) {\n    transition-duration: 15s;\n  }\n  will-change: background-position;\n  animation: skeleton 1.8s ease-in-out infinite;\n  background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );\n  background-size: 200% auto;\n  background-repeat: no-repeat;\n  background-position-x: -50%;\n  background: linear-gradient(90deg,\n    var(--color-base-300) 25%,\n    var(--color-base-200) 50%,\n    var(--color-base-300) 75%);\n  background-size: 200% 100%;\n  animation: skeleton-shimmer 1.5s ease-in-out infinite;\n  border-radius: calc(infinity * 1px);\n  width: 40px;\n  height: 40px;\n}\n.loading-message .skeleton-content {\n  flex: 1;\n  :where(& > :not(:last-child)) {\n    --tw-space-y-reverse: 0;\n    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));\n    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));\n  }\n}\n.loading-message .skeleton-text:first-child {\n  width: 60%;\n}\n.loading-message .skeleton-text:last-child {\n  width: 80%;\n}\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--spacing-2xl);\n  text-align: center;\n  min-height: 300px;\n}\n.empty-state-icon {\n  margin-bottom: calc(var(--spacing) * 6);\n  height: calc(var(--spacing) * 24);\n  width: calc(var(--spacing) * 24);\n  color: color-mix(in srgb, oklch(0.20 0.02 286) 20%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    color: color-mix(in oklab, var(--color-base-content) 20%, transparent);\n  }\n  animation: mobile-pulse 2s infinite;\n}\n.empty-state-title {\n  font-size: var(--font-size-xl);\n  margin-bottom: calc(var(--spacing) * 3);\n  --tw-font-weight: var(--font-weight-semibold);\n  font-weight: var(--font-weight-semibold);\n  color: var(--color-base-content);\n}\n.empty-state-description {\n  margin-bottom: calc(var(--spacing) * 8);\n  color: color-mix(in srgb, oklch(0.20 0.02 286) 60%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n  }\n  max-width: 400px;\n  font-size: var(--font-size-base);\n  line-height: 1.6;\n}\n.empty-state-action {\n  :where(&) {\n    width: unset;\n  }\n  display: inline-flex;\n  flex-shrink: 0;\n  cursor: pointer;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: center;\n  gap: calc(0.25rem * 1.5);\n  text-align: center;\n  vertical-align: middle;\n  outline-offset: 2px;\n  webkit-user-select: none;\n  user-select: none;\n  padding-inline: var(--btn-p);\n  color: var(--btn-fg);\n  --tw-prose-links: var(--btn-fg);\n  height: var(--size);\n  font-size: var(--fontsize, 0.875rem);\n  font-weight: 600;\n  outline-color: var(--btn-color, var(--color-base-content));\n  transition-property: color, background-color, border-color, box-shadow;\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  transition-duration: 0.2s;\n  border-start-start-radius: var(--join-ss, var(--radius-field));\n  border-start-end-radius: var(--join-se, var(--radius-field));\n  border-end-start-radius: var(--join-es, var(--radius-field));\n  border-end-end-radius: var(--join-ee, var(--radius-field));\n  background-color: var(--btn-bg);\n  background-size: auto, calc(var(--noise) * 100%);\n  background-image: none, var(--btn-noise);\n  border-width: var(--border);\n  border-style: solid;\n  border-color: var(--btn-border);\n  text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));\n  touch-action: manipulation;\n  box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);\n  --size: calc(var(--size-field, 0.25rem) * 10);\n  --btn-bg: var(--btn-color, var(--color-base-200));\n  --btn-fg: var(--color-base-content);\n  --btn-p: 1rem;\n  --btn-border: var(--btn-bg);\n  @supports (color: color-mix(in lab, red, red)) {\n    --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));\n  }\n  --btn-shadow: 0 3px 2px -2px var(--btn-bg),\n    0 4px 3px -2px var(--btn-bg);\n  @supports (color: color-mix(in lab, red, red)) {\n    --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),\n    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);\n  }\n  --btn-noise: var(--fx-noise);\n  .prose & {\n    text-decoration-line: none;\n  }\n  @media (hover: hover) {\n    &:hover {\n      --btn-bg: var(--btn-color, oklch(0.95 0.01 286));\n      @supports (color: color-mix(in lab, red, red)) {\n        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);\n      }\n    }\n  }\n  &:focus-visible {\n    outline-width: 2px;\n    outline-style: solid;\n    isolation: isolate;\n  }\n  &:active:not(.btn-active) {\n    translate: 0 0.5px;\n    --btn-bg: var(--btn-color, oklch(0.95 0.01 286));\n    @supports (color: color-mix(in lab, red, red)) {\n      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);\n    }\n    --btn-border: var(--btn-color, oklch(0.95 0.01 286));\n    @supports (color: color-mix(in lab, red, red)) {\n      --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);\n    }\n    --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);\n  }\n  &:is(:disabled, [disabled], .btn-disabled) {\n    &:not(.btn-link, .btn-ghost) {\n      background-color: color-mix(in srgb, oklch(0.20 0.02 286) 10%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);\n      }\n      box-shadow: none;\n    }\n    pointer-events: none;\n    --btn-border: #0000;\n    --btn-noise: none;\n    --btn-fg: color-mix(in srgb, oklch(0.20 0.02 286) 20%, #0000);\n    @supports (color: color-mix(in lab, red, red)) {\n      --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);\n    }\n    @media (hover: hover) {\n      &:hover {\n        pointer-events: none;\n        background-color: var(--color-neutral);\n        @supports (color: color-mix(in lab, red, red)) {\n          background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);\n        }\n        --btn-border: #0000;\n        --btn-fg: color-mix(in srgb, oklch(0.20 0.02 286) 20%, #0000);\n        @supports (color: color-mix(in lab, red, red)) {\n          --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);\n        }\n      }\n    }\n  }\n  &:is(input[type=\"checkbox\"], input[type=\"radio\"]) {\n    appearance: none;\n    &::after {\n      content: attr(aria-label);\n    }\n  }\n  &:where(input:checked:not(.filter .btn)) {\n    --btn-color: var(--color-primary);\n    --btn-fg: var(--color-primary-content);\n    isolation: isolate;\n  }\n  display: inline-flex;\n  min-height: calc(var(--spacing) * 12);\n  min-width: calc(var(--spacing) * 12);\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-lg);\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n  border-color: transparent;\n  padding-inline: calc(var(--spacing) * 4);\n  padding-block: calc(var(--spacing) * 2);\n  --tw-font-weight: var(--font-weight-medium);\n  font-weight: var(--font-weight-medium);\n  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n  min-height: calc(var(--spacing) * 14);\n  padding-inline: calc(var(--spacing) * 6);\n  padding-block: calc(var(--spacing) * 3);\n  font-size: var(--text-lg);\n  line-height: var(--tw-leading, var(--text-lg--line-height));\n  background-color: var(--color-primary);\n  color: var(--color-primary-content);\n  &:hover {\n    @media (hover: hover) {\n      background-color: color-mix(in srgb, oklch(0.63 0.22 268) 90%, transparent);\n      @supports (color: color-mix(in lab, red, red)) {\n        background-color: color-mix(in oklab, var(--color-primary) 90%, transparent);\n      }\n    }\n  }\n  --fontsize: 1.125rem;\n  --btn-p: 1.25rem;\n  --size: calc(var(--size-field, 0.25rem) * 12);\n  --btn-color: var(--color-primary);\n  --btn-fg: var(--color-primary-content);\n  --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  &:hover {\n    @media (hover: hover) {\n      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n}\n.project-fab {\n  position: fixed;\n  z-index: 30;\n  bottom: calc(env(safe-area-inset-bottom, 0) + var(--spacing-lg) + 60px);\n  right: var(--spacing-lg);\n  height: calc(var(--spacing) * 14);\n  width: calc(var(--spacing) * 14);\n  background-color: var(--color-primary);\n  color: var(--color-primary-content);\n  border-radius: calc(infinity * 1px);\n  --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  &:hover {\n    @media (hover: hover) {\n      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 300ms;\n  transition-duration: 300ms;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.project-fab:active {\n  --tw-scale-x: 95%;\n  --tw-scale-y: 95%;\n  --tw-scale-z: 95%;\n  scale: var(--tw-scale-x) var(--tw-scale-y);\n}\n.project-fab.reminder-pulse {\n  animation: fab-pulse 2s ease-in-out 3;\n}\n@keyframes fab-pulse {\n  0% {\n    transform: scale(1);\n    box-shadow: 0 0 0 0 rgba(0, 132, 255, 0.4);\n  }\n  50% {\n    transform: scale(1.05);\n    box-shadow: 0 0 0 20px rgba(0, 132, 255, 0);\n  }\n  100% {\n    transform: scale(1);\n    box-shadow: 0 0 0 0 rgba(0, 132, 255, 0.4);\n  }\n}\n@media (max-width: 640px) {\n  .mobile-stack {\n    display: flex;\n    flex-direction: column;\n    gap: var(--spacing-md);\n  }\n  .mobile-full {\n    width: 100%;\n    max-width: none;\n  }\n  .mobile-hide {\n    display: none;\n  }\n  .mobile-p-safe {\n    padding-left: max(var(--spacing-md), env(safe-area-inset-left));\n    padding-right: max(var(--spacing-md), env(safe-area-inset-right));\n  }\n}\n.pull-indicator {\n  position: absolute;\n  top: calc(var(--spacing) * 0);\n  right: calc(var(--spacing) * 0);\n  left: calc(var(--spacing) * 0);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--text-sm);\n  line-height: var(--tw-leading, var(--text-sm--line-height));\n  color: color-mix(in srgb, oklch(0.20 0.02 286) 60%, transparent);\n  @supports (color: color-mix(in lab, red, red)) {\n    color: color-mix(in oklab, var(--color-base-content) 60%, transparent);\n  }\n  transition-property: all;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 300ms;\n  transition-duration: 300ms;\n  height: 60px;\n  transform: translateY(-60px);\n  z-index: -1;\n}\n.pull-indicator.visible {\n  opacity: 100%;\n}\n.mobile-loading-indicator {\n  height: calc(var(--spacing) * 5);\n  width: calc(var(--spacing) * 5);\n  border-style: var(--tw-border-style);\n  border-width: 2px;\n  border-color: currentcolor;\n  animation: var(--animate-spin);\n  border-radius: calc(infinity * 1px);\n  border-top-color: transparent;\n}\n.gpu-accelerated {\n  transform: translateZ(0);\n  will-change: transform;\n  -webkit-transform: translateZ(0);\n  -webkit-backface-visibility: hidden;\n}\n.smooth-scroll {\n  scroll-behavior: smooth;\n  -webkit-overflow-scrolling: touch;\n  overscroll-behavior: contain;\n}\n.sr-only {\n  position: absolute;\n  margin: -1px;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  padding: calc(var(--spacing) * 0);\n  border-style: var(--tw-border-style);\n  border-width: 0px;\n  white-space: nowrap;\n  clip: rect(0, 0, 0, 0);\n}\n.focus-visible:focus {\n  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  --tw-ring-color: var(--color-primary);\n  --tw-ring-offset-width: 2px;\n  --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n  --tw-outline-style: none;\n  outline-style: none;\n}\n.skip-to-content {\n  position: absolute;\n  top: calc(var(--spacing) * 0);\n  left: calc(var(--spacing) * 0);\n  z-index: 50;\n  background-color: var(--color-primary);\n  color: var(--color-primary-content);\n  border-bottom-right-radius: var(--radius-lg);\n  padding-inline: calc(var(--spacing) * 4);\n  padding-block: calc(var(--spacing) * 2);\n  --tw-translate-y: -100%;\n  translate: var(--tw-translate-x) var(--tw-translate-y);\n  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);\n  transition-property: transform, translate, scale, rotate;\n  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n  transition-duration: var(--tw-duration, var(--default-transition-duration));\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n}\n.skip-to-content:focus {\n  --tw-translate-y: calc(var(--spacing) * 0);\n  translate: var(--tw-translate-x) var(--tw-translate-y);\n}\n.skip-to-content:focus-visible {\n  --tw-translate-y: calc(var(--spacing) * 0);\n  translate: var(--tw-translate-x) var(--tw-translate-y);\n}\nbody.with-sidebar-open {\n  overflow: hidden;\n}\n@media (min-width: 1024px) {\n  body.with-sidebar-open {\n    overflow: auto;\n  }\n}\n.btn-circle {\n  border-radius: 50% !important;\n}\n.h-10 {\n  height: 40px !important;\n}\n.w-10 {\n  width: 40px !important;\n}\n@layer base {\n  @media (prefers-color-scheme: dark) {\n    :root: undefined;\n  }\n}\n@layer base {\n  @property --radialprogress {\n    syntax: \"<percentage>\";\n    inherits: true;\n    initial-value: 0%;\n  }\n}\n@layer base {\n  :root {\n    scrollbar-color: currentColor #0000;\n    @supports (color: color-mix(in lab, red, red)) {\n      scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;\n    }\n  }\n}\n@layer base {\n  :root {\n    --fx-noise: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E\");\n  }\n}\n@layer base {\n  :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*=\"drawer-open\"]) > .drawer-toggle:checked ) {\n    overflow: hidden;\n  }\n}\n@layer base {\n  :where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {\n    scrollbar-gutter: stable;\n    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));\n    --root-bg: color-mix(in srgb, oklch(1.00 0.00 0), oklch(0% 0 0) 40%);\n    @supports (color: color-mix(in lab, red, red)) {\n      --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);\n    }\n  }\n  :where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(.modal-start, .modal-end) {\n    scrollbar-gutter: stable;\n  }\n}\n@layer base {\n  :root, [data-theme] {\n    background-color: var(--root-bg, var(--color-base-100));\n    color: var(--color-base-content);\n  }\n}\n@keyframes radio {\n  0% {\n    padding: 5px;\n  }\n  50% {\n    padding: 3px;\n  }\n}\n@keyframes skeleton {\n  0% {\n    background-position: 150%;\n  }\n  100% {\n    background-position: -50%;\n  }\n}\n@keyframes progress {\n  50% {\n    background-position-x: -115%;\n  }\n}\n@keyframes toast {\n  0% {\n    scale: 0.9;\n    opacity: 0;\n  }\n  100% {\n    scale: 1;\n    opacity: 1;\n  }\n}\n@keyframes dropdown {\n  0% {\n    opacity: 0;\n  }\n}\n@keyframes rating {\n  0%, 40% {\n    scale: 1.1;\n    filter: brightness(1.05) contrast(1.05);\n  }\n}\n@property --tw-border-style {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: solid;\n}\n@property --tw-font-weight {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-duration {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-translate-x {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-translate-y {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-translate-z {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-rotate-x {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-rotate-y {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-rotate-z {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-skew-x {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-skew-y {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-space-y-reverse {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-space-x-reverse {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-gradient-position {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-gradient-from {\n  syntax: \"<color>\";\n  inherits: false;\n  initial-value: #0000;\n}\n@property --tw-gradient-via {\n  syntax: \"<color>\";\n  inherits: false;\n  initial-value: #0000;\n}\n@property --tw-gradient-to {\n  syntax: \"<color>\";\n  inherits: false;\n  initial-value: #0000;\n}\n@property --tw-gradient-stops {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-gradient-via-stops {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-gradient-from-position {\n  syntax: \"<length-percentage>\";\n  inherits: false;\n  initial-value: 0%;\n}\n@property --tw-gradient-via-position {\n  syntax: \"<length-percentage>\";\n  inherits: false;\n  initial-value: 50%;\n}\n@property --tw-gradient-to-position {\n  syntax: \"<length-percentage>\";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-leading {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-shadow {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-shadow-color {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-shadow-alpha {\n  syntax: \"<percentage>\";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-inset-shadow {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-inset-shadow-color {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-inset-shadow-alpha {\n  syntax: \"<percentage>\";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-ring-color {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-ring-shadow {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-inset-ring-color {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-inset-ring-shadow {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-ring-inset {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-ring-offset-width {\n  syntax: \"<length>\";\n  inherits: false;\n  initial-value: 0px;\n}\n@property --tw-ring-offset-color {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: #fff;\n}\n@property --tw-ring-offset-shadow {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-outline-style {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: solid;\n}\n@property --tw-blur {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-brightness {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-contrast {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-grayscale {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-hue-rotate {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-invert {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-opacity {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-saturate {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-sepia {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-drop-shadow {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-drop-shadow-color {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-drop-shadow-alpha {\n  syntax: \"<percentage>\";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-drop-shadow-size {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-blur {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-brightness {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-contrast {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-grayscale {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-hue-rotate {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-invert {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-opacity {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-saturate {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-backdrop-sepia {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-ease {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-scale-x {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 1;\n}\n@property --tw-scale-y {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 1;\n}\n@property --tw-scale-z {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: 1;\n}\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n@keyframes pulse {\n  50% {\n    opacity: 0.5;\n  }\n}\n@layer properties {\n  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {\n    *, ::before, ::after, ::backdrop {\n      --tw-border-style: solid;\n      --tw-font-weight: initial;\n      --tw-duration: initial;\n      --tw-translate-x: 0;\n      --tw-translate-y: 0;\n      --tw-translate-z: 0;\n      --tw-rotate-x: initial;\n      --tw-rotate-y: initial;\n      --tw-rotate-z: initial;\n      --tw-skew-x: initial;\n      --tw-skew-y: initial;\n      --tw-space-y-reverse: 0;\n      --tw-space-x-reverse: 0;\n      --tw-gradient-position: initial;\n      --tw-gradient-from: #0000;\n      --tw-gradient-via: #0000;\n      --tw-gradient-to: #0000;\n      --tw-gradient-stops: initial;\n      --tw-gradient-via-stops: initial;\n      --tw-gradient-from-position: 0%;\n      --tw-gradient-via-position: 50%;\n      --tw-gradient-to-position: 100%;\n      --tw-leading: initial;\n      --tw-shadow: 0 0 #0000;\n      --tw-shadow-color: initial;\n      --tw-shadow-alpha: 100%;\n      --tw-inset-shadow: 0 0 #0000;\n      --tw-inset-shadow-color: initial;\n      --tw-inset-shadow-alpha: 100%;\n      --tw-ring-color: initial;\n      --tw-ring-shadow: 0 0 #0000;\n      --tw-inset-ring-color: initial;\n      --tw-inset-ring-shadow: 0 0 #0000;\n      --tw-ring-inset: initial;\n      --tw-ring-offset-width: 0px;\n      --tw-ring-offset-color: #fff;\n      --tw-ring-offset-shadow: 0 0 #0000;\n      --tw-outline-style: solid;\n      --tw-blur: initial;\n      --tw-brightness: initial;\n      --tw-contrast: initial;\n      --tw-grayscale: initial;\n      --tw-hue-rotate: initial;\n      --tw-invert: initial;\n      --tw-opacity: initial;\n      --tw-saturate: initial;\n      --tw-sepia: initial;\n      --tw-drop-shadow: initial;\n      --tw-drop-shadow-color: initial;\n      --tw-drop-shadow-alpha: 100%;\n      --tw-drop-shadow-size: initial;\n      --tw-backdrop-blur: initial;\n      --tw-backdrop-brightness: initial;\n      --tw-backdrop-contrast: initial;\n      --tw-backdrop-grayscale: initial;\n      --tw-backdrop-hue-rotate: initial;\n      --tw-backdrop-invert: initial;\n      --tw-backdrop-opacity: initial;\n      --tw-backdrop-saturate: initial;\n      --tw-backdrop-sepia: initial;\n      --tw-ease: initial;\n      --tw-scale-x: 1;\n      --tw-scale-y: 1;\n      --tw-scale-z: 1;\n    }\n  }\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1077,
          "bodySize": 201708,
          "_transferSize": 202785,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:31.966Z",
        "time": 306.2430000026375,
        "timings": {
          "blocked": 1.109000002592802,
          "dns": 0.01100000000000001,
          "ssl": -1,
          "connect": 0.4740000000000001,
          "send": 0.16799999999999993,
          "wait": 224.68899999595433,
          "receive": 79.79200000409037,
          "_blocked_queueing": 0.45900000259280205,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126344",
        "_initiator": {
          "type": "parser",
          "url": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b",
          "lineNumber": 381
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/vendor/dompurify-global.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1508,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "721"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:27 GMT"
            },
            {
              "name": "etag",
              "value": "\"6229c2ef5f09e5ba0ecee1c73848dc71\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 25 May 2025 06:41:59 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 721,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "import DOMPurify from './dompurify.es.js';\n\n// Immediately attach to window for app.js compatibility (needed when loaded via <script type=\"module\">)\nif (typeof window !== 'undefined') {\n  window.DOMPurify = DOMPurify;\n}\n\nexport function createDOMPurifyGlobal({ browserService }) {\n  if (!browserService) {\n    throw new Error('[dompurify-global] Missing browserService dependency');\n  }\n\n  const window = browserService.getWindow();\n  if (window) {\n    window.DOMPurify = DOMPurify;\n  }\n\n  return {\n    DOMPurify,\n    cleanup() {\n      // Remove global if needed during cleanup\n      const window = browserService.getWindow();\n      if (window && window.DOMPurify) {\n        delete window.DOMPurify;\n      }\n    }\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1187,
          "bodySize": 721,
          "_transferSize": 1908,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:31.966Z",
        "time": 222.82099999963773,
        "timings": {
          "blocked": 1.4130000073425473,
          "dns": 0.010000000000000009,
          "ssl": -1,
          "connect": 0.3770000000000001,
          "send": 0.1529999999999998,
          "wait": 220.4629999934314,
          "receive": 0.40499999886378646,
          "_blocked_queueing": 0.5590000073425472,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "125374",
        "_initiator": {
          "type": "parser",
          "url": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b",
          "lineNumber": 216
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "browser.sentry-cdn.com"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/7.100.0/bundle.tracing.replay.min.js"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "priority",
              "value": "u=1"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "script"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "age",
              "value": "2250435"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "content-length",
              "value": "70064"
            },
            {
              "name": "content-type",
              "value": "application/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"986b7a246339f1eacc5f3a7fb007b5cd\""
            },
            {
              "name": "expires",
              "value": "Thu, 23 Apr 2026 00:45:25 GMT"
            },
            {
              "name": "last-modified",
              "value": "Tue, 06 Feb 2024 15:52:33 GMT"
            },
            {
              "name": "server",
              "value": "Fastly"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            }
          ],
          "cookies": [],
          "content": {
            "size": 220492,
            "mimeType": "application/javascript",
            "text": "/*! @sentry/browser & @sentry/tracing & @sentry/replay 7.100.0 (17f4c20) | https://github.com/getsentry/sentry-javascript */\nvar Sentry=function(t){const e=Object.prototype.toString;function n(t){switch(e.call(t)){case\"[object Error]\":case\"[object Exception]\":case\"[object DOMException]\":return!0;default:return d(t,Error)}}function r(t,n){return e.call(t)===`[object ${n}]`}function s(t){return r(t,\"ErrorEvent\")}function i(t){return r(t,\"DOMError\")}function o(t){return r(t,\"String\")}function a(t){return\"object\"==typeof t&&null!==t&&\"__sentry_template_string__\"in t&&\"__sentry_template_values__\"in t}function c(t){return null===t||a(t)||\"object\"!=typeof t&&\"function\"!=typeof t}function u(t){return r(t,\"Object\")}function l(t){return\"undefined\"!=typeof Event&&d(t,Event)}function h(t){return Boolean(t&&t.then&&\"function\"==typeof t.then)}function f(t){return\"number\"==typeof t&&t!=t}function d(t,e){try{return t instanceof e}catch(t){return!1}}function p(t){return!(\"object\"!=typeof t||null===t||!t.__isVue&&!t.t)}function m(t,e=0){return\"string\"!=typeof t||0===e||t.length<=e?t:`${t.slice(0,e)}...`}function y(t,e){if(!Array.isArray(t))return\"\";const n=[];for(let e=0;e<t.length;e++){const r=t[e];try{p(r)?n.push(\"[VueViewModel]\"):n.push(String(r))}catch(t){n.push(\"[value cannot be serialized]\")}}return n.join(e)}function g(t,e,n=!1){return!!o(t)&&(r(e,\"RegExp\")?e.test(t):!!o(e)&&(n?t===e:t.includes(e)))}function v(t,e=[],n=!1){return e.some((e=>g(t,e,n)))}function b(t,e,n=250,r,s,i,o){if(!(i.exception&&i.exception.values&&o&&d(o.originalException,Error)))return;const a=i.exception.values.length>0?i.exception.values[i.exception.values.length-1]:void 0;var c,u;a&&(i.exception.values=(c=k(t,e,s,o.originalException,r,i.exception.values,a,0),u=n,c.map((t=>(t.value&&(t.value=m(t.value,u)),t)))))}function k(t,e,n,r,s,i,o,a){if(i.length>=n+1)return i;let c=[...i];if(d(r[s],Error)){w(o,a);const i=t(e,r[s]),u=c.length;S(i,s,u,a),c=k(t,e,n,r[s],s,[i,...c],i,u)}return Array.isArray(r.errors)&&r.errors.forEach(((r,i)=>{if(d(r,Error)){w(o,a);const u=t(e,r),l=c.length;S(u,`errors[${i}]`,l,a),c=k(t,e,n,r,s,[u,...c],u,l)}})),c}function w(t,e){t.mechanism=t.mechanism||{type:\"generic\",handled:!0},t.mechanism={...t.mechanism,is_exception_group:!0,exception_id:e}}function S(t,e,n,r){t.mechanism=t.mechanism||{type:\"generic\",handled:!0},t.mechanism={...t.mechanism,type:\"chained\",source:e,exception_id:n,parent_id:r}}function T(t){return t&&t.Math==Math?t:void 0}const _=\"object\"==typeof globalThis&&T(globalThis)||\"object\"==typeof window&&T(window)||\"object\"==typeof self&&T(self)||\"object\"==typeof global&&T(global)||function(){return this}()||{};function x(){return _}function I(t,e,n){const r=n||_,s=r.__SENTRY__=r.__SENTRY__||{};return s[t]||(s[t]=e())}const C=x();function E(t,e={}){if(!t)return\"<unknown>\";try{let n=t;const r=5,s=[];let i=0,o=0;const a=\" > \",c=a.length;let u;const l=Array.isArray(e)?e:e.keyAttrs,h=!Array.isArray(e)&&e.maxStringLength||80;for(;n&&i++<r&&(u=O(n,l),!(\"html\"===u||i>1&&o+s.length*c+u.length>=h));)s.push(u),o+=u.length,n=n.parentNode;return s.reverse().join(a)}catch(t){return\"<unknown>\"}}function O(t,e){const n=t,r=[];let s,i,a,c,u;if(!n||!n.tagName)return\"\";if(C.HTMLElement&&n instanceof HTMLElement&&n.dataset&&n.dataset.sentryComponent)return n.dataset.sentryComponent;r.push(n.tagName.toLowerCase());const l=e&&e.length?e.filter((t=>n.getAttribute(t))).map((t=>[t,n.getAttribute(t)])):null;if(l&&l.length)l.forEach((t=>{r.push(`[${t[0]}=\"${t[1]}\"]`)}));else if(n.id&&r.push(`#${n.id}`),s=n.className,s&&o(s))for(i=s.split(/\\s+/),u=0;u<i.length;u++)r.push(`.${i[u]}`);const h=[\"aria-label\",\"type\",\"name\",\"title\",\"alt\"];for(u=0;u<h.length;u++)a=h[u],c=n.getAttribute(a),c&&r.push(`[${a}=\"${c}\"]`);return r.join(\"\")}function A(t){if(!C.HTMLElement)return null;let e=t;for(let t=0;t<5;t++){if(!e)return null;if(e instanceof HTMLElement&&e.dataset.sentryComponent)return e.dataset.sentryComponent;e=e.parentNode}return null}const R=[\"debug\",\"info\",\"warn\",\"error\",\"log\",\"assert\",\"trace\"],M={};function D(t){if(!(\"console\"in _))return t();const e=_.console,n={},r=Object.keys(M);r.forEach((t=>{const r=M[t];n[t]=e[t],e[t]=r}));try{return t()}finally{r.forEach((t=>{e[t]=n[t]}))}}const $=function(){let t=!1;const e={enable:()=>{t=!0},disable:()=>{t=!1},isEnabled:()=>t};return R.forEach((t=>{e[t]=()=>{}})),e}(),L=/^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;function j(t,e=!1){const{host:n,path:r,pass:s,port:i,projectId:o,protocol:a,publicKey:c}=t;return`${a}://${c}${e&&s?`:${s}`:\"\"}@${n}${i?`:${i}`:\"\"}/${r?`${r}/`:r}${o}`}function F(t){return{protocol:t.protocol,publicKey:t.publicKey||\"\",pass:t.pass||\"\",host:t.host,port:t.port||\"\",path:t.path||\"\",projectId:t.projectId}}function N(t){const e=\"string\"==typeof t?function(t){const e=L.exec(t);if(!e)return void D((()=>{console.error(`Invalid Sentry Dsn: ${t}`)}));const[n,r,s=\"\",i,o=\"\",a]=e.slice(1);let c=\"\",u=a;const l=u.split(\"/\");if(l.length>1&&(c=l.slice(0,-1).join(\"/\"),u=l.pop()),u){const t=u.match(/^\\d+/);t&&(u=t[0])}return F({host:i,pass:s,path:c,projectId:u,port:o,protocol:n,publicKey:r})}(t):F(t);if(e)return e}class P extends Error{constructor(t,e=\"warn\"){super(t),this.message=t,this.name=new.target.prototype.constructor.name,Object.setPrototypeOf(this,new.target.prototype),this.logLevel=e}}function B(t,e,n){if(!(e in t))return;const r=t[e],s=n(r);\"function\"==typeof s&&z(s,r),t[e]=s}function U(t,e,n){try{Object.defineProperty(t,e,{value:n,writable:!0,configurable:!0})}catch(t){}}function z(t,e){try{const n=e.prototype||{};t.prototype=e.prototype=n,U(t,\"__sentry_original__\",e)}catch(t){}}function H(t){return t.__sentry_original__}function q(t){if(n(t))return{message:t.message,name:t.name,stack:t.stack,...K(t)};if(l(t)){const e={type:t.type,target:W(t.target),currentTarget:W(t.currentTarget),...K(t)};return\"undefined\"!=typeof CustomEvent&&d(t,CustomEvent)&&(e.detail=t.detail),e}return t}function W(t){try{return e=t,\"undefined\"!=typeof Element&&d(e,Element)?E(t):Object.prototype.toString.call(t)}catch(t){return\"<unknown>\"}var e}function K(t){if(\"object\"==typeof t&&null!==t){const e={};for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}return{}}function J(t){return X(t,new Map)}function X(t,e){if(function(t){if(!u(t))return!1;try{const e=Object.getPrototypeOf(t).constructor.name;return!e||\"Object\"===e}catch(t){return!0}}(t)){const n=e.get(t);if(void 0!==n)return n;const r={};e.set(t,r);for(const n of Object.keys(t))void 0!==t[n]&&(r[n]=X(t[n],e));return r}if(Array.isArray(t)){const n=e.get(t);if(void 0!==n)return n;const r=[];return e.set(t,r),t.forEach((t=>{r.push(X(t,e))})),r}return t}const G=/\\(error: (.*)\\)/,Y=/captureMessage|captureException/;function V(...t){const e=t.sort(((t,e)=>t[0]-e[0])).map((t=>t[1]));return(t,n=0)=>{const r=[],s=t.split(\"\\n\");for(let t=n;t<s.length;t++){const n=s[t];if(n.length>1024)continue;const i=G.test(n)?n.replace(G,\"$1\"):n;if(!i.match(/\\S*Error: /)){for(const t of e){const e=t(i);if(e){r.push(e);break}}if(r.length>=50)break}}return function(t){if(!t.length)return[];const e=Array.from(t);/sentryWrapped/.test(e[e.length-1].function||\"\")&&e.pop();e.reverse(),Y.test(e[e.length-1].function||\"\")&&(e.pop(),Y.test(e[e.length-1].function||\"\")&&e.pop());return e.slice(0,50).map((t=>({...t,filename:t.filename||e[e.length-1].filename,function:t.function||\"?\"})))}(r)}}const Q=\"<anonymous>\";function Z(t){try{return t&&\"function\"==typeof t&&t.name||Q}catch(t){return Q}}const tt={},et={};function nt(t,e){tt[t]=tt[t]||[],tt[t].push(e)}function rt(t,e){et[t]||(e(),et[t]=!0)}function st(t,e){const n=t&&tt[t];if(n)for(const t of n)try{t(e)}catch(t){}}function it(){\"console\"in _&&R.forEach((function(t){t in _.console&&B(_.console,t,(function(e){return M[t]=e,function(...e){st(\"console\",{args:e,level:t});const n=M[t];n&&n.apply(_.console,e)}}))}))}function ot(){const t=_,e=t.crypto||t.msCrypto;let n=()=>16*Math.random();try{if(e&&e.randomUUID)return e.randomUUID().replace(/-/g,\"\");e&&e.getRandomValues&&(n=()=>{const t=new Uint8Array(1);return e.getRandomValues(t),t[0]})}catch(t){}return([1e7]+1e3+4e3+8e3+1e11).replace(/[018]/g,(t=>(t^(15&n())>>t/4).toString(16)))}function at(t){return t.exception&&t.exception.values?t.exception.values[0]:void 0}function ct(t){const{message:e,event_id:n}=t;if(e)return e;const r=at(t);return r?r.type&&r.value?`${r.type}: ${r.value}`:r.type||r.value||n||\"<unknown>\":n||\"<unknown>\"}function ut(t,e,n){const r=t.exception=t.exception||{},s=r.values=r.values||[],i=s[0]=s[0]||{};i.value||(i.value=e||\"\"),i.type||(i.type=n||\"Error\")}function lt(t,e){const n=at(t);if(!n)return;const r=n.mechanism;if(n.mechanism={type:\"generic\",handled:!0,...r,...e},e&&\"data\"in e){const t={...r&&r.data,...e.data};n.mechanism.data=t}}function ht(t){if(t&&t.__sentry_captured__)return!0;try{U(t,\"__sentry_captured__\",!0)}catch(t){}return!1}function ft(t){return Array.isArray(t)?t:[t]}const dt=_;let pt,mt,yt;function gt(t){nt(\"dom\",t),rt(\"dom\",vt)}function vt(){if(!dt.document)return;const t=st.bind(null,\"dom\"),e=bt(t,!0);dt.document.addEventListener(\"click\",e,!1),dt.document.addEventListener(\"keypress\",e,!1),[\"EventTarget\",\"Node\"].forEach((e=>{const n=dt[e]&&dt[e].prototype;n&&n.hasOwnProperty&&n.hasOwnProperty(\"addEventListener\")&&(B(n,\"addEventListener\",(function(e){return function(n,r,s){if(\"click\"===n||\"keypress\"==n)try{const r=this,i=r.__sentry_instrumentation_handlers__=r.__sentry_instrumentation_handlers__||{},o=i[n]=i[n]||{refCount:0};if(!o.handler){const r=bt(t);o.handler=r,e.call(this,n,r,s)}o.refCount++}catch(t){}return e.call(this,n,r,s)}})),B(n,\"removeEventListener\",(function(t){return function(e,n,r){if(\"click\"===e||\"keypress\"==e)try{const n=this,s=n.__sentry_instrumentation_handlers__||{},i=s[e];i&&(i.refCount--,i.refCount<=0&&(t.call(this,e,i.handler,r),i.handler=void 0,delete s[e]),0===Object.keys(s).length&&delete n.__sentry_instrumentation_handlers__)}catch(t){}return t.call(this,e,n,r)}})))}))}function bt(t,e=!1){return n=>{if(!n||n._sentryCaptured)return;const r=function(t){try{return t.target}catch(t){return null}}(n);if(function(t,e){return\"keypress\"===t&&(!e||!e.tagName||\"INPUT\"!==e.tagName&&\"TEXTAREA\"!==e.tagName&&!e.isContentEditable)}(n.type,r))return;U(n,\"_sentryCaptured\",!0),r&&!r._sentryId&&U(r,\"_sentryId\",ot());const s=\"keypress\"===n.type?\"input\":n.type;if(!function(t){if(t.type!==mt)return!1;try{if(!t.target||t.target._sentryId!==yt)return!1}catch(t){}return!0}(n)){t({event:n,name:s,global:e}),mt=n.type,yt=r?r._sentryId:void 0}clearTimeout(pt),pt=dt.setTimeout((()=>{yt=void 0,mt=void 0}),1e3)}}const kt=x();function wt(){if(!(\"fetch\"in kt))return!1;try{return new Headers,new Request(\"http://www.example.com\"),new Response,!0}catch(t){return!1}}function St(t){return t&&/^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(t.toString())}function Tt(t){const e=\"fetch\";nt(e,t),rt(e,_t)}function _t(){(function(){if(\"string\"==typeof EdgeRuntime)return!0;if(!wt())return!1;if(St(kt.fetch))return!0;let t=!1;const e=kt.document;if(e&&\"function\"==typeof e.createElement)try{const n=e.createElement(\"iframe\");n.hidden=!0,e.head.appendChild(n),n.contentWindow&&n.contentWindow.fetch&&(t=St(n.contentWindow.fetch)),e.head.removeChild(n)}catch(t){}return t})()&&B(_,\"fetch\",(function(t){return function(...e){const{method:n,url:r}=function(t){if(0===t.length)return{method:\"GET\",url:\"\"};if(2===t.length){const[e,n]=t;return{url:It(e),method:xt(n,\"method\")?String(n.method).toUpperCase():\"GET\"}}const e=t[0];return{url:It(e),method:xt(e,\"method\")?String(e.method).toUpperCase():\"GET\"}}(e),s={args:e,fetchData:{method:n,url:r},startTimestamp:Date.now()};return st(\"fetch\",{...s}),t.apply(_,e).then((t=>(st(\"fetch\",{...s,endTimestamp:Date.now(),response:t}),t)),(t=>{throw st(\"fetch\",{...s,endTimestamp:Date.now(),error:t}),t}))}}))}function xt(t,e){return!!t&&\"object\"==typeof t&&!!t[e]}function It(t){return\"string\"==typeof t?t:t?xt(t,\"url\")?t.url:t.toString?t.toString():\"\":\"\"}let Ct=null;function Et(t){const e=\"error\";nt(e,t),rt(e,Ot)}function Ot(){Ct=_.onerror,_.onerror=function(t,e,n,r,s){const i={column:r,error:s,line:n,msg:t,url:e};return st(\"error\",i),!(!Ct||Ct.__SENTRY_LOADER__)&&Ct.apply(this,arguments)},_.onerror.__SENTRY_INSTRUMENTED__=!0}let At=null;function Rt(t){const e=\"unhandledrejection\";nt(e,t),rt(e,Mt)}function Mt(){At=_.onunhandledrejection,_.onunhandledrejection=function(t){const e=t;return st(\"unhandledrejection\",e),!(At&&!At.__SENTRY_LOADER__)||At.apply(this,arguments)},_.onunhandledrejection.__SENTRY_INSTRUMENTED__=!0}const Dt=x();const $t=_;let Lt;function jt(t){const e=\"history\";nt(e,t),rt(e,Ft)}function Ft(){if(!function(){const t=Dt.chrome,e=t&&t.app&&t.app.runtime,n=\"history\"in Dt&&!!Dt.history.pushState&&!!Dt.history.replaceState;return!e&&n}())return;const t=$t.onpopstate;function e(t){return function(...e){const n=e.length>2?e[2]:void 0;if(n){const t=Lt,e=String(n);Lt=e;st(\"history\",{from:t,to:e})}return t.apply(this,e)}}$t.onpopstate=function(...e){const n=$t.location.href,r=Lt;Lt=n;if(st(\"history\",{from:r,to:n}),t)try{return t.apply(this,e)}catch(t){}},B($t.history,\"pushState\",e),B($t.history,\"replaceState\",e)}const Nt=_;function Pt(t){nt(\"xhr\",t),rt(\"xhr\",Bt)}function Bt(){if(!Nt.XMLHttpRequest)return;const t=XMLHttpRequest.prototype;B(t,\"open\",(function(t){return function(...e){const n=Date.now(),r=o(e[0])?e[0].toUpperCase():void 0,s=function(t){if(o(t))return t;try{return t.toString()}catch(t){}return}(e[1]);if(!r||!s)return t.apply(this,e);this.__sentry_xhr_v3__={method:r,url:s,request_headers:{}},\"POST\"===r&&s.match(/sentry_key/)&&(this.__sentry_own_request__=!0);const i=()=>{const t=this.__sentry_xhr_v3__;if(t&&4===this.readyState){try{t.status_code=this.status}catch(t){}st(\"xhr\",{args:[r,s],endTimestamp:Date.now(),startTimestamp:n,xhr:this})}};return\"onreadystatechange\"in this&&\"function\"==typeof this.onreadystatechange?B(this,\"onreadystatechange\",(function(t){return function(...e){return i(),t.apply(this,e)}})):this.addEventListener(\"readystatechange\",i),B(this,\"setRequestHeader\",(function(t){return function(...e){const[n,r]=e,s=this.__sentry_xhr_v3__;return s&&o(n)&&o(r)&&(s.request_headers[n.toLowerCase()]=r),t.apply(this,e)}})),t.apply(this,e)}})),B(t,\"send\",(function(t){return function(...e){const n=this.__sentry_xhr_v3__;if(!n)return t.apply(this,e);void 0!==e[0]&&(n.body=e[0]);return st(\"xhr\",{args:[n.method,n.url],startTimestamp:Date.now(),xhr:this}),t.apply(this,e)}}))}function Ut(){return\"undefined\"!=typeof window&&!0}function zt(t,e=100,n=1/0){try{return qt(\"\",t,e,n)}catch(t){return{ERROR:`**non-serializable** (${t})`}}}function Ht(t,e=3,n=102400){const r=zt(t,e);return s=r,function(t){return~-encodeURI(t).split(/%..|./).length}(JSON.stringify(s))>n?Ht(t,e-1,n):r;var s}function qt(t,e,n=1/0,r=1/0,s=function(){const t=\"function\"==typeof WeakSet,e=t?new WeakSet:[];return[function(n){if(t)return!!e.has(n)||(e.add(n),!1);for(let t=0;t<e.length;t++)if(e[t]===n)return!0;return e.push(n),!1},function(n){if(t)e.delete(n);else for(let t=0;t<e.length;t++)if(e[t]===n){e.splice(t,1);break}}]}()){const[i,o]=s;if(null==e||[\"number\",\"boolean\",\"string\"].includes(typeof e)&&!f(e))return e;const a=function(t,e){try{if(\"domain\"===t&&e&&\"object\"==typeof e&&e.i)return\"[Domain]\";if(\"domainEmitter\"===t)return\"[DomainEmitter]\";if(\"undefined\"!=typeof global&&e===global)return\"[Global]\";if(\"undefined\"!=typeof window&&e===window)return\"[Window]\";if(\"undefined\"!=typeof document&&e===document)return\"[Document]\";if(p(e))return\"[VueViewModel]\";if(u(n=e)&&\"nativeEvent\"in n&&\"preventDefault\"in n&&\"stopPropagation\"in n)return\"[SyntheticEvent]\";if(\"number\"==typeof e&&e!=e)return\"[NaN]\";if(\"function\"==typeof e)return`[Function: ${Z(e)}]`;if(\"symbol\"==typeof e)return`[${String(e)}]`;if(\"bigint\"==typeof e)return`[BigInt: ${String(e)}]`;const r=function(t){const e=Object.getPrototypeOf(t);return e?e.constructor.name:\"null prototype\"}(e);return/^HTML(\\w*)Element$/.test(r)?`[HTMLElement: ${r}]`:`[object ${r}]`}catch(t){return`**non-serializable** (${t})`}var n}(t,e);if(!a.startsWith(\"[object \"))return a;if(e.__sentry_skip_normalization__)return e;const c=\"number\"==typeof e.__sentry_override_normalization_depth__?e.__sentry_override_normalization_depth__:n;if(0===c)return a.replace(\"object \",\"\");if(i(e))return\"[Circular ~]\";const l=e;if(l&&\"function\"==typeof l.toJSON)try{return qt(\"\",l.toJSON(),c-1,r,s)}catch(t){}const h=Array.isArray(e)?[]:{};let d=0;const m=q(e);for(const t in m){if(!Object.prototype.hasOwnProperty.call(m,t))continue;if(d>=r){h[t]=\"[MaxProperties ~]\";break}const e=m[t];h[t]=qt(t,e,c-1,r,s),d++}return o(e),h}var Wt;function Kt(t){return new Xt((e=>{e(t)}))}function Jt(t){return new Xt(((e,n)=>{n(t)}))}!function(t){t[t.PENDING=0]=\"PENDING\";t[t.RESOLVED=1]=\"RESOLVED\";t[t.REJECTED=2]=\"REJECTED\"}(Wt||(Wt={}));class Xt{constructor(t){Xt.prototype.__init.call(this),Xt.prototype.__init2.call(this),Xt.prototype.__init3.call(this),Xt.prototype.__init4.call(this),this.o=Wt.PENDING,this.u=[];try{t(this.l,this.h)}catch(t){this.h(t)}}then(t,e){return new Xt(((n,r)=>{this.u.push([!1,e=>{if(t)try{n(t(e))}catch(t){r(t)}else n(e)},t=>{if(e)try{n(e(t))}catch(t){r(t)}else r(t)}]),this.p()}))}catch(t){return this.then((t=>t),t)}finally(t){return new Xt(((e,n)=>{let r,s;return this.then((e=>{s=!1,r=e,t&&t()}),(e=>{s=!0,r=e,t&&t()})).then((()=>{s?n(r):e(r)}))}))}__init(){this.l=t=>{this.m(Wt.RESOLVED,t)}}__init2(){this.h=t=>{this.m(Wt.REJECTED,t)}}__init3(){this.m=(t,e)=>{this.o===Wt.PENDING&&(h(e)?e.then(this.l,this.h):(this.o=t,this.v=e,this.p()))}}__init4(){this.p=()=>{if(this.o===Wt.PENDING)return;const t=this.u.slice();this.u=[],t.forEach((t=>{t[0]||(this.o===Wt.RESOLVED&&t[1](this.v),this.o===Wt.REJECTED&&t[2](this.v),t[0]=!0)}))}}}function Gt(t){const e=[];function n(t){return e.splice(e.indexOf(t),1)[0]}return{$:e,add:function(r){if(!(void 0===t||e.length<t))return Jt(new P(\"Not adding Promise because buffer limit was reached.\"));const s=r();return-1===e.indexOf(s)&&e.push(s),s.then((()=>n(s))).then(null,(()=>n(s).then(null,(()=>{})))),s},drain:function(t){return new Xt(((n,r)=>{let s=e.length;if(!s)return n(!0);const i=setTimeout((()=>{t&&t>0&&n(!1)}),t);e.forEach((t=>{Kt(t).then((()=>{--s||(clearTimeout(i),n(!0))}),r)}))}))}}}function Yt(t){if(!t)return{};const e=t.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);if(!e)return{};const n=e[6]||\"\",r=e[8]||\"\";return{host:e[4],path:e[5],protocol:e[2],search:n,hash:r,relative:e[5]+n+r}}const Vt=[\"fatal\",\"error\",\"warning\",\"log\",\"info\",\"debug\"];function Qt(t){return\"warn\"===t?\"warning\":Vt.includes(t)?t:\"log\"}function Zt(){return Date.now()/1e3}const te=function(){const{performance:t}=_;if(!t||!t.now)return Zt;const e=Date.now()-t.now(),n=null==t.timeOrigin?e:t.timeOrigin;return()=>(n+t.now())/1e3}(),ee=(()=>{const{performance:t}=_;if(!t||!t.now)return;const e=36e5,n=t.now(),r=Date.now(),s=t.timeOrigin?Math.abs(t.timeOrigin+n-r):e,i=s<e,o=t.timing&&t.timing.navigationStart,a=\"number\"==typeof o?Math.abs(o+n-r):e;return i||a<e?s<=a?t.timeOrigin:o:r})(),ne=\"baggage\",re=\"sentry-\",se=/^sentry-/;function ie(t){if(!o(t)&&!Array.isArray(t))return;let e={};if(Array.isArray(t))e=t.reduce(((t,e)=>{const n=ae(e);for(const e of Object.keys(n))t[e]=n[e];return t}),{});else{if(!t)return;e=ae(t)}const n=Object.entries(e).reduce(((t,[e,n])=>{if(e.match(se)){t[e.slice(re.length)]=n}return t}),{});return Object.keys(n).length>0?n:void 0}function oe(t){if(!t)return;return function(t){if(0===Object.keys(t).length)return;return Object.entries(t).reduce(((t,[e,n],r)=>{const s=`${encodeURIComponent(e)}=${encodeURIComponent(n)}`,i=0===r?s:`${t},${s}`;return i.length>8192?t:i}),\"\")}(Object.entries(t).reduce(((t,[e,n])=>(n&&(t[`sentry-${e}`]=n),t)),{}))}function ae(t){return t.split(\",\").map((t=>t.split(\"=\").map((t=>decodeURIComponent(t.trim()))))).reduce(((t,[e,n])=>(t[e]=n,t)),{})}const ce=new RegExp(\"^[ \\\\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\\\t]*$\");function ue(t){if(!t)return;const e=t.match(ce);if(!e)return;let n;return\"1\"===e[3]?n=!0:\"0\"===e[3]&&(n=!1),{traceId:e[1],parentSampled:n,parentSpanId:e[2]}}function le(t=ot(),e=ot().substring(16),n){let r=\"\";return void 0!==n&&(r=n?\"-1\":\"-0\"),`${t}-${e}${r}`}function he(t,e=[]){return[t,e]}function fe(t,e){const[n,r]=t;return[n,[...r,e]]}function de(t,e){const n=t[1];for(const t of n){if(e(t,t[0].type))return!0}return!1}function pe(t,e){return(e||new TextEncoder).encode(t)}function me(t,e){const[n,r]=t;let s=JSON.stringify(n);function i(t){\"string\"==typeof s?s=\"string\"==typeof t?s+t:[pe(s,e),t]:s.push(\"string\"==typeof t?pe(t,e):t)}for(const t of r){const[e,n]=t;if(i(`\\n${JSON.stringify(e)}\\n`),\"string\"==typeof n||n instanceof Uint8Array)i(n);else{let t;try{t=JSON.stringify(n)}catch(e){t=JSON.stringify(zt(n))}i(t)}}return\"string\"==typeof s?s:function(t){const e=t.reduce(((t,e)=>t+e.length),0),n=new Uint8Array(e);let r=0;for(const e of t)n.set(e,r),r+=e.length;return n}(s)}function ye(t,e){const n=\"string\"==typeof t.data?pe(t.data,e):t.data;return[J({type:\"attachment\",length:n.length,filename:t.filename,content_type:t.contentType,attachment_type:t.attachmentType}),n]}const ge={session:\"session\",sessions:\"session\",attachment:\"attachment\",transaction:\"transaction\",event:\"error\",client_report:\"internal\",user_report:\"default\",profile:\"profile\",replay_event:\"replay\",replay_recording:\"replay\",check_in:\"monitor\",feedback:\"feedback\",statsd:\"unknown\"};function ve(t){return ge[t]}function be(t){if(!t||!t.sdk)return;const{name:e,version:n}=t.sdk;return{name:e,version:n}}function ke(t,e,n,r){const s=t.sdkProcessingMetadata&&t.sdkProcessingMetadata.dynamicSamplingContext;return{event_id:t.event_id,sent_at:(new Date).toISOString(),...e&&{sdk:e},...!!n&&r&&{dsn:j(r)},...s&&{trace:J({...s})}}}function we(t,e,n=Date.now()){return function(t,e){return t[e]||t.all||0}(t,e)>n}function Se(t,{statusCode:e,headers:n},r=Date.now()){const s={...t},i=n&&n[\"x-sentry-rate-limits\"],o=n&&n[\"retry-after\"];if(i)for(const t of i.trim().split(\",\")){const[e,n]=t.split(\":\",2),i=parseInt(e,10),o=1e3*(isNaN(i)?60:i);if(n)for(const t of n.split(\";\"))s[t]=r+o;else s.all=r+o}else o?s.all=r+function(t,e=Date.now()){const n=parseInt(`${t}`,10);if(!isNaN(n))return 1e3*n;const r=Date.parse(`${t}`);return isNaN(r)?6e4:r-e}(o,r):429===e&&(s.all=r+6e4);return s}function Te(t,e){const n={type:e.name||e.constructor.name,value:e.message},r=function(t,e){return t(e.stack||\"\",1)}(t,e);return r.length&&(n.stacktrace={frames:r}),n}function _e(t){let e,n=t[0],r=1;for(;r<t.length;){const s=t[r],i=t[r+1];if(r+=2,(\"optionalAccess\"===s||\"optionalCall\"===s)&&null==n)return;\"access\"===s||\"optionalAccess\"===s?(e=n,n=i(n)):\"call\"!==s&&\"optionalCall\"!==s||(n=i(((...t)=>n.call(e,...t))),e=void 0)}return n}class xe{static __initStatic(){this.id=\"Feedback\"}constructor(t){this.name=xe.id,D((()=>{console.warn(\"You are using new Feedback() even though this bundle does not include Feedback.\")}))}setupOnce(){}openDialog(){}closeDialog(){}attachTo(){}createWidget(){}removeWidget(){}getWidget(){}remove(){}}xe.__initStatic();const Ie=\"production\";function Ce(){return I(\"globalEventProcessors\",(()=>[]))}function Ee(t){Ce().push(t)}function Oe(t,e,n,r=0){return new Xt(((s,i)=>{const o=t[r];if(null===e||\"function\"!=typeof o)s(e);else{const a=o({...e},n);h(a)?a.then((e=>Oe(t,e,n,r+1).then(s))).then(null,i):Oe(t,a,n,r+1).then(s).then(null,i)}}))}function Ae(t){const e=te(),n={sid:ot(),init:!0,timestamp:e,started:e,duration:0,status:\"ok\",errors:0,ignoreDuration:!1,toJSON:()=>function(t){return J({sid:`${t.sid}`,init:t.init,started:new Date(1e3*t.started).toISOString(),timestamp:new Date(1e3*t.timestamp).toISOString(),status:t.status,errors:t.errors,did:\"number\"==typeof t.did||\"string\"==typeof t.did?`${t.did}`:void 0,duration:t.duration,abnormal_mechanism:t.abnormal_mechanism,attrs:{release:t.release,environment:t.environment,ip_address:t.ipAddress,user_agent:t.userAgent}})}(n)};return t&&Re(n,t),n}function Re(t,e={}){if(e.user&&(!t.ipAddress&&e.user.ip_address&&(t.ipAddress=e.user.ip_address),t.did||e.did||(t.did=e.user.id||e.user.email||e.user.username)),t.timestamp=e.timestamp||te(),e.abnormal_mechanism&&(t.abnormal_mechanism=e.abnormal_mechanism),e.ignoreDuration&&(t.ignoreDuration=e.ignoreDuration),e.sid&&(t.sid=32===e.sid.length?e.sid:ot()),void 0!==e.init&&(t.init=e.init),!t.did&&e.did&&(t.did=`${e.did}`),\"number\"==typeof e.started&&(t.started=e.started),t.ignoreDuration)t.duration=void 0;else if(\"number\"==typeof e.duration)t.duration=e.duration;else{const e=t.timestamp-t.started;t.duration=e>=0?e:0}e.release&&(t.release=e.release),e.environment&&(t.environment=e.environment),!t.ipAddress&&e.ipAddress&&(t.ipAddress=e.ipAddress),!t.userAgent&&e.userAgent&&(t.userAgent=e.userAgent),\"number\"==typeof e.errors&&(t.errors=e.errors),e.status&&(t.status=e.status)}function Me(t,e){let n={};e?n={status:e}:\"ok\"===t.status&&(n={status:\"exited\"}),Re(t,n)}function De(t){const{spanId:e,traceId:n}=t.spanContext(),{data:r,op:s,parent_span_id:i,status:o,tags:a,origin:c}=Fe(t);return J({data:r,op:s,parent_span_id:i,span_id:e,status:o,tags:a,trace_id:n,origin:c})}function $e(t){const{traceId:e,spanId:n}=t.spanContext();return le(e,n,Ne(t))}function Le(t){return\"number\"==typeof t?je(t):Array.isArray(t)?t[0]+t[1]/1e9:t instanceof Date?je(t.getTime()):te()}function je(t){return t>9999999999?t/1e3:t}function Fe(t){return function(t){return\"function\"==typeof t.getSpanJSON}(t)?t.getSpanJSON():\"function\"==typeof t.toJSON?t.toJSON():{}}function Ne(t){const{traceFlags:e}=t.spanContext();return Boolean(1&e)}function Pe(t,e,n,r,s,i){const{normalizeDepth:o=3,normalizeMaxBreadth:a=1e3}=t,c={...e,event_id:e.event_id||n.event_id||ot(),timestamp:e.timestamp||Zt()},u=n.integrations||t.integrations.map((t=>t.name));!function(t,e){const{environment:n,release:r,dist:s,maxValueLength:i=250}=e;\"environment\"in t||(t.environment=\"environment\"in e?n:Ie);void 0===t.release&&void 0!==r&&(t.release=r);void 0===t.dist&&void 0!==s&&(t.dist=s);t.message&&(t.message=m(t.message,i));const o=t.exception&&t.exception.values&&t.exception.values[0];o&&o.value&&(o.value=m(o.value,i));const a=t.request;a&&a.url&&(a.url=m(a.url,i))}(c,t),function(t,e){e.length>0&&(t.sdk=t.sdk||{},t.sdk.integrations=[...t.sdk.integrations||[],...e])}(c,u),void 0===e.type&&function(t,e){const n=_._sentryDebugIds;if(!n)return;let r;const s=Be.get(e);s?r=s:(r=new Map,Be.set(e,r));const i=Object.keys(n).reduce(((t,s)=>{let i;const o=r.get(s);o?i=o:(i=e(s),r.set(s,i));for(let e=i.length-1;e>=0;e--){const r=i[e];if(r.filename){t[r.filename]=n[s];break}}return t}),{});try{t.exception.values.forEach((t=>{t.stacktrace.frames.forEach((t=>{t.filename&&(t.debug_id=i[t.filename])}))}))}catch(t){}}(c,t.stackParser);const l=function(t,e){if(!e)return t;const n=t?t.clone():new an;return n.update(e),n}(r,n.captureContext);n.mechanism&&lt(c,n.mechanism);const h=s&&s.getEventProcessors?s.getEventProcessors():[],f=function(){on||(on=new an);return on}().getScopeData();if(i){rn(f,i.getScopeData())}if(l){rn(f,l.getScopeData())}const d=[...n.attachments||[],...f.attachments];d.length&&(n.attachments=d),nn(c,f);return Oe([...h,...Ce(),...f.eventProcessors],c,n).then((t=>(t&&function(t){const e={};try{t.exception.values.forEach((t=>{t.stacktrace.frames.forEach((t=>{t.debug_id&&(t.abs_path?e[t.abs_path]=t.debug_id:t.filename&&(e[t.filename]=t.debug_id),delete t.debug_id)}))}))}catch(t){}if(0===Object.keys(e).length)return;t.debug_meta=t.debug_meta||{},t.debug_meta.images=t.debug_meta.images||[];const n=t.debug_meta.images;Object.keys(e).forEach((t=>{n.push({type:\"sourcemap\",code_file:t,debug_id:e[t]})}))}(t),\"number\"==typeof o&&o>0?function(t,e,n){if(!t)return null;const r={...t,...t.breadcrumbs&&{breadcrumbs:t.breadcrumbs.map((t=>({...t,...t.data&&{data:zt(t.data,e,n)}})))},...t.user&&{user:zt(t.user,e,n)},...t.contexts&&{contexts:zt(t.contexts,e,n)},...t.extra&&{extra:zt(t.extra,e,n)}};t.contexts&&t.contexts.trace&&r.contexts&&(r.contexts.trace=t.contexts.trace,t.contexts.trace.data&&(r.contexts.trace.data=zt(t.contexts.trace.data,e,n)));t.spans&&(r.spans=t.spans.map((t=>{const r=Fe(t).data;return r&&(t.data=zt(r,e,n)),t})));return r}(t,o,a):t)))}const Be=new WeakMap;function Ue(t){if(t)return function(t){return t instanceof an||\"function\"==typeof t}(t)||function(t){return Object.keys(t).some((t=>ze.includes(t)))}(t)?{captureContext:t}:t}const ze=[\"user\",\"level\",\"extra\",\"contexts\",\"tags\",\"fingerprint\",\"requestSession\",\"propagationContext\"];function captureException(t,e){return mn().captureException(t,Ue(e))}function He(t,e){return mn().captureEvent(t,e)}function qe(t,e){mn().addBreadcrumb(t,e)}function We(t,e){mn().setContext(t,e)}function Ke(...t){const e=mn();if(2===t.length){const[n,r]=t;return n?e.withScope((()=>(e.getStackTop().scope=n,r(n)))):e.withScope(r)}return e.withScope(t[0])}function Je(){return mn().getClient()}function Xe(){return mn().getScope()}function Ge(t){const e=Je(),n=yn(),r=Xe(),{release:s,environment:i=Ie}=e&&e.getOptions()||{},{userAgent:o}=_.navigator||{},a=Ae({release:s,environment:i,user:r.getUser()||n.getUser(),...o&&{userAgent:o},...t}),c=n.getSession();return c&&\"ok\"===c.status&&Re(c,{status:\"exited\"}),Ye(),n.setSession(a),r.setSession(a),a}function Ye(){const t=yn(),e=Xe(),n=e.getSession()||t.getSession();n&&Me(n),Ve(),t.setSession(),e.setSession()}function Ve(){const t=yn(),e=Xe(),n=Je(),r=e.getSession()||t.getSession();r&&n&&n.captureSession&&n.captureSession(r)}function Qe(t=!1){t?Ye():Ve()}function Ze(t){return t.transaction}function tn(t,e,n){const r=e.getOptions(),{publicKey:s}=e.getDsn()||{},{segment:i}=n&&n.getUser()||{},o=J({environment:r.environment||Ie,release:r.release,user_segment:i,public_key:s,trace_id:t});return e.emit&&e.emit(\"createDsc\",o),o}function en(t){const e=Je();if(!e)return{};const n=tn(Fe(t).trace_id||\"\",e,Xe()),r=Ze(t);if(!r)return n;const s=r&&r._frozenDynamicSamplingContext;if(s)return s;const{sampleRate:i,source:o}=r.metadata;null!=i&&(n.sample_rate=`${i}`);const a=Fe(r);return o&&\"url\"!==o&&(n.transaction=a.description),n.sampled=String(Ne(r)),e.emit&&e.emit(\"createDsc\",n),n}function nn(t,e){const{fingerprint:n,span:r,breadcrumbs:s,sdkProcessingMetadata:i}=e;!function(t,e){const{extra:n,tags:r,user:s,contexts:i,level:o,transactionName:a}=e,c=J(n);c&&Object.keys(c).length&&(t.extra={...c,...t.extra});const u=J(r);u&&Object.keys(u).length&&(t.tags={...u,...t.tags});const l=J(s);l&&Object.keys(l).length&&(t.user={...l,...t.user});const h=J(i);h&&Object.keys(h).length&&(t.contexts={...h,...t.contexts});o&&(t.level=o);a&&(t.transaction=a)}(t,e),r&&function(t,e){t.contexts={trace:De(e),...t.contexts};const n=Ze(e);if(n){t.sdkProcessingMetadata={dynamicSamplingContext:en(e),...t.sdkProcessingMetadata};const r=Fe(n).description;r&&(t.tags={transaction:r,...t.tags})}}(t,r),function(t,e){t.fingerprint=t.fingerprint?ft(t.fingerprint):[],e&&(t.fingerprint=t.fingerprint.concat(e));t.fingerprint&&!t.fingerprint.length&&delete t.fingerprint}(t,n),function(t,e){const n=[...t.breadcrumbs||[],...e];t.breadcrumbs=n.length?n:void 0}(t,s),function(t,e){t.sdkProcessingMetadata={...t.sdkProcessingMetadata,...e}}(t,i)}function rn(t,e){const{extra:n,tags:r,user:s,contexts:i,level:o,sdkProcessingMetadata:a,breadcrumbs:c,fingerprint:u,eventProcessors:l,attachments:h,propagationContext:f,transactionName:d,span:p}=e;sn(t,\"extra\",n),sn(t,\"tags\",r),sn(t,\"user\",s),sn(t,\"contexts\",i),sn(t,\"sdkProcessingMetadata\",a),o&&(t.level=o),d&&(t.transactionName=d),p&&(t.span=p),c.length&&(t.breadcrumbs=[...t.breadcrumbs,...c]),u.length&&(t.fingerprint=[...t.fingerprint,...u]),l.length&&(t.eventProcessors=[...t.eventProcessors,...l]),h.length&&(t.attachments=[...t.attachments,...h]),t.propagationContext={...t.propagationContext,...f}}function sn(t,e,n){if(n&&Object.keys(n).length){t[e]={...t[e]};for(const r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[e][r]=n[r])}}let on;class an{constructor(){this.k=!1,this.S=[],this.T=[],this._=[],this.I=[],this.C={},this.O={},this.A={},this.R={},this.M={},this.D=cn()}static clone(t){return t?t.clone():new an}clone(){const t=new an;return t._=[...this._],t.O={...this.O},t.A={...this.A},t.R={...this.R},t.C=this.C,t.L=this.L,t.j=this.j,t.F=this.F,t.N=this.N,t.P=this.P,t.T=[...this.T],t.B=this.B,t.I=[...this.I],t.M={...this.M},t.D={...this.D},t.U=this.U,t}setClient(t){this.U=t}getClient(){return this.U}addScopeListener(t){this.S.push(t)}addEventProcessor(t){return this.T.push(t),this}setUser(t){return this.C=t||{email:void 0,id:void 0,ip_address:void 0,segment:void 0,username:void 0},this.F&&Re(this.F,{user:t}),this.H(),this}getUser(){return this.C}getRequestSession(){return this.B}setRequestSession(t){return this.B=t,this}setTags(t){return this.O={...this.O,...t},this.H(),this}setTag(t,e){return this.O={...this.O,[t]:e},this.H(),this}setExtras(t){return this.A={...this.A,...t},this.H(),this}setExtra(t,e){return this.A={...this.A,[t]:e},this.H(),this}setFingerprint(t){return this.P=t,this.H(),this}setLevel(t){return this.L=t,this.H(),this}setTransactionName(t){return this.N=t,this.H(),this}setContext(t,e){return null===e?delete this.R[t]:this.R[t]=e,this.H(),this}setSpan(t){return this.j=t,this.H(),this}getSpan(){return this.j}getTransaction(){const t=this.j;return t&&t.transaction}setSession(t){return t?this.F=t:delete this.F,this.H(),this}getSession(){return this.F}update(t){if(!t)return this;if(\"function\"==typeof t){const e=t(this);return e instanceof an?e:this}return t instanceof an?(this.O={...this.O,...t.O},this.A={...this.A,...t.A},this.R={...this.R,...t.R},t.C&&Object.keys(t.C).length&&(this.C=t.C),t.L&&(this.L=t.L),t.P&&(this.P=t.P),t.B&&(this.B=t.B),t.D&&(this.D=t.D)):u(t)&&(t=t,this.O={...this.O,...t.tags},this.A={...this.A,...t.extra},this.R={...this.R,...t.contexts},t.user&&(this.C=t.user),t.level&&(this.L=t.level),t.fingerprint&&(this.P=t.fingerprint),t.requestSession&&(this.B=t.requestSession),t.propagationContext&&(this.D=t.propagationContext)),this}clear(){return this._=[],this.O={},this.A={},this.C={},this.R={},this.L=void 0,this.N=void 0,this.P=void 0,this.B=void 0,this.j=void 0,this.F=void 0,this.H(),this.I=[],this.D=cn(),this}addBreadcrumb(t,e){const n=\"number\"==typeof e?e:100;if(n<=0)return this;const r={timestamp:Zt(),...t},s=this._;return s.push(r),this._=s.length>n?s.slice(-n):s,this.H(),this}getLastBreadcrumb(){return this._[this._.length-1]}clearBreadcrumbs(){return this._=[],this.H(),this}addAttachment(t){return this.I.push(t),this}getAttachments(){return this.getScopeData().attachments}clearAttachments(){return this.I=[],this}getScopeData(){const{_:t,I:e,R:n,O:r,A:s,C:i,L:o,P:a,T:c,D:u,M:l,N:h,j:f}=this;return{breadcrumbs:t,attachments:e,contexts:n,tags:r,extra:s,user:i,level:o,fingerprint:a||[],eventProcessors:c,propagationContext:u,sdkProcessingMetadata:l,transactionName:h,span:f}}applyToEvent(t,e={},n=[]){nn(t,this.getScopeData());return Oe([...n,...Ce(),...this.T],t,e)}setSDKProcessingMetadata(t){return this.M={...this.M,...t},this}setPropagationContext(t){return this.D=t,this}getPropagationContext(){return this.D}captureException(t,e){const n=e&&e.event_id?e.event_id:ot();if(!this.U)return $.warn(\"No client configured on scope - will not capture exception!\"),n;const r=new Error(\"Sentry syntheticException\");return this.U.captureException(t,{originalException:t,syntheticException:r,...e,event_id:n},this),n}captureMessage(t,e,n){const r=n&&n.event_id?n.event_id:ot();if(!this.U)return $.warn(\"No client configured on scope - will not capture message!\"),r;const s=new Error(t);return this.U.captureMessage(t,e,{originalException:t,syntheticException:s,...n,event_id:r},this),r}captureEvent(t,e){const n=e&&e.event_id?e.event_id:ot();return this.U?(this.U.captureEvent(t,{...e,event_id:n},this),n):($.warn(\"No client configured on scope - will not capture event!\"),n)}H(){this.k||(this.k=!0,this.S.forEach((t=>{t(this)})),this.k=!1)}}function cn(){return{traceId:ot(),spanId:ot().substring(16)}}const un=\"7.100.0\",ln=parseFloat(un),hn=100;class fn{constructor(t,e,n,r=ln){let s,i;this.q=r,e?s=e:(s=new an,s.setClient(t)),n?i=n:(i=new an,i.setClient(t)),this.W=[{scope:s}],t&&this.bindClient(t),this.K=i}isOlderThan(t){return this.q<t}bindClient(t){const e=this.getStackTop();e.client=t,e.scope.setClient(t),t&&t.setupIntegrations&&t.setupIntegrations()}pushScope(){const t=this.getScope().clone();return this.getStack().push({client:this.getClient(),scope:t}),t}popScope(){return!(this.getStack().length<=1)&&!!this.getStack().pop()}withScope(t){const e=this.pushScope();let n;try{n=t(e)}catch(t){throw this.popScope(),t}return h(n)?n.then((t=>(this.popScope(),t)),(t=>{throw this.popScope(),t})):(this.popScope(),n)}getClient(){return this.getStackTop().client}getScope(){return this.getStackTop().scope}getIsolationScope(){return this.K}getStack(){return this.W}getStackTop(){return this.W[this.W.length-1]}captureException(t,e){const n=this.J=e&&e.event_id?e.event_id:ot(),r=new Error(\"Sentry syntheticException\");return this.getScope().captureException(t,{originalException:t,syntheticException:r,...e,event_id:n}),n}captureMessage(t,e,n){const r=this.J=n&&n.event_id?n.event_id:ot(),s=new Error(t);return this.getScope().captureMessage(t,e,{originalException:t,syntheticException:s,...n,event_id:r}),r}captureEvent(t,e){const n=e&&e.event_id?e.event_id:ot();return t.type||(this.J=n),this.getScope().captureEvent(t,{...e,event_id:n}),n}lastEventId(){return this.J}addBreadcrumb(t,e){const{scope:n,client:r}=this.getStackTop();if(!r)return;const{beforeBreadcrumb:s=null,maxBreadcrumbs:i=hn}=r.getOptions&&r.getOptions()||{};if(i<=0)return;const o={timestamp:Zt(),...t},a=s?D((()=>s(o,e))):o;null!==a&&(r.emit&&r.emit(\"beforeAddBreadcrumb\",a,e),n.addBreadcrumb(a,i))}setUser(t){this.getScope().setUser(t),this.getIsolationScope().setUser(t)}setTags(t){this.getScope().setTags(t),this.getIsolationScope().setTags(t)}setExtras(t){this.getScope().setExtras(t),this.getIsolationScope().setExtras(t)}setTag(t,e){this.getScope().setTag(t,e),this.getIsolationScope().setTag(t,e)}setExtra(t,e){this.getScope().setExtra(t,e),this.getIsolationScope().setExtra(t,e)}setContext(t,e){this.getScope().setContext(t,e),this.getIsolationScope().setContext(t,e)}configureScope(t){const{scope:e,client:n}=this.getStackTop();n&&t(e)}run(t){const e=pn(this);try{t(this)}finally{pn(e)}}getIntegration(t){const e=this.getClient();if(!e)return null;try{return e.getIntegration(t)}catch(t){return null}}startTransaction(t,e){const n=this.X(\"startTransaction\",t,e);return n}traceHeaders(){return this.X(\"traceHeaders\")}captureSession(t=!1){if(t)return this.endSession();this.G()}endSession(){const t=this.getStackTop().scope,e=t.getSession();e&&Me(e),this.G(),t.setSession()}startSession(t){const{scope:e,client:n}=this.getStackTop(),{release:r,environment:s=Ie}=n&&n.getOptions()||{},{userAgent:i}=_.navigator||{},o=Ae({release:r,environment:s,user:e.getUser(),...i&&{userAgent:i},...t}),a=e.getSession&&e.getSession();return a&&\"ok\"===a.status&&Re(a,{status:\"exited\"}),this.endSession(),e.setSession(o),o}shouldSendDefaultPii(){const t=this.getClient(),e=t&&t.getOptions();return Boolean(e&&e.sendDefaultPii)}G(){const{scope:t,client:e}=this.getStackTop(),n=t.getSession();n&&e&&e.captureSession&&e.captureSession(n)}X(t,...e){const n=dn().__SENTRY__;if(n&&n.extensions&&\"function\"==typeof n.extensions[t])return n.extensions[t].apply(this,e)}}function dn(){return _.__SENTRY__=_.__SENTRY__||{extensions:{},hub:void 0},_}function pn(t){const e=dn(),n=vn(e);return bn(e,t),n}function mn(){const t=dn();if(t.__SENTRY__&&t.__SENTRY__.acs){const e=t.__SENTRY__.acs.getCurrentHub();if(e)return e}return function(t=dn()){e=t,e&&e.__SENTRY__&&e.__SENTRY__.hub&&!vn(t).isOlderThan(ln)||bn(t,new fn);var e;return vn(t)}(t)}function yn(){return mn().getIsolationScope()}function gn(t,e={}){const n=dn();return n.__SENTRY__&&n.__SENTRY__.acs?n.__SENTRY__.acs.runWithAsyncContext(t,e):t()}function vn(t){return I(\"hub\",(()=>new fn),t)}function bn(t,e){if(!t)return!1;return(t.__SENTRY__=t.__SENTRY__||{}).hub=e,!0}function kn(t){return(t||mn()).getScope().getTransaction()}let wn=!1;function Sn(){const t=kn();if(t){const e=\"internal_error\";t.setStatus(e)}}Sn.tag=\"sentry_tracingErrorCallback\";const Tn=\"sentry.source\",_n=\"sentry.sample_rate\",xn=\"sentry.op\",In=\"sentry.origin\";var Cn;function En(t,e){t.setTag(\"http.status_code\",String(e)),t.setData(\"http.response.status_code\",e);const n=function(t){if(t<400&&t>=100)return\"ok\";if(t>=400&&t<500)switch(t){case 401:return\"unauthenticated\";case 403:return\"permission_denied\";case 404:return\"not_found\";case 409:return\"already_exists\";case 413:return\"failed_precondition\";case 429:return\"resource_exhausted\";default:return\"invalid_argument\"}if(t>=500&&t<600)switch(t){case 501:return\"unimplemented\";case 503:return\"unavailable\";case 504:return\"deadline_exceeded\";default:return\"internal_error\"}return\"unknown_error\"}(e);\"unknown_error\"!==n&&t.setStatus(n)}!function(t){t.Ok=\"ok\";t.DeadlineExceeded=\"deadline_exceeded\";t.Unauthenticated=\"unauthenticated\";t.PermissionDenied=\"permission_denied\";t.NotFound=\"not_found\";t.ResourceExhausted=\"resource_exhausted\";t.InvalidArgument=\"invalid_argument\";t.Unimplemented=\"unimplemented\";t.Unavailable=\"unavailable\";t.InternalError=\"internal_error\";t.UnknownError=\"unknown_error\";t.Cancelled=\"cancelled\";t.AlreadyExists=\"already_exists\";t.FailedPrecondition=\"failed_precondition\";t.Aborted=\"aborted\";t.OutOfRange=\"out_of_range\";t.DataLoss=\"data_loss\"}(Cn||(Cn={}));class On{constructor(t=1e3){this.Y=t,this.spans=[]}add(t){this.spans.length>this.Y?t.spanRecorder=void 0:this.spans.push(t)}}class An{constructor(t={}){this.V=t.traceId||ot(),this.Z=t.spanId||ot().substring(16),this.tt=t.startTimestamp||te(),this.tags=t.tags?{...t.tags}:{},this.data=t.data?{...t.data}:{},this.instrumenter=t.instrumenter||\"sentry\",this.et={},this.setAttributes({[In]:t.origin||\"manual\",[xn]:t.op,...t.attributes}),this.nt=t.name||t.description,t.parentSpanId&&(this.rt=t.parentSpanId),\"sampled\"in t&&(this.st=t.sampled),t.status&&(this.it=t.status),t.endTimestamp&&(this.ot=t.endTimestamp)}get name(){return this.nt||\"\"}set name(t){this.updateName(t)}get description(){return this.nt}set description(t){this.nt=t}get traceId(){return this.V}set traceId(t){this.V=t}get spanId(){return this.Z}set spanId(t){this.Z=t}set parentSpanId(t){this.rt=t}get parentSpanId(){return this.rt}get sampled(){return this.st}set sampled(t){this.st=t}get attributes(){return this.et}set attributes(t){this.et=t}get startTimestamp(){return this.tt}set startTimestamp(t){this.tt=t}get endTimestamp(){return this.ot}set endTimestamp(t){this.ot=t}get status(){return this.it}set status(t){this.it=t}get op(){return this.et[\"sentry.op\"]}set op(t){this.setAttribute(xn,t)}get origin(){return this.et[\"sentry.origin\"]}set origin(t){this.setAttribute(In,t)}spanContext(){const{Z:t,V:e,st:n}=this;return{spanId:t,traceId:e,traceFlags:n?1:0}}startChild(t){const e=new An({...t,parentSpanId:this.Z,sampled:this.st,traceId:this.V});e.spanRecorder=this.spanRecorder,e.spanRecorder&&e.spanRecorder.add(e);const n=Ze(this);return e.transaction=n,e}setTag(t,e){return this.tags={...this.tags,[t]:e},this}setData(t,e){return this.data={...this.data,[t]:e},this}setAttribute(t,e){void 0===e?delete this.et[t]:this.et[t]=e}setAttributes(t){Object.keys(t).forEach((e=>this.setAttribute(e,t[e])))}setStatus(t){return this.it=t,this}setHttpStatus(t){return En(this,t),this}setName(t){this.updateName(t)}updateName(t){return this.nt=t,this}isSuccess(){return\"ok\"===this.it}finish(t){return this.end(t)}end(t){if(this.ot)return;Ze(this);this.ot=Le(t)}toTraceparent(){return $e(this)}toContext(){return J({data:this.ct(),description:this.nt,endTimestamp:this.ot,op:this.op,parentSpanId:this.rt,sampled:this.st,spanId:this.Z,startTimestamp:this.tt,status:this.it,tags:this.tags,traceId:this.V})}updateWithContext(t){return this.data=t.data||{},this.nt=t.name||t.description,this.ot=t.endTimestamp,this.op=t.op,this.rt=t.parentSpanId,this.st=t.sampled,this.Z=t.spanId||this.Z,this.tt=t.startTimestamp||this.tt,this.it=t.status,this.tags=t.tags||{},this.V=t.traceId||this.V,this}getTraceContext(){return De(this)}getSpanJSON(){return J({data:this.ct(),description:this.nt,op:this.et[\"sentry.op\"],parent_span_id:this.rt,span_id:this.Z,start_timestamp:this.tt,status:this.it,tags:Object.keys(this.tags).length>0?this.tags:void 0,timestamp:this.ot,trace_id:this.V,origin:this.et[\"sentry.origin\"]})}isRecording(){return!this.ot&&!!this.st}toJSON(){return this.getSpanJSON()}ct(){const{data:t,et:e}=this,n=Object.keys(t).length>0,r=Object.keys(e).length>0;if(n||r)return n&&r?{...t,...e}:n?t:e}}function Rn(t,e,n=(()=>{})){let r;try{r=t()}catch(t){throw e(t),n(),t}return function(t,e,n){if(h(t))return t.then((t=>(n(),t)),(t=>{throw e(t),n(),t}));return n(),t}(r,e,n)}function Mn(t){if(\"boolean\"==typeof __SENTRY_TRACING__&&!__SENTRY_TRACING__)return!1;const e=Je(),n=t||e&&e.getOptions();return!!n&&(n.enableTracing||\"tracesSampleRate\"in n||\"tracesSampler\"in n)}function Dn(t){if(!Mn())return;const e=jn(t),n=mn(),r=t.scope?t.scope.getSpan():$n();if(t.onlyIfParent&&!r)return;const s=yn(),i=Xe();let o;if(r)o=r.startChild(e);else{const{traceId:t,dsc:r,parentSpanId:a,sampled:c}={...s.getPropagationContext(),...i.getPropagationContext()};o=n.startTransaction({traceId:t,parentSpanId:a,parentSampled:c,...e,metadata:{dynamicSamplingContext:r,...e.metadata}})}return Pn(o,i,s),o}function $n(){return Xe().getSpan()}function Ln(t,e,n){if(!Mn())return;const r=yn(),s=Xe();let i;if(e)i=e.startChild(n);else{const{traceId:e,dsc:o,parentSpanId:a,sampled:c}={...r.getPropagationContext(),...s.getPropagationContext()};i=t.startTransaction({traceId:e,parentSpanId:a,parentSampled:c,...n,metadata:{dynamicSamplingContext:o,...n.metadata}})}return Pn(i,s,r),i}function jn(t){if(t.startTime){const e={...t};return e.startTimestamp=Le(t.startTime),delete e.startTime,e}return t}const Fn=\"_sentryScope\",Nn=\"_sentryIsolationScope\";function Pn(t,e,n){t&&(U(t,Nn,n),U(t,Fn,e))}class Bn extends An{constructor(t,e){super(t),this.ut={},this.R={},this.lt=e||mn(),this.nt=t.name||\"\",this.ht={...t.metadata},this.ft=t.trimEnd,this.transaction=this;const n=this.ht.dynamicSamplingContext;n&&(this._frozenDynamicSamplingContext={...n})}get name(){return this.nt}set name(t){this.setName(t)}get metadata(){return{source:\"custom\",spanMetadata:{},...this.ht,...this.et[\"sentry.source\"]&&{source:this.et[\"sentry.source\"]},...this.et[\"sentry.sample_rate\"]&&{sampleRate:this.et[\"sentry.sample_rate\"]}}}set metadata(t){this.ht=t}setName(t,e=\"custom\"){this.nt=t,this.setAttribute(Tn,e)}updateName(t){return this.nt=t,this}initSpanRecorder(t=1e3){this.spanRecorder||(this.spanRecorder=new On(t)),this.spanRecorder.add(this)}setContext(t,e){null===e?delete this.R[t]:this.R[t]=e}setMeasurement(t,e,n=\"\"){this.ut[t]={value:e,unit:n}}setMetadata(t){this.ht={...this.ht,...t}}end(t){const e=Le(t),n=this.dt(e);if(n)return this.lt.captureEvent(n)}toContext(){return J({...super.toContext(),name:this.nt,trimEnd:this.ft})}updateWithContext(t){return super.updateWithContext(t),this.nt=t.name||\"\",this.ft=t.trimEnd,this}getDynamicSamplingContext(){return en(this)}setHub(t){this.lt=t}dt(t){if(void 0!==this.ot)return;this.nt||(this.nt=\"<unlabeled transaction>\"),super.end(t);const e=this.lt.getClient();if(e&&e.emit&&e.emit(\"finishTransaction\",this),!0!==this.st)return void(e&&e.recordDroppedEvent(\"sample_rate\",\"transaction\"));const n=this.spanRecorder?this.spanRecorder.spans.filter((t=>t!==this&&Fe(t).timestamp)):[];if(this.ft&&n.length>0){const t=n.map((t=>Fe(t).timestamp)).filter(Boolean);this.ot=t.reduce(((t,e)=>t>e?t:e))}const{scope:r,isolationScope:s}={scope:(i=this).yt,isolationScope:i.gt};var i;const{metadata:o}=this,{source:a}=o,c={contexts:{...this.R,trace:De(this)},spans:n,start_timestamp:this.tt,tags:this.tags,timestamp:this.ot,transaction:this.nt,type:\"transaction\",sdkProcessingMetadata:{...o,capturedSpanScope:r,capturedSpanIsolationScope:s,dynamicSamplingContext:en(this)},...a&&{transaction_info:{source:a}}};return Object.keys(this.ut).length>0&&(c.measurements=this.ut),c}}const Un={idleTimeout:1e3,finalTimeout:3e4,heartbeatInterval:5e3},zn=[\"heartbeatFailed\",\"idleTimeout\",\"documentHidden\",\"finalTimeout\",\"externalFinish\",\"cancelled\"];class Hn extends On{constructor(t,e,n,r){super(r),this.vt=t,this.bt=e,this.transactionSpanId=n}add(t){if(t.spanContext().spanId!==this.transactionSpanId){const e=t.end;t.end=(...n)=>(this.bt(t.spanContext().spanId),e.apply(t,n)),void 0===Fe(t).timestamp&&this.vt(t.spanContext().spanId)}super.add(t)}}class qn extends Bn{constructor(t,e,n=Un.idleTimeout,r=Un.finalTimeout,s=Un.heartbeatInterval,i=!1,o=!1){super(t,e),this.kt=e,this.wt=n,this.St=r,this.Tt=s,this._t=i,this.activities={},this.xt=0,this.It=!1,this.Ct=!1,this.Et=[],this.Ot=zn[4],this.At=!o,i&&e.getScope().setSpan(this),o||this.Rt(),setTimeout((()=>{this.It||(this.setStatus(\"deadline_exceeded\"),this.Ot=zn[3],this.end())}),this.St)}end(t){const e=Le(t);if(this.It=!0,this.activities={},\"ui.action.click\"===this.op&&this.setAttribute(\"finishReason\",this.Ot),this.spanRecorder){for(const t of this.Et)t(this,e);this.spanRecorder.spans=this.spanRecorder.spans.filter((t=>{if(t.spanContext().spanId===this.spanContext().spanId)return!0;Fe(t).timestamp||(t.setStatus(\"cancelled\"),t.end(e));const{start_timestamp:n,timestamp:r}=Fe(t),s=n&&n<e,i=(this.St+this.wt)/1e3;return s&&(r&&n&&r-n<i)}))}if(this._t){const t=this.kt.getScope();t.getTransaction()===this&&t.setSpan(void 0)}return super.end(t)}registerBeforeFinishCallback(t){this.Et.push(t)}initSpanRecorder(t){if(!this.spanRecorder){const e=t=>{this.It||this.vt(t)},n=t=>{this.It||this.bt(t)};this.spanRecorder=new Hn(e,n,this.spanContext().spanId,t),this.Mt()}this.spanRecorder.add(this)}cancelIdleTimeout(t,{restartOnChildSpanChange:e}={restartOnChildSpanChange:!0}){this.Ct=!1===e,this.Dt&&(clearTimeout(this.Dt),this.Dt=void 0,0===Object.keys(this.activities).length&&this.Ct&&(this.Ot=zn[5],this.end(t)))}setFinishReason(t){this.Ot=t}sendAutoFinishSignal(){this.At||(this.Rt(),this.At=!0)}Rt(t){this.cancelIdleTimeout(),this.Dt=setTimeout((()=>{this.It||0!==Object.keys(this.activities).length||(this.Ot=zn[1],this.end(t))}),this.wt)}vt(t){this.cancelIdleTimeout(void 0,{restartOnChildSpanChange:!this.Ct}),this.activities[t]=!0}bt(t){if(this.activities[t]&&delete this.activities[t],0===Object.keys(this.activities).length){const t=te();this.Ct?this.At&&(this.Ot=zn[5],this.end(t)):this.Rt(t+this.wt/1e3)}}$t(){if(this.It)return;const t=Object.keys(this.activities).join(\"\");t===this.Lt?this.xt++:this.xt=1,this.Lt=t,this.xt>=3?this.At&&(this.setStatus(\"deadline_exceeded\"),this.Ot=zn[0],this.end()):this.Mt()}Mt(){setTimeout((()=>{this.$t()}),this.Tt)}}function Wn(t,e,n){if(!Mn(e))return t.sampled=!1,t;if(void 0!==t.sampled)return t.setAttribute(_n,Number(t.sampled)),t;let r;return\"function\"==typeof e.tracesSampler?(r=e.tracesSampler(n),t.setAttribute(_n,Number(r))):void 0!==n.parentSampled?r=n.parentSampled:void 0!==e.tracesSampleRate?(r=e.tracesSampleRate,t.setAttribute(_n,Number(r))):(r=1,t.setAttribute(_n,r)),function(t){if(f(t)||\"number\"!=typeof t&&\"boolean\"!=typeof t)return!1;if(t<0||t>1)return!1;return!0}(r)&&r?(t.sampled=Math.random()<r,t.sampled,t):(t.sampled=!1,t)}function Kn(){const t=this.getScope().getSpan();return t?{\"sentry-trace\":$e(t)}:{}}function Jn(t,e){const n=this.getClient(),r=n&&n.getOptions()||{};(r.instrumenter||\"sentry\")!==(t.instrumenter||\"sentry\")&&(t.sampled=!1);let s=new Bn(t,this);return s=Wn(s,r,{name:t.name,parentSampled:t.parentSampled,transactionContext:t,attributes:{...t.data,...t.attributes},...e}),s.isRecording()&&s.initSpanRecorder(r._experiments&&r._experiments.maxSpans),n&&n.emit&&n.emit(\"startTransaction\",s),s}function Xn(t,e,n,r,s,i,o,a=!1){const c=t.getClient(),u=c&&c.getOptions()||{};let l=new qn(e,t,n,r,o,s,a);return l=Wn(l,u,{name:e.name,parentSampled:e.parentSampled,transactionContext:e,attributes:{...e.data,...e.attributes},...i}),l.isRecording()&&l.initSpanRecorder(u._experiments&&u._experiments.maxSpans),c&&c.emit&&c.emit(\"startTransaction\",l),l}function Gn(){const t=dn();t.__SENTRY__&&(t.__SENTRY__.extensions=t.__SENTRY__.extensions||{},t.__SENTRY__.extensions.startTransaction||(t.__SENTRY__.extensions.startTransaction=Jn),t.__SENTRY__.extensions.traceHeaders||(t.__SENTRY__.extensions.traceHeaders=Kn),wn||(wn=!0,Et(Sn),Rt(Sn)))}function Yn(t){const e=t.protocol?`${t.protocol}:`:\"\",n=t.port?`:${t.port}`:\"\";return`${e}//${t.host}${n}${t.path?`/${t.path}`:\"\"}/api/`}function Vn(t,e){return n={sentry_key:t.publicKey,sentry_version:\"7\",...e&&{sentry_client:`${e.name}/${e.version}`}},Object.keys(n).map((t=>`${encodeURIComponent(t)}=${encodeURIComponent(n[t])}`)).join(\"&\");var n}function Qn(t,e={}){const n=\"string\"==typeof e?e:e.tunnel,r=\"string\"!=typeof e&&e.ht?e.ht.sdk:void 0;return n||`${function(t){return`${Yn(t)}${t.projectId}/envelope/`}(t)}?${Vn(t,r)}`}const Zn=[];function tr(t){const e=t.defaultIntegrations||[],n=t.integrations;let r;e.forEach((t=>{t.isDefaultInstance=!0})),r=Array.isArray(n)?[...e,...n]:\"function\"==typeof n?ft(n(e)):e;const s=function(t){const e={};return t.forEach((t=>{const{name:n}=t,r=e[n];r&&!r.isDefaultInstance&&t.isDefaultInstance||(e[n]=t)})),Object.keys(e).map((t=>e[t]))}(r),i=function(t,e){for(let n=0;n<t.length;n++)if(!0===e(t[n]))return n;return-1}(s,(t=>\"Debug\"===t.name));if(-1!==i){const[t]=s.splice(i,1);s.push(t)}return s}function er(t,e){for(const n of e)n&&n.afterAllSetup&&n.afterAllSetup(t)}function nr(t,e,n){if(!n[e.name]){if(n[e.name]=e,-1===Zn.indexOf(e.name)&&(e.setupOnce(Ee,mn),Zn.push(e.name)),e.setup&&\"function\"==typeof e.setup&&e.setup(t),t.on&&\"function\"==typeof e.preprocessEvent){const n=e.preprocessEvent.bind(e);t.on(\"preprocessEvent\",((e,r)=>n(e,r,t)))}if(t.addEventProcessor&&\"function\"==typeof e.processEvent){const n=e.processEvent.bind(e),r=Object.assign(((e,r)=>n(e,r,t)),{id:e.name});t.addEventProcessor(r)}}}function rr(t,e){return Object.assign((function(...t){return e(...t)}),{id:t})}const sr=/[^a-zA-Z0-9_/.-]+/g,ir=/[^\\w\\d_:/@.{}[\\]$-]+/g;function or(t,e,n,r){const s={sent_at:(new Date).toISOString()};n&&n.sdk&&(s.sdk={name:n.sdk.name,version:n.sdk.version}),r&&e&&(s.dsn=j(e));const i=function(t){const e=function(t){let e=\"\";for(const n of t){const t=Object.entries(n.tags),r=t.length>0?`|#${t.map((([t,e])=>`${t}:${e}`)).join(\",\")}`:\"\";e+=`${n.name}@${n.unit}:${n.metric}|${n.metricType}${r}|T${n.timestamp}\\n`}return e}(t);return[{type:\"statsd\",length:e.length},e]}(t);return he(s,[i])}function ar(t){return void 0===t.type}function cr(t){return\"transaction\"===t.type}function ur(t){const e=Je();e&&e.addEventProcessor&&e.addEventProcessor(t)}const lr={c:class{constructor(t){this.v=t}get weight(){return 1}add(t){this.v+=t}toString(){return`${this.v}`}},g:class{constructor(t){this.jt=t,this.Ft=t,this.Nt=t,this.Pt=t,this.Bt=1}get weight(){return 5}add(t){this.jt=t,t<this.Ft&&(this.Ft=t),t>this.Nt&&(this.Nt=t),this.Pt+=t,this.Bt++}toString(){return`${this.jt}:${this.Ft}:${this.Nt}:${this.Pt}:${this.Bt}`}},d:class{constructor(t){this.v=[t]}get weight(){return this.v.length}add(t){this.v.push(t)}toString(){return this.v.join(\":\")}},s:class{constructor(t){this.first=t,this.v=new Set([t])}get weight(){return this.v.size}add(t){this.v.add(t)}toString(){return Array.from(this.v).map((t=>\"string\"==typeof t?function(t){let e=0;for(let n=0;n<t.length;n++)e=(e<<5)-e+t.charCodeAt(n),e&=e;return e>>>0}(t):t)).join(\":\")}}};function hr(t){const e=mn().getStackTop();e.client=t,e.scope.setClient(t)}function fr(t,e,n=Gt(t.bufferSize||30)){let r={};function s(s){const i=[];if(de(s,((e,n)=>{const s=ve(n);if(we(r,s)){const r=dr(e,n);t.recordDroppedEvent(\"ratelimit_backoff\",s,r)}else i.push(e)})),0===i.length)return Kt();const o=he(s[0],i),a=e=>{de(o,((n,r)=>{const s=dr(n,r);t.recordDroppedEvent(e,ve(r),s)}))};return n.add((()=>e({body:me(o,t.textEncoder)}).then((t=>(r=Se(r,t),t)),(t=>{throw a(\"network_error\"),t})))).then((t=>t),(t=>{if(t instanceof P)return a(\"queue_overflow\"),Kt();throw t}))}return s.__sentry__baseTransport__=!0,{send:s,flush:t=>n.drain(t)}}function dr(t,e){if(\"event\"===e||\"transaction\"===e)return Array.isArray(t)?t[1]:void 0}function pr(t,e){const n=e&&function(t){return void 0!==t.getClient}(e)?e.getClient():e,r=n&&n.getDsn(),s=n&&n.getOptions().tunnel;return function(t,e){return!!e&&t.includes(e.host)}(t,r)||function(t,e){if(!e)return!1;return mr(t)===mr(e)}(t,s)}function mr(t){return\"/\"===t[t.length-1]?t.slice(0,-1):t}const yr=[/^Script error\\.?$/,/^Javascript error: Script error\\.? on line 0$/],gr=[/^.*\\/healthcheck$/,/^.*\\/healthy$/,/^.*\\/live$/,/^.*\\/ready$/,/^.*\\/heartbeat$/,/^.*\\/health$/,/^.*\\/healthz$/],vr=\"InboundFilters\",br=(t={})=>({name:vr,setupOnce(){},processEvent(e,n,r){const s=r.getOptions(),i=function(t={},e={}){return{allowUrls:[...t.allowUrls||[],...e.allowUrls||[]],denyUrls:[...t.denyUrls||[],...e.denyUrls||[]],ignoreErrors:[...t.ignoreErrors||[],...e.ignoreErrors||[],...t.disableErrorDefaults?[]:yr],ignoreTransactions:[...t.ignoreTransactions||[],...e.ignoreTransactions||[],...t.disableTransactionDefaults?[]:gr],ignoreInternal:void 0===t.ignoreInternal||t.ignoreInternal}}(t,s);return function(t,e){if(e.ignoreInternal&&function(t){try{return\"SentryError\"===t.exception.values[0].type}catch(t){}return!1}(t))return!0;if(function(t,e){if(t.type||!e||!e.length)return!1;return function(t){const e=[];t.message&&e.push(t.message);let n;try{n=t.exception.values[t.exception.values.length-1]}catch(t){}n&&n.value&&(e.push(n.value),n.type&&e.push(`${n.type}: ${n.value}`));return e}(t).some((t=>v(t,e)))}(t,e.ignoreErrors))return!0;if(function(t,e){if(\"transaction\"!==t.type||!e||!e.length)return!1;const n=t.transaction;return!!n&&v(n,e)}(t,e.ignoreTransactions))return!0;if(function(t,e){if(!e||!e.length)return!1;const n=wr(t);return!!n&&v(n,e)}(t,e.denyUrls))return!0;if(!function(t,e){if(!e||!e.length)return!0;const n=wr(t);return!n||v(n,e)}(t,e.allowUrls))return!0;return!1}(e,i)?null:e}}),kr=rr(vr,br);function wr(t){try{let e;try{e=t.exception.values[0].stacktrace.frames}catch(t){}return e?function(t=[]){for(let e=t.length-1;e>=0;e--){const n=t[e];if(n&&\"<anonymous>\"!==n.filename&&\"[native code]\"!==n.filename)return n.filename||null}return null}(e):null}catch(t){return null}}let Sr;const Tr=\"FunctionToString\",_r=new WeakMap,xr=()=>({name:Tr,setupOnce(){Sr=Function.prototype.toString;try{Function.prototype.toString=function(...t){const e=H(this),n=_r.has(Je())&&void 0!==e?e:this;return Sr.apply(n,t)}}catch(t){}},setup(t){_r.set(t,!0)}}),Ir=rr(Tr,xr),Cr=\"LinkedErrors\",Er=rr(Cr,((t={})=>{const e=t.limit||5,n=t.key||\"cause\";return{name:Cr,setupOnce(){},preprocessEvent(t,r,s){const i=s.getOptions();b(Te,i.stackParser,i.maxValueLength,n,e,t,r)}}}));var Or=Object.freeze({__proto__:null,FunctionToString:Ir,InboundFilters:kr,LinkedErrors:Er});class Ar{constructor(t){this.U=t,this.Ut=new Map,this.zt=setInterval((()=>this.flush()),5e3)}add(t,e,n,r=\"none\",s={},i=te()){const o=Math.floor(i),a=e.replace(sr,\"_\"),c=function(t){const e={};for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n.replace(sr,\"_\")]=String(t[n]).replace(ir,\"_\"));return e}(s),u=function(t,e,n,r){return`${t}${e}${n}${Object.entries(J(r)).sort(((t,e)=>t[0].localeCompare(e[0])))}`}(t,a,r,c),l=this.Ut.get(u);l?(l.metric.add(n),l.timestamp<o&&(l.timestamp=o)):this.Ut.set(u,{metric:new lr[t](n),timestamp:o,metricType:t,name:a,unit:r,tags:c})}flush(){if(0!==this.Ut.size){if(this.U.captureAggregateMetrics){const t=Array.from(this.Ut).map((([,t])=>t));this.U.captureAggregateMetrics(t)}this.Ut.clear()}}close(){clearInterval(this.zt),this.flush()}}const Rr=\"MetricsAggregator\",Mr=()=>({name:Rr,setupOnce(){},setup(t){t.metricsAggregator=new Ar(t)}});function Dr(t,e,n,r={}){const s=Je(),i=Xe();if(s){if(!s.metricsAggregator)return;const{unit:o,tags:a,timestamp:c}=r,{release:u,environment:l}=s.getOptions(),h=i.getTransaction(),f={};u&&(f.release=u),l&&(f.environment=l),h&&(f.transaction=Fe(h).description||\"\"),s.metricsAggregator.add(t,e,n,o,{...f,...a},c)}}const $r={increment:function(t,e=1,n){Dr(\"c\",t,e,n)},distribution:function(t,e,n){Dr(\"d\",t,e,n)},set:function(t,e,n){Dr(\"s\",t,e,n)},gauge:function(t,e,n){Dr(\"g\",t,e,n)},MetricsAggregator:rr(Rr,Mr),metricsAggregatorIntegration:Mr},Lr=Or,jr=_;const Fr=(t,e,n)=>{let r,s;return i=>{e.value>=0&&(i||n)&&(s=e.value-(r||0),(s||void 0===r)&&(r=e.value,e.delta=s,t(e)))}},Nr=()=>jr.__WEB_VITALS_POLYFILL__?jr.performance&&(performance.getEntriesByType&&performance.getEntriesByType(\"navigation\")[0]||(()=>{const t=jr.performance.timing,e=jr.performance.navigation.type,n={entryType:\"navigation\",startTime:0,type:2==e?\"back_forward\":1===e?\"reload\":\"navigate\"};for(const e in t)\"navigationStart\"!==e&&\"toJSON\"!==e&&(n[e]=Math.max(t[e]-t.navigationStart,0));return n})()):jr.performance&&performance.getEntriesByType&&performance.getEntriesByType(\"navigation\")[0],Pr=()=>{const t=Nr();return t&&t.activationStart||0},Br=(t,e)=>{const n=Nr();let r=\"navigate\";return n&&(r=jr.document.prerendering||Pr()>0?\"prerender\":n.type.replace(/_/g,\"-\")),{name:t,value:void 0===e?-1:e,rating:\"good\",delta:0,entries:[],id:`v3-${Date.now()}-${Math.floor(8999999999999*Math.random())+1e12}`,navigationType:r}},Ur=(t,e,n)=>{try{if(PerformanceObserver.supportedEntryTypes.includes(t)){const r=new PerformanceObserver((t=>{e(t.getEntries())}));return r.observe(Object.assign({type:t,buffered:!0},n||{})),r}}catch(t){}},zr=(t,e)=>{const n=r=>{\"pagehide\"!==r.type&&\"hidden\"!==jr.document.visibilityState||(t(r),e&&(removeEventListener(\"visibilitychange\",n,!0),removeEventListener(\"pagehide\",n,!0)))};addEventListener(\"visibilitychange\",n,!0),addEventListener(\"pagehide\",n,!0)};let Hr=-1;const qr=()=>(Hr<0&&(Hr=\"hidden\"!==jr.document.visibilityState||jr.document.prerendering?1/0:0,zr((({timeStamp:t})=>{Hr=t}),!0)),{get firstHiddenTime(){return Hr}}),Wr={},Kr={},Jr={};let Xr,Gr,Yr;function Vr(t,e=!1){return rs(\"lcp\",t,ns,Yr,e)}function Qr(t,e){return ss(t,e),Jr[t]||(!function(t){const e={};\"event\"===t&&(e.durationThreshold=0);Ur(t,(e=>{Zr(t,{entries:e})}),e)}(t),Jr[t]=!0),is(t,e)}function Zr(t,e){const n=Kr[t];if(n&&n.length)for(const t of n)try{t(e)}catch(t){}}function ts(){return(t=>{const e=Br(\"CLS\",0);let n,r=0,s=[];const i=t=>{t.forEach((t=>{if(!t.hadRecentInput){const i=s[0],o=s[s.length-1];r&&0!==s.length&&t.startTime-o.startTime<1e3&&t.startTime-i.startTime<5e3?(r+=t.value,s.push(t)):(r=t.value,s=[t]),r>e.value&&(e.value=r,e.entries=s,n&&n())}}))},o=Ur(\"layout-shift\",i);if(o){n=Fr(t,e);const r=()=>{i(o.takeRecords()),n(!0)};return zr(r),r}})((t=>{Zr(\"cls\",{metric:t}),Xr=t}))}function es(){return(t=>{const e=qr(),n=Br(\"FID\");let r;const s=t=>{t.startTime<e.firstHiddenTime&&(n.value=t.processingStart-t.startTime,n.entries.push(t),r(!0))},i=t=>{t.forEach(s)},o=Ur(\"first-input\",i);r=Fr(t,n),o&&zr((()=>{i(o.takeRecords()),o.disconnect()}),!0)})((t=>{Zr(\"fid\",{metric:t}),Gr=t}))}function ns(){return(t=>{const e=qr(),n=Br(\"LCP\");let r;const s=t=>{const s=t[t.length-1];if(s){const t=Math.max(s.startTime-Pr(),0);t<e.firstHiddenTime&&(n.value=t,n.entries=[s],r())}},i=Ur(\"largest-contentful-paint\",s);if(i){r=Fr(t,n);const e=()=>{Wr[n.id]||(s(i.takeRecords()),i.disconnect(),Wr[n.id]=!0,r(!0))};return[\"keydown\",\"click\"].forEach((t=>{addEventListener(t,e,{once:!0,capture:!0})})),zr(e,!0),e}})((t=>{Zr(\"lcp\",{metric:t}),Yr=t}))}function rs(t,e,n,r,s=!1){let i;return ss(t,e),Jr[t]||(i=n(),Jr[t]=!0),r&&e({metric:r}),is(t,e,s?i:void 0)}function ss(t,e){Kr[t]=Kr[t]||[],Kr[t].push(e)}function is(t,e,n){return()=>{n&&n();const r=Kr[t];if(!r)return;const s=r.indexOf(e);-1!==s&&r.splice(s,1)}}function os(t){return\"number\"==typeof t&&isFinite(t)}function as(t,{startTimestamp:e,...n}){return e&&t.startTimestamp>e&&(t.startTimestamp=e),t.startChild({startTimestamp:e,...n})}function cs(t){return t/1e3}function us(){return jr&&jr.addEventListener&&jr.performance}let ls,hs,fs=0,ds={};function ps(){const t=us();if(t&&ee){t.mark&&jr.performance.mark(\"sentry-tracing-init\");const e=rs(\"fid\",(({metric:t})=>{const e=t.entries[t.entries.length-1];if(!e)return;const n=cs(ee),r=cs(e.startTime);ds.fid={value:t.value,unit:\"millisecond\"},ds[\"mark.fid\"]={value:n+r,unit:\"second\"}}),es,Gr),n=function(t,e=!1){return rs(\"cls\",t,ts,Xr,e)}((({metric:t})=>{const e=t.entries[t.entries.length-1];e&&(ds.cls={value:t.value,unit:\"\"},hs=e)}),!0),r=Vr((({metric:t})=>{const e=t.entries[t.entries.length-1];e&&(ds.lcp={value:t.value,unit:\"millisecond\"},ls=e)}),!0);return()=>{e(),n(),r()}}return()=>{}}function ms(t){const e=us();if(!e||!jr.performance.getEntries||!ee)return;const n=cs(ee),r=e.getEntries();let s,i;const{op:o,start_timestamp:a}=Fe(t);if(r.slice(fs).forEach((e=>{const r=cs(e.startTime),o=cs(e.duration);if(!(\"navigation\"===t.op&&a&&n+r<a))switch(e.entryType){case\"navigation\":!function(t,e,n){[\"unloadEvent\",\"redirect\",\"domContentLoadedEvent\",\"loadEvent\",\"connect\"].forEach((r=>{ys(t,e,r,n)})),ys(t,e,\"secureConnection\",n,\"TLS/SSL\",\"connectEnd\"),ys(t,e,\"fetch\",n,\"cache\",\"domainLookupStart\"),ys(t,e,\"domainLookup\",n,\"DNS\"),function(t,e,n){e.responseEnd&&(as(t,{op:\"browser\",origin:\"auto.browser.browser.metrics\",description:\"request\",startTimestamp:n+cs(e.requestStart),endTimestamp:n+cs(e.responseEnd)}),as(t,{op:\"browser\",origin:\"auto.browser.browser.metrics\",description:\"response\",startTimestamp:n+cs(e.responseStart),endTimestamp:n+cs(e.responseEnd)}))}(t,e,n)}(t,e,n),s=n+cs(e.responseStart),i=n+cs(e.requestStart);break;case\"mark\":case\"paint\":case\"measure\":{!function(t,e,n,r,s){const i=s+n,o=i+r;as(t,{description:e.name,endTimestamp:o,op:e.entryType,origin:\"auto.resource.browser.metrics\",startTimestamp:i})}(t,e,r,o,n);const s=qr(),i=e.startTime<s.firstHiddenTime;\"first-paint\"===e.name&&i&&(ds.fp={value:e.startTime,unit:\"millisecond\"}),\"first-contentful-paint\"===e.name&&i&&(ds.fcp={value:e.startTime,unit:\"millisecond\"});break}case\"resource\":!function(t,e,n,r,s,i){if(\"xmlhttprequest\"===e.initiatorType||\"fetch\"===e.initiatorType)return;const o=Yt(n),a={};gs(a,e,\"transferSize\",\"http.response_transfer_size\"),gs(a,e,\"encodedBodySize\",\"http.response_content_length\"),gs(a,e,\"decodedBodySize\",\"http.decoded_response_content_length\"),\"renderBlockingStatus\"in e&&(a[\"resource.render_blocking_status\"]=e.renderBlockingStatus);o.protocol&&(a[\"url.scheme\"]=o.protocol.split(\":\").pop());o.host&&(a[\"server.address\"]=o.host);a[\"url.same_origin\"]=n.includes(jr.location.origin);const c=i+r,u=c+s;as(t,{description:n.replace(jr.location.origin,\"\"),endTimestamp:u,op:e.initiatorType?`resource.${e.initiatorType}`:\"resource.other\",origin:\"auto.resource.browser.metrics\",startTimestamp:c,data:a})}(t,e,e.name,r,o,n)}})),fs=Math.max(r.length-1,0),function(t){const e=jr.navigator;if(!e)return;const n=e.connection;n&&(n.effectiveType&&t.setTag(\"effectiveConnectionType\",n.effectiveType),n.type&&t.setTag(\"connectionType\",n.type),os(n.rtt)&&(ds[\"connection.rtt\"]={value:n.rtt,unit:\"millisecond\"}));os(e.deviceMemory)&&t.setTag(\"deviceMemory\",`${e.deviceMemory} GB`);os(e.hardwareConcurrency)&&t.setTag(\"hardwareConcurrency\",String(e.hardwareConcurrency))}(t),\"pageload\"===o){!function(t,e,n,r){\"number\"==typeof e&&r&&(t.ttfb={value:1e3*Math.max(e-r,0),unit:\"millisecond\"},\"number\"==typeof n&&n<=e&&(t[\"ttfb.requestTime\"]={value:1e3*(e-n),unit:\"millisecond\"}))}(ds,s,i,a),[\"fcp\",\"fp\",\"lcp\"].forEach((t=>{if(!ds[t]||!a||n>=a)return;const e=ds[t].value,r=n+cs(e),s=Math.abs(1e3*(r-a));ds[t].value=s}));const e=ds[\"mark.fid\"];e&&ds.fid&&(as(t,{description:\"first input delay\",endTimestamp:e.value+cs(ds.fid.value),op:\"ui.action\",origin:\"auto.ui.browser.metrics\",startTimestamp:e.value}),delete ds[\"mark.fid\"]),\"fcp\"in ds||delete ds.cls,Object.keys(ds).forEach((t=>{!function(t,e,n){const r=kn();r&&r.setMeasurement(t,e,n)}(t,ds[t].value,ds[t].unit)})),function(t){ls&&(ls.element&&t.setTag(\"lcp.element\",E(ls.element)),ls.id&&t.setTag(\"lcp.id\",ls.id),ls.url&&t.setTag(\"lcp.url\",ls.url.trim().slice(0,200)),t.setTag(\"lcp.size\",ls.size));hs&&hs.sources&&hs.sources.forEach(((e,n)=>t.setTag(`cls.source.${n+1}`,E(e.node))))}(t)}ls=void 0,hs=void 0,ds={}}function ys(t,e,n,r,s,i){const o=i?e[i]:e[`${n}End`],a=e[`${n}Start`];a&&o&&as(t,{op:\"browser\",origin:\"auto.browser.browser.metrics\",description:s||n,startTimestamp:r+cs(a),endTimestamp:r+cs(o)})}function gs(t,e,n,r){const s=e[n];null!=s&&s<2147483647&&(t[r]=s)}function vs(t,e,n,r,s=\"auto.http.browser\"){if(!Mn()||!t.fetchData)return;const i=e(t.fetchData.url);if(t.endTimestamp&&i){const e=t.fetchData.__span;if(!e)return;const n=r[e];if(n){if(t.response){En(n,t.response.status);const e=t.response&&t.response.headers&&t.response.headers.get(\"content-length\");if(e){const t=parseInt(e);t>0&&n.setAttribute(\"http.response_content_length\",t)}}else t.error&&n.setStatus(\"internal_error\");n.end(),delete r[e]}return}const o=Xe(),a=Je(),{method:c,url:u}=t.fetchData,l=i?Dn({name:`${c} ${u}`,onlyIfParent:!0,attributes:{url:u,type:\"fetch\",\"http.method\":c,[In]:s},op:\"http.client\"}):void 0;if(l&&(t.fetchData.__span=l.spanContext().spanId,r[l.spanContext().spanId]=l),n(t.fetchData.url)&&a){const e=t.args[0];t.args[1]=t.args[1]||{};const n=t.args[1];n.headers=function(t,e,n,r,s){const i=s||n.getSpan(),o=yn(),{traceId:a,spanId:c,sampled:u,dsc:l}={...o.getPropagationContext(),...n.getPropagationContext()},h=i?$e(i):le(a,c,u),f=oe(l||(i?en(i):tn(a,e,n))),p=r.headers||(\"undefined\"!=typeof Request&&d(t,Request)?t.headers:void 0);if(p){if(\"undefined\"!=typeof Headers&&d(p,Headers)){const t=new Headers(p);return t.append(\"sentry-trace\",h),f&&t.append(ne,f),t}if(Array.isArray(p)){const t=[...p,[\"sentry-trace\",h]];return f&&t.push([ne,f]),t}{const t=\"baggage\"in p?p.baggage:void 0,e=[];return Array.isArray(t)?e.push(...t):t&&e.push(t),f&&e.push(f),{...p,\"sentry-trace\":h,baggage:e.length>0?e.join(\",\"):void 0}}}return{\"sentry-trace\":h,baggage:f}}(e,a,o,n,l)}return l}const bs=[\"localhost\",/^\\/(?!\\/)/],ks={traceFetch:!0,traceXHR:!0,enableHTTPTimings:!0,tracingOrigins:bs,tracePropagationTargets:bs};function ws(t){const{traceFetch:e,traceXHR:n,tracePropagationTargets:r,tracingOrigins:s,shouldCreateSpanForRequest:i,enableHTTPTimings:o}={traceFetch:ks.traceFetch,traceXHR:ks.traceXHR,...t},a=\"function\"==typeof i?i:t=>!0,c=t=>function(t,e){return v(t,e||bs)}(t,r||s),u={};e&&Tt((t=>{const e=vs(t,a,c,u);o&&e&&Ss(e)})),n&&Pt((t=>{const e=function(t,e,n,r){const s=t.xhr,i=s&&s.__sentry_xhr_v3__;if(!Mn()||!s||s.__sentry_own_request__||!i)return;const o=e(i.url);if(t.endTimestamp&&o){const t=s.__sentry_xhr_span_id__;if(!t)return;const e=r[t];return void(e&&void 0!==i.status_code&&(En(e,i.status_code),e.end(),delete r[t]))}const a=Xe(),c=yn(),u=o?Dn({name:`${i.method} ${i.url}`,onlyIfParent:!0,attributes:{type:\"xhr\",\"http.method\":i.method,url:i.url,[In]:\"auto.http.browser\"},op:\"http.client\"}):void 0;u&&(s.__sentry_xhr_span_id__=u.spanContext().spanId,r[s.__sentry_xhr_span_id__]=u);const l=Je();if(s.setRequestHeader&&n(i.url)&&l){const{traceId:t,spanId:e,sampled:n,dsc:r}={...c.getPropagationContext(),...a.getPropagationContext()};!function(t,e,n){try{t.setRequestHeader(\"sentry-trace\",e),n&&t.setRequestHeader(ne,n)}catch(t){}}(s,u?$e(u):le(t,e,n),oe(r||(u?en(u):tn(t,l,a))))}return u}(t,a,c,u);o&&e&&Ss(e)}))}function Ss(t){const{url:e}=Fe(t).data||{};if(!e||\"string\"!=typeof e)return;const n=Qr(\"resource\",(({entries:r})=>{r.forEach((r=>{if(function(t){return\"resource\"===t.entryType&&\"initiatorType\"in t&&\"string\"==typeof t.nextHopProtocol&&(\"fetch\"===t.initiatorType||\"xmlhttprequest\"===t.initiatorType)}(r)&&r.name.endsWith(e)){(function(t){const{name:e,version:n}=function(t){let e=\"unknown\",n=\"unknown\",r=\"\";for(const s of t){if(\"/\"===s){[e,n]=t.split(\"/\");break}if(!isNaN(Number(s))){e=\"h\"===r?\"http\":r,n=t.split(r)[1];break}r+=s}r===t&&(e=r);return{name:e,version:n}}(t.nextHopProtocol),r=[];if(r.push([\"network.protocol.version\",n],[\"network.protocol.name\",e]),!ee)return r;return[...r,[\"http.request.redirect_start\",Ts(t.redirectStart)],[\"http.request.fetch_start\",Ts(t.fetchStart)],[\"http.request.domain_lookup_start\",Ts(t.domainLookupStart)],[\"http.request.domain_lookup_end\",Ts(t.domainLookupEnd)],[\"http.request.connect_start\",Ts(t.connectStart)],[\"http.request.secure_connection_start\",Ts(t.secureConnectionStart)],[\"http.request.connection_end\",Ts(t.connectEnd)],[\"http.request.request_start\",Ts(t.requestStart)],[\"http.request.response_start\",Ts(t.responseStart)],[\"http.request.response_end\",Ts(t.responseEnd)]]})(r).forEach((e=>t.setAttribute(...e))),setTimeout(n)}}))}))}function Ts(t=0){return((ee||performance.timeOrigin)+t)/1e3}const _s={...Un,markBackgroundTransactions:!0,routingInstrumentation:function(t,e=!0,n=!0){if(!jr||!jr.location)return;let r,s=jr.location.href;e&&(r=t({name:jr.location.pathname,startTimestamp:ee?ee/1e3:void 0,op:\"pageload\",origin:\"auto.pageload.browser\",metadata:{source:\"url\"}})),n&&jt((({to:e,from:n})=>{void 0===n&&s&&-1!==s.indexOf(e)?s=void 0:n!==e&&(s=void 0,r&&r.end(),r=t({name:jr.location.pathname,op:\"navigation\",origin:\"auto.navigation.browser\",metadata:{source:\"url\"}}))}))},startTransactionOnLocationChange:!0,startTransactionOnPageLoad:!0,enableLongTask:!0,_experiments:{},...ks};class xs{constructor(t){this.name=\"BrowserTracing\",this.Ht=!1,Gn(),this.options={..._s,...t},void 0!==this.options._experiments.enableLongTask&&(this.options.enableLongTask=this.options._experiments.enableLongTask),t&&!t.tracePropagationTargets&&t.tracingOrigins&&(this.options.tracePropagationTargets=t.tracingOrigins),this.qt=ps(),this.options.enableLongTask&&Qr(\"longtask\",(({entries:t})=>{for(const e of t){const t=kn();if(!t)return;const n=cs(ee+e.startTime),r=cs(e.duration);t.startChild({description:\"Main UI thread blocked\",op:\"ui.long-task\",origin:\"auto.ui.browser.metrics\",startTimestamp:n,endTimestamp:n+r})}})),this.options._experiments.enableInteractions&&Qr(\"event\",(({entries:t})=>{for(const e of t){const t=kn();if(!t)return;if(\"click\"===e.name){const n=cs(ee+e.startTime),r=cs(e.duration),s={description:E(e.target),op:`ui.interaction.${e.name}`,origin:\"auto.ui.browser.metrics\",startTimestamp:n,endTimestamp:n+r},i=A(e.target);i&&(s.attributes={\"ui.component_name\":i}),t.startChild(s)}}}))}setupOnce(t,e){this.Wt=e;const n=e().getClient(),r=n&&n.getOptions(),{routingInstrumentation:s,startTransactionOnLocationChange:i,startTransactionOnPageLoad:o,markBackgroundTransactions:a,traceFetch:c,traceXHR:u,shouldCreateSpanForRequest:l,enableHTTPTimings:h,_experiments:f}=this.options,d=r&&r.tracePropagationTargets,p=d||this.options.tracePropagationTargets;s((t=>{const n=this.Kt(t);return this.options._experiments.onStartRouteTransaction&&this.options._experiments.onStartRouteTransaction(n,t,e),n}),o,i),a&&jr&&jr.document&&jr.document.addEventListener(\"visibilitychange\",(()=>{const t=kn();if(jr.document.hidden&&t){const e=\"cancelled\",{op:n,status:r}=Fe(t);r||t.setStatus(e),t.setTag(\"visibilitychange\",\"document.hidden\"),t.end()}})),f.enableInteractions&&this.Jt(),ws({traceFetch:c,traceXHR:u,tracePropagationTargets:p,shouldCreateSpanForRequest:l,enableHTTPTimings:h})}Kt(t){if(!this.Wt)return;const e=this.Wt(),{beforeNavigate:n,idleTimeout:r,finalTimeout:s,heartbeatInterval:i}=this.options,o=\"pageload\"===t.op;let a;if(o){const e=o?Is(\"sentry-trace\"):\"\",n=o?Is(\"baggage\"):void 0,{traceId:r,dsc:s,parentSpanId:i,sampled:c}=function(t,e){const n=ue(t),r=ie(e),{traceId:s,parentSpanId:i,parentSampled:o}=n||{};return n?{traceId:s||ot(),parentSpanId:i||ot().substring(16),spanId:ot().substring(16),sampled:o,dsc:r||{}}:{traceId:s||ot(),spanId:ot().substring(16)}}(e,n);a={traceId:r,parentSpanId:i,parentSampled:c,...t,metadata:{...t.metadata,dynamicSamplingContext:s},trimEnd:!0}}else a={trimEnd:!0,...t};const c=\"function\"==typeof n?n(a):a,u=void 0===c?{...a,sampled:!1}:c;u.metadata=u.name!==a.name?{...u.metadata,source:\"custom\"}:u.metadata,this.Xt=u.name,this.Gt=function(t){const e=t.attributes&&t.attributes[\"sentry.source\"],n=t.data&&t.data[\"sentry.source\"],r=t.metadata&&t.metadata.source;return e||n||r}(u),u.sampled;const{location:l}=jr,h=Xn(e,u,r,s,!0,{location:l},i,o);return o&&(jr.document.addEventListener(\"readystatechange\",(()=>{[\"interactive\",\"complete\"].includes(jr.document.readyState)&&h.sendAutoFinishSignal()})),[\"interactive\",\"complete\"].includes(jr.document.readyState)&&h.sendAutoFinishSignal()),h.registerBeforeFinishCallback((t=>{this.qt(),ms(t)})),h}Jt(){let t;const e=()=>{const{idleTimeout:e,finalTimeout:n,heartbeatInterval:r}=this.options,s=kn();if(s&&s.op&&[\"navigation\",\"pageload\"].includes(s.op))return;if(t&&(t.setFinishReason(\"interactionInterrupted\"),t.end(),t=void 0),!this.Wt)return;if(!this.Xt)return;const i=this.Wt(),{location:o}=jr,a={name:this.Xt,op:\"ui.action.click\",trimEnd:!0,data:{[Tn]:this.Gt||\"url\"}};t=Xn(i,a,e,n,!0,{location:o},r)};[\"click\"].forEach((t=>{addEventListener(t,e,{once:!1,capture:!0})}))}}function Is(t){const e=(n=`meta[name=${t}]`,C.document&&C.document.querySelector?C.document.querySelector(n):null);var n;return e?e.getAttribute(\"content\"):void 0}function Cs(){Gn()}const Es=_,Os=\"sentryReplaySession\",As=\"Unable to send Replay\",Rs=15e4,Ms=5e3,Ds=2e7,$s=36e5;function Ls(t){let e,n=t[0],r=1;for(;r<t.length;){const s=t[r],i=t[r+1];if(r+=2,(\"optionalAccess\"===s||\"optionalCall\"===s)&&null==n)return;\"access\"===s||\"optionalAccess\"===s?(e=n,n=i(n)):\"call\"!==s&&\"optionalCall\"!==s||(n=i(((...t)=>n.call(e,...t))),e=void 0)}return n}var js;function Fs(t){const e=Ls([t,\"optionalAccess\",t=>t.host]);return Boolean(Ls([e,\"optionalAccess\",t=>t.shadowRoot])===t)}function Ns(t){return\"[object ShadowRoot]\"===Object.prototype.toString.call(t)}function Ps(t){try{const n=t.rules||t.cssRules;return n?((e=Array.from(n,Bs).join(\"\")).includes(\" background-clip: text;\")&&!e.includes(\" -webkit-background-clip: text;\")&&(e=e.replace(\" background-clip: text;\",\" -webkit-background-clip: text; background-clip: text;\")),e):null}catch(t){return null}var e}function Bs(t){let e;if(function(t){return\"styleSheet\"in t}(t))try{e=Ps(t.styleSheet)||function(t){const{cssText:e}=t;if(e.split('\"').length<3)return e;const n=[\"@import\",`url(${JSON.stringify(t.href)})`];return\"\"===t.layerName?n.push(\"layer\"):t.layerName&&n.push(`layer(${t.layerName})`),t.supportsText&&n.push(`supports(${t.supportsText})`),t.media.length&&n.push(t.media.mediaText),n.join(\" \")+\";\"}(t)}catch(t){}else if(function(t){return\"selectorText\"in t}(t)&&t.selectorText.includes(\":\"))return function(t){const e=/(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;return t.replace(e,\"$1\\\\$2\")}(t.cssText);return e||t.cssText}!function(t){t[t.Document=0]=\"Document\",t[t.DocumentType=1]=\"DocumentType\",t[t.Element=2]=\"Element\",t[t.Text=3]=\"Text\",t[t.CDATA=4]=\"CDATA\",t[t.Comment=5]=\"Comment\"}(js||(js={}));class Us{constructor(){this.idNodeMap=new Map,this.nodeMetaMap=new WeakMap}getId(t){if(!t)return-1;const e=Ls([this,\"access\",t=>t.getMeta,\"call\",e=>e(t),\"optionalAccess\",t=>t.id]);return r=()=>-1,null!=(n=e)?n:r();var n,r}getNode(t){return this.idNodeMap.get(t)||null}getIds(){return Array.from(this.idNodeMap.keys())}getMeta(t){return this.nodeMetaMap.get(t)||null}removeNodeFromMap(t){const e=this.getId(t);this.idNodeMap.delete(e),t.childNodes&&t.childNodes.forEach((t=>this.removeNodeFromMap(t)))}has(t){return this.idNodeMap.has(t)}hasNode(t){return this.nodeMetaMap.has(t)}add(t,e){const n=e.id;this.idNodeMap.set(n,t),this.nodeMetaMap.set(t,e)}replace(t,e){const n=this.getNode(t);if(n){const t=this.nodeMetaMap.get(n);t&&this.nodeMetaMap.set(e,t)}this.idNodeMap.set(t,e)}reset(){this.idNodeMap=new Map,this.nodeMetaMap=new WeakMap}}function zs({maskInputOptions:t,tagName:e,type:n}){return\"OPTION\"===e&&(e=\"SELECT\"),Boolean(t[e.toLowerCase()]||n&&t[n]||\"password\"===n||\"INPUT\"===e&&!n&&t.text)}function Hs({isMasked:t,element:e,value:n,maskInputFn:r}){let s=n||\"\";return t?(r&&(s=r(s,e)),\"*\".repeat(s.length)):s}function qs(t){return t.toLowerCase()}function Ws(t){return t.toUpperCase()}const Ks=\"__rrweb_original__\";function Js(t){const e=t.type;return t.hasAttribute(\"data-rr-is-password\")?\"password\":e?qs(e):null}function Xs(t,e,n){return\"INPUT\"!==e||\"radio\"!==n&&\"checkbox\"!==n?t.value:t.getAttribute(\"value\")||\"\"}let Gs=1;const Ys=new RegExp(\"[^a-z0-9-_:]\");function Vs(){return Gs++}let Qs,Zs;const ti=/url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm,ei=/^(?:[a-z+]+:)?\\/\\//i,ni=/^www\\..*/i,ri=/^(data:)([^,]*),(.*)/i;function si(t,e){return(t||\"\").replace(ti,((t,n,r,s,i,o)=>{const a=r||i||o,c=n||s||\"\";if(!a)return t;if(ei.test(a)||ni.test(a))return`url(${c}${a}${c})`;if(ri.test(a))return`url(${c}${a}${c})`;if(\"/\"===a[0])return`url(${c}${function(t){let e=\"\";return e=t.indexOf(\"//\")>-1?t.split(\"/\").slice(0,3).join(\"/\"):t.split(\"/\")[0],e=e.split(\"?\")[0],e}(e)+a}${c})`;const u=e.split(\"/\"),l=a.split(\"/\");u.pop();for(const t of l)\".\"!==t&&(\"..\"===t?u.pop():u.push(t));return`url(${c}${u.join(\"/\")}${c})`}))}const ii=/^[^ \\t\\n\\r\\u000c]+/,oi=/^[, \\t\\n\\r\\u000c]+/;function ai(t,e){if(!e||\"\"===e.trim())return e;const n=t.createElement(\"a\");return n.href=e,n.href}function ci(t){return Boolean(\"svg\"===t.tagName||t.ownerSVGElement)}function ui(){const t=document.createElement(\"a\");return t.href=\"\",t.href}function li(t,e,n,r,s,i){return r?\"src\"===n||\"href\"===n&&(\"use\"!==e||\"#\"!==r[0])||\"xlink:href\"===n&&\"#\"!==r[0]?ai(t,r):\"background\"!==n||\"table\"!==e&&\"td\"!==e&&\"th\"!==e?\"srcset\"===n?function(t,e){if(\"\"===e.trim())return e;let n=0;function r(t){let r;const s=t.exec(e.substring(n));return s?(r=s[0],n+=r.length,r):\"\"}const s=[];for(;r(oi),!(n>=e.length);){let i=r(ii);if(\",\"===i.slice(-1))i=ai(t,i.substring(0,i.length-1)),s.push(i);else{let r=\"\";i=ai(t,i);let o=!1;for(;;){const t=e.charAt(n);if(\"\"===t){s.push((i+r).trim());break}if(o)\")\"===t&&(o=!1);else{if(\",\"===t){n+=1,s.push((i+r).trim());break}\"(\"===t&&(o=!0)}r+=t,n+=1}}}return s.join(\", \")}(t,r):\"style\"===n?si(r,ui()):\"object\"===e&&\"data\"===n?ai(t,r):\"function\"==typeof i?i(n,r,s):r:ai(t,r):r}function hi(t,e,n){return(\"video\"===t||\"audio\"===t)&&\"autoplay\"===e}function fi(t,e,n=1/0,r=0){return t?t.nodeType!==t.ELEMENT_NODE||r>n?-1:e(t)?r:fi(t.parentNode,e,n,r+1):-1}function di(t,e){return n=>{const r=n;if(null===r)return!1;try{if(t)if(\"string\"==typeof t){if(r.matches(`.${t}`))return!0}else if(function(t,e){for(let n=t.classList.length;n--;){const r=t.classList[n];if(e.test(r))return!0}return!1}(r,t))return!0;return!(!e||!r.matches(e))}catch(t){return!1}}}function pi(t,e,n,r,s,i){try{const o=t.nodeType===t.ELEMENT_NODE?t:t.parentElement;if(null===o)return!1;if(\"INPUT\"===o.tagName){const t=o.getAttribute(\"autocomplete\");if([\"current-password\",\"new-password\",\"cc-number\",\"cc-exp\",\"cc-exp-month\",\"cc-exp-year\",\"cc-csc\"].includes(t))return!0}let a=-1,c=-1;if(i){if(c=fi(o,di(r,s)),c<0)return!0;a=fi(o,di(e,n),c>=0?c:1/0)}else{if(a=fi(o,di(e,n)),a<0)return!1;c=fi(o,di(r,s),a>=0?a:1/0)}return a>=0?!(c>=0)||a<=c:!(c>=0)&&!!i}catch(t){}return!!i}function mi(t,e){const{doc:n,mirror:r,blockClass:s,blockSelector:i,unblockSelector:o,maskAllText:a,maskAttributeFn:c,maskTextClass:u,unmaskTextClass:l,maskTextSelector:h,unmaskTextSelector:f,inlineStylesheet:d,maskInputOptions:p={},maskTextFn:m,maskInputFn:y,dataURLOptions:g={},inlineImages:v,recordCanvas:b,keepIframeSrcFn:k,newlyAddedElement:w=!1}=e,S=function(t,e){if(!e.hasNode(t))return;const n=e.getId(t);return 1===n?void 0:n}(n,r);switch(t.nodeType){case t.DOCUMENT_NODE:return\"CSS1Compat\"!==t.compatMode?{type:js.Document,childNodes:[],compatMode:t.compatMode}:{type:js.Document,childNodes:[]};case t.DOCUMENT_TYPE_NODE:return{type:js.DocumentType,name:t.name,publicId:t.publicId,systemId:t.systemId,rootId:S};case t.ELEMENT_NODE:return function(t,e){const{doc:n,blockClass:r,blockSelector:s,unblockSelector:i,inlineStylesheet:o,maskInputOptions:a={},maskAttributeFn:c,maskInputFn:u,dataURLOptions:l={},inlineImages:h,recordCanvas:f,keepIframeSrcFn:d,newlyAddedElement:p=!1,rootId:m,maskAllText:y,maskTextClass:g,unmaskTextClass:v,maskTextSelector:b,unmaskTextSelector:k}=e,w=function(t,e,n,r){try{if(r&&t.matches(r))return!1;if(\"string\"==typeof e){if(t.classList.contains(e))return!0}else for(let n=t.classList.length;n--;){const r=t.classList[n];if(e.test(r))return!0}if(n)return t.matches(n)}catch(t){}return!1}(t,r,s,i),S=function(t){if(t instanceof HTMLFormElement)return\"form\";const e=qs(t.tagName);return Ys.test(e)?\"div\":e}(t);let T={};const _=t.attributes.length;for(let e=0;e<_;e++){const r=t.attributes[e];r.name&&!hi(S,r.name)&&(T[r.name]=li(n,S,qs(r.name),r.value,t,c))}if(\"link\"===S&&o){const e=Array.from(n.styleSheets).find((e=>e.href===t.href));let r=null;e&&(r=Ps(e)),r&&(delete T.rel,delete T.href,T._cssText=si(r,e.href))}if(\"style\"===S&&t.sheet&&!(t.innerText||t.textContent||\"\").trim().length){const e=Ps(t.sheet);e&&(T._cssText=si(e,ui()))}if(\"input\"===S||\"textarea\"===S||\"select\"===S||\"option\"===S){const e=t,n=Js(e),r=Xs(e,Ws(S),n),s=e.checked;if(\"submit\"!==n&&\"button\"!==n&&r){const t=pi(e,g,b,v,k,zs({type:n,tagName:Ws(S),maskInputOptions:a}));T.value=Hs({isMasked:t,element:e,value:r,maskInputFn:u})}s&&(T.checked=s)}\"option\"===S&&(t.selected&&!a.select?T.selected=!0:delete T.selected);if(\"canvas\"===S&&f)if(\"2d\"===t.__context)(function(t){const e=t.getContext(\"2d\");if(!e)return!0;for(let n=0;n<t.width;n+=50)for(let r=0;r<t.height;r+=50){const s=e.getImageData,i=Ks in s?s.__rrweb_original__:s;if(new Uint32Array(i.call(e,n,r,Math.min(50,t.width-n),Math.min(50,t.height-r)).data.buffer).some((t=>0!==t)))return!1}return!0})(t)||(T.rr_dataURL=t.toDataURL(l.type,l.quality));else if(!(\"__context\"in t)){const e=t.toDataURL(l.type,l.quality),n=document.createElement(\"canvas\");n.width=t.width,n.height=t.height;e!==n.toDataURL(l.type,l.quality)&&(T.rr_dataURL=e)}if(\"img\"===S&&h){Qs||(Qs=n.createElement(\"canvas\"),Zs=Qs.getContext(\"2d\"));const e=t,r=e.crossOrigin;e.crossOrigin=\"anonymous\";const s=()=>{e.removeEventListener(\"load\",s);try{Qs.width=e.naturalWidth,Qs.height=e.naturalHeight,Zs.drawImage(e,0,0),T.rr_dataURL=Qs.toDataURL(l.type,l.quality)}catch(t){console.warn(`Cannot inline img src=${e.currentSrc}! Error: ${t}`)}r?T.crossOrigin=r:e.removeAttribute(\"crossorigin\")};e.complete&&0!==e.naturalWidth?s():e.addEventListener(\"load\",s)}\"audio\"!==S&&\"video\"!==S||(T.rr_mediaState=t.paused?\"paused\":\"played\",T.rr_mediaCurrentTime=t.currentTime);p||(t.scrollLeft&&(T.rr_scrollLeft=t.scrollLeft),t.scrollTop&&(T.rr_scrollTop=t.scrollTop));if(w){const{width:e,height:n}=t.getBoundingClientRect();T={class:T.class,rr_width:`${e}px`,rr_height:`${n}px`}}\"iframe\"!==S||d(T.src)||(t.contentDocument||(T.rr_src=T.src),delete T.src);let x;try{customElements.get(S)&&(x=!0)}catch(t){}return{type:js.Element,tagName:S,attributes:T,childNodes:[],isSVG:ci(t)||void 0,needBlock:w,rootId:m,isCustom:x}}(t,{doc:n,blockClass:s,blockSelector:i,unblockSelector:o,inlineStylesheet:d,maskAttributeFn:c,maskInputOptions:p,maskInputFn:y,dataURLOptions:g,inlineImages:v,recordCanvas:b,keepIframeSrcFn:k,newlyAddedElement:w,rootId:S,maskAllText:a,maskTextClass:u,unmaskTextClass:l,maskTextSelector:h,unmaskTextSelector:f});case t.TEXT_NODE:return function(t,e){const{maskAllText:n,maskTextClass:r,unmaskTextClass:s,maskTextSelector:i,unmaskTextSelector:o,maskTextFn:a,maskInputOptions:c,maskInputFn:u,rootId:l}=e,h=t.parentNode&&t.parentNode.tagName;let f=t.textContent;const d=\"STYLE\"===h||void 0,p=\"SCRIPT\"===h||void 0,m=\"TEXTAREA\"===h||void 0;if(d&&f){try{t.nextSibling||t.previousSibling||Ls([t,\"access\",t=>t.parentNode,\"access\",t=>t.sheet,\"optionalAccess\",t=>t.cssRules])&&(f=Ps(t.parentNode.sheet))}catch(e){console.warn(`Cannot get CSS styles from text's parentNode. Error: ${e}`,t)}f=si(f,ui())}p&&(f=\"SCRIPT_PLACEHOLDER\");const y=pi(t,r,i,s,o,n);d||p||m||!f||!y||(f=a?a(f):f.replace(/[\\S]/g,\"*\"));m&&f&&(c.textarea||y)&&(f=u?u(f,t.parentNode):f.replace(/[\\S]/g,\"*\"));if(\"OPTION\"===h&&f){f=Hs({isMasked:pi(t,r,i,s,o,zs({type:null,tagName:h,maskInputOptions:c})),element:t,value:f,maskInputFn:u})}return{type:js.Text,textContent:f||\"\",isStyle:d,rootId:l}}(t,{maskAllText:a,maskTextClass:u,unmaskTextClass:l,maskTextSelector:h,unmaskTextSelector:f,maskTextFn:m,maskInputOptions:p,maskInputFn:y,rootId:S});case t.CDATA_SECTION_NODE:return{type:js.CDATA,textContent:\"\",rootId:S};case t.COMMENT_NODE:return{type:js.Comment,textContent:t.textContent||\"\",rootId:S};default:return!1}}function yi(t){return null==t?\"\":t.toLowerCase()}function gi(t,e){const{doc:n,mirror:r,blockClass:s,blockSelector:i,unblockSelector:o,maskAllText:a,maskTextClass:c,unmaskTextClass:u,maskTextSelector:l,unmaskTextSelector:h,skipChild:f=!1,inlineStylesheet:d=!0,maskInputOptions:p={},maskAttributeFn:m,maskTextFn:y,maskInputFn:g,slimDOMOptions:v,dataURLOptions:b={},inlineImages:k=!1,recordCanvas:w=!1,onSerialize:S,onIframeLoad:T,iframeLoadTimeout:_=5e3,onStylesheetLoad:x,stylesheetLoadTimeout:I=5e3,keepIframeSrcFn:C=(()=>!1),newlyAddedElement:E=!1}=e;let{preserveWhiteSpace:O=!0}=e;const A=mi(t,{doc:n,mirror:r,blockClass:s,blockSelector:i,maskAllText:a,unblockSelector:o,maskTextClass:c,unmaskTextClass:u,maskTextSelector:l,unmaskTextSelector:h,inlineStylesheet:d,maskInputOptions:p,maskAttributeFn:m,maskTextFn:y,maskInputFn:g,dataURLOptions:b,inlineImages:k,recordCanvas:w,keepIframeSrcFn:C,newlyAddedElement:E});if(!A)return console.warn(t,\"not serialized\"),null;let R;R=r.hasNode(t)?r.getId(t):!function(t,e){if(e.comment&&t.type===js.Comment)return!0;if(t.type===js.Element){if(e.script&&(\"script\"===t.tagName||\"link\"===t.tagName&&(\"preload\"===t.attributes.rel||\"modulepreload\"===t.attributes.rel)&&\"script\"===t.attributes.as||\"link\"===t.tagName&&\"prefetch\"===t.attributes.rel&&\"string\"==typeof t.attributes.href&&t.attributes.href.endsWith(\".js\")))return!0;if(e.headFavicon&&(\"link\"===t.tagName&&\"shortcut icon\"===t.attributes.rel||\"meta\"===t.tagName&&(yi(t.attributes.name).match(/^msapplication-tile(image|color)$/)||\"application-name\"===yi(t.attributes.name)||\"icon\"===yi(t.attributes.rel)||\"apple-touch-icon\"===yi(t.attributes.rel)||\"shortcut icon\"===yi(t.attributes.rel))))return!0;if(\"meta\"===t.tagName){if(e.headMetaDescKeywords&&yi(t.attributes.name).match(/^description|keywords$/))return!0;if(e.headMetaSocial&&(yi(t.attributes.property).match(/^(og|twitter|fb):/)||yi(t.attributes.name).match(/^(og|twitter):/)||\"pinterest\"===yi(t.attributes.name)))return!0;if(e.headMetaRobots&&(\"robots\"===yi(t.attributes.name)||\"googlebot\"===yi(t.attributes.name)||\"bingbot\"===yi(t.attributes.name)))return!0;if(e.headMetaHttpEquiv&&void 0!==t.attributes[\"http-equiv\"])return!0;if(e.headMetaAuthorship&&(\"author\"===yi(t.attributes.name)||\"generator\"===yi(t.attributes.name)||\"framework\"===yi(t.attributes.name)||\"publisher\"===yi(t.attributes.name)||\"progid\"===yi(t.attributes.name)||yi(t.attributes.property).match(/^article:/)||yi(t.attributes.property).match(/^product:/)))return!0;if(e.headMetaVerification&&(\"google-site-verification\"===yi(t.attributes.name)||\"yandex-verification\"===yi(t.attributes.name)||\"csrf-token\"===yi(t.attributes.name)||\"p:domain_verify\"===yi(t.attributes.name)||\"verify-v1\"===yi(t.attributes.name)||\"verification\"===yi(t.attributes.name)||\"shopify-checkout-api-token\"===yi(t.attributes.name)))return!0}}return!1}(A,v)&&(O||A.type!==js.Text||A.isStyle||A.textContent.replace(/^\\s+|\\s+$/gm,\"\").length)?Vs():-2;const M=Object.assign(A,{id:R});if(r.add(t,M),-2===R)return null;S&&S(t);let D=!f;if(M.type===js.Element){D=D&&!M.needBlock,delete M.needBlock;const e=t.shadowRoot;e&&Ns(e)&&(M.isShadowHost=!0)}if((M.type===js.Document||M.type===js.Element)&&D){v.headWhitespace&&M.type===js.Element&&\"head\"===M.tagName&&(O=!1);const e={doc:n,mirror:r,blockClass:s,blockSelector:i,maskAllText:a,unblockSelector:o,maskTextClass:c,unmaskTextClass:u,maskTextSelector:l,unmaskTextSelector:h,skipChild:f,inlineStylesheet:d,maskInputOptions:p,maskAttributeFn:m,maskTextFn:y,maskInputFn:g,slimDOMOptions:v,dataURLOptions:b,inlineImages:k,recordCanvas:w,preserveWhiteSpace:O,onSerialize:S,onIframeLoad:T,iframeLoadTimeout:_,onStylesheetLoad:x,stylesheetLoadTimeout:I,keepIframeSrcFn:C};for(const n of Array.from(t.childNodes)){const t=gi(n,e);t&&M.childNodes.push(t)}if(function(t){return t.nodeType===t.ELEMENT_NODE}(t)&&t.shadowRoot)for(const n of Array.from(t.shadowRoot.childNodes)){const r=gi(n,e);r&&(Ns(t.shadowRoot)&&(r.isShadow=!0),M.childNodes.push(r))}}return t.parentNode&&Fs(t.parentNode)&&Ns(t.parentNode)&&(M.isShadow=!0),M.type===js.Element&&\"iframe\"===M.tagName&&function(t,e,n){const r=t.contentWindow;if(!r)return;let s,i=!1;try{s=r.document.readyState}catch(t){return}if(\"complete\"!==s){const r=setTimeout((()=>{i||(e(),i=!0)}),n);return void t.addEventListener(\"load\",(()=>{clearTimeout(r),i=!0,e()}))}const o=\"about:blank\";if(r.location.href!==o||t.src===o||\"\"===t.src)return setTimeout(e,0),t.addEventListener(\"load\",e);t.addEventListener(\"load\",e)}(t,(()=>{const e=t.contentDocument;if(e&&T){const n=gi(e,{doc:e,mirror:r,blockClass:s,blockSelector:i,unblockSelector:o,maskAllText:a,maskTextClass:c,unmaskTextClass:u,maskTextSelector:l,unmaskTextSelector:h,skipChild:!1,inlineStylesheet:d,maskInputOptions:p,maskAttributeFn:m,maskTextFn:y,maskInputFn:g,slimDOMOptions:v,dataURLOptions:b,inlineImages:k,recordCanvas:w,preserveWhiteSpace:O,onSerialize:S,onIframeLoad:T,iframeLoadTimeout:_,onStylesheetLoad:x,stylesheetLoadTimeout:I,keepIframeSrcFn:C});n&&T(t,n)}}),_),M.type===js.Element&&\"link\"===M.tagName&&\"stylesheet\"===M.attributes.rel&&function(t,e,n){let r,s=!1;try{r=t.sheet}catch(t){return}if(r)return;const i=setTimeout((()=>{s||(e(),s=!0)}),n);t.addEventListener(\"load\",(()=>{clearTimeout(i),s=!0,e()}))}(t,(()=>{if(x){const e=gi(t,{doc:n,mirror:r,blockClass:s,blockSelector:i,unblockSelector:o,maskAllText:a,maskTextClass:c,unmaskTextClass:u,maskTextSelector:l,unmaskTextSelector:h,skipChild:!1,inlineStylesheet:d,maskInputOptions:p,maskAttributeFn:m,maskTextFn:y,maskInputFn:g,slimDOMOptions:v,dataURLOptions:b,inlineImages:k,recordCanvas:w,preserveWhiteSpace:O,onSerialize:S,onIframeLoad:T,iframeLoadTimeout:_,onStylesheetLoad:x,stylesheetLoadTimeout:I,keepIframeSrcFn:C});e&&x(t,e)}}),I),M}function vi(t){let e,n=t[0],r=1;for(;r<t.length;){const s=t[r],i=t[r+1];if(r+=2,(\"optionalAccess\"===s||\"optionalCall\"===s)&&null==n)return;\"access\"===s||\"optionalAccess\"===s?(e=n,n=i(n)):\"call\"!==s&&\"optionalCall\"!==s||(n=i(((...t)=>n.call(e,...t))),e=void 0)}return n}function bi(t,e,n=document){const r={capture:!0,passive:!0};return n.addEventListener(t,e,r),()=>n.removeEventListener(t,e,r)}const ki=\"Please stop import mirror directly. Instead of that,\\r\\nnow you can use replayer.getMirror() to access the mirror instance of a replayer,\\r\\nor you can use record.mirror to access the mirror instance during recording.\";let wi={map:{},getId:()=>(console.error(ki),-1),getNode:()=>(console.error(ki),null),removeNodeFromMap(){console.error(ki)},has:()=>(console.error(ki),!1),reset(){console.error(ki)}};function Si(t,e,n={}){let r=null,s=0;return function(...i){const o=Date.now();s||!1!==n.leading||(s=o);const a=e-(o-s),c=this;a<=0||a>e?(r&&(clearTimeout(r),r=null),s=o,t.apply(c,i)):r||!1===n.trailing||(r=setTimeout((()=>{s=!1===n.leading?0:Date.now(),r=null,t.apply(c,i)}),a))}}function Ti(t,e,n,r,s=window){const i=s.Object.getOwnPropertyDescriptor(t,e);return s.Object.defineProperty(t,e,r?n:{set(t){setTimeout((()=>{n.set.call(this,t)}),0),i&&i.set&&i.set.call(this,t)}}),()=>Ti(t,e,i||{},!0)}function _i(t,e,n){try{if(!(e in t))return()=>{};const r=t[e],s=n(r);return\"function\"==typeof s&&(s.prototype=s.prototype||{},Object.defineProperties(s,{__rrweb_original__:{enumerable:!1,value:r}})),t[e]=s,()=>{t[e]=r}}catch(t){return()=>{}}}\"undefined\"!=typeof window&&window.Proxy&&window.Reflect&&(wi=new Proxy(wi,{get:(t,e,n)=>(\"map\"===e&&console.error(ki),Reflect.get(t,e,n))}));let xi,Ii=Date.now;function Ci(t){const e=t.document;return{left:e.scrollingElement?e.scrollingElement.scrollLeft:void 0!==t.pageXOffset?t.pageXOffset:vi([e,\"optionalAccess\",t=>t.documentElement,\"access\",t=>t.scrollLeft])||vi([e,\"optionalAccess\",t=>t.body,\"optionalAccess\",t=>t.parentElement,\"optionalAccess\",t=>t.scrollLeft])||vi([e,\"optionalAccess\",t=>t.body,\"optionalAccess\",t=>t.scrollLeft])||0,top:e.scrollingElement?e.scrollingElement.scrollTop:void 0!==t.pageYOffset?t.pageYOffset:vi([e,\"optionalAccess\",t=>t.documentElement,\"access\",t=>t.scrollTop])||vi([e,\"optionalAccess\",t=>t.body,\"optionalAccess\",t=>t.parentElement,\"optionalAccess\",t=>t.scrollTop])||vi([e,\"optionalAccess\",t=>t.body,\"optionalAccess\",t=>t.scrollTop])||0}}function Ei(){return window.innerHeight||document.documentElement&&document.documentElement.clientHeight||document.body&&document.body.clientHeight}function Oi(){return window.innerWidth||document.documentElement&&document.documentElement.clientWidth||document.body&&document.body.clientWidth}function Ai(t,e,n,r,s){if(!t)return!1;const i=t.nodeType===t.ELEMENT_NODE?t:t.parentElement;if(!i)return!1;const o=di(e,n);if(!s){const t=r&&i.matches(r);return o(i)&&!t}const a=fi(i,o);let c=-1;return!(a<0)&&(r&&(c=fi(i,di(null,r))),a>-1&&c<0||a<c)}function Ri(t,e){return-2===e.getId(t)}function Mi(t,e){if(Fs(t))return!1;const n=e.getId(t);return!e.has(n)||(!t.parentNode||t.parentNode.nodeType!==t.DOCUMENT_NODE)&&(!t.parentNode||Mi(t.parentNode,e))}function Di(t){return Boolean(t.changedTouches)}function $i(t,e){return Boolean(\"IFRAME\"===t.nodeName&&e.getMeta(t))}function Li(t,e){return Boolean(\"LINK\"===t.nodeName&&t.nodeType===t.ELEMENT_NODE&&t.getAttribute&&\"stylesheet\"===t.getAttribute(\"rel\")&&e.getMeta(t))}function ji(t){return Boolean(vi([t,\"optionalAccess\",t=>t.shadowRoot]))}/[1-9][0-9]{12}/.test(Date.now().toString())||(Ii=()=>(new Date).getTime());class Fi{constructor(){this.id=1,this.styleIDMap=new WeakMap,this.idStyleMap=new Map}getId(t){return e=this.styleIDMap.get(t),n=()=>-1,null!=e?e:n();var e,n}has(t){return this.styleIDMap.has(t)}add(t,e){if(this.has(t))return this.getId(t);let n;return n=void 0===e?this.id++:e,this.styleIDMap.set(t,n),this.idStyleMap.set(n,t),n}getStyle(t){return this.idStyleMap.get(t)||null}reset(){this.styleIDMap=new WeakMap,this.idStyleMap=new Map,this.id=1}generateId(){return this.id++}}function Ni(t){let e=null;return vi([t,\"access\",t=>t.getRootNode,\"optionalCall\",t=>t(),\"optionalAccess\",t=>t.nodeType])===Node.DOCUMENT_FRAGMENT_NODE&&t.getRootNode().host&&(e=t.getRootNode().host),e}function Pi(t){const e=t.ownerDocument;if(!e)return!1;const n=function(t){let e,n=t;for(;e=Ni(n);)n=e;return n}(t);return e.contains(n)}function Bi(t){const e=t.ownerDocument;return!!e&&(e.contains(t)||Pi(t))}function Ui(...t){return function(){if(xi)return xi;const t=window.document;let e=window.requestAnimationFrame;if(t&&\"function\"==typeof t.createElement)try{const n=t.createElement(\"iframe\");n.hidden=!0,t.head.appendChild(n);const r=n.contentWindow;r&&r.requestAnimationFrame&&(e=r.requestAnimationFrame),t.head.removeChild(n)}catch(t){}return xi=e.bind(window)}()(...t)}var zi=(t=>(t[t.DomContentLoaded=0]=\"DomContentLoaded\",t[t.Load=1]=\"Load\",t[t.FullSnapshot=2]=\"FullSnapshot\",t[t.IncrementalSnapshot=3]=\"IncrementalSnapshot\",t[t.Meta=4]=\"Meta\",t[t.Custom=5]=\"Custom\",t[t.Plugin=6]=\"Plugin\",t))(zi||{}),Hi=(t=>(t[t.Mutation=0]=\"Mutation\",t[t.MouseMove=1]=\"MouseMove\",t[t.MouseInteraction=2]=\"MouseInteraction\",t[t.Scroll=3]=\"Scroll\",t[t.ViewportResize=4]=\"ViewportResize\",t[t.Input=5]=\"Input\",t[t.TouchMove=6]=\"TouchMove\",t[t.MediaInteraction=7]=\"MediaInteraction\",t[t.StyleSheetRule=8]=\"StyleSheetRule\",t[t.CanvasMutation=9]=\"CanvasMutation\",t[t.Font=10]=\"Font\",t[t.Log=11]=\"Log\",t[t.Drag=12]=\"Drag\",t[t.StyleDeclaration=13]=\"StyleDeclaration\",t[t.Selection=14]=\"Selection\",t[t.AdoptedStyleSheet=15]=\"AdoptedStyleSheet\",t[t.CustomElement=16]=\"CustomElement\",t))(Hi||{}),qi=(t=>(t[t.MouseUp=0]=\"MouseUp\",t[t.MouseDown=1]=\"MouseDown\",t[t.Click=2]=\"Click\",t[t.ContextMenu=3]=\"ContextMenu\",t[t.DblClick=4]=\"DblClick\",t[t.Focus=5]=\"Focus\",t[t.Blur=6]=\"Blur\",t[t.TouchStart=7]=\"TouchStart\",t[t.TouchMove_Departed=8]=\"TouchMove_Departed\",t[t.TouchEnd=9]=\"TouchEnd\",t[t.TouchCancel=10]=\"TouchCancel\",t))(qi||{}),Wi=(t=>(t[t.Mouse=0]=\"Mouse\",t[t.Pen=1]=\"Pen\",t[t.Touch=2]=\"Touch\",t))(Wi||{});function Ki(t){let e,n=t[0],r=1;for(;r<t.length;){const s=t[r],i=t[r+1];if(r+=2,(\"optionalAccess\"===s||\"optionalCall\"===s)&&null==n)return;\"access\"===s||\"optionalAccess\"===s?(e=n,n=i(n)):\"call\"!==s&&\"optionalCall\"!==s||(n=i(((...t)=>n.call(e,...t))),e=void 0)}return n}function Ji(t){return\"__ln\"in t}class Xi{constructor(){this.length=0,this.head=null,this.tail=null}get(t){if(t>=this.length)throw new Error(\"Position outside of list range\");let e=this.head;for(let n=0;n<t;n++)e=Ki([e,\"optionalAccess\",t=>t.next])||null;return e}addNode(t){const e={value:t,previous:null,next:null};if(t.__ln=e,t.previousSibling&&Ji(t.previousSibling)){const n=t.previousSibling.__ln.next;e.next=n,e.previous=t.previousSibling.__ln,t.previousSibling.__ln.next=e,n&&(n.previous=e)}else if(t.nextSibling&&Ji(t.nextSibling)&&t.nextSibling.__ln.previous){const n=t.nextSibling.__ln.previous;e.previous=n,e.next=t.nextSibling.__ln,t.nextSibling.__ln.previous=e,n&&(n.next=e)}else this.head&&(this.head.previous=e),e.next=this.head,this.head=e;null===e.next&&(this.tail=e),this.length++}removeNode(t){const e=t.__ln;this.head&&(e.previous?(e.previous.next=e.next,e.next?e.next.previous=e.previous:this.tail=e.previous):(this.head=e.next,this.head?this.head.previous=null:this.tail=null),t.__ln&&delete t.__ln,this.length--)}}const Gi=(t,e)=>`${t}@${e}`;class Yi{constructor(){this.frozen=!1,this.locked=!1,this.texts=[],this.attributes=[],this.removes=[],this.mapRemoves=[],this.movedMap={},this.addedSet=new Set,this.movedSet=new Set,this.droppedSet=new Set,this.processMutations=t=>{t.forEach(this.processMutation),this.emit()},this.emit=()=>{if(this.frozen||this.locked)return;const t=[],e=new Set,n=new Xi,r=t=>{let e=t,n=-2;for(;-2===n;)e=e&&e.nextSibling,n=e&&this.mirror.getId(e);return n},s=s=>{if(!s.parentNode||!Bi(s))return;const i=Fs(s.parentNode)?this.mirror.getId(Ni(s)):this.mirror.getId(s.parentNode),o=r(s);if(-1===i||-1===o)return n.addNode(s);const a=gi(s,{doc:this.doc,mirror:this.mirror,blockClass:this.blockClass,blockSelector:this.blockSelector,maskAllText:this.maskAllText,unblockSelector:this.unblockSelector,maskTextClass:this.maskTextClass,unmaskTextClass:this.unmaskTextClass,maskTextSelector:this.maskTextSelector,unmaskTextSelector:this.unmaskTextSelector,skipChild:!0,newlyAddedElement:!0,inlineStylesheet:this.inlineStylesheet,maskInputOptions:this.maskInputOptions,maskAttributeFn:this.maskAttributeFn,maskTextFn:this.maskTextFn,maskInputFn:this.maskInputFn,slimDOMOptions:this.slimDOMOptions,dataURLOptions:this.dataURLOptions,recordCanvas:this.recordCanvas,inlineImages:this.inlineImages,onSerialize:t=>{$i(t,this.mirror)&&this.iframeManager.addIframe(t),Li(t,this.mirror)&&this.stylesheetManager.trackLinkElement(t),ji(s)&&this.shadowDomManager.addShadowRoot(s.shadowRoot,this.doc)},onIframeLoad:(t,e)=>{this.iframeManager.attachIframe(t,e),this.shadowDomManager.observeAttachShadow(t)},onStylesheetLoad:(t,e)=>{this.stylesheetManager.attachLinkElement(t,e)}});a&&(t.push({parentId:i,nextId:o,node:a}),e.add(a.id))};for(;this.mapRemoves.length;)this.mirror.removeNodeFromMap(this.mapRemoves.shift());for(const t of this.movedSet)Qi(this.removes,t,this.mirror)&&!this.movedSet.has(t.parentNode)||s(t);for(const t of this.addedSet)to(this.droppedSet,t)||Qi(this.removes,t,this.mirror)?to(this.movedSet,t)?s(t):this.droppedSet.add(t):s(t);let i=null;for(;n.length;){let t=null;if(i){const e=this.mirror.getId(i.value.parentNode),n=r(i.value);-1!==e&&-1!==n&&(t=i)}if(!t){let e=n.tail;for(;e;){const n=e;if(e=e.previous,n){const e=this.mirror.getId(n.value.parentNode);if(-1===r(n.value))continue;if(-1!==e){t=n;break}{const e=n.value;if(e.parentNode&&e.parentNode.nodeType===Node.DOCUMENT_FRAGMENT_NODE){const r=e.parentNode.host;if(-1!==this.mirror.getId(r)){t=n;break}}}}}}if(!t){for(;n.head;)n.removeNode(n.head.value);break}i=t.previous,n.removeNode(t.value),s(t.value)}const o={texts:this.texts.map((t=>({id:this.mirror.getId(t.node),value:t.value}))).filter((t=>!e.has(t.id))).filter((t=>this.mirror.has(t.id))),attributes:this.attributes.map((t=>{const{attributes:e}=t;if(\"string\"==typeof e.style){const n=JSON.stringify(t.styleDiff),r=JSON.stringify(t.Yt);n.length<e.style.length&&(n+r).split(\"var(\").length===e.style.split(\"var(\").length&&(e.style=t.styleDiff)}return{id:this.mirror.getId(t.node),attributes:e}})).filter((t=>!e.has(t.id))).filter((t=>this.mirror.has(t.id))),removes:this.removes,adds:t};(o.texts.length||o.attributes.length||o.removes.length||o.adds.length)&&(this.texts=[],this.attributes=[],this.removes=[],this.addedSet=new Set,this.movedSet=new Set,this.droppedSet=new Set,this.movedMap={},this.mutationCb(o))},this.processMutation=t=>{if(Ri(t.target,this.mirror))return;let e;try{e=document.implementation.createHTMLDocument()}catch(t){e=this.doc}switch(t.type){case\"characterData\":{const e=t.target.textContent;Ai(t.target,this.blockClass,this.blockSelector,this.unblockSelector,!1)||e===t.oldValue||this.texts.push({value:pi(t.target,this.maskTextClass,this.maskTextSelector,this.unmaskTextClass,this.unmaskTextSelector,this.maskAllText)&&e?this.maskTextFn?this.maskTextFn(e):e.replace(/[\\S]/g,\"*\"):e,node:t.target});break}case\"attributes\":{const n=t.target;let r=t.attributeName,s=t.target.getAttribute(r);if(\"value\"===r){const e=Js(n),r=n.tagName;s=Xs(n,r,e);const i=zs({maskInputOptions:this.maskInputOptions,tagName:r,type:e});s=Hs({isMasked:pi(t.target,this.maskTextClass,this.maskTextSelector,this.unmaskTextClass,this.unmaskTextSelector,i),element:n,value:s,maskInputFn:this.maskInputFn})}if(Ai(t.target,this.blockClass,this.blockSelector,this.unblockSelector,!1)||s===t.oldValue)return;let i=this.attributes.find((e=>e.node===t.target));if(\"IFRAME\"===n.tagName&&\"src\"===r&&!this.keepIframeSrcFn(s)){if(n.contentDocument)return;r=\"rr_src\"}if(i||(i={node:t.target,attributes:{},styleDiff:{},Yt:{}},this.attributes.push(i)),\"type\"===r&&\"INPUT\"===n.tagName&&\"password\"===(t.oldValue||\"\").toLowerCase()&&n.setAttribute(\"data-rr-is-password\",\"true\"),!hi(n.tagName,r)&&(i.attributes[r]=li(this.doc,qs(n.tagName),qs(r),s,n,this.maskAttributeFn),\"style\"===r)){const r=e.createElement(\"span\");t.oldValue&&r.setAttribute(\"style\",t.oldValue);for(const t of Array.from(n.style)){const e=n.style.getPropertyValue(t),s=n.style.getPropertyPriority(t);e!==r.style.getPropertyValue(t)||s!==r.style.getPropertyPriority(t)?i.styleDiff[t]=\"\"===s?e:[e,s]:i.Yt[t]=[e,s]}for(const t of Array.from(r.style))\"\"===n.style.getPropertyValue(t)&&(i.styleDiff[t]=!1)}break}case\"childList\":if(Ai(t.target,this.blockClass,this.blockSelector,this.unblockSelector,!0))return;t.addedNodes.forEach((e=>this.genAdds(e,t.target))),t.removedNodes.forEach((e=>{const n=this.mirror.getId(e),r=Fs(t.target)?this.mirror.getId(t.target.host):this.mirror.getId(t.target);Ai(t.target,this.blockClass,this.blockSelector,this.unblockSelector,!1)||Ri(e,this.mirror)||!function(t,e){return-1!==e.getId(t)}(e,this.mirror)||(this.addedSet.has(e)?(Vi(this.addedSet,e),this.droppedSet.add(e)):this.addedSet.has(t.target)&&-1===n||Mi(t.target,this.mirror)||(this.movedSet.has(e)&&this.movedMap[Gi(n,r)]?Vi(this.movedSet,e):this.removes.push({parentId:r,id:n,isShadow:!(!Fs(t.target)||!Ns(t.target))||void 0})),this.mapRemoves.push(e))}))}},this.genAdds=(t,e)=>{if(!this.processedNodeManager.inOtherBuffer(t,this)&&!this.addedSet.has(t)&&!this.movedSet.has(t)){if(this.mirror.hasNode(t)){if(Ri(t,this.mirror))return;this.movedSet.add(t);let n=null;e&&this.mirror.hasNode(e)&&(n=this.mirror.getId(e)),n&&-1!==n&&(this.movedMap[Gi(this.mirror.getId(t),n)]=!0)}else this.addedSet.add(t),this.droppedSet.delete(t);Ai(t,this.blockClass,this.blockSelector,this.unblockSelector,!1)||(t.childNodes.forEach((t=>this.genAdds(t))),ji(t)&&t.shadowRoot.childNodes.forEach((e=>{this.processedNodeManager.add(e,this),this.genAdds(e,t)})))}}}init(t){[\"mutationCb\",\"blockClass\",\"blockSelector\",\"unblockSelector\",\"maskAllText\",\"maskTextClass\",\"unmaskTextClass\",\"maskTextSelector\",\"unmaskTextSelector\",\"inlineStylesheet\",\"maskInputOptions\",\"maskAttributeFn\",\"maskTextFn\",\"maskInputFn\",\"keepIframeSrcFn\",\"recordCanvas\",\"inlineImages\",\"slimDOMOptions\",\"dataURLOptions\",\"doc\",\"mirror\",\"iframeManager\",\"stylesheetManager\",\"shadowDomManager\",\"canvasManager\",\"processedNodeManager\"].forEach((e=>{this[e]=t[e]}))}freeze(){this.frozen=!0,this.canvasManager.freeze()}unfreeze(){this.frozen=!1,this.canvasManager.unfreeze(),this.emit()}isFrozen(){return this.frozen}lock(){this.locked=!0,this.canvasManager.lock()}unlock(){this.locked=!1,this.canvasManager.unlock(),this.emit()}reset(){this.shadowDomManager.reset(),this.canvasManager.reset()}}function Vi(t,e){t.delete(e),e.childNodes.forEach((e=>Vi(t,e)))}function Qi(t,e,n){return 0!==t.length&&Zi(t,e,n)}function Zi(t,e,n){const{parentNode:r}=e;if(!r)return!1;const s=n.getId(r);return!!t.some((t=>t.id===s))||Zi(t,r,n)}function to(t,e){return 0!==t.size&&eo(t,e)}function eo(t,e){const{parentNode:n}=e;return!!n&&(!!t.has(n)||eo(t,n))}let no;function ro(t){no=t}function so(){no=void 0}const io=t=>{if(!no)return t;return(...e)=>{try{return t(...e)}catch(t){if(no&&!0===no(t))return()=>{};throw t}}};function oo(t){let e,n=t[0],r=1;for(;r<t.length;){const s=t[r],i=t[r+1];if(r+=2,(\"optionalAccess\"===s||\"optionalCall\"===s)&&null==n)return;\"access\"===s||\"optionalAccess\"===s?(e=n,n=i(n)):\"call\"!==s&&\"optionalCall\"!==s||(n=i(((...t)=>n.call(e,...t))),e=void 0)}return n}const ao=[];function co(t){try{if(\"composedPath\"in t){const e=t.composedPath();if(e.length)return e[0]}else if(\"path\"in t&&t.path.length)return t.path[0]}catch(t){}return t&&t.target}function uo(t,e){const n=new Yi;ao.push(n),n.init(t);let r=window.MutationObserver||window.__rrMutationObserver;const s=oo([window,\"optionalAccess\",t=>t.Zone,\"optionalAccess\",t=>t.__symbol__,\"optionalCall\",t=>t(\"MutationObserver\")]);s&&window[s]&&(r=window[s]);const i=new r(io((e=>{t.onMutation&&!1===t.onMutation(e)||n.processMutations.bind(n)(e)})));return i.observe(e,{attributes:!0,attributeOldValue:!0,characterData:!0,characterDataOldValue:!0,childList:!0,subtree:!0}),i}function lo({mouseInteractionCb:t,doc:e,mirror:n,blockClass:r,blockSelector:s,unblockSelector:i,sampling:o}){if(!1===o.mouseInteraction)return()=>{};const a=!0===o.mouseInteraction||void 0===o.mouseInteraction?{}:o.mouseInteraction,c=[];let u=null;return Object.keys(qi).filter((t=>Number.isNaN(Number(t))&&!t.endsWith(\"_Departed\")&&!1!==a[t])).forEach((o=>{let a=qs(o);const l=(e=>o=>{const a=co(o);if(Ai(a,r,s,i,!0))return;let c=null,l=e;if(\"pointerType\"in o){switch(o.pointerType){case\"mouse\":c=Wi.Mouse;break;case\"touch\":c=Wi.Touch;break;case\"pen\":c=Wi.Pen}c===Wi.Touch&&(qi[e]===qi.MouseDown?l=\"TouchStart\":qi[e]===qi.MouseUp&&(l=\"TouchEnd\"))}else Di(o)&&(c=Wi.Touch);null!==c?(u=c,(l.startsWith(\"Touch\")&&c===Wi.Touch||l.startsWith(\"Mouse\")&&c===Wi.Mouse)&&(c=null)):qi[e]===qi.Click&&(c=u,u=null);const h=Di(o)?o.changedTouches[0]:o;if(!h)return;const f=n.getId(a),{clientX:d,clientY:p}=h;io(t)({type:qi[l],id:f,x:d,y:p,...null!==c&&{pointerType:c}})})(o);if(window.PointerEvent)switch(qi[o]){case qi.MouseDown:case qi.MouseUp:a=a.replace(\"mouse\",\"pointer\");break;case qi.TouchStart:case qi.TouchEnd:return}c.push(bi(a,l,e))})),io((()=>{c.forEach((t=>t()))}))}function ho({scrollCb:t,doc:e,mirror:n,blockClass:r,blockSelector:s,unblockSelector:i,sampling:o}){return bi(\"scroll\",io(Si(io((o=>{const a=co(o);if(!a||Ai(a,r,s,i,!0))return;const c=n.getId(a);if(a===e&&e.defaultView){const n=Ci(e.defaultView);t({id:c,x:n.left,y:n.top})}else t({id:c,x:a.scrollLeft,y:a.scrollTop})})),o.scroll||100)),e)}const fo=[\"INPUT\",\"TEXTAREA\",\"SELECT\"],po=new WeakMap;function mo({inputCb:t,doc:e,mirror:n,blockClass:r,blockSelector:s,unblockSelector:i,ignoreClass:o,ignoreSelector:a,maskInputOptions:c,maskInputFn:u,sampling:l,userTriggeredOnInput:h,maskTextClass:f,unmaskTextClass:d,maskTextSelector:p,unmaskTextSelector:m}){function y(t){let n=co(t);const l=t.isTrusted,y=n&&Ws(n.tagName);if(\"OPTION\"===y&&(n=n.parentElement),!n||!y||fo.indexOf(y)<0||Ai(n,r,s,i,!0))return;const v=n;if(v.classList.contains(o)||a&&v.matches(a))return;const b=Js(n);let k=Xs(v,y,b),w=!1;const S=zs({maskInputOptions:c,tagName:y,type:b}),T=pi(n,f,p,d,m,S);\"radio\"!==b&&\"checkbox\"!==b||(w=n.checked),k=Hs({isMasked:T,element:n,value:k,maskInputFn:u}),g(n,h?{text:k,isChecked:w,userTriggered:l}:{text:k,isChecked:w});const _=n.name;\"radio\"===b&&_&&w&&e.querySelectorAll(`input[type=\"radio\"][name=\"${_}\"]`).forEach((t=>{if(t!==n){const e=Hs({isMasked:T,element:t,value:Xs(t,y,b),maskInputFn:u});g(t,h?{text:e,isChecked:!w,userTriggered:!1}:{text:e,isChecked:!w})}}))}function g(e,r){const s=po.get(e);if(!s||s.text!==r.text||s.isChecked!==r.isChecked){po.set(e,r);const s=n.getId(e);io(t)({...r,id:s})}}const v=(\"last\"===l.input?[\"change\"]:[\"input\",\"change\"]).map((t=>bi(t,io(y),e))),b=e.defaultView;if(!b)return()=>{v.forEach((t=>t()))};const k=b.Object.getOwnPropertyDescriptor(b.HTMLInputElement.prototype,\"value\"),w=[[b.HTMLInputElement.prototype,\"value\"],[b.HTMLInputElement.prototype,\"checked\"],[b.HTMLSelectElement.prototype,\"value\"],[b.HTMLTextAreaElement.prototype,\"value\"],[b.HTMLSelectElement.prototype,\"selectedIndex\"],[b.HTMLOptionElement.prototype,\"selected\"]];return k&&k.set&&v.push(...w.map((t=>Ti(t[0],t[1],{set(){io(y)({target:this,isTrusted:!1})}},!1,b)))),io((()=>{v.forEach((t=>t()))}))}function yo(t){return function(t,e){if(ko(\"CSSGroupingRule\")&&t.parentRule instanceof CSSGroupingRule||ko(\"CSSMediaRule\")&&t.parentRule instanceof CSSMediaRule||ko(\"CSSSupportsRule\")&&t.parentRule instanceof CSSSupportsRule||ko(\"CSSConditionRule\")&&t.parentRule instanceof CSSConditionRule){const n=Array.from(t.parentRule.cssRules).indexOf(t);e.unshift(n)}else if(t.parentStyleSheet){const n=Array.from(t.parentStyleSheet.cssRules).indexOf(t);e.unshift(n)}return e}(t,[])}function go(t,e,n){let r,s;return t?(t.ownerNode?r=e.getId(t.ownerNode):s=n.getId(t),{styleId:s,id:r}):{}}function vo({mirror:t,stylesheetManager:e},n){let r=null;r=\"#document\"===n.nodeName?t.getId(n):t.getId(n.host);const s=\"#document\"===n.nodeName?oo([n,\"access\",t=>t.defaultView,\"optionalAccess\",t=>t.Document]):oo([n,\"access\",t=>t.ownerDocument,\"optionalAccess\",t=>t.defaultView,\"optionalAccess\",t=>t.ShadowRoot]),i=oo([s,\"optionalAccess\",t=>t.prototype])?Object.getOwnPropertyDescriptor(oo([s,\"optionalAccess\",t=>t.prototype]),\"adoptedStyleSheets\"):void 0;return null!==r&&-1!==r&&s&&i?(Object.defineProperty(n,\"adoptedStyleSheets\",{configurable:i.configurable,enumerable:i.enumerable,get(){return oo([i,\"access\",t=>t.get,\"optionalAccess\",t=>t.call,\"call\",t=>t(this)])},set(t){const n=oo([i,\"access\",t=>t.set,\"optionalAccess\",t=>t.call,\"call\",e=>e(this,t)]);if(null!==r&&-1!==r)try{e.adoptStyleSheets(t,r)}catch(t){}return n}}),io((()=>{Object.defineProperty(n,\"adoptedStyleSheets\",{configurable:i.configurable,enumerable:i.enumerable,get:i.get,set:i.set})}))):()=>{}}function bo(t,e={}){const n=t.doc.defaultView;if(!n)return()=>{};const r=uo(t,t.doc),s=function({mousemoveCb:t,sampling:e,doc:n,mirror:r}){if(!1===e.mousemove)return()=>{};const s=\"number\"==typeof e.mousemove?e.mousemove:50,i=\"number\"==typeof e.mousemoveCallback?e.mousemoveCallback:500;let o,a=[];const c=Si(io((e=>{const n=Date.now()-o;t(a.map((t=>(t.timeOffset-=n,t))),e),a=[],o=null})),i),u=io(Si(io((t=>{const e=co(t),{clientX:n,clientY:s}=Di(t)?t.changedTouches[0]:t;o||(o=Ii()),a.push({x:n,y:s,id:r.getId(e),timeOffset:Ii()-o}),c(\"undefined\"!=typeof DragEvent&&t instanceof DragEvent?Hi.Drag:t instanceof MouseEvent?Hi.MouseMove:Hi.TouchMove)})),s,{trailing:!1})),l=[bi(\"mousemove\",u,n),bi(\"touchmove\",u,n),bi(\"drag\",u,n)];return io((()=>{l.forEach((t=>t()))}))}(t),i=lo(t),o=ho(t),a=function({viewportResizeCb:t},{win:e}){let n=-1,r=-1;return bi(\"resize\",io(Si(io((()=>{const e=Ei(),s=Oi();n===e&&r===s||(t({width:Number(s),height:Number(e)}),n=e,r=s)})),200)),e)}(t,{win:n}),c=mo(t),u=function({mediaInteractionCb:t,blockClass:e,blockSelector:n,unblockSelector:r,mirror:s,sampling:i,doc:o}){const a=io((o=>Si(io((i=>{const a=co(i);if(!a||Ai(a,e,n,r,!0))return;const{currentTime:c,volume:u,muted:l,playbackRate:h}=a;t({type:o,id:s.getId(a),currentTime:c,volume:u,muted:l,playbackRate:h})})),i.media||500))),c=[bi(\"play\",a(0),o),bi(\"pause\",a(1),o),bi(\"seeked\",a(2),o),bi(\"volumechange\",a(3),o),bi(\"ratechange\",a(4),o)];return io((()=>{c.forEach((t=>t()))}))}(t),l=function({styleSheetRuleCb:t,mirror:e,stylesheetManager:n},{win:r}){if(!r.CSSStyleSheet||!r.CSSStyleSheet.prototype)return()=>{};const s=r.CSSStyleSheet.prototype.insertRule;r.CSSStyleSheet.prototype.insertRule=new Proxy(s,{apply:io(((r,s,i)=>{const[o,a]=i,{id:c,styleId:u}=go(s,e,n.styleMirror);return(c&&-1!==c||u&&-1!==u)&&t({id:c,styleId:u,adds:[{rule:o,index:a}]}),r.apply(s,i)}))});const i=r.CSSStyleSheet.prototype.deleteRule;let o,a;r.CSSStyleSheet.prototype.deleteRule=new Proxy(i,{apply:io(((r,s,i)=>{const[o]=i,{id:a,styleId:c}=go(s,e,n.styleMirror);return(a&&-1!==a||c&&-1!==c)&&t({id:a,styleId:c,removes:[{index:o}]}),r.apply(s,i)}))}),r.CSSStyleSheet.prototype.replace&&(o=r.CSSStyleSheet.prototype.replace,r.CSSStyleSheet.prototype.replace=new Proxy(o,{apply:io(((r,s,i)=>{const[o]=i,{id:a,styleId:c}=go(s,e,n.styleMirror);return(a&&-1!==a||c&&-1!==c)&&t({id:a,styleId:c,replace:o}),r.apply(s,i)}))})),r.CSSStyleSheet.prototype.replaceSync&&(a=r.CSSStyleSheet.prototype.replaceSync,r.CSSStyleSheet.prototype.replaceSync=new Proxy(a,{apply:io(((r,s,i)=>{const[o]=i,{id:a,styleId:c}=go(s,e,n.styleMirror);return(a&&-1!==a||c&&-1!==c)&&t({id:a,styleId:c,replaceSync:o}),r.apply(s,i)}))}));const c={};wo(\"CSSGroupingRule\")?c.CSSGroupingRule=r.CSSGroupingRule:(wo(\"CSSMediaRule\")&&(c.CSSMediaRule=r.CSSMediaRule),wo(\"CSSConditionRule\")&&(c.CSSConditionRule=r.CSSConditionRule),wo(\"CSSSupportsRule\")&&(c.CSSSupportsRule=r.CSSSupportsRule));const u={};return Object.entries(c).forEach((([r,s])=>{u[r]={insertRule:s.prototype.insertRule,deleteRule:s.prototype.deleteRule},s.prototype.insertRule=new Proxy(u[r].insertRule,{apply:io(((r,s,i)=>{const[o,a]=i,{id:c,styleId:u}=go(s.parentStyleSheet,e,n.styleMirror);return(c&&-1!==c||u&&-1!==u)&&t({id:c,styleId:u,adds:[{rule:o,index:[...yo(s),a||0]}]}),r.apply(s,i)}))}),s.prototype.deleteRule=new Proxy(u[r].deleteRule,{apply:io(((r,s,i)=>{const[o]=i,{id:a,styleId:c}=go(s.parentStyleSheet,e,n.styleMirror);return(a&&-1!==a||c&&-1!==c)&&t({id:a,styleId:c,removes:[{index:[...yo(s),o]}]}),r.apply(s,i)}))})})),io((()=>{r.CSSStyleSheet.prototype.insertRule=s,r.CSSStyleSheet.prototype.deleteRule=i,o&&(r.CSSStyleSheet.prototype.replace=o),a&&(r.CSSStyleSheet.prototype.replaceSync=a),Object.entries(c).forEach((([t,e])=>{e.prototype.insertRule=u[t].insertRule,e.prototype.deleteRule=u[t].deleteRule}))}))}(t,{win:n}),h=vo(t,t.doc),f=function({styleDeclarationCb:t,mirror:e,ignoreCSSAttributes:n,stylesheetManager:r},{win:s}){const i=s.CSSStyleDeclaration.prototype.setProperty;s.CSSStyleDeclaration.prototype.setProperty=new Proxy(i,{apply:io(((s,o,a)=>{const[c,u,l]=a;if(n.has(c))return i.apply(o,[c,u,l]);const{id:h,styleId:f}=go(oo([o,\"access\",t=>t.parentRule,\"optionalAccess\",t=>t.parentStyleSheet]),e,r.styleMirror);return(h&&-1!==h||f&&-1!==f)&&t({id:h,styleId:f,set:{property:c,value:u,priority:l},index:yo(o.parentRule)}),s.apply(o,a)}))});const o=s.CSSStyleDeclaration.prototype.removeProperty;return s.CSSStyleDeclaration.prototype.removeProperty=new Proxy(o,{apply:io(((s,i,a)=>{const[c]=a;if(n.has(c))return o.apply(i,[c]);const{id:u,styleId:l}=go(oo([i,\"access\",t=>t.parentRule,\"optionalAccess\",t=>t.parentStyleSheet]),e,r.styleMirror);return(u&&-1!==u||l&&-1!==l)&&t({id:u,styleId:l,remove:{property:c},index:yo(i.parentRule)}),s.apply(i,a)}))}),io((()=>{s.CSSStyleDeclaration.prototype.setProperty=i,s.CSSStyleDeclaration.prototype.removeProperty=o}))}(t,{win:n}),d=t.collectFonts?function({fontCb:t,doc:e}){const n=e.defaultView;if(!n)return()=>{};const r=[],s=new WeakMap,i=n.FontFace;n.FontFace=function(t,e,n){const r=new i(t,e,n);return s.set(r,{family:t,buffer:\"string\"!=typeof e,descriptors:n,fontSource:\"string\"==typeof e?e:JSON.stringify(Array.from(new Uint8Array(e)))}),r};const o=_i(e.fonts,\"add\",(function(e){return function(n){return setTimeout(io((()=>{const e=s.get(n);e&&(t(e),s.delete(n))})),0),e.apply(this,[n])}}));return r.push((()=>{n.FontFace=i})),r.push(o),io((()=>{r.forEach((t=>t()))}))}(t):()=>{},p=function(t){const{doc:e,mirror:n,blockClass:r,blockSelector:s,unblockSelector:i,selectionCb:o}=t;let a=!0;const c=io((()=>{const t=e.getSelection();if(!t||a&&oo([t,\"optionalAccess\",t=>t.isCollapsed]))return;a=t.isCollapsed||!1;const c=[],u=t.rangeCount||0;for(let e=0;e<u;e++){const o=t.getRangeAt(e),{startContainer:a,startOffset:u,endContainer:l,endOffset:h}=o;Ai(a,r,s,i,!0)||Ai(l,r,s,i,!0)||c.push({start:n.getId(a),startOffset:u,end:n.getId(l),endOffset:h})}o({ranges:c})}));return c(),bi(\"selectionchange\",c)}(t),m=function({doc:t,customElementCb:e}){const n=t.defaultView;return n&&n.customElements?_i(n.customElements,\"define\",(function(t){return function(n,r,s){try{e({define:{name:n}})}catch(t){}return t.apply(this,[n,r,s])}})):()=>{}}(t),y=[];for(const e of t.plugins)y.push(e.observer(e.callback,n,e.options));return io((()=>{ao.forEach((t=>t.reset())),r.disconnect(),s(),i(),o(),a(),c(),u(),l(),h(),f(),d(),p(),m(),y.forEach((t=>t()))}))}function ko(t){return void 0!==window[t]}function wo(t){return Boolean(void 0!==window[t]&&window[t].prototype&&\"insertRule\"in window[t].prototype&&\"deleteRule\"in window[t].prototype)}class So{constructor(t){this.generateIdFn=t,this.iframeIdToRemoteIdMap=new WeakMap,this.iframeRemoteIdToIdMap=new WeakMap}getId(t,e,n,r){const s=n||this.getIdToRemoteIdMap(t),i=r||this.getRemoteIdToIdMap(t);let o=s.get(e);return o||(o=this.generateIdFn(),s.set(e,o),i.set(o,e)),o}getIds(t,e){const n=this.getIdToRemoteIdMap(t),r=this.getRemoteIdToIdMap(t);return e.map((e=>this.getId(t,e,n,r)))}getRemoteId(t,e,n){const r=n||this.getRemoteIdToIdMap(t);if(\"number\"!=typeof e)return e;const s=r.get(e);return s||-1}getRemoteIds(t,e){const n=this.getRemoteIdToIdMap(t);return e.map((e=>this.getRemoteId(t,e,n)))}reset(t){if(!t)return this.iframeIdToRemoteIdMap=new WeakMap,void(this.iframeRemoteIdToIdMap=new WeakMap);this.iframeIdToRemoteIdMap.delete(t),this.iframeRemoteIdToIdMap.delete(t)}getIdToRemoteIdMap(t){let e=this.iframeIdToRemoteIdMap.get(t);return e||(e=new Map,this.iframeIdToRemoteIdMap.set(t,e)),e}getRemoteIdToIdMap(t){let e=this.iframeRemoteIdToIdMap.get(t);return e||(e=new Map,this.iframeRemoteIdToIdMap.set(t,e)),e}}function To(t){let e,n=t[0],r=1;for(;r<t.length;){const s=t[r],i=t[r+1];if(r+=2,(\"optionalAccess\"===s||\"optionalCall\"===s)&&null==n)return;\"access\"===s||\"optionalAccess\"===s?(e=n,n=i(n)):\"call\"!==s&&\"optionalCall\"!==s||(n=i(((...t)=>n.call(e,...t))),e=void 0)}return n}class _o{constructor(t){this.iframes=new WeakMap,this.crossOriginIframeMap=new WeakMap,this.crossOriginIframeMirror=new So(Vs),this.crossOriginIframeRootIdMap=new WeakMap,this.mutationCb=t.mutationCb,this.wrappedEmit=t.wrappedEmit,this.stylesheetManager=t.stylesheetManager,this.recordCrossOriginIframes=t.recordCrossOriginIframes,this.crossOriginIframeStyleMirror=new So(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror)),this.mirror=t.mirror,this.recordCrossOriginIframes&&window.addEventListener(\"message\",this.handleMessage.bind(this))}addIframe(t){this.iframes.set(t,!0),t.contentWindow&&this.crossOriginIframeMap.set(t.contentWindow,t)}addLoadListener(t){this.loadListener=t}attachIframe(t,e){this.mutationCb({adds:[{parentId:this.mirror.getId(t),nextId:null,node:e}],removes:[],texts:[],attributes:[],isAttachIframe:!0}),To([this,\"access\",t=>t.loadListener,\"optionalCall\",e=>e(t)]),t.contentDocument&&t.contentDocument.adoptedStyleSheets&&t.contentDocument.adoptedStyleSheets.length>0&&this.stylesheetManager.adoptStyleSheets(t.contentDocument.adoptedStyleSheets,this.mirror.getId(t.contentDocument))}handleMessage(t){const e=t;if(\"rrweb\"!==e.data.type||e.origin!==e.data.origin)return;if(!t.source)return;const n=this.crossOriginIframeMap.get(t.source);if(!n)return;const r=this.transformCrossOriginEvent(n,e.data.event);r&&this.wrappedEmit(r,e.data.isCheckout)}transformCrossOriginEvent(t,e){switch(e.type){case zi.FullSnapshot:{this.crossOriginIframeMirror.reset(t),this.crossOriginIframeStyleMirror.reset(t),this.replaceIdOnNode(e.data.node,t);const n=e.data.node.id;return this.crossOriginIframeRootIdMap.set(t,n),this.patchRootIdOnNode(e.data.node,n),{timestamp:e.timestamp,type:zi.IncrementalSnapshot,data:{source:Hi.Mutation,adds:[{parentId:this.mirror.getId(t),nextId:null,node:e.data.node}],removes:[],texts:[],attributes:[],isAttachIframe:!0}}}case zi.Meta:case zi.Load:case zi.DomContentLoaded:return!1;case zi.Plugin:return e;case zi.Custom:return this.replaceIds(e.data.payload,t,[\"id\",\"parentId\",\"previousId\",\"nextId\"]),e;case zi.IncrementalSnapshot:switch(e.data.source){case Hi.Mutation:return e.data.adds.forEach((e=>{this.replaceIds(e,t,[\"parentId\",\"nextId\",\"previousId\"]),this.replaceIdOnNode(e.node,t);const n=this.crossOriginIframeRootIdMap.get(t);n&&this.patchRootIdOnNode(e.node,n)})),e.data.removes.forEach((e=>{this.replaceIds(e,t,[\"parentId\",\"id\"])})),e.data.attributes.forEach((e=>{this.replaceIds(e,t,[\"id\"])})),e.data.texts.forEach((e=>{this.replaceIds(e,t,[\"id\"])})),e;case Hi.Drag:case Hi.TouchMove:case Hi.MouseMove:return e.data.positions.forEach((e=>{this.replaceIds(e,t,[\"id\"])})),e;case Hi.ViewportResize:return!1;case Hi.MediaInteraction:case Hi.MouseInteraction:case Hi.Scroll:case Hi.CanvasMutation:case Hi.Input:return this.replaceIds(e.data,t,[\"id\"]),e;case Hi.StyleSheetRule:case Hi.StyleDeclaration:return this.replaceIds(e.data,t,[\"id\"]),this.replaceStyleIds(e.data,t,[\"styleId\"]),e;case Hi.Font:return e;case Hi.Selection:return e.data.ranges.forEach((e=>{this.replaceIds(e,t,[\"start\",\"end\"])})),e;case Hi.AdoptedStyleSheet:return this.replaceIds(e.data,t,[\"id\"]),this.replaceStyleIds(e.data,t,[\"styleIds\"]),To([e,\"access\",t=>t.data,\"access\",t=>t.styles,\"optionalAccess\",t=>t.forEach,\"call\",e=>e((e=>{this.replaceStyleIds(e,t,[\"styleId\"])}))]),e}}return!1}replace(t,e,n,r){for(const s of r)(Array.isArray(e[s])||\"number\"==typeof e[s])&&(Array.isArray(e[s])?e[s]=t.getIds(n,e[s]):e[s]=t.getId(n,e[s]));return e}replaceIds(t,e,n){return this.replace(this.crossOriginIframeMirror,t,e,n)}replaceStyleIds(t,e,n){return this.replace(this.crossOriginIframeStyleMirror,t,e,n)}replaceIdOnNode(t,e){this.replaceIds(t,e,[\"id\",\"rootId\"]),\"childNodes\"in t&&t.childNodes.forEach((t=>{this.replaceIdOnNode(t,e)}))}patchRootIdOnNode(t,e){t.type===js.Document||t.rootId||(t.rootId=e),\"childNodes\"in t&&t.childNodes.forEach((t=>{this.patchRootIdOnNode(t,e)}))}}class xo{constructor(t){this.shadowDoms=new WeakSet,this.restoreHandlers=[],this.mutationCb=t.mutationCb,this.scrollCb=t.scrollCb,this.bypassOptions=t.bypassOptions,this.mirror=t.mirror,this.init()}init(){this.reset(),this.patchAttachShadow(Element,document)}addShadowRoot(t,e){if(!Ns(t))return;if(this.shadowDoms.has(t))return;this.shadowDoms.add(t);const n=uo({...this.bypassOptions,doc:e,mutationCb:this.mutationCb,mirror:this.mirror,shadowDomManager:this},t);this.restoreHandlers.push((()=>n.disconnect())),this.restoreHandlers.push(ho({...this.bypassOptions,scrollCb:this.scrollCb,doc:t,mirror:this.mirror})),setTimeout((()=>{t.adoptedStyleSheets&&t.adoptedStyleSheets.length>0&&this.bypassOptions.stylesheetManager.adoptStyleSheets(t.adoptedStyleSheets,this.mirror.getId(t.host)),this.restoreHandlers.push(vo({mirror:this.mirror,stylesheetManager:this.bypassOptions.stylesheetManager},t))}),0)}observeAttachShadow(t){t.contentWindow&&t.contentDocument&&this.patchAttachShadow(t.contentWindow.Element,t.contentDocument)}patchAttachShadow(t,e){const n=this;this.restoreHandlers.push(_i(t.prototype,\"attachShadow\",(function(t){return function(r){const s=t.call(this,r);return this.shadowRoot&&Bi(this)&&n.addShadowRoot(this.shadowRoot,e),s}})))}reset(){this.restoreHandlers.forEach((t=>{try{t()}catch(t){}})),this.restoreHandlers=[],this.shadowDoms=new WeakSet}}class Io{reset(){}freeze(){}unfreeze(){}lock(){}unlock(){}snapshot(){}}class Co{constructor(t){this.trackedLinkElements=new WeakSet,this.styleMirror=new Fi,this.mutationCb=t.mutationCb,this.adoptedStyleSheetCb=t.adoptedStyleSheetCb}attachLinkElement(t,e){\"_cssText\"in e.attributes&&this.mutationCb({adds:[],removes:[],texts:[],attributes:[{id:e.id,attributes:e.attributes}]}),this.trackLinkElement(t)}trackLinkElement(t){this.trackedLinkElements.has(t)||(this.trackedLinkElements.add(t),this.trackStylesheetInLinkElement(t))}adoptStyleSheets(t,e){if(0===t.length)return;const n={id:e,styleIds:[]},r=[];for(const e of t){let t;this.styleMirror.has(e)?t=this.styleMirror.getId(e):(t=this.styleMirror.add(e),r.push({styleId:t,rules:Array.from(e.rules||CSSRule,((t,e)=>({rule:Bs(t),index:e})))})),n.styleIds.push(t)}r.length>0&&(n.styles=r),this.adoptedStyleSheetCb(n)}reset(){this.styleMirror.reset(),this.trackedLinkElements=new WeakSet}trackStylesheetInLinkElement(t){}}class Eo{constructor(){this.nodeMap=new WeakMap,this.loop=!0,this.periodicallyClear()}periodicallyClear(){Ui((()=>{this.clear(),this.loop&&this.periodicallyClear()}))}inOtherBuffer(t,e){const n=this.nodeMap.get(t);return n&&Array.from(n).some((t=>t!==e))}add(t,e){this.nodeMap.set(t,(this.nodeMap.get(t)||new Set).add(e))}clear(){this.nodeMap=new WeakMap}destroy(){this.loop=!1}}function Oo(t){const e=t;return e.timestamp=Ii(),e}let Ao;const Ro=new Us;function Mo(t={}){const{emit:e,checkoutEveryNms:n,checkoutEveryNth:r,blockClass:s=\"rr-block\",blockSelector:i=null,unblockSelector:o=null,ignoreClass:a=\"rr-ignore\",ignoreSelector:c=null,maskAllText:u=!1,maskTextClass:l=\"rr-mask\",unmaskTextClass:h=null,maskTextSelector:f=null,unmaskTextSelector:d=null,inlineStylesheet:p=!0,maskAllInputs:m,maskInputOptions:y,slimDOMOptions:g,maskAttributeFn:v,maskInputFn:b,maskTextFn:k,packFn:w,sampling:S={},dataURLOptions:T={},mousemoveWait:_,recordCanvas:x=!1,recordCrossOriginIframes:I=!1,recordAfter:C=(\"DOMContentLoaded\"===t.recordAfter?t.recordAfter:\"load\"),userTriggeredOnInput:E=!1,collectFonts:O=!1,inlineImages:A=!1,plugins:R,keepIframeSrcFn:M=(()=>!1),ignoreCSSAttributes:D=new Set([]),errorHandler:$,onMutation:L,getCanvasManager:j}=t;ro($);const F=!I||window.parent===window;let N=!1;if(!F)try{window.parent.document&&(N=!1)}catch(t){N=!0}if(F&&!e)throw new Error(\"emit function is required\");void 0!==_&&void 0===S.mousemove&&(S.mousemove=_),Ro.reset();const P=!0===m?{color:!0,date:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0,textarea:!0,select:!0,radio:!0,checkbox:!0}:void 0!==y?y:{},B=!0===g||\"all\"===g?{script:!0,comment:!0,headFavicon:!0,headWhitespace:!0,headMetaSocial:!0,headMetaRobots:!0,headMetaHttpEquiv:!0,headMetaVerification:!0,headMetaAuthorship:\"all\"===g,headMetaDescKeywords:\"all\"===g}:g||{};let U;!function(t=window){\"NodeList\"in t&&!t.NodeList.prototype.forEach&&(t.NodeList.prototype.forEach=Array.prototype.forEach),\"DOMTokenList\"in t&&!t.DOMTokenList.prototype.forEach&&(t.DOMTokenList.prototype.forEach=Array.prototype.forEach),Node.prototype.contains||(Node.prototype.contains=(...t)=>{let e=t[0];if(!(0 in t))throw new TypeError(\"1 argument is required\");do{if(this===e)return!0}while(e=e&&e.parentNode);return!1})}();let z=0;const H=t=>{for(const e of R||[])e.eventProcessor&&(t=e.eventProcessor(t));return w&&!N&&(t=w(t)),t},q=(t,s)=>{if(!_e([ao,\"access\",t=>t[0],\"optionalAccess\",t=>t.isFrozen,\"call\",t=>t()])||t.type===zi.FullSnapshot||t.type===zi.IncrementalSnapshot&&t.data.source===Hi.Mutation||ao.forEach((t=>t.unfreeze())),F)_e([e,\"optionalCall\",e=>e(H(t),s)]);else if(N){const e={type:\"rrweb\",event:H(t),origin:window.location.origin,isCheckout:s};window.parent.postMessage(e,\"*\")}if(t.type===zi.FullSnapshot)U=t,z=0;else if(t.type===zi.IncrementalSnapshot){if(t.data.source===Hi.Mutation&&t.data.isAttachIframe)return;z++;const e=r&&z>=r,s=n&&t.timestamp-U.timestamp>n;(e||s)&&Z(!0)}},W=t=>{q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.Mutation,...t}}))},K=t=>q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.Scroll,...t}})),J=t=>q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.CanvasMutation,...t}})),X=new Co({mutationCb:W,adoptedStyleSheetCb:t=>q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.AdoptedStyleSheet,...t}}))}),G=new _o({mirror:Ro,mutationCb:W,stylesheetManager:X,recordCrossOriginIframes:I,wrappedEmit:q});for(const t of R||[])t.getMirror&&t.getMirror({nodeMirror:Ro,crossOriginIframeMirror:G.crossOriginIframeMirror,crossOriginIframeStyleMirror:G.crossOriginIframeStyleMirror});const Y=new Eo,V=function(t,e){try{return t?t(e):new Io}catch(t){return console.warn(\"Unable to initialize CanvasManager\"),new Io}}(j,{mirror:Ro,win:window,mutationCb:t=>q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.CanvasMutation,...t}})),recordCanvas:x,blockClass:s,blockSelector:i,unblockSelector:o,sampling:S.canvas,dataURLOptions:T,errorHandler:$}),Q=new xo({mutationCb:W,scrollCb:K,bypassOptions:{onMutation:L,blockClass:s,blockSelector:i,unblockSelector:o,maskAllText:u,maskTextClass:l,unmaskTextClass:h,maskTextSelector:f,unmaskTextSelector:d,inlineStylesheet:p,maskInputOptions:P,dataURLOptions:T,maskAttributeFn:v,maskTextFn:k,maskInputFn:b,recordCanvas:x,inlineImages:A,sampling:S,slimDOMOptions:B,iframeManager:G,stylesheetManager:X,canvasManager:V,keepIframeSrcFn:M,processedNodeManager:Y},mirror:Ro}),Z=(t=!1)=>{q(Oo({type:zi.Meta,data:{href:window.location.href,width:Oi(),height:Ei()}}),t),X.reset(),Q.init(),ao.forEach((t=>t.lock()));const e=function(t,e){const{mirror:n=new Us,blockClass:r=\"rr-block\",blockSelector:s=null,unblockSelector:i=null,maskAllText:o=!1,maskTextClass:a=\"rr-mask\",unmaskTextClass:c=null,maskTextSelector:u=null,unmaskTextSelector:l=null,inlineStylesheet:h=!0,inlineImages:f=!1,recordCanvas:d=!1,maskAllInputs:p=!1,maskAttributeFn:m,maskTextFn:y,maskInputFn:g,slimDOM:v=!1,dataURLOptions:b,preserveWhiteSpace:k,onSerialize:w,onIframeLoad:S,iframeLoadTimeout:T,onStylesheetLoad:_,stylesheetLoadTimeout:x,keepIframeSrcFn:I=(()=>!1)}=e||{};return gi(t,{doc:t,mirror:n,blockClass:r,blockSelector:s,unblockSelector:i,maskAllText:o,maskTextClass:a,unmaskTextClass:c,maskTextSelector:u,unmaskTextSelector:l,skipChild:!1,inlineStylesheet:h,maskInputOptions:!0===p?{color:!0,date:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0,textarea:!0,select:!0}:!1===p?{}:p,maskAttributeFn:m,maskTextFn:y,maskInputFn:g,slimDOMOptions:!0===v||\"all\"===v?{script:!0,comment:!0,headFavicon:!0,headWhitespace:!0,headMetaDescKeywords:\"all\"===v,headMetaSocial:!0,headMetaRobots:!0,headMetaHttpEquiv:!0,headMetaAuthorship:!0,headMetaVerification:!0}:!1===v?{}:v,dataURLOptions:b,inlineImages:f,recordCanvas:d,preserveWhiteSpace:k,onSerialize:w,onIframeLoad:S,iframeLoadTimeout:T,onStylesheetLoad:_,stylesheetLoadTimeout:x,keepIframeSrcFn:I,newlyAddedElement:!1})}(document,{mirror:Ro,blockClass:s,blockSelector:i,unblockSelector:o,maskAllText:u,maskTextClass:l,unmaskTextClass:h,maskTextSelector:f,unmaskTextSelector:d,inlineStylesheet:p,maskAllInputs:P,maskAttributeFn:v,maskInputFn:b,maskTextFn:k,slimDOM:B,dataURLOptions:T,recordCanvas:x,inlineImages:A,onSerialize:t=>{$i(t,Ro)&&G.addIframe(t),Li(t,Ro)&&X.trackLinkElement(t),ji(t)&&Q.addShadowRoot(t.shadowRoot,document)},onIframeLoad:(t,e)=>{G.attachIframe(t,e),Q.observeAttachShadow(t)},onStylesheetLoad:(t,e)=>{X.attachLinkElement(t,e)},keepIframeSrcFn:M});if(!e)return console.warn(\"Failed to snapshot the document\");q(Oo({type:zi.FullSnapshot,data:{node:e,initialOffset:Ci(window)}})),ao.forEach((t=>t.unlock())),document.adoptedStyleSheets&&document.adoptedStyleSheets.length>0&&X.adoptStyleSheets(document.adoptedStyleSheets,Ro.getId(document))};Ao=Z;try{const t=[],e=t=>io(bo)({onMutation:L,mutationCb:W,mousemoveCb:(t,e)=>q(Oo({type:zi.IncrementalSnapshot,data:{source:e,positions:t}})),mouseInteractionCb:t=>q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.MouseInteraction,...t}})),scrollCb:K,viewportResizeCb:t=>q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.ViewportResize,...t}})),inputCb:t=>q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.Input,...t}})),mediaInteractionCb:t=>q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.MediaInteraction,...t}})),styleSheetRuleCb:t=>q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.StyleSheetRule,...t}})),styleDeclarationCb:t=>q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.StyleDeclaration,...t}})),canvasMutationCb:J,fontCb:t=>q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.Font,...t}})),selectionCb:t=>{q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.Selection,...t}}))},customElementCb:t=>{q(Oo({type:zi.IncrementalSnapshot,data:{source:Hi.CustomElement,...t}}))},blockClass:s,ignoreClass:a,ignoreSelector:c,maskAllText:u,maskTextClass:l,unmaskTextClass:h,maskTextSelector:f,unmaskTextSelector:d,maskInputOptions:P,inlineStylesheet:p,sampling:S,recordCanvas:x,inlineImages:A,userTriggeredOnInput:E,collectFonts:O,doc:t,maskAttributeFn:v,maskInputFn:b,maskTextFn:k,keepIframeSrcFn:M,blockSelector:i,unblockSelector:o,slimDOMOptions:B,dataURLOptions:T,mirror:Ro,iframeManager:G,stylesheetManager:X,shadowDomManager:Q,processedNodeManager:Y,canvasManager:V,ignoreCSSAttributes:D,plugins:_e([R,\"optionalAccess\",t=>t.filter,\"call\",t=>t((t=>t.observer)),\"optionalAccess\",t=>t.map,\"call\",t=>t((t=>({observer:t.observer,options:t.options,callback:e=>q(Oo({type:zi.Plugin,data:{plugin:t.name,payload:e}}))})))])||[]},{});G.addLoadListener((n=>{try{t.push(e(n.contentDocument))}catch(t){console.warn(t)}}));const n=()=>{Z(),t.push(e(document))};return\"interactive\"===document.readyState||\"complete\"===document.readyState?n():(t.push(bi(\"DOMContentLoaded\",(()=>{q(Oo({type:zi.DomContentLoaded,data:{}})),\"DOMContentLoaded\"===C&&n()}))),t.push(bi(\"load\",(()=>{q(Oo({type:zi.Load,data:{}})),\"load\"===C&&n()}),window))),()=>{t.forEach((t=>t())),Y.destroy(),Ao=void 0,so()}}catch(t){console.warn(t)}}Mo.mirror=Ro,Mo.takeFullSnapshot=function(t){if(!Ao)throw new Error(\"please take full snapshot after start recording\");Ao(t)};function Do(t){return t>9999999999?t:1e3*t}function $o(t){return t>9999999999?t/1e3:t}function Lo(t,e){\"sentry.transaction\"!==e.category&&([\"ui.click\",\"ui.input\"].includes(e.category)?t.triggerUserActivity():t.checkAndHandleExpiredSession(),t.addUpdate((()=>(t.throttledAddEvent({type:zi.Custom,timestamp:1e3*(e.timestamp||0),data:{tag:\"breadcrumb\",payload:zt(e,10,1e3)}}),\"console\"===e.category))))}function jo(t){return t.closest(\"button,a\")||t}function Fo(t){const e=No(t);return e&&e instanceof Element?jo(e):e}function No(t){return function(t){return\"object\"==typeof t&&!!t&&\"target\"in t}(t)?t.target:t}let Po;function Bo(t){return Po||(Po=[],B(Es,\"open\",(function(t){return function(...e){if(Po)try{Po.forEach((t=>t()))}catch(t){}return t.apply(Es,e)}}))),Po.push(t),()=>{const e=Po?Po.indexOf(t):-1;e>-1&&Po.splice(e,1)}}class Uo{constructor(t,e,n=Lo){this.Vt=0,this.Qt=0,this.Zt=[],this.te=e.timeout/1e3,this.ee=e.threshold/1e3,this.ne=e.scrollTimeout/1e3,this._replay=t,this.re=e.ignoreSelector,this.se=n}addListeners(){const t=Bo((()=>{this.Vt=Ho()}));this.ie=()=>{t(),this.Zt=[],this.Vt=0,this.Qt=0}}removeListeners(){this.ie&&this.ie(),this.oe&&clearTimeout(this.oe)}handleClick(t,e){if(function(t,e){if(!zo.includes(t.tagName))return!0;if(\"INPUT\"===t.tagName&&![\"submit\",\"button\"].includes(t.getAttribute(\"type\")||\"\"))return!0;if(\"A\"===t.tagName&&(t.hasAttribute(\"download\")||t.hasAttribute(\"target\")&&\"_self\"!==t.getAttribute(\"target\")))return!0;if(e&&t.matches(e))return!0;return!1}(e,this.re)||!function(t){return!(!t.data||\"number\"!=typeof t.data.nodeId||!t.timestamp)}(t))return;const n={timestamp:$o(t.timestamp),clickBreadcrumb:t,clickCount:0,node:e};this.Zt.some((t=>t.node===n.node&&Math.abs(t.timestamp-n.timestamp)<1))||(this.Zt.push(n),1===this.Zt.length&&this.ae())}registerMutation(t=Date.now()){this.Vt=$o(t)}registerScroll(t=Date.now()){this.Qt=$o(t)}registerClick(t){const e=jo(t);this.ce(e)}ce(t){this.ue(t).forEach((t=>{t.clickCount++}))}ue(t){return this.Zt.filter((e=>e.node===t))}le(){const t=[],e=Ho();this.Zt.forEach((n=>{!n.mutationAfter&&this.Vt&&(n.mutationAfter=n.timestamp<=this.Vt?this.Vt-n.timestamp:void 0),!n.scrollAfter&&this.Qt&&(n.scrollAfter=n.timestamp<=this.Qt?this.Qt-n.timestamp:void 0),n.timestamp+this.te<=e&&t.push(n)}));for(const e of t){const t=this.Zt.indexOf(e);t>-1&&(this.he(e),this.Zt.splice(t,1))}this.Zt.length&&this.ae()}he(t){const e=this._replay,n=t.scrollAfter&&t.scrollAfter<=this.ne,r=t.mutationAfter&&t.mutationAfter<=this.ee,s=!n&&!r,{clickCount:i,clickBreadcrumb:o}=t;if(s){const n=1e3*Math.min(t.mutationAfter||this.te,this.te),r=n<1e3*this.te?\"mutation\":\"timeout\",s={type:\"default\",message:o.message,timestamp:o.timestamp,category:\"ui.slowClickDetected\",data:{...o.data,url:Es.location.href,route:e.getCurrentRoute(),timeAfterClickMs:n,endReason:r,clickCount:i||1}};this.se(e,s)}else if(i>1){const t={type:\"default\",message:o.message,timestamp:o.timestamp,category:\"ui.multiClick\",data:{...o.data,url:Es.location.href,route:e.getCurrentRoute(),clickCount:i,metric:!0}};this.se(e,t)}}ae(){this.oe&&clearTimeout(this.oe),this.oe=setTimeout((()=>this.le()),1e3)}}const zo=[\"A\",\"BUTTON\",\"INPUT\"];function Ho(){return Date.now()/1e3}function qo(t,e){try{if(!function(t){return 3===t.type}(e))return;const{source:n}=e.data;if(n===Hi.Mutation&&t.registerMutation(e.timestamp),n===Hi.Scroll&&t.registerScroll(e.timestamp),function(t){return t.data.source===Hi.MouseInteraction}(e)){const{type:n,id:r}=e.data,s=Mo.mirror.getNode(r);s instanceof HTMLElement&&n===qi.Click&&t.registerClick(s)}}catch(t){}}function Wo(t){return{timestamp:Date.now()/1e3,type:\"default\",...t}}var Ko;!function(t){t[t.Document=0]=\"Document\",t[t.DocumentType=1]=\"DocumentType\",t[t.Element=2]=\"Element\",t[t.Text=3]=\"Text\",t[t.CDATA=4]=\"CDATA\",t[t.Comment=5]=\"Comment\"}(Ko||(Ko={}));const Jo=new Set([\"id\",\"class\",\"aria-label\",\"role\",\"name\",\"alt\",\"title\",\"data-test-id\",\"data-testid\",\"disabled\",\"aria-disabled\",\"data-sentry-component\"]);function Xo(t){const e={};for(const n in t)if(Jo.has(n)){let r=n;\"data-testid\"!==n&&\"data-test-id\"!==n||(r=\"testId\"),e[r]=t[n]}return e}const Go=t=>e=>{if(!t.isEnabled())return;const n=function(t){const{target:e,message:n}=function(t){const e=\"click\"===t.name;let n,r=null;try{r=e?Fo(t.event):No(t.event),n=E(r,{maxStringLength:200})||\"<unknown>\"}catch(t){n=\"<unknown>\"}return{target:r,message:n}}(t);return Wo({category:`ui.${t.name}`,...Yo(e,n)})}(e);if(!n)return;const r=\"click\"===e.name,s=r?e.event:void 0;var i,o,a;!(r&&t.clickDetector&&s&&s.target)||s.altKey||s.metaKey||s.ctrlKey||s.shiftKey||(i=t.clickDetector,o=n,a=Fo(e.event),i.handleClick(o,a)),Lo(t,n)};function Yo(t,e){const n=Mo.mirror.getId(t),r=n&&Mo.mirror.getNode(n),s=r&&Mo.mirror.getMeta(r),i=s&&function(t){return t.type===Ko.Element}(s)?s:null;return{message:e,data:i?{nodeId:n,node:{id:n,tagName:i.tagName,textContent:Array.from(i.childNodes).map((t=>t.type===Ko.Text&&t.textContent)).filter(Boolean).map((t=>t.trim())).join(\"\"),attributes:Xo(i.attributes)}}:{}}}function Vo(t,e){if(!t.isEnabled())return;t.updateUserActivity();const n=function(t){const{metaKey:e,shiftKey:n,ctrlKey:r,altKey:s,key:i,target:o}=t;if(!o||function(t){return\"INPUT\"===t.tagName||\"TEXTAREA\"===t.tagName||t.isContentEditable}(o)||!i)return null;const a=e||r||s,c=1===i.length;if(!a&&c)return null;const u=E(o,{maxStringLength:200})||\"<unknown>\",l=Yo(o,u);return Wo({category:\"ui.keyDown\",message:u,data:{...l.data,metaKey:e,shiftKey:n,ctrlKey:r,altKey:s,key:i}})}(e);n&&Lo(t,n)}const Qo={resource:function(t){const{entryType:e,initiatorType:n,name:r,responseEnd:s,startTime:i,decodedBodySize:o,encodedBodySize:a,responseStatus:c,transferSize:u}=t;if([\"fetch\",\"xmlhttprequest\"].includes(n))return null;return{type:`${e}.${n}`,start:ta(i),end:ta(s),name:r,data:{size:u,statusCode:c,decodedBodySize:o,encodedBodySize:a}}},paint:function(t){const{duration:e,entryType:n,name:r,startTime:s}=t,i=ta(s);return{type:n,name:r,start:i,end:i+e,data:void 0}},navigation:function(t){const{entryType:e,name:n,decodedBodySize:r,duration:s,domComplete:i,encodedBodySize:o,domContentLoadedEventStart:a,domContentLoadedEventEnd:c,domInteractive:u,loadEventStart:l,loadEventEnd:h,redirectCount:f,startTime:d,transferSize:p,type:m}=t;if(0===s)return null;return{type:`${e}.${m}`,start:ta(d),end:ta(i),name:n,data:{size:p,decodedBodySize:r,encodedBodySize:o,duration:s,domInteractive:u,domContentLoadedEventStart:a,domContentLoadedEventEnd:c,loadEventStart:l,loadEventEnd:h,domComplete:i,redirectCount:f}}}};function Zo(t){return Qo[t.entryType]?Qo[t.entryType](t):null}function ta(t){return((ee||Es.performance.timeOrigin)+t)/1e3}function ea(t){function e(e){t.performanceEntries.includes(e)||t.performanceEntries.push(e)}function n({entries:t}){t.forEach(e)}const r=[];return[\"navigation\",\"paint\",\"resource\"].forEach((t=>{r.push(Qr(t,n))})),r.push(Vr((({metric:e})=>{t.replayPerformanceEntries.push(function(t){const e=t.entries,n=e[e.length-1],r=n?n.element:void 0,s=t.value,i=ta(s);return{type:\"largest-contentful-paint\",name:\"largest-contentful-paint\",start:i,end:i,data:{value:s,size:s,nodeId:r?Mo.mirror.getId(r):void 0}}}(e))}))),()=>{r.forEach((t=>t()))}}class na extends Error{constructor(){super(\"Event buffer exceeded maximum size of 20000000.\")}}class ra{constructor(){this.events=[],this.fe=0,this.hasCheckout=!1}get hasEvents(){return this.events.length>0}get type(){return\"sync\"}destroy(){this.events=[]}async addEvent(t){const e=JSON.stringify(t).length;if(this.fe+=e,this.fe>Ds)throw new na;this.events.push(t)}finish(){return new Promise((t=>{const e=this.events;this.clear(),t(JSON.stringify(e))}))}clear(){this.events=[],this.fe=0,this.hasCheckout=!1}getEarliestTimestamp(){const t=this.events.map((t=>t.timestamp)).sort()[0];return t?Do(t):null}}class sa{constructor(t){this.de=t,this.pe=0}ensureReady(){return this.me||(this.me=new Promise(((t,e)=>{this.de.addEventListener(\"message\",(({data:n})=>{n.success?t():e()}),{once:!0}),this.de.addEventListener(\"error\",(t=>{e(t)}),{once:!0})}))),this.me}destroy(){this.de.terminate()}postMessage(t,e){const n=this.ye();return new Promise(((r,s)=>{const i=({data:e})=>{const o=e;o.method===t&&o.id===n&&(this.de.removeEventListener(\"message\",i),o.success?r(o.response):s(new Error(\"Error in compression worker\")))};this.de.addEventListener(\"message\",i),this.de.postMessage({id:n,method:t,arg:e})}))}ye(){return this.pe++}}class ia{constructor(t){this.de=new sa(t),this.ge=null,this.fe=0,this.hasCheckout=!1}get hasEvents(){return!!this.ge}get type(){return\"worker\"}ensureReady(){return this.de.ensureReady()}destroy(){this.de.destroy()}addEvent(t){const e=Do(t.timestamp);(!this.ge||e<this.ge)&&(this.ge=e);const n=JSON.stringify(t);return this.fe+=n.length,this.fe>Ds?Promise.reject(new na):this.ve(n)}finish(){return this.be()}clear(){this.ge=null,this.fe=0,this.hasCheckout=!1,this.de.postMessage(\"clear\").then(null,(t=>{}))}getEarliestTimestamp(){return this.ge}ve(t){return this.de.postMessage(\"addEvent\",t)}async be(){const t=await this.de.postMessage(\"finish\");return this.ge=null,this.fe=0,t}}class oa{constructor(t){this.ke=new ra,this.we=new ia(t),this.Se=this.ke,this.Te=this._e()}get type(){return this.Se.type}get hasEvents(){return this.Se.hasEvents}get hasCheckout(){return this.Se.hasCheckout}set hasCheckout(t){this.Se.hasCheckout=t}destroy(){this.ke.destroy(),this.we.destroy()}clear(){return this.Se.clear()}getEarliestTimestamp(){return this.Se.getEarliestTimestamp()}addEvent(t){return this.Se.addEvent(t)}async finish(){return await this.ensureWorkerIsLoaded(),this.Se.finish()}ensureWorkerIsLoaded(){return this.Te}async _e(){try{await this.we.ensureReady()}catch(t){return}await this.xe()}async xe(){const{events:t,hasCheckout:e}=this.ke,n=[];for(const e of t)n.push(this.we.addEvent(e));this.we.hasCheckout=e,this.Se=this.we;try{await Promise.all(n)}catch(t){}}}function aa({useCompression:t,workerUrl:e}){if(t&&window.Worker){const t=function(t){try{const e=t||function(){if(\"undefined\"==typeof __SENTRY_EXCLUDE_REPLAY_WORKER__||!__SENTRY_EXCLUDE_REPLAY_WORKER__)return function(){const t=new Blob(['var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});']);return URL.createObjectURL(t)}();return\"\"}();if(!e)return;const n=new Worker(e);return new oa(n)}catch(t){}}(e);if(t)return t}return new ra}function ca(){try{return\"sessionStorage\"in Es&&!!Es.sessionStorage}catch(t){return!1}}function ua(t){!function(){if(!ca())return;try{Es.sessionStorage.removeItem(Os)}catch(t){}}(),t.session=void 0}function la(t){return void 0!==t&&Math.random()<t}function ha(t){const e=Date.now();return{id:t.id||ot(),started:t.started||e,lastActivity:t.lastActivity||e,segmentId:t.segmentId||0,sampled:t.sampled,previousSessionId:t.previousSessionId}}function fa(t){if(ca())try{Es.sessionStorage.setItem(Os,JSON.stringify(t))}catch(t){}}function da({sessionSampleRate:t,allowBuffering:e,stickySession:n=!1},{previousSessionId:r}={}){const s=function(t,e){return la(t)?\"session\":!!e&&\"buffer\"}(t,e),i=ha({sampled:s,previousSessionId:r});return n&&fa(i),i}function pa(t,e,n=+new Date){return null===t||void 0===e||e<0||0!==e&&t+e<=n}function ma(t,{maxReplayDuration:e,sessionIdleExpire:n,targetTime:r=Date.now()}){return pa(t.started,e,r)||pa(t.lastActivity,n,r)}function ya(t,{sessionIdleExpire:e,maxReplayDuration:n}){return!!ma(t,{sessionIdleExpire:e,maxReplayDuration:n})&&(\"buffer\"!==t.sampled||0!==t.segmentId)}function ga({traceInternals:t,sessionIdleExpire:e,maxReplayDuration:n,previousSessionId:r},s){const i=s.stickySession&&function(t){if(!ca())return null;try{const t=Es.sessionStorage.getItem(Os);return t?ha(JSON.parse(t)):null}catch(t){return null}}();return i?ya(i,{sessionIdleExpire:e,maxReplayDuration:n})?da(s,{previousSessionId:i.id}):i:da(s,{previousSessionId:r})}function va(t,e,n){return!!ka(t,e)&&(ba(t,e,n),!0)}async function ba(t,e,n){if(!t.eventBuffer)return null;try{n&&\"buffer\"===t.recordingMode&&t.eventBuffer.clear(),n&&(t.eventBuffer.hasCheckout=!0);const r=function(t,e){try{if(\"function\"==typeof e&&function(t){return t.type===zi.Custom}(t))return e(t)}catch(t){return null}return t}(e,t.getOptions().beforeAddRecordingEvent);if(!r)return;return await t.eventBuffer.addEvent(r)}catch(e){const n=e&&e instanceof na?\"addEventSizeExceeded\":\"addEvent\";await t.stop({reason:n});const r=Je();r&&r.recordDroppedEvent(\"internal_sdk_error\",\"replay\")}}function ka(t,e){if(!t.eventBuffer||t.isPaused()||!t.isEnabled())return!1;const n=Do(e.timestamp);return!(n+t.timeouts.sessionIdlePause<Date.now())&&(!(n>t.getContext().initialTimestamp+t.getOptions().maxReplayDuration)||(t.getOptions()._experiments.traceInternals,!1))}function wa(t){return!t.type}function Sa(t){return\"transaction\"===t.type}function Ta(t){return\"feedback\"===t.type}function _a(t){const e=function(){const t=Je();if(!t)return!1;const e=t.getTransport();if(!e)return!1;return e.send.__sentry__baseTransport__||!1}();return(n,r)=>{if(!t.isEnabled()||!wa(n)&&!Sa(n))return;const s=r&&r.statusCode;e&&(!s||s<200||s>=300)||(Sa(n)?function(t,e){const n=t.getContext();e.contexts&&e.contexts.trace&&e.contexts.trace.trace_id&&n.traceIds.size<100&&n.traceIds.add(e.contexts.trace.trace_id)}(t,n):function(t,e){const n=t.getContext();e.event_id&&n.errorIds.size<100&&n.errorIds.add(e.event_id);if(\"buffer\"!==t.recordingMode||!e.tags||!e.tags.replayId)return;const{beforeErrorSampling:r}=t.getOptions();if(\"function\"==typeof r&&!r(e))return;setTimeout((()=>{t.sendBufferedReplayOrFlush()}))}(t,n))}}function xa(t){return e=>{t.isEnabled()&&wa(e)&&function(t,e){const n=e.exception&&e.exception.values&&e.exception.values[0].value;if(\"string\"!=typeof n)return;if(n.match(/reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=(418|419|422|423|425)/)||n.match(/(does not match server-rendered HTML|Hydration failed because)/i)){Lo(t,Wo({category:\"replay.hydrate-error\"}))}}(t,e)}}function Ia(t,e=!1){const n=e?_a(t):void 0;return Object.assign(((e,r)=>{if(!t.isEnabled())return e;if(function(t){return\"replay_event\"===t.type}(e))return delete e.breadcrumbs,e;if(!wa(e)&&!Sa(e)&&!Ta(e))return e;if(!t.checkAndHandleExpiredSession())return e;if(Ta(e))return t.flush(),e.contexts.feedback.replay_id=t.getSessionId(),function(t,e){t.triggerUserActivity(),t.addUpdate((()=>!e.timestamp||(t.throttledAddEvent({type:zi.Custom,timestamp:1e3*e.timestamp,data:{timestamp:e.timestamp,tag:\"breadcrumb\",payload:{category:\"sentry.feedback\",data:{feedbackId:e.event_id}}}}),!1)))}(t,e),e;if(function(t,e){return!(t.type||!t.exception||!t.exception.values||!t.exception.values.length||!e.originalException||!e.originalException.__rrweb__)}(e,r)&&!t.getOptions()._experiments.captureExceptions)return null;const s=function(t,e){return\"buffer\"===t.recordingMode&&e.message!==As&&!(!e.exception||e.type)&&la(t.getOptions().errorSampleRate)}(t,e);return(s||\"session\"===t.recordingMode)&&(e.tags={...e.tags,replayId:t.getSessionId()}),n&&n(e,{statusCode:200}),e}),{id:\"Replay\"})}function Ca(t,e){return e.map((({type:e,start:n,end:r,name:s,data:i})=>{const o=t.throttledAddEvent({type:zi.Custom,timestamp:n,data:{tag:\"performanceSpan\",payload:{op:e,description:s,startTimestamp:n,endTimestamp:r,data:i}}});return\"string\"==typeof o?Promise.resolve(null):o}))}function Ea(t){return e=>{if(!t.isEnabled())return;const n=function(t){const{from:e,to:n}=t,r=Date.now()/1e3;return{type:\"navigation.push\",start:r,end:r,name:n,data:{previous:e}}}(e);null!==n&&(t.getContext().urls.push(n.name),t.triggerUserActivity(),t.addUpdate((()=>(Ca(t,[n]),!1))))}}function Oa(t,e){t.isEnabled()&&(null!==e&&(pr(e.name,Je())||t.addUpdate((()=>(Ca(t,[e]),!0)))))}function Aa(t,e){if(t)try{if(\"string\"==typeof t)return e.encode(t).length;if(t instanceof URLSearchParams)return e.encode(t.toString()).length;if(t instanceof FormData){const n=Na(t);return e.encode(n).length}if(t instanceof Blob)return t.size;if(t instanceof ArrayBuffer)return t.byteLength}catch(t){}}function Ra(t){if(!t)return;const e=parseInt(t,10);return isNaN(e)?void 0:e}function Ma(t){try{if(\"string\"==typeof t)return[t];if(t instanceof URLSearchParams)return[t.toString()];if(t instanceof FormData)return[Na(t)];if(!t)return[void 0]}catch(t){return[void 0,\"BODY_PARSE_ERROR\"]}return[void 0,\"UNPARSEABLE_BODY_TYPE\"]}function Da(t,e){if(!t)return{headers:{},size:void 0,_meta:{warnings:[e]}};const n={...t._meta},r=n.warnings||[];return n.warnings=[...r,e],t._meta=n,t}function $a(t,e){if(!e)return null;const{startTimestamp:n,endTimestamp:r,url:s,method:i,statusCode:o,request:a,response:c}=e;return{type:t,start:n/1e3,end:r/1e3,name:s,data:J({method:i,statusCode:o,request:a,response:c})}}function La(t){return{headers:{},size:t,_meta:{warnings:[\"URL_SKIPPED\"]}}}function ja(t,e,n){if(!e&&0===Object.keys(t).length)return;if(!e)return{headers:t};if(!n)return{headers:t,size:e};const r={headers:t,size:e},{body:s,warnings:i}=function(t){if(!t||\"string\"!=typeof t)return{body:t};const e=t.length>Rs,n=function(t){const e=t[0],n=t[t.length-1];return\"[\"===e&&\"]\"===n||\"{\"===e&&\"}\"===n}(t);if(e){const e=t.slice(0,Rs);return n?{body:e,warnings:[\"MAYBE_JSON_TRUNCATED\"]}:{body:`${e}…`,warnings:[\"TEXT_TRUNCATED\"]}}if(n)try{return{body:JSON.parse(t)}}catch(t){}return{body:t}}(n);return r.body=s,i&&i.length>0&&(r._meta={warnings:i}),r}function Fa(t,e){return Object.keys(t).reduce(((n,r)=>{const s=r.toLowerCase();return e.includes(s)&&t[r]&&(n[s]=t[r]),n}),{})}function Na(t){return new URLSearchParams(t).toString()}function Pa(t,e){const n=function(t,e=Es.document.baseURI){if(t.startsWith(\"http://\")||t.startsWith(\"https://\")||t.startsWith(Es.location.origin))return t;const n=new URL(t,e);if(n.origin!==new URL(e).origin)return t;const r=n.href;if(!t.endsWith(\"/\")&&r.endsWith(\"/\"))return r.slice(0,-1);return r}(t);return v(n,e)}async function Ba(t,e,n){try{const r=await async function(t,e,n){const r=Date.now(),{startTimestamp:s=r,endTimestamp:i=r}=e,{url:o,method:a,status_code:c=0,request_body_size:u,response_body_size:l}=t.data,h=Pa(o,n.networkDetailAllowUrls)&&!Pa(o,n.networkDetailDenyUrls),f=h?function({networkCaptureBodies:t,networkRequestHeaders:e},n,r){const s=n?function(t,e){if(1===t.length&&\"string\"!=typeof t[0])return Ha(t[0],e);if(2===t.length)return Ha(t[1],e);return{}}(n,e):{};if(!t)return ja(s,r,void 0);const i=Ua(n),[o,a]=Ma(i),c=ja(s,r,o);if(a)return Da(c,a);return c}(n,e.input,u):La(u),d=await async function(t,{networkCaptureBodies:e,textEncoder:n,networkResponseHeaders:r},s,i){if(!t&&void 0!==i)return La(i);const o=s?za(s.headers,r):{};if(!s||!e&&void 0!==i)return ja(o,i,void 0);const[a,c]=await async function(t){const e=function(t){try{return t.clone()}catch(t){}}(t);if(!e)return[void 0,\"BODY_PARSE_ERROR\"];try{const t=await function(t){return new Promise(((e,n)=>{const r=setTimeout((()=>n(new Error(\"Timeout while trying to read response body\"))),500);(async function(t){return await t.text()})(t).then((t=>e(t)),(t=>n(t))).finally((()=>clearTimeout(r)))}))}(e);return[t]}catch(t){return[void 0,\"BODY_PARSE_ERROR\"]}}(s),u=function(t,{networkCaptureBodies:e,textEncoder:n,responseBodySize:r,captureDetails:s,headers:i}){try{const o=t&&t.length&&void 0===r?Aa(t,n):r;return s?ja(i,o,e?t:void 0):La(o)}catch(t){return ja(i,r,void 0)}}(a,{networkCaptureBodies:e,textEncoder:n,responseBodySize:i,captureDetails:t,headers:o});if(c)return Da(u,c);return u}(h,n,e.response,l);return{startTimestamp:s,endTimestamp:i,url:o,method:a,statusCode:c,request:f,response:d}}(t,e,n),s=$a(\"resource.fetch\",r);Oa(n.replay,s)}catch(t){}}function Ua(t=[]){if(2===t.length&&\"object\"==typeof t[1])return t[1].body}function za(t,e){const n={};return e.forEach((e=>{t.get(e)&&(n[e]=t.get(e))})),n}function Ha(t,e){if(!t)return{};const n=t.headers;return n?n instanceof Headers?za(n,e):Array.isArray(n)?{}:Fa(n,e):{}}async function qa(t,e,n){try{const r=function(t,e,n){const r=Date.now(),{startTimestamp:s=r,endTimestamp:i=r,input:o,xhr:a}=e,{url:c,method:u,status_code:l=0,request_body_size:h,response_body_size:f}=t.data;if(!c)return null;if(!a||!Pa(c,n.networkDetailAllowUrls)||Pa(c,n.networkDetailDenyUrls)){return{startTimestamp:s,endTimestamp:i,url:c,method:u,statusCode:l,request:La(h),response:La(f)}}const d=a.__sentry_xhr_v3__,p=d?Fa(d.request_headers,n.networkRequestHeaders):{},m=Fa(function(t){const e=t.getAllResponseHeaders();if(!e)return{};return e.split(\"\\r\\n\").reduce(((t,e)=>{const[n,r]=e.split(\": \");return t[n.toLowerCase()]=r,t}),{})}(a),n.networkResponseHeaders),[y,g]=n.networkCaptureBodies?Ma(o):[void 0],[v,b]=n.networkCaptureBodies?function(t){try{return[t.responseText]}catch(t){}try{return function(t,e){try{if(\"string\"==typeof t)return[t];if(t instanceof Document)return[t.body.outerHTML];if(\"json\"===e&&t&&\"object\"==typeof t)return[JSON.stringify(t)];if(!t)return[void 0]}catch(t){return[void 0,\"BODY_PARSE_ERROR\"]}return[void 0,\"UNPARSEABLE_BODY_TYPE\"]}(t.response,t.responseType)}catch(t){}return[void 0]}(a):[void 0],k=ja(p,h,y),w=ja(m,f,v);return{startTimestamp:s,endTimestamp:i,url:c,method:u,statusCode:l,request:g?Da(k,g):k,response:b?Da(w,b):w}}(t,e,n),s=$a(\"resource.xhr\",r);Oa(n.replay,s)}catch(t){}}function Wa(t,e,n){const{xhr:r,input:s}=e;if(!r)return;const i=Aa(s,n.textEncoder),o=r.getResponseHeader(\"content-length\")?Ra(r.getResponseHeader(\"content-length\")):function(t,e,n){try{return Aa(\"json\"===e&&t&&\"object\"==typeof t?JSON.stringify(t):t,n)}catch(t){return}}(r.response,r.responseType,n.textEncoder);void 0!==i&&(t.data.request_body_size=i),void 0!==o&&(t.data.response_body_size=o)}function Ka(t){const e=Je();try{const n=new TextEncoder,{networkDetailAllowUrls:r,networkDetailDenyUrls:s,networkCaptureBodies:i,networkRequestHeaders:o,networkResponseHeaders:a}=t.getOptions(),c={replay:t,textEncoder:n,networkDetailAllowUrls:r,networkDetailDenyUrls:s,networkCaptureBodies:i,networkRequestHeaders:o,networkResponseHeaders:a};e&&e.on?e.on(\"beforeAddBreadcrumb\",((t,e)=>function(t,e,n){if(!e.data)return;try{(function(t){return\"xhr\"===t.category})(e)&&function(t){return t&&t.xhr}(n)&&(Wa(e,n,t),qa(e,n,t)),function(t){return\"fetch\"===t.category}(e)&&function(t){return t&&t.response}(n)&&(!function(t,e,n){const{input:r,response:s}=e,i=Aa(r?Ua(r):void 0,n.textEncoder),o=s?Ra(s.headers.get(\"content-length\")):void 0;void 0!==i&&(t.data.request_body_size=i),void 0!==o&&(t.data.response_body_size=o)}(e,n,t),Ba(e,n,t))}catch(t){}}(c,t,e))):(Tt(function(t){return e=>{if(!t.isEnabled())return;const n=function(t){const{startTimestamp:e,endTimestamp:n,fetchData:r,response:s}=t;if(!n)return null;const{method:i,url:o}=r;return{type:\"resource.fetch\",start:e/1e3,end:n/1e3,name:o,data:{method:i,statusCode:s?s.status:void 0}}}(e);Oa(t,n)}}(t)),Pt(function(t){return e=>{if(!t.isEnabled())return;const n=function(t){const{startTimestamp:e,endTimestamp:n,xhr:r}=t,s=r.__sentry_xhr_v3__;if(!e||!n||!s)return null;const{method:i,url:o,status_code:a}=s;return void 0===o?null:{type:\"resource.xhr\",name:o,start:e/1e3,end:n/1e3,data:{method:i,statusCode:a}}}(e);Oa(t,n)}}(t)))}catch(t){}}let Ja=null;const Xa=t=>e=>{if(!t.isEnabled())return;const n=function(t){const e=t.getLastBreadcrumb&&t.getLastBreadcrumb();if(Ja===e||!e)return null;if(Ja=e,!function(t){return!!t.category}(e)||[\"fetch\",\"xhr\",\"sentry.event\",\"sentry.transaction\"].includes(e.category)||e.category.startsWith(\"ui.\"))return null;if(\"console\"===e.category)return function(t){const e=t.data&&t.data.arguments;if(!Array.isArray(e)||0===e.length)return Wo(t);let n=!1;const r=e.map((t=>{if(!t)return t;if(\"string\"==typeof t)return t.length>Ms?(n=!0,`${t.slice(0,Ms)}…`):t;if(\"object\"==typeof t)try{const e=zt(t,7);return JSON.stringify(e).length>Ms?(n=!0,`${JSON.stringify(e,null,2).slice(0,Ms)}…`):e}catch(t){}return t}));return Wo({...t,data:{...t.data,arguments:r,...n?{_meta:{warnings:[\"CONSOLE_ARG_TRUNCATED\"]}}:{}}})}(e);return Wo(e)}(e);n&&Lo(t,n)};function Ga(t){return!(!t||!t.on)}function Ya(t){const{jsHeapSizeLimit:e,totalJSHeapSize:n,usedJSHeapSize:r}=t,s=Date.now()/1e3;return{type:\"memory\",name:\"memory\",start:s,end:s,data:{memory:{jsHeapSizeLimit:e,totalJSHeapSize:n,usedJSHeapSize:r}}}}function Va(t){let e=!1;return(n,r)=>{if(!t.checkAndHandleExpiredSession())return;const s=r||!e;e=!0,t.clickDetector&&qo(t.clickDetector,n),t.addUpdate((()=>{if(\"buffer\"===t.recordingMode&&s&&t.setInitialState(),!va(t,n,s))return!0;if(!s)return!1;if(function(t,e){if(!e||!t.session||0!==t.session.segmentId)return;va(t,function(t){const e=t.getOptions();return{type:zi.Custom,timestamp:Date.now(),data:{tag:\"options\",payload:{shouldRecordCanvas:t.isRecordingCanvas(),sessionSampleRate:e.sessionSampleRate,errorSampleRate:e.errorSampleRate,useCompressionOption:e.useCompression,blockAllMedia:e.blockAllMedia,maskAllText:e.maskAllText,maskAllInputs:e.maskAllInputs,useCompression:!!t.eventBuffer&&\"worker\"===t.eventBuffer.type,networkDetailHasUrls:e.networkDetailAllowUrls.length>0,networkCaptureBodies:e.networkCaptureBodies,networkRequestHasHeaders:e.networkRequestHeaders.length>0,networkResponseHasHeaders:e.networkResponseHeaders.length>0}}}}(t),!1)}(t,s),t.session&&t.session.previousSessionId)return!0;if(\"buffer\"===t.recordingMode&&t.session&&t.eventBuffer){const e=t.eventBuffer.getEarliestTimestamp();e&&(new Date(e),t.getOptions()._experiments.traceInternals,t.session.started=e,t.getOptions().stickySession&&fa(t.session))}return\"session\"===t.recordingMode&&t.flush(),!0}))}}async function Qa({recordingData:t,replayId:e,segmentId:n,eventContext:r,timestamp:s,session:i}){const o=function({recordingData:t,headers:e}){let n;const r=`${JSON.stringify(e)}\\n`;if(\"string\"==typeof t)n=`${r}${t}`;else{const e=(new TextEncoder).encode(r);n=new Uint8Array(e.length+t.length),n.set(e),n.set(t,e.length)}return n}({recordingData:t,headers:{segment_id:n}}),{urls:a,errorIds:c,traceIds:u,initialTimestamp:l}=r,h=Je(),f=Xe(),d=h&&h.getTransport(),p=h&&h.getDsn();if(!(h&&d&&p&&i.sampled))return;const m={type:\"replay_event\",replay_start_timestamp:l/1e3,timestamp:s/1e3,error_ids:c,trace_ids:u,urls:a,replay_id:e,segment_id:n,replay_type:i.sampled},y=await async function({client:t,scope:e,replayId:n,event:r}){const s={event_id:n,integrations:\"object\"!=typeof t._integrations||null===t._integrations||Array.isArray(t._integrations)?void 0:Object.keys(t._integrations)};t.emit&&t.emit(\"preprocessEvent\",r,s);const i=await Pe(t.getOptions(),r,s,e,t,yn());if(!i)return null;i.platform=i.platform||\"javascript\";const o=t.getSdkMetadata&&t.getSdkMetadata(),{name:a,version:c}=o&&o.sdk||{};return i.sdk={...i.sdk,name:a||\"sentry.javascript.unknown\",version:c||\"0.0.0\"},i}({scope:f,client:h,replayId:e,event:m});if(!y)return void h.recordDroppedEvent(\"event_processor\",\"replay\",m);delete y.sdkProcessingMetadata;const g=function(t,e,n,r){return he(ke(t,be(t),r,n),[[{type:\"replay_event\"},t],[{type:\"replay_recording\",length:\"string\"==typeof e?(new TextEncoder).encode(e).length:e.length},e]])}(y,o,p,h.getOptions().tunnel);let v;try{v=await d.send(g)}catch(t){const e=new Error(As);try{e.cause=t}catch(t){}throw e}if(!v)return v;if(\"number\"==typeof v.statusCode&&(v.statusCode<200||v.statusCode>=300))throw new Za(v.statusCode);const b=Se({},v);if(we(b,\"replay\"))throw new tc(b);return v}class Za extends Error{constructor(t){super(`Transport returned status code ${t}`)}}class tc extends Error{constructor(t){super(\"Rate limit hit\"),this.rateLimits=t}}async function ec(t,e={count:0,interval:5e3}){const{recordingData:n,options:r}=t;if(n.length)try{return await Qa(t),!0}catch(n){if(n instanceof Za||n instanceof tc)throw n;if(We(\"Replays\",{Ie:e.count}),e.count>=3){const t=new Error(\"Unable to send Replay - max retries exceeded\");try{t.cause=n}catch(t){}throw t}return e.interval*=++e.count,new Promise(((n,r)=>{setTimeout((async()=>{try{await ec(t,e),n(!0)}catch(t){r(t)}}),e.interval)}))}}const nc=\"__THROTTLED\";function rc(t,e,n){const r=new Map;let s=!1;return(...i)=>{const o=Math.floor(Date.now()/1e3);if((t=>{const e=t-n;r.forEach(((t,n)=>{n<e&&r.delete(n)}))})(o),[...r.values()].reduce(((t,e)=>t+e),0)>=e){const t=s;return s=!0,t?\"__SKIPPED\":nc}s=!1;const a=r.get(o)||0;return r.set(o,a+1),t(...i)}}class sc{constructor({options:t,recordingOptions:e}){sc.prototype.__init.call(this),sc.prototype.__init2.call(this),sc.prototype.__init3.call(this),sc.prototype.__init4.call(this),sc.prototype.__init5.call(this),sc.prototype.__init6.call(this),this.eventBuffer=null,this.performanceEntries=[],this.replayPerformanceEntries=[],this.recordingMode=\"session\",this.timeouts={sessionIdlePause:3e5,sessionIdleExpire:9e5},this.Ce=Date.now(),this.Ee=!1,this.Oe=!1,this.Ae=!1,this.Re={errorIds:new Set,traceIds:new Set,urls:[],initialTimestamp:Date.now(),initialUrl:\"\"},this.Me=e,this.De=t,this.$e=function(t,e,n){let r,s,i;const o=n&&n.maxWait?Math.max(n.maxWait,e):0;function a(){return c(),r=t(),r}function c(){void 0!==s&&clearTimeout(s),void 0!==i&&clearTimeout(i),s=i=void 0}function u(){return s&&clearTimeout(s),s=setTimeout(a,e),o&&void 0===i&&(i=setTimeout(a,o)),r}return u.cancel=c,u.flush=function(){return void 0!==s||void 0!==i?a():r},u}((()=>this.Le()),this.De.flushMinDelay,{maxWait:this.De.flushMaxDelay}),this.je=rc(((t,e)=>function(t,e,n){return ka(t,e)?ba(t,e,n):Promise.resolve(null)}(this,t,e)),300,5);const{slowClickTimeout:n,slowClickIgnoreSelectors:r}=this.getOptions(),s=n?{threshold:Math.min(3e3,n),timeout:n,scrollTimeout:300,ignoreSelector:r?r.join(\",\"):\"\"}:void 0;s&&(this.clickDetector=new Uo(this,s))}getContext(){return this.Re}isEnabled(){return this.Ee}isPaused(){return this.Oe}isRecordingCanvas(){return Boolean(this._canvas)}getOptions(){return this.De}initializeSampling(t){const{errorSampleRate:e,sessionSampleRate:n}=this.De;e<=0&&n<=0||(this.Fe(t),this.session?!1!==this.session.sampled&&(this.recordingMode=\"buffer\"===this.session.sampled&&0===this.session.segmentId?\"buffer\":\"session\",this.Ne()):this.Pe(new Error(\"Unable to initialize and create session\")))}start(){if(this.Ee&&\"session\"===this.recordingMode)throw new Error(\"Replay recording is already in progress\");if(this.Ee&&\"buffer\"===this.recordingMode)throw new Error(\"Replay buffering is in progress, call `flush()` to save the replay\");const t=ga({maxReplayDuration:this.De.maxReplayDuration,sessionIdleExpire:this.timeouts.sessionIdleExpire,traceInternals:this.De._experiments.traceInternals},{stickySession:this.De.stickySession,sessionSampleRate:1,allowBuffering:!1});this.session=t,this.Ne()}startBuffering(){if(this.Ee)throw new Error(\"Replay recording is already in progress\");const t=ga({sessionIdleExpire:this.timeouts.sessionIdleExpire,maxReplayDuration:this.De.maxReplayDuration,traceInternals:this.De._experiments.traceInternals},{stickySession:this.De.stickySession,sessionSampleRate:0,allowBuffering:!0});this.session=t,this.recordingMode=\"buffer\",this.Ne()}startRecording(){try{const t=this._canvas;this.Be=Mo({...this.Me,...\"buffer\"===this.recordingMode&&{checkoutEveryNms:6e4},emit:Va(this),onMutation:this.Ue,...t?{recordCanvas:t.recordCanvas,getCanvasManager:t.getCanvasManager,sampling:t.sampling,dataURLOptions:t.dataURLOptions}:{}})}catch(t){this.Pe(t)}}stopRecording(){try{return this.Be&&(this.Be(),this.Be=void 0),!0}catch(t){return this.Pe(t),!1}}async stop({forceFlush:t=!1,reason:e}={}){if(this.Ee){this.Ee=!1;try{this.ze(),this.stopRecording(),this.$e.cancel(),t&&await this.Le({force:!0}),this.eventBuffer&&this.eventBuffer.destroy(),this.eventBuffer=null,ua(this)}catch(t){this.Pe(t)}}}pause(){this.Oe||(this.Oe=!0,this.stopRecording())}resume(){this.Oe&&this.He()&&(this.Oe=!1,this.startRecording())}async sendBufferedReplayOrFlush({continueRecording:t=!0}={}){if(\"session\"===this.recordingMode)return this.flushImmediate();const e=Date.now();await this.flushImmediate();const n=this.stopRecording();t&&n&&\"session\"!==this.recordingMode&&(this.recordingMode=\"session\",this.session&&(this.qe(e),this.We(e),this.Ke()),this.startRecording())}addUpdate(t){const e=t();\"buffer\"!==this.recordingMode&&!0!==e&&this.$e()}triggerUserActivity(){if(this.qe(),this.Be)this.checkAndHandleExpiredSession(),this.We();else{if(!this.He())return;this.resume()}}updateUserActivity(){this.qe(),this.We()}conditionalFlush(){return\"buffer\"===this.recordingMode?Promise.resolve():this.flushImmediate()}flush(){return this.$e()}flushImmediate(){return this.$e(),this.$e.flush()}cancelFlush(){this.$e.cancel()}getSessionId(){return this.session&&this.session.id}checkAndHandleExpiredSession(){if(!(this.Ce&&pa(this.Ce,this.timeouts.sessionIdlePause)&&this.session&&\"session\"===this.session.sampled))return!!this.He();this.pause()}setInitialState(){const t=`${Es.location.pathname}${Es.location.hash}${Es.location.search}`,e=`${Es.location.origin}${t}`;this.performanceEntries=[],this.replayPerformanceEntries=[],this.Je(),this.Re.initialUrl=e,this.Re.initialTimestamp=Date.now(),this.Re.urls.push(e)}throttledAddEvent(t,e){const n=this.je(t,e);if(n===nc){const t=Wo({category:\"replay.throttled\"});this.addUpdate((()=>!va(this,{type:5,timestamp:t.timestamp||0,data:{tag:\"breadcrumb\",payload:t,metric:!0}})))}return n}getCurrentRoute(){const t=this.lastTransaction||Xe().getTransaction(),e=(t&&Fe(t).data||{})[\"sentry.source\"];if(t&&e&&[\"route\",\"custom\"].includes(e))return Fe(t).description}Ne(){this.setInitialState(),this.We(),this.eventBuffer=aa({useCompression:this.De.useCompression,workerUrl:this.De.workerUrl}),this.ze(),this.Xe(),this.Ee=!0,this.Oe=!1,this.startRecording()}Pe(t){}Fe(t){const e=this.De.errorSampleRate>0,n=ga({sessionIdleExpire:this.timeouts.sessionIdleExpire,maxReplayDuration:this.De.maxReplayDuration,traceInternals:this.De._experiments.traceInternals,previousSessionId:t},{stickySession:this.De.stickySession,sessionSampleRate:this.De.sessionSampleRate,allowBuffering:e});this.session=n}He(){if(!this.session)return!1;const t=this.session;return!ya(t,{sessionIdleExpire:this.timeouts.sessionIdleExpire,maxReplayDuration:this.De.maxReplayDuration})||(this.Ge(t),!1)}async Ge(t){this.Ee&&(await this.stop({reason:\"refresh session\"}),this.initializeSampling(t.id))}Xe(){try{Es.document.addEventListener(\"visibilitychange\",this.Ye),Es.addEventListener(\"blur\",this.Ve),Es.addEventListener(\"focus\",this.Qe),Es.addEventListener(\"keydown\",this.Ze),this.clickDetector&&this.clickDetector.addListeners(),this.Ae||(!function(t){const e=Xe(),n=Je();e.addScopeListener(Xa(t)),gt(Go(t)),jt(Ea(t)),Ka(t);const r=Ia(t,!Ga(n));n&&n.addEventProcessor?n.addEventProcessor(r):ur(r),Ga(n)&&(n.on(\"beforeSendEvent\",xa(t)),n.on(\"afterSendEvent\",_a(t)),n.on(\"createDsc\",(e=>{const n=t.getSessionId();n&&t.isEnabled()&&\"session\"===t.recordingMode&&t.checkAndHandleExpiredSession()&&(e.replay_id=n)})),n.on(\"startTransaction\",(e=>{t.lastTransaction=e})),n.on(\"finishTransaction\",(e=>{t.lastTransaction=e})),n.on(\"beforeSendFeedback\",((e,n)=>{const r=t.getSessionId();n&&n.includeReplay&&t.isEnabled()&&r&&(t.flush(),e.contexts&&e.contexts.feedback&&(e.contexts.feedback.replay_id=r))})))}(this),this.Ae=!0)}catch(t){this.Pe(t)}this.tn=ea(this)}ze(){try{Es.document.removeEventListener(\"visibilitychange\",this.Ye),Es.removeEventListener(\"blur\",this.Ve),Es.removeEventListener(\"focus\",this.Qe),Es.removeEventListener(\"keydown\",this.Ze),this.clickDetector&&this.clickDetector.removeListeners(),this.tn&&this.tn()}catch(t){this.Pe(t)}}__init(){this.Ye=()=>{\"visible\"===Es.document.visibilityState?this.en():this.nn()}}__init2(){this.Ve=()=>{const t=Wo({category:\"ui.blur\"});this.nn(t)}}__init3(){this.Qe=()=>{const t=Wo({category:\"ui.focus\"});this.en(t)}}__init4(){this.Ze=t=>{Vo(this,t)}}nn(t){if(!this.session)return;ma(this.session,{maxReplayDuration:this.De.maxReplayDuration,sessionIdleExpire:this.timeouts.sessionIdleExpire})||(t&&this.rn(t),this.conditionalFlush())}en(t){if(!this.session)return;this.checkAndHandleExpiredSession()&&t&&this.rn(t)}qe(t=Date.now()){this.Ce=t}We(t=Date.now()){this.session&&(this.session.lastActivity=t,this.Ke())}rn(t){this.addUpdate((()=>{this.throttledAddEvent({type:zi.Custom,timestamp:t.timestamp||0,data:{tag:\"breadcrumb\",payload:t}})}))}sn(){const t=(e=this.performanceEntries,e.map(Zo).filter(Boolean)).concat(this.replayPerformanceEntries);var e;return this.performanceEntries=[],this.replayPerformanceEntries=[],Promise.all(Ca(this,t))}Je(){this.Re.errorIds.clear(),this.Re.traceIds.clear(),this.Re.urls=[]}an(){const{session:t,eventBuffer:e}=this;if(!t||!e)return;if(t.segmentId)return;const n=e.getEarliestTimestamp();n&&n<this.Re.initialTimestamp&&(this.Re.initialTimestamp=n)}cn(){const t={initialTimestamp:this.Re.initialTimestamp,initialUrl:this.Re.initialUrl,errorIds:Array.from(this.Re.errorIds),traceIds:Array.from(this.Re.traceIds),urls:this.Re.urls};return this.Je(),t}async un(){const t=this.getSessionId();if(this.session&&this.eventBuffer&&t&&(await this.sn(),this.eventBuffer&&this.eventBuffer.hasEvents&&(await async function(t){try{return Promise.all(Ca(t,[Ya(Es.performance.memory)]))}catch(t){return[]}}(this),this.eventBuffer&&t===this.getSessionId())))try{this.an();const e=Date.now();if(e-this.Re.initialTimestamp>this.De.maxReplayDuration+3e4)throw new Error(\"Session is too long, not sending replay\");const n=this.cn(),r=this.session.segmentId++;this.Ke();const s=await this.eventBuffer.finish();await ec({replayId:t,recordingData:s,segmentId:r,eventContext:n,session:this.session,options:this.getOptions(),timestamp:e})}catch(t){this.Pe(t),this.stop({reason:\"sendReplay\"});const e=Je();e&&e.recordDroppedEvent(\"send_error\",\"replay\")}}__init5(){this.Le=async({force:t=!1}={})=>{if(!this.Ee&&!t)return;if(!this.checkAndHandleExpiredSession())return;if(!this.session)return;const e=this.session.started,n=Date.now()-e;this.$e.cancel();const r=n<this.De.minReplayDuration,s=n>this.De.maxReplayDuration+5e3;if(r||s)r&&this.$e();else{if(!this.ln)return this.ln=this.un(),await this.ln,void(this.ln=void 0);try{await this.ln}catch(t){}finally{this.$e()}}}}Ke(){this.session&&this.De.stickySession&&fa(this.session)}__init6(){this.Ue=t=>{const e=t.length,n=this.De.mutationLimit,r=n&&e>n;if(e>this.De.mutationBreadcrumbLimit||r){const t=Wo({category:\"replay.mutations\",data:{count:e,limit:r}});this.rn(t)}return!r||(this.stop({reason:\"mutationLimit\",forceFlush:\"session\"===this.recordingMode}),!1)}}}function ic(t,e,n,r){const s=[...t,...\"string\"==typeof r?r.split(\",\"):[],...e];return void 0!==n&&(\"string\"==typeof n&&s.push(`.${n}`),D((()=>{console.warn(\"[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.\")}))),s.join(\",\")}const oc='img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]',ac=[\"content-length\",\"content-type\",\"accept\"];let cc=!1;class uc{static __initStatic(){this.id=\"Replay\"}constructor({flushMinDelay:t=5e3,flushMaxDelay:e=5500,minReplayDuration:n=4999,maxReplayDuration:r=36e5,stickySession:s=!0,useCompression:i=!0,workerUrl:o,_experiments:a={},sessionSampleRate:c,errorSampleRate:u,maskAllText:l=!0,maskAllInputs:h=!0,blockAllMedia:f=!0,mutationBreadcrumbLimit:d=750,mutationLimit:p=1e4,slowClickTimeout:m=7e3,slowClickIgnoreSelectors:y=[],networkDetailAllowUrls:g=[],networkDetailDenyUrls:v=[],networkCaptureBodies:b=!0,networkRequestHeaders:k=[],networkResponseHeaders:w=[],mask:S=[],maskAttributes:T=[\"title\",\"placeholder\"],unmask:_=[],block:x=[],unblock:I=[],ignore:C=[],maskFn:E,beforeAddRecordingEvent:O,beforeErrorSampling:A,blockClass:R,blockSelector:M,maskInputOptions:D,maskTextClass:$,maskTextSelector:L,ignoreClass:j}={}){this.name=uc.id;const F=function({mask:t,unmask:e,block:n,unblock:r,ignore:s,blockClass:i,blockSelector:o,maskTextClass:a,maskTextSelector:c,ignoreClass:u}){const l={maskTextSelector:ic(t,[\".sentry-mask\",\"[data-sentry-mask]\"],a,c),unmaskTextSelector:ic(e,[\".sentry-unmask\",\"[data-sentry-unmask]\"]),blockSelector:ic(n,[\".sentry-block\",\"[data-sentry-block]\",'base[href=\"/\"]'],i,o),unblockSelector:ic(r,[\".sentry-unblock\",\"[data-sentry-unblock]\"]),ignoreSelector:ic(s,[\".sentry-ignore\",\"[data-sentry-ignore]\",'input[type=\"file\"]'],u)};return i instanceof RegExp&&(l.blockClass=i),a instanceof RegExp&&(l.maskTextClass=a),l}({mask:S,unmask:_,block:x,unblock:I,ignore:C,blockClass:R,blockSelector:M,maskTextClass:$,maskTextSelector:L,ignoreClass:j});if(this.Me={maskAllInputs:h,maskAllText:l,maskInputOptions:{...D||{},password:!0},maskTextFn:E,maskInputFn:E,maskAttributeFn:(t,e,n)=>function({el:t,key:e,maskAttributes:n,maskAllText:r,privacyOptions:s,value:i}){return r?s.unmaskTextSelector&&t.matches(s.unmaskTextSelector)?i:n.includes(e)||\"value\"===e&&\"INPUT\"===t.tagName&&[\"submit\",\"button\"].includes(t.getAttribute(\"type\")||\"\")?i.replace(/[\\S]/g,\"*\"):i:i}({maskAttributes:T,maskAllText:l,privacyOptions:F,key:t,value:e,el:n}),...F,slimDOMOptions:\"all\",inlineStylesheet:!0,inlineImages:!1,collectFonts:!0,errorHandler:t=>{try{t.__rrweb__=!0}catch(t){}}},this.hn={flushMinDelay:t,flushMaxDelay:e,minReplayDuration:Math.min(n,15e3),maxReplayDuration:Math.min(r,$s),stickySession:s,sessionSampleRate:c,errorSampleRate:u,useCompression:i,workerUrl:o,blockAllMedia:f,maskAllInputs:h,maskAllText:l,mutationBreadcrumbLimit:d,mutationLimit:p,slowClickTimeout:m,slowClickIgnoreSelectors:y,networkDetailAllowUrls:g,networkDetailDenyUrls:v,networkCaptureBodies:b,networkRequestHeaders:lc(k),networkResponseHeaders:lc(w),beforeAddRecordingEvent:O,beforeErrorSampling:A,_experiments:a},\"number\"==typeof c&&(console.warn(`[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\\nThis option is deprecated and will be removed soon.\\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\\nSentry.init({ replaysSessionSampleRate: ${c} })`),this.hn.sessionSampleRate=c),\"number\"==typeof u&&(console.warn(`[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\\nThis option is deprecated and will be removed soon.\\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\\nSentry.init({ replaysOnErrorSampleRate: ${u} })`),this.hn.errorSampleRate=u),this.hn.blockAllMedia&&(this.Me.blockSelector=this.Me.blockSelector?`${this.Me.blockSelector},${oc}`:oc),this.fn&&Ut())throw new Error(\"Multiple Sentry Session Replay instances are not supported\");this.fn=!0}get fn(){return cc}set fn(t){cc=t}setupOnce(){Ut()&&(this.dn(),setTimeout((()=>this.pn())))}start(){this._replay&&this._replay.start()}startBuffering(){this._replay&&this._replay.startBuffering()}stop(){return this._replay?this._replay.stop({forceFlush:\"session\"===this._replay.recordingMode}):Promise.resolve()}flush(t){return this._replay&&this._replay.isEnabled()?this._replay.sendBufferedReplayOrFlush(t):Promise.resolve()}getReplayId(){if(this._replay&&this._replay.isEnabled())return this._replay.getSessionId()}pn(){this._replay&&(this.mn(),this._replay.initializeSampling())}dn(){const t=function(t){const e=Je(),n=e&&e.getOptions(),r={sessionSampleRate:0,errorSampleRate:0,...J(t)};if(!n)return D((()=>{console.warn(\"SDK client is not available.\")})),r;null==t.sessionSampleRate&&null==t.errorSampleRate&&null==n.replaysSessionSampleRate&&null==n.replaysOnErrorSampleRate&&D((()=>{console.warn(\"Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.\")}));\"number\"==typeof n.replaysSessionSampleRate&&(r.sessionSampleRate=n.replaysSessionSampleRate);\"number\"==typeof n.replaysOnErrorSampleRate&&(r.errorSampleRate=n.replaysOnErrorSampleRate);return r}(this.hn);this._replay=new sc({options:t,recordingOptions:this.Me})}mn(){try{const t=Je().getIntegrationByName(\"ReplayCanvas\");if(!t)return;this._replay._canvas=t.getOptions()}catch(t){}}}function lc(t){return[...ac,...t.map((t=>t.toLowerCase()))]}uc.__initStatic();const hc=_;let fc=0;function dc(){return fc>0}function pc(){fc++,setTimeout((()=>{fc--}))}function mc(t,e={},n){if(\"function\"!=typeof t)return t;try{const e=t.__sentry_wrapped__;if(e)return e;if(H(t))return t}catch(e){return t}const sentryWrapped=function(){const r=Array.prototype.slice.call(arguments);try{n&&\"function\"==typeof n&&n.apply(this,arguments);const s=r.map((t=>mc(t,e)));return t.apply(this,s)}catch(t){throw pc(),Ke((n=>{n.addEventProcessor((t=>(e.mechanism&&(ut(t,void 0,void 0),lt(t,e.mechanism)),t.extra={...t.extra,arguments:r},t))),captureException(t)})),t}};try{for(const e in t)Object.prototype.hasOwnProperty.call(t,e)&&(sentryWrapped[e]=t[e])}catch(t){}z(sentryWrapped,t),U(t,\"__sentry_wrapped__\",sentryWrapped);try{Object.getOwnPropertyDescriptor(sentryWrapped,\"name\").configurable&&Object.defineProperty(sentryWrapped,\"name\",{get:()=>t.name})}catch(t){}return sentryWrapped}function yc(t,e){const n=vc(t,e),r={type:e&&e.name,value:kc(e)};return n.length&&(r.stacktrace={frames:n}),void 0===r.type&&\"\"===r.value&&(r.value=\"Unrecoverable error caught\"),r}function gc(t,e){return{exception:{values:[yc(t,e)]}}}function vc(t,e){const n=e.stacktrace||e.stack||\"\",r=function(t){if(t){if(\"number\"==typeof t.framesToPop)return t.framesToPop;if(bc.test(t.message))return 1}return 0}(e);try{return t(n,r)}catch(t){}return[]}const bc=/Minified React error #\\d+;/i;function kc(t){const e=t&&t.message;return e?e.error&&\"string\"==typeof e.error.message?e.error.message:e:\"No error message\"}function wc(t,e,n,r){const s=Tc(t,e,n&&n.syntheticException||void 0,r);return lt(s),s.level=\"error\",n&&n.event_id&&(s.event_id=n.event_id),Kt(s)}function Sc(t,e,n=\"info\",r,s){const i=_c(t,e,r&&r.syntheticException||void 0,s);return i.level=n,r&&r.event_id&&(i.event_id=r.event_id),Kt(i)}function Tc(t,e,o,a,c){let h;if(s(e)&&e.error){return gc(t,e.error)}if(i(e)||r(e,\"DOMException\")){const n=e;if(\"stack\"in e)h=gc(t,e);else{const e=n.name||(i(n)?\"DOMError\":\"DOMException\"),r=n.message?`${e}: ${n.message}`:e;h=_c(t,r,o,a),ut(h,r)}return\"code\"in n&&(h.tags={...h.tags,\"DOMException.code\":`${n.code}`}),h}if(n(e))return gc(t,e);if(u(e)||l(e)){return h=function(t,e,n,r){const s=Je(),i=s&&s.getOptions().normalizeDepth,o={exception:{values:[{type:l(e)?e.constructor.name:r?\"UnhandledRejection\":\"Error\",value:xc(e,{isUnhandledRejection:r})}]},extra:{__serialized__:Ht(e,i)}};if(n){const e=vc(t,n);e.length&&(o.exception.values[0].stacktrace={frames:e})}return o}(t,e,o,c),lt(h,{synthetic:!0}),h}return h=_c(t,e,o,a),ut(h,`${e}`,void 0),lt(h,{synthetic:!0}),h}function _c(t,e,n,r){const s={};if(r&&n){const r=vc(t,n);r.length&&(s.exception={values:[{value:e,stacktrace:{frames:r}}]})}if(a(e)){const{__sentry_template_string__:t,__sentry_template_values__:n}=e;return s.logentry={message:t,params:n},s}return s.message=e,s}function xc(t,{isUnhandledRejection:e}){const n=function(t,e=40){const n=Object.keys(q(t));if(n.sort(),!n.length)return\"[object has no keys]\";if(n[0].length>=e)return m(n[0],e);for(let t=n.length;t>0;t--){const r=n.slice(0,t).join(\", \");if(!(r.length>e))return t===n.length?r:m(r,e)}return\"\"}(t),r=e?\"promise rejection\":\"exception\";if(s(t))return`Event \\`ErrorEvent\\` captured as ${r} with message \\`${t.message}\\``;if(l(t)){return`Event \\`${function(t){try{const e=Object.getPrototypeOf(t);return e?e.constructor.name:void 0}catch(t){}}(t)}\\` (type=${t.type}) captured as ${r}`}return`Object captured as ${r} with keys: ${n}`}function Ic(t,{metadata:e,tunnel:n,dsn:r}){const s={event_id:t.event_id,sent_at:(new Date).toISOString(),...e&&e.sdk&&{sdk:{name:e.sdk.name,version:e.sdk.version}},...!!n&&!!r&&{dsn:j(r)}},i=function(t){return[{type:\"user_report\"},t]}(t);return he(s,[i])}class Cc extends class{constructor(t){if(this.De=t,this._integrations={},this.yn=!1,this.gn=0,this.vn={},this.bn={},this.T=[],t.dsn&&(this.kn=N(t.dsn)),this.kn){const e=Qn(this.kn,t);this.wn=t.transport({recordDroppedEvent:this.recordDroppedEvent.bind(this),...t.transportOptions,url:e})}}captureException(t,e,n){if(ht(t))return;let r=e&&e.event_id;return this.Sn(this.eventFromException(t,e).then((t=>this.Tn(t,e,n))).then((t=>{r=t}))),r}captureMessage(t,e,n,r){let s=n&&n.event_id;const i=a(t)?t:String(t),o=c(t)?this.eventFromMessage(i,e,n):this.eventFromException(t,n);return this.Sn(o.then((t=>this.Tn(t,n,r))).then((t=>{s=t}))),s}captureEvent(t,e,n){if(e&&e.originalException&&ht(e.originalException))return;let r=e&&e.event_id;const s=(t.sdkProcessingMetadata||{}).capturedSpanScope;return this.Sn(this.Tn(t,e,s||n).then((t=>{r=t}))),r}captureSession(t){\"string\"!=typeof t.release||(this.sendSession(t),Re(t,{init:!1}))}getDsn(){return this.kn}getOptions(){return this.De}getSdkMetadata(){return this.De.ht}getTransport(){return this.wn}flush(t){const e=this.wn;return e?(this.metricsAggregator&&this.metricsAggregator.flush(),this._n(t).then((n=>e.flush(t).then((t=>n&&t))))):Kt(!0)}close(t){return this.flush(t).then((t=>(this.getOptions().enabled=!1,this.metricsAggregator&&this.metricsAggregator.close(),t)))}getEventProcessors(){return this.T}addEventProcessor(t){this.T.push(t)}setupIntegrations(t){(t&&!this.yn||this.Ee()&&!this.yn)&&this.xn()}init(){this.Ee()&&this.xn()}getIntegrationById(t){return this.getIntegrationByName(t)}getIntegrationByName(t){return this._integrations[t]}getIntegration(t){try{return this._integrations[t.id]||null}catch(t){return null}}addIntegration(t){const e=this._integrations[t.name];nr(this,t,this._integrations),e||er(this,[t])}sendEvent(t,e={}){this.emit(\"beforeSendEvent\",t,e);let n=function(t,e,n,r){const s=be(n),i=t.type&&\"replay_event\"!==t.type?t.type:\"event\";!function(t,e){e&&(t.sdk=t.sdk||{},t.sdk.name=t.sdk.name||e.name,t.sdk.version=t.sdk.version||e.version,t.sdk.integrations=[...t.sdk.integrations||[],...e.integrations||[]],t.sdk.packages=[...t.sdk.packages||[],...e.packages||[]])}(t,n&&n.sdk);const o=ke(t,s,r,e);return delete t.sdkProcessingMetadata,he(o,[[{type:i},t]])}(t,this.kn,this.De.ht,this.De.tunnel);for(const t of e.attachments||[])n=fe(n,ye(t,this.De.transportOptions&&this.De.transportOptions.textEncoder));const r=this.In(n);r&&r.then((e=>this.emit(\"afterSendEvent\",t,e)),null)}sendSession(t){const e=function(t,e,n,r){const s=be(n);return he({sent_at:(new Date).toISOString(),...s&&{sdk:s},...!!r&&e&&{dsn:j(e)}},[\"aggregates\"in t?[{type:\"sessions\"},t]:[{type:\"session\"},t.toJSON()]])}(t,this.kn,this.De.ht,this.De.tunnel);this.In(e)}recordDroppedEvent(t,e,n){if(this.De.sendClientReports){const n=`${t}:${e}`;this.vn[n]=this.vn[n]+1||1}}captureAggregateMetrics(t){const e=or(t,this.kn,this.De.ht,this.De.tunnel);this.In(e)}on(t,e){this.bn[t]||(this.bn[t]=[]),this.bn[t].push(e)}emit(t,...e){this.bn[t]&&this.bn[t].forEach((t=>t(...e)))}xn(){const{integrations:t}=this.De;this._integrations=function(t,e){const n={};return e.forEach((e=>{e&&nr(t,e,n)})),n}(this,t),er(this,t),this.yn=!0}Cn(t,e){let n=!1,r=!1;const s=e.exception&&e.exception.values;if(s){r=!0;for(const t of s){const e=t.mechanism;if(e&&!1===e.handled){n=!0;break}}}const i=\"ok\"===t.status;(i&&0===t.errors||i&&n)&&(Re(t,{...n&&{status:\"crashed\"},errors:t.errors||Number(r||n)}),this.captureSession(t))}_n(t){return new Xt((e=>{let n=0;const r=setInterval((()=>{0==this.gn?(clearInterval(r),e(!0)):(n+=1,t&&n>=t&&(clearInterval(r),e(!1)))}),1)}))}Ee(){return!1!==this.getOptions().enabled&&void 0!==this.wn}En(t,e,n,r=yn()){const s=this.getOptions(),i=Object.keys(this._integrations);return!e.integrations&&i.length>0&&(e.integrations=i),this.emit(\"preprocessEvent\",t,e),Pe(s,t,e,n,this,r).then((t=>{if(null===t)return t;const e={...r.getPropagationContext(),...n?n.getPropagationContext():void 0};if(!(t.contexts&&t.contexts.trace)&&e){const{traceId:r,spanId:s,parentSpanId:i,dsc:o}=e;t.contexts={trace:{trace_id:r,span_id:s,parent_span_id:i},...t.contexts};const a=o||tn(r,this,n);t.sdkProcessingMetadata={dynamicSamplingContext:a,...t.sdkProcessingMetadata}}return t}))}Tn(t,e={},n){return this.On(t,e,n).then((t=>t.event_id),(t=>{}))}On(t,e,n){const r=this.getOptions(),{sampleRate:s}=r,i=cr(t),o=ar(t),a=t.type||\"error\",c=`before send for type \\`${a}\\``;if(o&&\"number\"==typeof s&&Math.random()>s)return this.recordDroppedEvent(\"sample_rate\",\"error\",t),Jt(new P(`Discarding event because it's not included in the random sample (sampling rate = ${s})`,\"log\"));const l=\"replay_event\"===a?\"replay\":a,f=(t.sdkProcessingMetadata||{}).capturedSpanIsolationScope;return this.En(t,e,n,f).then((n=>{if(null===n)throw this.recordDroppedEvent(\"event_processor\",l,t),new P(\"An event processor returned `null`, will not send event.\",\"log\");if(e.data&&!0===e.data.__sentry__)return n;const s=function(t,e,n){const{beforeSend:r,beforeSendTransaction:s}=t;if(ar(e)&&r)return r(e,n);if(cr(e)&&s)return s(e,n);return e}(r,n,e);return function(t,e){const n=`${e} must return \\`null\\` or a valid event.`;if(h(t))return t.then((t=>{if(!u(t)&&null!==t)throw new P(n);return t}),(t=>{throw new P(`${e} rejected with ${t}`)}));if(!u(t)&&null!==t)throw new P(n);return t}(s,c)})).then((r=>{if(null===r)throw this.recordDroppedEvent(\"before_send\",l,t),new P(`${c} returned \\`null\\`, will not send event.`,\"log\");const s=n&&n.getSession();!i&&s&&this.Cn(s,r);const o=r.transaction_info;if(i&&o&&r.transaction!==t.transaction){const t=\"custom\";r.transaction_info={...o,source:t}}return this.sendEvent(r,e),r})).then(null,(t=>{if(t instanceof P)throw t;throw this.captureException(t,{data:{__sentry__:!0},originalException:t}),new P(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${t}`)}))}Sn(t){this.gn++,t.then((t=>(this.gn--,t)),(t=>(this.gn--,t)))}In(t){if(this.emit(\"beforeEnvelope\",t),this.Ee()&&this.wn)return this.wn.send(t).then(null,(t=>{}))}An(){const t=this.vn;return this.vn={},Object.keys(t).map((e=>{const[n,r]=e.split(\":\");return{reason:n,category:r,quantity:t[e]}}))}}{constructor(t){!function(t,e,n=[e],r=\"npm\"){const s=t.ht||{};s.sdk||(s.sdk={name:`sentry.javascript.${e}`,packages:n.map((t=>({name:`${r}:@sentry/${t}`,version:un}))),version:un}),t.ht=s}(t,\"browser\",[\"browser\"],hc.SENTRY_SDK_SOURCE||\"npm\"),super(t),t.sendClientReports&&hc.document&&hc.document.addEventListener(\"visibilitychange\",(()=>{\"hidden\"===hc.document.visibilityState&&this.Rn()}))}eventFromException(t,e){return wc(this.De.stackParser,t,e,this.De.attachStacktrace)}eventFromMessage(t,e=\"info\",n){return Sc(this.De.stackParser,t,e,n,this.De.attachStacktrace)}captureUserFeedback(t){if(!this.Ee())return;const e=Ic(t,{metadata:this.getSdkMetadata(),dsn:this.getDsn(),tunnel:this.getOptions().tunnel});this.In(e)}En(t,e,n){return t.platform=t.platform||\"javascript\",super.En(t,e,n)}Rn(){const t=this.An();if(0===t.length)return;if(!this.kn)return;const e=(n=t,he((r=this.De.tunnel&&j(this.kn))?{dsn:r}:{},[[{type:\"client_report\"},{timestamp:s||Zt(),discarded_events:n}]]));var n,r,s;this.In(e)}}let Ec;function Oc(t,e=function(){if(Ec)return Ec;if(St(hc.fetch))return Ec=hc.fetch.bind(hc);const t=hc.document;let e=hc.fetch;if(t&&\"function\"==typeof t.createElement)try{const n=t.createElement(\"iframe\");n.hidden=!0,t.head.appendChild(n);const r=n.contentWindow;r&&r.fetch&&(e=r.fetch),t.head.removeChild(n)}catch(t){}return Ec=e.bind(hc)}()){let n=0,r=0;return fr(t,(function(s){const i=s.body.length;n+=i,r++;const o={body:s.body,method:\"POST\",referrerPolicy:\"origin\",headers:t.headers,keepalive:n<=6e4&&r<15,...t.fetchOptions};try{return e(t.url,o).then((t=>(n-=i,r--,{statusCode:t.status,headers:{\"x-sentry-rate-limits\":t.headers.get(\"X-Sentry-Rate-Limits\"),\"retry-after\":t.headers.get(\"Retry-After\")}})))}catch(t){return Ec=void 0,n-=i,r--,Jt(t)}}))}function Ac(t){return fr(t,(function(e){return new Xt(((n,r)=>{const s=new XMLHttpRequest;s.onerror=r,s.onreadystatechange=()=>{4===s.readyState&&n({statusCode:s.status,headers:{\"x-sentry-rate-limits\":s.getResponseHeader(\"X-Sentry-Rate-Limits\"),\"retry-after\":s.getResponseHeader(\"Retry-After\")}})},s.open(\"POST\",t.url);for(const e in t.headers)Object.prototype.hasOwnProperty.call(t.headers,e)&&s.setRequestHeader(e,t.headers[e]);s.send(e.body)}))}))}const Rc=\"?\";function Mc(t,e,n,r){const s={filename:t,function:e,in_app:!0};return void 0!==n&&(s.lineno=n),void 0!==r&&(s.colno=r),s}const Dc=/^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,$c=/\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/,Lc=[30,t=>{const e=Dc.exec(t);if(e){if(e[2]&&0===e[2].indexOf(\"eval\")){const t=$c.exec(e[2]);t&&(e[2]=t[1],e[3]=t[2],e[4]=t[3])}const[t,n]=Jc(e[1]||Rc,e[2]);return Mc(n,t,e[3]?+e[3]:void 0,e[4]?+e[4]:void 0)}}],jc=/^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i,Fc=/(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i,Nc=[50,t=>{const e=jc.exec(t);if(e){if(e[3]&&e[3].indexOf(\" > eval\")>-1){const t=Fc.exec(e[3]);t&&(e[1]=e[1]||\"eval\",e[3]=t[1],e[4]=t[2],e[5]=\"\")}let t=e[3],n=e[1]||Rc;return[n,t]=Jc(n,t),Mc(t,n,e[4]?+e[4]:void 0,e[5]?+e[5]:void 0)}}],Pc=/^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,Bc=[40,t=>{const e=Pc.exec(t);return e?Mc(e[2],e[1]||Rc,+e[3],e[4]?+e[4]:void 0):void 0}],Uc=/ line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i,zc=[10,t=>{const e=Uc.exec(t);return e?Mc(e[2],e[3]||Rc,+e[1]):void 0}],Hc=/ line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i,qc=[20,t=>{const e=Hc.exec(t);return e?Mc(e[5],e[3]||e[4]||Rc,+e[1],+e[2]):void 0}],Wc=[Lc,Nc,Bc],Kc=V(...Wc),Jc=(t,e)=>{const n=-1!==t.indexOf(\"safari-extension\"),r=-1!==t.indexOf(\"safari-web-extension\");return n||r?[-1!==t.indexOf(\"@\")?t.split(\"@\")[0]:Rc,n?`safari-extension:${e}`:`safari-web-extension:${e}`]:[t,e]},Xc=1024,Gc=\"Breadcrumbs\",Yc=(t={})=>{const e={console:!0,dom:!0,fetch:!0,history:!0,sentry:!0,xhr:!0,...t};return{name:Gc,setupOnce(){},setup(t){e.console&&function(t){const e=\"console\";nt(e,t),rt(e,it)}(function(t){return function(e){if(Je()!==t)return;const n={category:\"console\",data:{arguments:e.args,logger:\"console\"},level:Qt(e.level),message:y(e.args,\" \")};if(\"assert\"===e.level){if(!1!==e.args[0])return;n.message=`Assertion failed: ${y(e.args.slice(1),\" \")||\"console.assert\"}`,n.data.arguments=e.args.slice(1)}qe(n,{input:e.args,level:e.level})}}(t)),e.dom&&gt(function(t,e){return function(n){if(Je()!==t)return;let r,s,i=\"object\"==typeof e?e.serializeAttribute:void 0,o=\"object\"==typeof e&&\"number\"==typeof e.maxStringLength?e.maxStringLength:void 0;o&&o>Xc&&(o=Xc),\"string\"==typeof i&&(i=[i]);try{const t=n.event,e=function(t){return!!t&&!!t.target}(t)?t.target:t;r=E(e,{keyAttrs:i,maxStringLength:o}),s=A(e)}catch(t){r=\"<unknown>\"}if(0===r.length)return;const a={category:`ui.${n.name}`,message:r};s&&(a.data={\"ui.component_name\":s}),qe(a,{event:n.event,name:n.name,global:n.global})}}(t,e.dom)),e.xhr&&Pt(function(t){return function(e){if(Je()!==t)return;const{startTimestamp:n,endTimestamp:r}=e,s=e.xhr.__sentry_xhr_v3__;if(!n||!r||!s)return;const{method:i,url:o,status_code:a,body:c}=s;qe({category:\"xhr\",data:{method:i,url:o,status_code:a},type:\"http\"},{xhr:e.xhr,input:c,startTimestamp:n,endTimestamp:r})}}(t)),e.fetch&&Tt(function(t){return function(e){if(Je()!==t)return;const{startTimestamp:n,endTimestamp:r}=e;if(r&&(!e.fetchData.url.match(/sentry_key/)||\"POST\"!==e.fetchData.method))if(e.error){qe({category:\"fetch\",data:e.fetchData,level:\"error\",type:\"http\"},{data:e.error,input:e.args,startTimestamp:n,endTimestamp:r})}else{const t=e.response;qe({category:\"fetch\",data:{...e.fetchData,status_code:t&&t.status},type:\"http\"},{input:e.args,response:t,startTimestamp:n,endTimestamp:r})}}}(t)),e.history&&jt(function(t){return function(e){if(Je()!==t)return;let n=e.from,r=e.to;const s=Yt(hc.location.href);let i=n?Yt(n):void 0;const o=Yt(r);i&&i.path||(i=s),s.protocol===o.protocol&&s.host===o.host&&(r=o.relative),s.protocol===i.protocol&&s.host===i.host&&(n=i.relative),qe({category:\"navigation\",data:{from:n,to:r}})}}(t)),e.sentry&&t.on&&t.on(\"beforeSendEvent\",function(t){return function(e){Je()===t&&qe({category:\"sentry.\"+(\"transaction\"===e.type?\"transaction\":\"event\"),event_id:e.event_id,level:e.level,message:ct(e)},{event:e})}}(t))}}},Vc=rr(Gc,Yc);const Qc=\"Dedupe\",Zc=()=>{let t;return{name:Qc,setupOnce(){},processEvent(e){if(e.type)return e;try{if(function(t,e){if(!e)return!1;if(function(t,e){const n=t.message,r=e.message;if(!n&&!r)return!1;if(n&&!r||!n&&r)return!1;if(n!==r)return!1;if(!nu(t,e))return!1;if(!eu(t,e))return!1;return!0}(t,e))return!0;if(function(t,e){const n=ru(e),r=ru(t);if(!n||!r)return!1;if(n.type!==r.type||n.value!==r.value)return!1;if(!nu(t,e))return!1;if(!eu(t,e))return!1;return!0}(t,e))return!0;return!1}(e,t))return null}catch(t){}return t=e}}},tu=rr(Qc,Zc);function eu(t,e){let n=su(t),r=su(e);if(!n&&!r)return!0;if(n&&!r||!n&&r)return!1;if(n=n,r=r,r.length!==n.length)return!1;for(let t=0;t<r.length;t++){const e=r[t],s=n[t];if(e.filename!==s.filename||e.lineno!==s.lineno||e.colno!==s.colno||e.function!==s.function)return!1}return!0}function nu(t,e){let n=t.fingerprint,r=e.fingerprint;if(!n&&!r)return!0;if(n&&!r||!n&&r)return!1;n=n,r=r;try{return!(n.join(\"\")!==r.join(\"\"))}catch(t){return!1}}function ru(t){return t.exception&&t.exception.values&&t.exception.values[0]}function su(t){const e=t.exception;if(e)try{return e.values[0].stacktrace.frames}catch(t){return}}const iu=\"GlobalHandlers\",ou=(t={})=>{const e={onerror:!0,onunhandledrejection:!0,...t};return{name:iu,setupOnce(){Error.stackTraceLimit=50},setup(t){e.onerror&&function(t){Et((e=>{const{stackParser:n,attachStacktrace:r}=uu();if(Je()!==t||dc())return;const{msg:i,url:a,line:c,column:u,error:l}=e,h=void 0===l&&o(i)?function(t,e,n,r){const i=/^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;let o=s(t)?t.message:t,a=\"Error\";const c=o.match(i);c&&(a=c[1],o=c[2]);return cu({exception:{values:[{type:a,value:o}]}},e,n,r)}(i,a,c,u):cu(Tc(n,l||i,void 0,r,!1),a,c,u);h.level=\"error\",He(h,{originalException:l,mechanism:{handled:!1,type:\"onerror\"}})}))}(t),e.onunhandledrejection&&function(t){Rt((e=>{const{stackParser:n,attachStacktrace:r}=uu();if(Je()!==t||dc())return;const s=function(t){if(c(t))return t;const e=t;try{if(\"reason\"in e)return e.reason;if(\"detail\"in e&&\"reason\"in e.detail)return e.detail.reason}catch(t){}return t}(e),i=c(s)?{exception:{values:[{type:\"UnhandledRejection\",value:`Non-Error promise rejection captured with value: ${String(s)}`}]}}:Tc(n,s,void 0,r,!0);i.level=\"error\",He(i,{originalException:s,mechanism:{handled:!1,type:\"onunhandledrejection\"}})}))}(t)}}},au=rr(iu,ou);function cu(t,e,n,r){const s=t.exception=t.exception||{},i=s.values=s.values||[],a=i[0]=i[0]||{},c=a.stacktrace=a.stacktrace||{},u=c.frames=c.frames||[],l=isNaN(parseInt(r,10))?void 0:r,h=isNaN(parseInt(n,10))?void 0:n,f=o(e)&&e.length>0?e:function(){try{return C.document.location.href}catch(t){return\"\"}}();return 0===u.length&&u.push({colno:l,filename:f,function:\"?\",in_app:!0,lineno:h}),t}function uu(){const t=Je();return t&&t.getOptions()||{stackParser:()=>[],attachStacktrace:!1}}const lu=\"HttpContext\",hu=()=>({name:lu,setupOnce(){},preprocessEvent(t){if(!hc.navigator&&!hc.location&&!hc.document)return;const e=t.request&&t.request.url||hc.location&&hc.location.href,{referrer:n}=hc.document||{},{userAgent:r}=hc.navigator||{},s={...t.request&&t.request.headers,...n&&{Referer:n},...r&&{\"User-Agent\":r}},i={...t.request,...e&&{url:e},headers:s};t.request=i}}),fu=rr(lu,hu),du=\"LinkedErrors\",pu=(t={})=>{const e=t.limit||5,n=t.key||\"cause\";return{name:du,setupOnce(){},preprocessEvent(t,r,s){const i=s.getOptions();b(yc,i.stackParser,i.maxValueLength,n,e,t,r)}}},mu=rr(du,pu),yu=[\"EventTarget\",\"Window\",\"Node\",\"ApplicationCache\",\"AudioTrackList\",\"BroadcastChannel\",\"ChannelMergerNode\",\"CryptoOperation\",\"EventSource\",\"FileReader\",\"HTMLUnknownElement\",\"IDBDatabase\",\"IDBRequest\",\"IDBTransaction\",\"KeyOperation\",\"MediaController\",\"MessagePort\",\"ModalWindow\",\"Notification\",\"SVGElementInstance\",\"Screen\",\"SharedWorker\",\"TextTrack\",\"TextTrackCue\",\"TextTrackList\",\"WebSocket\",\"WebSocketWorker\",\"Worker\",\"XMLHttpRequest\",\"XMLHttpRequestEventTarget\",\"XMLHttpRequestUpload\"],gu=\"TryCatch\",vu=(t={})=>{const e={XMLHttpRequest:!0,eventTarget:!0,requestAnimationFrame:!0,setInterval:!0,setTimeout:!0,...t};return{name:gu,setupOnce(){e.setTimeout&&B(hc,\"setTimeout\",ku),e.setInterval&&B(hc,\"setInterval\",ku),e.requestAnimationFrame&&B(hc,\"requestAnimationFrame\",wu),e.XMLHttpRequest&&\"XMLHttpRequest\"in hc&&B(XMLHttpRequest.prototype,\"send\",Su);const t=e.eventTarget;if(t){(Array.isArray(t)?t:yu).forEach(Tu)}}}},bu=rr(gu,vu);function ku(t){return function(...e){const n=e[0];return e[0]=mc(n,{mechanism:{data:{function:Z(t)},handled:!1,type:\"instrument\"}}),t.apply(this,e)}}function wu(t){return function(e){return t.apply(this,[mc(e,{mechanism:{data:{function:\"requestAnimationFrame\",handler:Z(t)},handled:!1,type:\"instrument\"}})])}}function Su(t){return function(...e){const n=this;return[\"onload\",\"onerror\",\"onprogress\",\"onreadystatechange\"].forEach((t=>{t in n&&\"function\"==typeof n[t]&&B(n,t,(function(e){const n={mechanism:{data:{function:t,handler:Z(e)},handled:!1,type:\"instrument\"}},r=H(e);return r&&(n.mechanism.data.handler=Z(r)),mc(e,n)}))})),t.apply(this,e)}}function Tu(t){const e=hc,n=e[t]&&e[t].prototype;n&&n.hasOwnProperty&&n.hasOwnProperty(\"addEventListener\")&&(B(n,\"addEventListener\",(function(e){return function(n,r,s){try{\"function\"==typeof r.handleEvent&&(r.handleEvent=mc(r.handleEvent,{mechanism:{data:{function:\"handleEvent\",handler:Z(r),target:t},handled:!1,type:\"instrument\"}}))}catch(t){}return e.apply(this,[n,mc(r,{mechanism:{data:{function:\"addEventListener\",handler:Z(r),target:t},handled:!1,type:\"instrument\"}}),s])}})),B(n,\"removeEventListener\",(function(t){return function(e,n,r){const s=n;try{const n=s&&s.__sentry_wrapped__;n&&t.call(this,e,n,r)}catch(t){}return t.call(this,e,s,r)}})))}const _u=[br(),xr(),vu(),Yc(),ou(),pu(),Zc(),hu()];function xu(t){return[..._u]}var Iu=Object.freeze({__proto__:null,GlobalHandlers:au,TryCatch:bu,Breadcrumbs:Vc,LinkedErrors:mu,HttpContext:fu,Dedupe:tu});let Cu={};hc.Sentry&&hc.Sentry.Integrations&&(Cu=hc.Sentry.Integrations);const Eu={...Cu,...Lr,...Iu};return Eu.Replay=uc,Eu.BrowserTracing=xs,Cs(),t.Breadcrumbs=Vc,t.BrowserClient=Cc,t.BrowserTracing=xs,t.Dedupe=tu,t.Feedback=xe,t.FunctionToString=Ir,t.GlobalHandlers=au,t.HttpContext=fu,t.Hub=fn,t.InboundFilters=kr,t.Integrations=Eu,t.LinkedErrors=mu,t.Replay=uc,t.SDK_VERSION=un,t.Scope=an,t.Span=An,t.TryCatch=bu,t.WINDOW=hc,t.addBreadcrumb=qe,t.addEventProcessor=ur,t.addExtensionMethods=Cs,t.addGlobalEventProcessor=Ee,t.addIntegration=function(t){const e=Je();e&&e.addIntegration&&e.addIntegration(t)},t.breadcrumbsIntegration=Yc,t.browserApiErrorsIntegration=vu,t.browserTracingIntegration=function(t={}){const e=t;return\"boolean\"==typeof t.markBackgroundSpan&&(e.markBackgroundTransactions=t.markBackgroundSpan),\"boolean\"==typeof t.instrumentPageLoad&&(e.startTransactionOnPageLoad=t.instrumentPageLoad),\"boolean\"==typeof t.instrumentNavigation&&(e.startTransactionOnLocationChange=t.instrumentNavigation),new xs(e)},t.captureEvent=He,t.captureException=captureException,t.captureMessage=function(t,e){const n=\"string\"==typeof e?e:void 0,r=\"string\"!=typeof e?{captureContext:e}:void 0;return mn().captureMessage(t,n,r)},t.captureUserFeedback=function(t){const e=Je();e&&e.captureUserFeedback(t)},t.chromeStackLineParser=Lc,t.close=async function(t){const e=Je();return e?e.close(t):Promise.resolve(!1)},t.configureScope=function(t){mn().configureScope(t)},t.continueTrace=({sentryTrace:t,baggage:e},n)=>{const r=Xe(),{traceparentData:s,dynamicSamplingContext:i,propagationContext:o}=function(t,e){const n=ue(t),r=ie(e),{traceId:s,parentSpanId:i,parentSampled:o}=n||{};return n?{traceparentData:n,dynamicSamplingContext:r||{},propagationContext:{traceId:s||ot(),parentSpanId:i||ot().substring(16),spanId:ot().substring(16),sampled:o,dsc:r||{}}}:{traceparentData:n,dynamicSamplingContext:void 0,propagationContext:{traceId:s||ot(),spanId:ot().substring(16)}}}(t,e);r.setPropagationContext(o);const a={...s,metadata:J({dynamicSamplingContext:i})};return n?gn((()=>n(a))):a},t.createTransport=fr,t.createUserFeedbackEnvelope=Ic,t.dedupeIntegration=Zc,t.defaultIntegrations=_u,t.defaultStackLineParsers=Wc,t.defaultStackParser=Kc,t.eventFromException=wc,t.eventFromMessage=Sc,t.exceptionFromError=yc,t.feedbackIntegration=function(t){return new xe({})},t.flush=async function(t){const e=Je();return e?e.flush(t):Promise.resolve(!1)},t.forceLoad=function(){},t.functionToStringIntegration=xr,t.geckoStackLineParser=Nc,t.getActiveSpan=$n,t.getClient=Je,t.getCurrentHub=mn,t.getCurrentScope=Xe,t.getDefaultIntegrations=xu,t.getHubFromCarrier=vn,t.globalHandlersIntegration=ou,t.httpContextIntegration=hu,t.inboundFiltersIntegration=br,t.init=function(t={}){void 0===t.defaultIntegrations&&(t.defaultIntegrations=xu()),void 0===t.release&&(\"string\"==typeof __SENTRY_RELEASE__&&(t.release=__SENTRY_RELEASE__),hc.SENTRY_RELEASE&&hc.SENTRY_RELEASE.id&&(t.release=hc.SENTRY_RELEASE.id)),void 0===t.autoSessionTracking&&(t.autoSessionTracking=!0),void 0===t.sendClientReports&&(t.sendClientReports=!0);const e={...t,stackParser:(n=t.stackParser||Kc,Array.isArray(n)?V(...n):n),integrations:tr(t),transport:t.transport||(wt()?Oc:Ac)};var n;!function(t,e){!0===e.debug&&D((()=>{console.warn(\"[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.\")})),Xe().update(e.initialScope);const n=new t(e);hr(n),function(t){t.init?t.init():t.setupIntegrations&&t.setupIntegrations()}(n)}(Cc,e),t.autoSessionTracking&&function(){if(void 0===hc.document)return;Ge({ignoreDuration:!0}),Qe(),jt((({from:t,to:e})=>{void 0!==t&&t!==e&&(Ge({ignoreDuration:!0}),Qe())}))}()},t.isInitialized=function(){return!!Je()},t.lastEventId=function(){return mn().lastEventId()},t.linkedErrorsIntegration=pu,t.makeFetchTransport=Oc,t.makeMain=pn,t.makeXHRTransport=Ac,t.metrics=$r,t.onLoad=function(t){t()},t.opera10StackLineParser=zc,t.opera11StackLineParser=qc,t.parameterize=function(t,...e){const n=new String(String.raw(t,...e));return n.__sentry_template_string__=t.join(\"\\0\").replace(/%/g,\"%%\").replace(/\\0/g,\"%s\"),n.__sentry_template_values__=e,n},t.replayIntegration=t=>new uc(t),t.setContext=We,t.setCurrentClient=hr,t.setExtra=function(t,e){mn().setExtra(t,e)},t.setExtras=function(t){mn().setExtras(t)},t.setTag=function(t,e){mn().setTag(t,e)},t.setTags=function(t){mn().setTags(t)},t.setUser=function(t){mn().setUser(t)},t.showReportDialog=(t={},e=mn())=>{if(!hc.document)return;const{client:n,scope:r}=e.getStackTop(),s=t.dsn||n&&n.getDsn();if(!s)return;r&&(t.user={...r.getUser(),...t.user}),t.eventId||(t.eventId=e.lastEventId());const i=hc.document.createElement(\"script\");i.async=!0,i.crossOrigin=\"anonymous\",i.src=function(t,e){const n=N(t);if(!n)return\"\";const r=`${Yn(n)}embed/error-page/`;let s=`dsn=${j(n)}`;for(const t in e)if(\"dsn\"!==t&&\"onClose\"!==t)if(\"user\"===t){const t=e.user;if(!t)continue;t.name&&(s+=`&name=${encodeURIComponent(t.name)}`),t.email&&(s+=`&email=${encodeURIComponent(t.email)}`)}else s+=`&${encodeURIComponent(t)}=${encodeURIComponent(e[t])}`;return`${r}?${s}`}(s,t),t.onLoad&&(i.onload=t.onLoad);const{onClose:o}=t;if(o){const t=e=>{if(\"__sentry_reportdialog_closed__\"===e.data)try{o()}finally{hc.removeEventListener(\"message\",t)}};hc.addEventListener(\"message\",t)}const a=hc.document.head||hc.document.body;a&&a.appendChild(i)},t.startInactiveSpan=Dn,t.startSpan=function(t,e){const n=jn(t);return gn((()=>Ke(t.scope,(r=>{const s=mn(),i=r.getSpan(),o=t.onlyIfParent&&!i?void 0:Ln(s,i,n);return r.setSpan(o),Rn((()=>e(o)),(()=>{if(o){const{status:t}=Fe(o);t&&\"ok\"!==t||o.setStatus(\"internal_error\")}}),(()=>o&&o.end()))}))))},t.startSpanManual=function(t,e){const n=jn(t);return gn((()=>Ke(t.scope,(r=>{const s=mn(),i=r.getSpan(),o=t.onlyIfParent&&!i?void 0:Ln(s,i,n);function a(){o&&o.end()}return r.setSpan(o),Rn((()=>e(o,a)),(()=>{if(o&&o.isRecording()){const{status:t}=Fe(o);t&&\"ok\"!==t||o.setStatus(\"internal_error\")}}))}))))},t.startTransaction=function(t,e){return mn().startTransaction({...t},e)},t.winjsStackLineParser=Bc,t.withIsolationScope=function(t){return gn((()=>t(yn())))},t.withScope=Ke,t.wrap=function(t){return mc(t)()},t}({});\n//# sourceMappingURL=bundle.tracing.replay.min.js.map\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 70170,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "151.101.66.217",
        "startedDateTime": "2025-06-08T14:49:32.293Z",
        "time": 23.08699999412056,
        "timings": {
          "blocked": 3.25499999728892,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.1419999999999999,
          "wait": 11.894999999118038,
          "receive": 7.794999997713603,
          "_blocked_queueing": 1.38899999728892,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "125506",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 203349
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55796
              },
              {
                "functionName": "add",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17847
              },
              {
                "functionName": "s",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55787
              },
              {
                "functionName": "In",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201641
              },
              {
                "functionName": "sendSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 198325
              },
              {
                "functionName": "captureSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 196510
              },
              {
                "functionName": "Ve",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29333
              },
              {
                "functionName": "Qe",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29376
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 217713
              },
              {
                "functionName": "t.init",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 217793
              },
              {
                "functionName": "",
                "scriptId": "374",
                "url": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b",
                "lineNumber": 235,
                "columnNumber": 13
              }
            ]
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://o4508070823395328.ingest.us.sentry.io/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "o4508070823395328.ingest.us.sentry.io"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": "content-length",
              "value": "490"
            },
            {
              "name": "content-type",
              "value": "text/plain;charset=UTF-8"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [
            {
              "name": "sentry_key",
              "value": "b03711f63d1160f48dcaeda3edae14ac"
            },
            {
              "name": "sentry_version",
              "value": "7"
            },
            {
              "name": "sentry_client",
              "value": "sentry.javascript.browser%2F7.100.0"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 490,
          "postData": {
            "mimeType": "text/plain;charset=UTF-8",
            "text": "{\"sent_at\":\"2025-06-08T14:49:32.337Z\",\"sdk\":{\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\"}}\n{\"type\":\"session\"}\n{\"sid\":\"cff963c480b345f6b97e1679fd68d374\",\"init\":true,\"started\":\"2025-06-08T14:49:32.337Z\",\"timestamp\":\"2025-06-08T14:49:32.337Z\",\"status\":\"ok\",\"errors\":0,\"attrs\":{\"release\":\"azure_chatapp@1.0.0+dev\",\"environment\":\"production\",\"user_agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\"}}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "x-sentry-error,x-sentry-rate-limits,retry-after"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "vary",
              "value": "origin, access-control-request-method, access-control-request-headers"
            },
            {
              "name": "via",
              "value": "1.1 google"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "application/json",
            "text": "{}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 57,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "34.120.195.249",
        "startedDateTime": "2025-06-08T14:49:32.337Z",
        "time": 92.96100000210572,
        "timings": {
          "blocked": 29.705999999629334,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 5.3709999999999996,
          "wait": 57.590999997872856,
          "receive": 0.2930000046035275,
          "_blocked_queueing": 23.876999999629334,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126339",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/vendor/dompurify-global.js",
          "lineNumber": 0
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/vendor/dompurify.es.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/vendor/dompurify-global.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1494,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "59914"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"83dcb35dd7ce3ca648d6ab712d08d98a\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 59914,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/*! @license DOMPurify 3.0.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.5/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\n\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return apply(func, thisArg, args);\n  };\n}\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return construct(func, args);\n  };\n}\n/* Add properties to a lookup table */\n\nfunction addToSet(set, array, transformCaseFunc) {\n  var _transformCaseFunc;\n\n  transformCaseFunc = (_transformCaseFunc = transformCaseFunc) !== null && _transformCaseFunc !== void 0 ? _transformCaseFunc : stringToLowerCase;\n\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n\n  while (l--) {\n    let element = array[l];\n\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n/* Shallow clone an object */\n\nfunction clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    newObject[property] = value;\n  }\n\n  return newObject;\n}\n/* This method automatically checks if the prop is function\n * or getter and behaves accordingly. */\n\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\n\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\n\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']); // Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\n\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  ERB_EXPR: ERB_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR,\n  DATA_ATTR: DATA_ATTR,\n  ARIA_ATTR: ARIA_ATTR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  DOCTYPE_NAME: DOCTYPE_NAME\n});\n\nconst getGlobal = () => typeof window === 'undefined' ? null : window;\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\n\n\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  } // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n\n\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\n\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  const DOMPurify = root => createDOMPurify(root);\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n\n\n  DOMPurify.version = '3.0.5';\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n  const currentScript = originalDocument.currentScript;\n  let {\n    document\n  } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = {};\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n\n  let SAFE_FOR_TEMPLATES = false;\n  /* Decide if document with <html>... should be returned */\n\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  /* Parsing of strict XHTML documents */\n\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n  /* Keep a reference to config to pass to hooks */\n\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n\n\n  const _parseConfig = function _parseConfig(cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n\n\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n\n\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE; // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n    cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n    cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n\n\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...text]);\n      ALLOWED_ATTR = [];\n\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n\n\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n\n\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n\n\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n\n\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      } // Overwrite existing TrustedTypes policy.\n\n\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY; // Sign local variables required by `sanitize`.\n\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      } // If creating the internal policy succeeded sign internal variables.\n\n\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    } // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n\n\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']); // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n\n  const ALL_SVG_TAGS = addToSet({}, svg$1);\n  addToSet(ALL_SVG_TAGS, svgFilters);\n  addToSet(ALL_SVG_TAGS, svgDisallowed);\n  const ALL_MATHML_TAGS = addToSet({}, mathMl$1);\n  addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      } // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n\n\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      } // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n\n\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      } // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n\n\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      } // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n\n\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      } // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n\n\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    } // For XHTML and XML documents that support custom namespaces\n\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    } // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n\n\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n\n\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n\n\n  const _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node\n      });\n    }\n\n    node.removeAttribute(name); // We void attribute values for unremovable \"is\"\" attributes\n\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n\n\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n\n\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {// Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n\n\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n\n\n  const _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n\n\n  const _isClobbered = function _isClobbered(elm) {\n    return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n  };\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n\n\n  const _isNode = function _isNode(object) {\n    return typeof Node === 'object' ? object instanceof Node : object && typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n  };\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n\n\n  const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n\n\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content;\n    /* Execute a hook if present */\n\n    _executeHook('beforeSanitizeElements', currentNode, null);\n    /* Check if element is clobbered or can clobber */\n\n\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Now let's check the element's type and name */\n\n\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n\n\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n\n\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n      }\n      /* Keep content except for bad-listed elements */\n\n\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n\n\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n\n\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n\n\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n\n\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n\n\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if ( // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n\n    return true;\n  };\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n\n\n  const _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n\n\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n\n    while (l--) {\n      attr = attributes[l];\n      const {\n        name,\n        namespaceURI\n      } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n      /* Execute a hook if present */\n\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n\n\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n\n\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n\n\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n      /* Is `value` valid for this attribute? */\n\n\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n\n\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode); // Prefix the value and later re-create the attribute with the sanitized value\n\n\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Handle attributes that require Trusted Types */\n\n\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n\n\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n\n\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode;\n\n    const shadowIterator = _createIterator(fragment);\n    /* Execute a hook if present */\n\n\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n      /* Sanitize tags and elements */\n\n\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n      /* Deep shadow DOM detected */\n\n\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n      /* Check attributes, sanitize if necessary */\n\n\n      _sanitizeAttributes(shadowNode);\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n\n\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body;\n    let importedNode;\n    let currentNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n\n    IS_EMPTY_INPUT = !dirty;\n\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n\n\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n\n\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n\n\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n\n\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n\n\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n\n\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n\n\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n\n\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n      /* Shadow DOM detected, sanitize it */\n\n\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n      /* Check attributes, sanitize if necessary */\n\n\n      _sanitizeAttributes(currentNode);\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n\n\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n\n\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n\n\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n\n\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n\n    SET_CONFIG = true;\n  };\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n\n\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n\n\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n\n\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n\n\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n\n\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n\n\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.js.map\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 59914,
          "_transferSize": 61103,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.360Z",
        "time": 49.24699998809956,
        "timings": {
          "blocked": 4.092999999081716,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.10499999999999998,
          "wait": 43.05299999724049,
          "receive": 1.995999991777353,
          "_blocked_queueing": 0.8139999990817159,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126344",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 7
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/polyfillCustomEvent.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1480,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "838"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"3c9e24c9115b43138acd89a6aa0ca3d5\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 30 May 2025 20:40:53 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 838,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "export function createCustomEventPolyfill({ browserService, logger } = {}) {\n  if (!browserService) throw new Error('[CustomEventPolyfill] browserService required');\n  const win = browserService.getWindow();\n  const doc = browserService.getDocument();\n  if (typeof win.CustomEvent === 'function')\n    return { applied: false, cleanup () {} };\n\n  function CustomEvent(event, params = { bubbles:false, cancelable:false, detail:undefined }) {\n    const evt = doc.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  }\n  CustomEvent.prototype = win.Event.prototype;\n  win.CustomEvent = CustomEvent;\n\n  logger?.info?.('[CustomEventPolyfill] applied', { context: 'CustomEventPolyfill' });\n  return {\n    applied: true,\n    cleanup () { delete win.CustomEvent; }\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1187,
          "bodySize": 838,
          "_transferSize": 2025,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.361Z",
        "time": 81.40699999057688,
        "timings": {
          "blocked": 8.336999989902601,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.12199999999999989,
          "wait": 71.13199999707379,
          "receive": 1.816000003600493,
          "_blocked_queueing": 1.8829999899026006,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126320",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 10
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/appConfig.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1464,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "3325"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"cbf34cfcb92f13f96887119ed8f94aee\""
            },
            {
              "name": "last-modified",
              "value": "Thu, 29 May 2025 20:01:21 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3325,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * Application-wide configuration object.\n * Exported as APP_CONFIG for use throughout the app.\n */\nimport { SELECTORS } from \"./utils/selectorConstants.js\";\n\nexport const APP_CONFIG = {\n  DEBUG: true,\n  VERBOSE_LOGGING: true, // Add this to enable verbose logging\n  LOG_TO_CONSOLE: true,  // Add this to ensure console logging\n  // Mantener vacío para usar la misma URL de origen que la página\n  BASE_API_URL: '',\n  SELECTORS: {\n    APP_LOADING_SPINNER: '#appLoadingSpinner',\n    APP_FATAL_ERROR: '#appFatalError',\n    LOGIN_REQUIRED_MESSAGE: '#loginRequiredMessage',\n    AUTH_BUTTON: '#authButton',\n    AUTH_STATUS_SPAN: '#authStatusSpan',\n    USER_STATUS_SPAN: '#userStatusSpan',\n    USER_MENU: '#userMenu',\n    PROJECT_DETAILS_VIEW: '#projectDetailsView',\n    PROJECT_LIST_VIEW: SELECTORS.projectListView\n  },\n  TIMEOUTS: {\n    DEPENDENCY_WAIT: 5000,      // generic waitFor timeout (hardened, was 15000)\n    STARTUP_ABORT: 12000,       // whole-app bootstrap max\n    DOM_READY      : 8000,      // new – required by domReadinessService\n    APP_READY_WAIT : 30000,     // optional – used by authInit\n    API_REQUEST: 30000 // Increased API timeout to 30 seconds\n  },\n  PERFORMANCE_THRESHOLDS: {\n    INIT_WARN: 3000\n  },\n  API_ENDPOINTS: {\n    AUTH_CSRF   : '/api/auth/csrf',\n    AUTH_LOGIN  : '/api/auth/login',\n    AUTH_LOGOUT : '/api/auth/logout',\n    AUTH_REGISTER: '/api/auth/register',\n    AUTH_VERIFY : '/api/auth/verify',\n    AUTH_REFRESH: '/api/auth/refresh',\n    AUTH_SETTINGS: '/api/auth/settings',\n    USER_PROFILE: '/api/user/me',\n    USER_PROJECTS: '/api/user/projects',\n    USER_STARRED_CONVERSATIONS: '/api/preferences/starred',\n    USER_UPDATE_PREFERENCES: '/api/user/preferences',\n    // Project endpoints\n    PROJECTS: '/api/projects/',\n    PROJECT_DETAIL: '/api/projects/{id}/',\n    PROJECT_CONVERSATIONS_URL_TEMPLATE: '/api/projects/{id}/conversations',\n    PROJECT_FILES: '/api/projects/{id}/files/',\n    PROJECT_ARTIFACTS: '/api/projects/{id}/artifacts/',\n    // Conversation endpoints  \n    CONVERSATIONS: (projectId) => `/api/projects/${projectId}/conversations`,\n    CONVERSATION_DETAIL: (projectId, conversationId) => `/api/projects/${projectId}/conversations/${conversationId}`,\n    // Knowledge base endpoints\n    KB_LIST_URL_TEMPLATE: '/api/projects/{id}/knowledge-bases/',\n    KB_DETAIL_URL_TEMPLATE: '/api/projects/{id}/knowledge-bases/{kb_id}/',\n    // File endpoints\n    FILE_DETAIL: '/api/projects/{id}/files/{file_id}/',\n    FILE_DOWNLOAD: '/api/projects/{id}/files/{file_id}/download/',\n    ARTIFACT_DOWNLOAD: '/api/projects/{id}/artifacts/{artifact_id}/download/'\n  },\n  LOGGING: {\n    BACKEND_ENABLED: true,\n    CONSOLE_ENABLED: true,\n    SENTRY_ENABLED: true,\n    MIN_LEVEL: 'debug'  // Set to 'debug' for maximum visibility\n  },\n  DEBUG_UI: false,          // enables unresolved-selector report\n};\n\n/* Guard-rail factory export */\nexport function createAppConfig({ overrides = {}, DependencySystem, eventHandlers } = {}) {\n  if (!DependencySystem) throw new Error('[appConfig] Missing DependencySystem');\n  if (!eventHandlers?.cleanupListeners) throw new Error('[appConfig] Missing eventHandlers');\n  const cfg = { ...APP_CONFIG, ...overrides };\n  return {\n    APP_CONFIG: cfg,\n    cleanup() {\n      eventHandlers.cleanupListeners({ context: 'appConfig' });\n    }\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 3325,
          "_transferSize": 4513,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.361Z",
        "time": 81.63099999364931,
        "timings": {
          "blocked": 10.027999992277474,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07899999999999885,
          "wait": 69.95700000203121,
          "receive": 1.5669999993406236,
          "_blocked_queueing": 1.9329999922774732,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126316",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 11
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1475,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "10722"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"e3dc631b6e04b62f86df009f64a1f976\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 18:18:13 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 10722,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * Browser-level helpers (DI strict, testable).\n * @param {Object} deps\n * @param {Window} deps.windowObject – injected window for testability\n */\n\nlet _moduleLogger = null;          // NEW – gives normaliseUrl access to logger\n\n/**\n * Shared URL helpers\n * Refactored for strict dependency injection — no global window.\n * If you need app-level location, inject windowObject and call createBrowserService({ windowObject }).\n * The standalone helpers below now require explicit baseHref/location.\n */\n\nimport { getSessionId } from './session.js';\n// --- shared URL helpers -------------------------------------------------\nexport function buildUrl(params = {}, baseHref) {\n  if (!baseHref) {\n    throw new Error('buildUrl requires baseHref (no global window access allowed)');\n  }\n  const url = new URL(baseHref, baseHref.startsWith('http') ? undefined : 'http://_');\n  Object.entries(params).forEach(([k, v]) =>\n    (v === undefined || v === null || v === '')\n      ? url.searchParams.delete(k)\n      : url.searchParams.set(k, v)\n  );\n  const sorted = Array.from(url.searchParams.entries())\n                      .sort(([a], [b]) => a.localeCompare(b));\n  url.search = new URLSearchParams(sorted).toString();\n  const raw = url.pathname.replace(/\\/{2,}/g, '/').replace(/\\/+$/, '');\n  const path = raw || '/';          // guarantee leading “/”\n  return path + (url.search ? `?${url.search}` : '');\n}\n\nexport function normaliseUrl(u = '') {\n  try {\n    const url = new URL(u, u.startsWith('http') ? undefined : 'http://_');\n    // url.search already includes '?' if params exist, or is empty string otherwise.\n    const raw   = url.pathname.replace(/\\/{2,}/g, '/').replace(/\\/+$/, '');\n    const path  = raw || '/';\n    return path + url.search + url.hash;\n  } catch (err) {\n    const logger = _moduleLogger;\n    if (logger) {\n      logger.error('[browserService] normaliseUrl failed', err,\n        { context: 'browserService:normaliseUrl', input: u });\n    }\n    return u;\n  }\n}\n\n// U.S.-spelling alias – keeps backward compatibility\nexport const normalizeUrl = normaliseUrl;\n\nexport function createBrowserService({ windowObject, logger } = {}) {\n  let _logger = logger;\n\n  _moduleLogger = _logger;\n\n  let _currentUser = null;\n\n  if (!windowObject)\n    throw new Error('browserService: windowObject must be injected (no global fallback)');\n  if (!windowObject?.location) throw new Error('browserService: windowObject is required');\n\n  /* --------------------------------------------------------------\n   *  DependencySystem bootstrap (runtime fallback)\n   * --------------------------------------------------------------\n   *  The production build expects the hosting HTML page to expose a\n   *  fully-featured `window.DependencySystem` **before** any of the\n   *  application modules execute.  In unit-tests or server-side\n   *  rendering scenarios this global often does not exist which used\n   *  to make the very first access (`browserAPI.getDependencySystem()` in\n   *  app.js) throw and abort the whole bootstrap.\n   *\n   *  To keep the contract intact while still allowing execution in\n   *  non-browser contexts we lazily create a *minimal* implementation\n   *  that fulfils just the subset of the API used across the codebase.\n   *  The implementation lives *inside* browserService so we respect the\n   *  guardrail that forbids creation of new top-level modules.\n   * -------------------------------------------------------------- */\n\n  function createFallbackDependencySystem() {\n    throw new Error('[browserService] Fallback DependencySystem is forbidden—application DI contract not satisfied.');\n  }\n\n  if (!windowObject.DependencySystem || typeof windowObject.DependencySystem.register !== 'function') {\n    windowObject.DependencySystem = createFallbackDependencySystem();\n  }\n\n  // Ensure modern alias exists even when host page provided its own DS\n  if (typeof windowObject.DependencySystem.waitForDependencies !== 'function'\n      && typeof windowObject.DependencySystem.waitFor === 'function') {\n    windowObject.DependencySystem.waitForDependencies = (deps = [], { timeout = 15000, context = null } = {}) =>\n      windowObject.DependencySystem.waitFor(deps, context, timeout);\n  }\n\n  // reuse shared helper – avoids keeping two divergent copies\n  function _buildUrl(params = {}) {\n    return buildUrl(params, windowObject.location.href);\n  }\n\n  // --------- DI wrappers for browser APIs ---------\n  function FormDataImpl(form) {\n    if (!windowObject.FormData) {\n      logger.error('browserService: windowObject.FormData is not available. This may occur in test/mocked environments.');\n      throw new Error('browserService: windowObject.FormData is not available. This may occur in test/mocked environments.');\n    }\n    return new windowObject.FormData(form);\n  }\n\n  function MutationObserverImpl(callback) {\n    if (!windowObject.MutationObserver) {\n      logger.error('browserService: windowObject.MutationObserver is not available. This may occur in test/mocked environments.');\n      throw new Error('browserService: windowObject.MutationObserver is not available. This may occur in test/mocked environments.');\n    }\n    return new windowObject.MutationObserver(callback);\n  }\n\n  async function fetchImpl(...args) {\n    if (!windowObject.fetch) {\n      throw new Error('browserService: windowObject.fetch is not available. This may occur in test/mocked environments.');\n    }\n    let response;\n    response = await windowObject.fetch(...args);\n    return response;\n  }\n\n  function setCurrentUser(userObj) { _currentUser = userObj ?? null; }\n  function getCurrentUser()      { return _currentUser; }\n\n  // ---------------- File download helper ----------------\n  /**\n   * Trigger a browser download for a Blob or ArrayBuffer.\n   * Falls back to console error if window APIs unavailable.\n   * @param {Blob|ArrayBuffer} blob\n   * @param {string} suggestedName\n   */\n  function triggerDownload(blob, suggestedName = 'download.bin') {\n    try {\n      const url = windowObject.URL.createObjectURL(blob);\n      const a = windowObject.document.createElement('a');\n      a.href = url;\n      a.download = suggestedName;\n      windowObject.document.body.appendChild(a);\n      a.click();\n      windowObject.URL.revokeObjectURL(url);\n      a.remove();\n    } catch (err) {\n      logger.error('[browserService] triggerDownload failed', err);\n      throw err;\n    }\n  }\n\n  return {\n    // Query-string helpers\n    buildUrl        : _buildUrl,\n    normaliseUrl,              // ← add this line\n    normalizeUrl,              // ← new alias\n    getSearchParam: (k) => new URL(windowObject.location.href).searchParams.get(k),\n    setSearchParam   : (k, v) => windowObject.history.replaceState({}, '', _buildUrl({ [k]: v })),\n    removeSearchParam: (k) => windowObject.history.replaceState({}, '', _buildUrl({ [k]: '' })),\n\n    // Storage helpers\n    getItem   : (k) => windowObject.localStorage.getItem(k),\n    setItem   : (k, v) => windowObject.localStorage.setItem(k, v),\n    removeItem: (k) => windowObject.localStorage.removeItem(k),\n    clear     : () => windowObject.localStorage.clear(),\n    key       : (n) => windowObject.localStorage.key(n),\n    get length() { return windowObject.localStorage.length; },\n\n    // Timing helpers\n    setTimeout: (...args) => {\n      if (!windowObject.setTimeout) {\n        _logger?.error?.('browserService: windowObject.setTimeout is not available. This may occur in test/mocked environments.');\n        throw new Error('browserService: windowObject.setTimeout is not available. This may occur in test/mocked environments.');\n      }\n      return windowObject.setTimeout(...args);\n    },\n\n    /* Auth & other modules need interval helpers – expose via DI */\n    setInterval: (...args) => {\n      if (!windowObject.setInterval) {\n        _logger?.error?.('browserService: windowObject.setInterval is not available. This may occur in test/mocked environments.');\n        throw new Error('browserService: windowObject.setInterval is not available. This may occur in test/mocked environments.');\n      }\n      return windowObject.setInterval(...args);\n    },\n    clearInterval: (...args) => {\n      if (!windowObject.clearInterval) {\n        _logger?.error?.('browserService: windowObject.clearInterval is not available. This may occur in test/mocked environments.');\n        throw new Error('browserService: windowObject.clearInterval is not available. This may occur in test/mocked environments.');\n      }\n      return windowObject.clearInterval(...args);\n    },\n\n    requestAnimationFrame: (cb) => {\n      if (typeof windowObject.requestAnimationFrame === 'function') {\n        return windowObject.requestAnimationFrame(cb);\n      }\n      logger.error('browserService: windowObject.requestAnimationFrame is required; fallback to setTimeout is forbidden.');\n      throw new Error('browserService: windowObject.requestAnimationFrame is required; fallback to setTimeout is forbidden.');\n    },\n\n    // Location / navigation helpers\n    setLocation: (url) => { windowObject.location.assign(url); },\n    getLocationPathname: () => windowObject.location.pathname,\n    getLocation: () => windowObject.location,\n    URLSearchParams: windowObject.URLSearchParams,\n    FormData: windowObject.FormData,\n\n    // Browser APIs for DI/testability\n    FormDataImpl,\n    MutationObserver: MutationObserverImpl,\n    fetch: fetchImpl,\n\n    /* Native constructor needed by Auth & other modules */\n    // URLSearchParams: windowObject.URLSearchParams, // already above\n\n    // Passthroughs for test harnesses\n    getLocationHref: () => windowObject.location.href,\n    setHistory: (...a) => windowObject.history.pushState(...a),\n\n    /* --- History helpers for NavigationService --- */\n    pushState   : (state = {}, title = '', url = '') =>\n      windowObject.history.pushState(state, title, url),\n\n    replaceState: (state = {}, title = '', url = '') =>\n      windowObject.history.replaceState(state, title, url),\n    clearTimeout : (...a) => windowObject.clearTimeout(...a),\n\n    /* new accessors required by app.js */\n    getWindow           : () => windowObject,\n    getDocument         : () => windowObject.document,\n    getHistory          : () => windowObject.history,\n    getInnerWidth       : () => windowObject.innerWidth,\n    getDependencySystem : () => windowObject.DependencySystem,\n\n    // session-scoped user helpers (used by app.handleAuthStateChange)\n    setCurrentUser,\n    getCurrentUser,\n\n    /* correlation helpers */\n    getSessionId : () => getSessionId(),\n    getUserAgent : () => windowObject.navigator?.userAgent || 'Unknown',\n    setLogger(newLogger) { _logger = newLogger; },\n\n    cleanup () {/* no internal listeners or timers */}\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 10722,
          "_transferSize": 11911,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.361Z",
        "time": 81.64200000464916,
        "timings": {
          "blocked": 10.23000000616256,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06500000000000128,
          "wait": 70.1199999978328,
          "receive": 1.2270000006537884,
          "_blocked_queueing": 2.0170000061625615,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 12
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1474,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "102719"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"a53d9af38fa8686dc89d5adb839b0de2\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 08 Jun 2025 14:05:53 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 102719,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * Unified application bootstrapping: all DI wiring, singleton setup, registration, and side effects\n * now live EXCLUSIVELY in this file. The only logic outside is:\n *   1) Construct the DI container and basic config/factories in app.js (or similar).\n *   2) Call createAppInitializer({...}).\n *   3) Then call appInit.initializeApp().\n */\n\nimport { createLogDeliveryService } from \"../logDeliveryService.js\";\nimport { createDomAPI } from \"../utils/domAPI.js\";\nimport { createEventHandlers } from \"../eventHandler.js\";\nimport { createSafeHandler } from \"../safeHandler.js\";\nimport { createDomReadinessService } from \"../utils/domReadinessService.js\";\nimport { createLogger } from \"../logger.js\";\nimport { createCustomEventPolyfill } from \"../utils/polyfillCustomEvent.js\";\nimport { createKnowledgeBaseReadinessService } from \"../knowledgeBaseReadinessService.js\";\nimport {\n    setBrowserService as registerSessionBrowserService,\n    getSessionId as coreGetSessionId\n} from \"../utils/session.js\";\n\nexport function createAppInitializer(opts = {}) {\n    /**\n     * Internal Boot Phase 1: Build essential singletons (browser service, DOM APIs, logger, etc.)\n     * and register them in the provided DependencySystem. Everything that used to be done in app.js\n     * is now consolidated here. After this, we merge them into `opts` so the remainder of the\n     * initialization code has a fully built DI context to work with.\n     */\n    function initialDISetup() {\n        const { DependencySystem } = opts;\n        // 1. Attach browserService to session for backward-compatibility usage\n        registerSessionBrowserService(opts.browserService);\n\n        // 2. Ensure DOMPurify (sanitizer) is available\n        //    Throw if missing to prevent unsafe usage\n        const sanitizer = opts.browserService?.getWindow?.()?.DOMPurify;\n        if (!sanitizer) {\n            throw new Error('[appInitializer] DOMPurify not found — cannot proceed (security requirement).');\n        }\n\n        // 3. Create domAPI BEFORE logger/eventHandlers\n        const domAPI = createDomAPI({\n            documentObject: opts.browserService.getDocument(),\n            windowObject: opts.browserService.getWindow(),\n            debug: opts.APP_CONFIG?.DEBUG === true,\n            sanitizer\n        });\n\n        // 4. Create logger first (minimal stub for eventHandlers), then wire both with circular DI\n\n        // --- Bootstrap minimal safeHandler stub for pre-logger DI ---\n        function stubSafeHandler(fn, _description) {\n            if (typeof fn !== 'function') return () => { };\n            return function (...args) {\n                try { return fn.apply(this, args); } catch { /* intentionally ignored for stubSafeHandler */ }\n            };\n        }\n\n        let logger;\n        const eventHandlers = createEventHandlers({\n            DependencySystem: opts.DependencySystem,\n            domAPI,\n            browserService: opts.browserService,\n            APP_CONFIG: opts.APP_CONFIG,\n            safeHandler: stubSafeHandler,\n            sanitizer,\n            errorReporter: {\n                report: (...args) => logger ? logger.error('[errorReporter]', ...args) : undefined\n            },\n            logger: {\n                debug: () => { },\n                info: () => { },\n                warn: () => { },\n                error: () => { },\n                log: () => { }\n            }\n        });\n        logger = createLogger({\n            context: 'App',\n            debug: opts.APP_CONFIG?.DEBUG === true,\n            minLevel: opts.APP_CONFIG?.LOGGING?.MIN_LEVEL || 'info',\n            consoleEnabled: opts.APP_CONFIG?.LOGGING?.CONSOLE_ENABLED !== false,\n            sessionIdProvider: coreGetSessionId,\n            domAPI,\n            browserService: opts.browserService,\n            eventHandlers\n        });\n        const { cleanup: customEventPolyfillCleanup } =\n              createCustomEventPolyfill({ browserService: opts.browserService, logger });\n        DependencySystem.register('customEventPolyfill', {\n            cleanup: customEventPolyfillCleanup\n        });\n        if (typeof eventHandlers.setLogger === 'function') {\n            eventHandlers.setLogger(logger);\n        }\n        // errorReporter uses logger\n        const errorReporter = {\n            report(error, ctx = {}) {\n                if (logger) {\n                    logger.error('[errorReporter] reported', error, { context: 'errorReporter', ...ctx });\n                } else if (typeof console !== 'undefined') {\n                    console.error('[errorReporter] reported', error, ctx);\n                }\n            }\n        };\n\n        // 7. Wire logger into domAPI (for completeness)\n        if (typeof domAPI.setLogger === 'function') {\n            domAPI.setLogger(logger);\n        }\n\n        // 8. Create real safeHandler with logger\n        const { safeHandler } = createSafeHandler({ logger });\n\n        // 8.1 Upgrade eventHandlers with the real safeHandler after logger is ready\n        if (typeof eventHandlers.setSafeHandler === 'function') {\n            eventHandlers.setSafeHandler(safeHandler);\n        }\n\n        // 9. Register these core objects into DependencySystem so downstream code can retrieve them\n        DependencySystem.register('browserService', opts.browserService);\n        DependencySystem.register('logger', logger);\n        DependencySystem.register('sanitizer', sanitizer);\n        DependencySystem.register('domPurify', sanitizer); // legacy alias\n        DependencySystem.register('safeHandler', safeHandler);\n        DependencySystem.register('createChatManager', opts.createChatManager);\n        DependencySystem.register('domAPI', domAPI);\n        DependencySystem.register('eventHandlers', eventHandlers);\n        DependencySystem.register('errorReporter', errorReporter);\n\n        // 10. Setup domReadinessService\n        const domReadinessService = createDomReadinessService({\n            DependencySystem,\n            domAPI,\n            browserService: opts.browserService,\n            eventHandlers,\n            APP_CONFIG: opts.APP_CONFIG,\n            logger\n        });\n        DependencySystem.register('domReadinessService', domReadinessService);\n        eventHandlers.setDomReadinessService(domReadinessService);\n\n        // 11. UI and global utilities\n        // ------------------------------------------------------------------\n        // GLOBAL APP BUS (single source of truth for cross-module events)\n        // Provide this **before** any module that might dispatch to it.\n        const AppBus = new EventTarget();\n        DependencySystem.register('AppBus', AppBus);\n\n        const uiUtils = {\n            formatBytes: opts.globalFormatBytes,\n            formatDate: opts.globalFormatDate,\n            fileIcon: opts.globalFileIcon\n        };\n        const globalUtils = {\n            shouldSkipDedup: opts.shouldSkipDedup,\n            stableStringify: opts.stableStringify,\n            normaliseUrl: opts.browserService.normaliseUrl || null,\n            isAbsoluteUrl: opts.isAbsoluteUrl,\n            isValidProjectId: opts.isValidProjectId\n        };\n\n        // Provide everything we just created\n        return {\n            logger,\n            eventHandlers,\n            domAPI,\n            safeHandler,\n            sanitizer,\n            domReadinessService,\n            uiUtils,\n            globalUtils,\n            getSessionId: coreGetSessionId\n        };\n    }\n\n    // Run the base DI wiring/setup\n    const DI = initialDISetup();\n\n    // Merge the newly created singletons into opts for downstream usage\n    for (const k in DI) {\n        if (!(k in opts)) {\n            opts[k] = DI[k];\n        }\n    }\n\n    // Destructure to match the original createAppInitializer signature\n    const {\n        // Core infrastructure\n        DependencySystem,\n        domAPI,\n        browserService,\n        eventHandlers,\n        logger,\n        sanitizer,\n        safeHandler,\n        domReadinessService,\n        APP_CONFIG,\n        uiUtils,\n        globalUtils,\n        getSessionId,\n\n        // Additional factories/injections\n        createApiEndpoints,\n        MODAL_MAPPINGS,\n        createFileUploadComponent,\n        createApiClient,\n        createAccessibilityEnhancements,\n        createNavigationService,\n        createHtmlTemplateLoader,\n        createUiRenderer,\n        createKnowledgeBaseComponent,\n        createProjectDetailsEnhancements,\n        createTokenStatsManager,\n        createModalManager,\n        createAuthModule,\n        createProjectManager,\n        createModelConfig,\n        createProjectDashboard,\n        createProjectDetailsComponent,\n        createProjectListComponent,\n        createProjectModal,\n        createSidebar\n    } = opts;\n\n    // ──────────────────────────────────────────────\n    // Below is the original content of appInitializer.js (inlined submodules)\n    // minus the redundant exports/imports. This code now uses the variables\n    // we've just set up above.\n    // ──────────────────────────────────────────────\n\n    // 1. Validate required dependencies\n    const required = {\n        DependencySystem, domAPI, browserService, eventHandlers,\n        logger, sanitizer, safeHandler, domReadinessService,\n        APP_CONFIG, uiUtils, globalUtils, getSessionId, createApiEndpoints,\n        MODAL_MAPPINGS,\n        createModalManager, createAuthModule, createProjectManager,\n        createModelConfig, createProjectDashboard, createProjectDetailsComponent,\n        createProjectListComponent, createProjectModal, createSidebar,\n        createFileUploadComponent, createApiClient,\n        createAccessibilityEnhancements, createNavigationService,\n        createHtmlTemplateLoader, createUiRenderer,\n        createKnowledgeBaseComponent, createProjectDetailsEnhancements,\n        createTokenStatsManager\n    };\n    for (const [k, v] of Object.entries(required)) {\n        if (!v) throw new Error(`[appInitializer] Missing required dependency: ${k}`);\n    }\n\n    // 2. Register all factory functions in DI so coreInit can retrieve them\n    const factoryMap = {\n        createModalManager,\n        createAuthModule,\n        createProjectManager,\n        createModelConfig,\n        createProjectDashboard,\n        createProjectDetailsComponent,\n        createProjectListComponent,\n        createProjectModal,\n        createSidebar,\n        createFileUploadComponent,\n        createApiClient,\n        createAccessibilityEnhancements,\n        createNavigationService,\n        createHtmlTemplateLoader,\n        createUiRenderer,\n        createKnowledgeBaseComponent,\n        createProjectDetailsEnhancements,\n        createTokenStatsManager\n    };\n    Object.entries(factoryMap).forEach(([name, fn]) => {\n        // Only register if it's a function and not already registered\n        if (typeof fn === 'function' && !DependencySystem.modules.has(name)) {\n            DependencySystem.register(name, fn);\n        }\n    });\n\n    // 3. appState module (inlined from appState.js)\n    const appModule = (() => {\n        if (!DependencySystem) {\n            throw new Error('[appState] Missing required dependencies for app state management.');\n        }\n        let _logger = logger;\n        if (!_logger) {\n            const winConsole =\n                DependencySystem?.modules?.get?.('browserService')?.getWindow?.()?.console;\n            _logger = winConsole ?? { info() { }, warn() { }, error() { }, debug() { }, log() { } };\n        }\n\n        function setLogger(newLogger) {\n            if (newLogger) _logger = newLogger;\n        }\n\n        const state = {\n            isAuthenticated: false,\n            currentUser: null,\n            currentProjectId: null,\n            currentProject: null,\n            isReady: false,\n            disableErrorTracking: false,\n            initialized: false,\n            initializing: false,\n            currentPhase: 'idle',\n            knowledgeBaseComponentReady: false\n        };\n\n        function setAuthState(newAuthState) {\n            const oldAuthState = {\n                isAuthenticated: state.isAuthenticated,\n                currentUser: state.currentUser\n                    ? { id: state.currentUser.id, username: state.currentUser.username }\n                    : null\n            };\n            const newAuthStateForLog = {\n                isAuthenticated: newAuthState.isAuthenticated,\n                currentUser: newAuthState.currentUser\n                    ? { id: newAuthState.currentUser.id, username: newAuthState.currentUser.username }\n                    : null\n            };\n            _logger.info('[appState][setAuthState] Updating auth state.', {\n                oldAuthState,\n                newAuthState: newAuthStateForLog,\n                context: 'appState:setAuthState'\n            });\n            Object.assign(state, newAuthState);\n        }\n\n        function setAppLifecycleState(newLifecycleState) {\n            const oldLifecycleStateForLog = {\n                isReady: state.isReady,\n                initialized: state.initialized,\n                initializing: state.initializing,\n                currentPhase: state.currentPhase\n            };\n            _logger.info('[appState][setAppLifecycleState] Updating app lifecycle state.', {\n                oldLifecycleState: oldLifecycleStateForLog,\n                newLifecycleState,\n                context: 'appState:setAppLifecycleState'\n            });\n            Object.assign(state, newLifecycleState);\n\n            if (newLifecycleState.initialized === true) {\n                if (state.currentPhase === 'initialized_idle') {\n                    state.isReady = true;\n                } else if (state.currentPhase === 'failed_idle') {\n                    state.isReady = false;\n                }\n            } else if (Object.prototype.hasOwnProperty.call(newLifecycleState, 'isReady')) {\n                state.isReady = newLifecycleState.isReady;\n            }\n        }\n\n        function setLifecycleState(...args) {\n            _logger.warn('[appState] setLifecycleState() is deprecated – use setAppLifecycleState()', {\n                context: 'appState:compat'\n            });\n            return setAppLifecycleState(...args);\n        }\n\n        function setCurrentProject(projectIdOrObject) {\n            const oldProjectId = state.currentProjectId;\n            const oldProject = state.currentProject;\n\n            if (projectIdOrObject === null) {\n                state.currentProjectId = null;\n                state.currentProject = null;\n                _logger.info('[appState][setCurrentProject] Clearing current project.', {\n                    oldProjectId,\n                    context: 'appState:setCurrentProject:clear'\n                });\n            } else if (typeof projectIdOrObject === 'string') {\n                state.currentProjectId = projectIdOrObject;\n                if (state.currentProject?.id !== projectIdOrObject) {\n                    state.currentProject = null;\n                }\n                _logger.info('[appState][setCurrentProject] Updating current project ID.', {\n                    oldProjectId,\n                    newProjectId: projectIdOrObject,\n                    context: 'appState:setCurrentProject:id'\n                });\n            } else if (\n                projectIdOrObject &&\n                typeof projectIdOrObject === 'object' &&\n                projectIdOrObject.id\n            ) {\n                state.currentProjectId = projectIdOrObject.id;\n                state.currentProject = projectIdOrObject;\n                _logger.info('[appState][setCurrentProject] Updating current project object.', {\n                    oldProjectId,\n                    newProjectId: projectIdOrObject.id,\n                    context: 'appState:setCurrentProject:object'\n                });\n            } else {\n                _logger.warn('[appState][setCurrentProject] Invalid project data provided.', {\n                    projectIdOrObject,\n                    context: 'appState:setCurrentProject:invalid'\n                });\n                return;\n            }\n\n            if (oldProjectId !== state.currentProjectId) {\n                try {\n                    const appBus = DependencySystem.modules.get('AppBus');\n                    const handlers = DependencySystem.modules.get('eventHandlers');\n                    const domAPIlookup = DependencySystem.modules.get('domAPI');\n                    if (appBus && handlers?.createCustomEvent) {\n                        const detail = {\n                            project: state.currentProject ? { ...state.currentProject } : null,\n                            previousProject: oldProject ? { ...oldProject } : null,\n                            projectId: state.currentProject?.id || null,\n                            previousProjectId: oldProject?.id || null\n                        };\n                        _logger.debug('[appState] Dispatching currentProjectChanged event.', {\n                            projectId: detail.projectId,\n                            previousProjectId: detail.previousProjectId,\n                            context: 'appState:projectChangeEvent'\n                        });\nif (handlers?.dispatch) {\n    handlers.dispatch(\n        'currentProjectChanged',\n        { detail },\n        appBus\n    );\n} else if (appBus && typeof appBus.dispatchEvent === 'function') {\n    appBus.dispatchEvent(\n        handlers.createCustomEvent('currentProjectChanged', { detail })\n    );\n}\n\n                        // Legacy event\n                        if (state.currentProject && domAPIlookup) {\n                            const doc = domAPIlookup.getDocument();\n                            if (doc) {\n                                _logger.debug('[appState] Dispatching legacy \"projectSelected\" event.', {\n                                    projectId: state.currentProject.id,\n                                    context: 'appState:projectChangeEvent:legacy'\n                                });\nif (handlers?.dispatch) {\n    handlers.dispatch(\n        'projectSelected',\n        {\n            detail: {\n                projectId: state.currentProject.id,\n                project: { ...state.currentProject }\n            }\n        },\n        doc\n    );\n} else if (domAPIlookup && typeof domAPIlookup.dispatchEvent === 'function') {\n    domAPIlookup.dispatchEvent(\n        doc,\n        handlers.createCustomEvent('projectSelected', {\n            detail: {\n                projectId: state.currentProject.id,\n                project: { ...state.currentProject }\n            }\n        })\n    );\n}\n                            }\n                        }\n                    }\n                } catch (error) {\n                    _logger.error('[appState] Failed to dispatch project change event.', {\n                        error: error.message,\n                        context: 'appState:projectChangeEvent:error'\n                    });\n                }\n            }\n        }\n\n        function cleanup() {\n            const handlers = DependencySystem.modules.get('eventHandlers');\n            if (handlers) handlers.cleanupListeners({ context: 'appState' });\n            _logger.debug('[appState] Cleanup completed', { context: 'appState:cleanup' });\n        }\n\n        const api = {\n            state,\n            setLogger,\n            setAuthState,\n            setAppLifecycleState,\n            setLifecycleState,\n            isAuthenticated: () => state.isAuthenticated,\n            getCurrentUser: () => state.currentUser,\n            setCurrentProject,\n            // Legacy aliases\n            getCurrentProjectId: () => state.currentProjectId,\n            getProjectId: () => state.currentProjectId,\n            validateUUID: (id) => globalUtils?.isValidProjectId?.(id) === true,\n            // Canonical accessors\n            getCurrentProject: () => state.currentProject,\n            isAppReady: () => state.isReady,\n            isInitialized: () => state.initialized,\n            isInitializing: () => state.initializing,\n            getCurrentPhase: () => state.currentPhase,\n            cleanup\n        };\n\n        return api;\n    })();\n    DependencySystem.register('appModule', appModule);\n    // Alias for \"app\", used by some legacy code\n    if (!DependencySystem.modules.has('app')) {\n        DependencySystem.register('app', appModule);\n    }\n\n\n    // 4. serviceInit (inlined from serviceInit.js)\n    const serviceInit = (() => {\n        let logger = DependencySystem?.modules?.get('logger');\n        if (!DependencySystem || !domAPI || !browserService || !eventHandlers ||\n            !domReadinessService || !sanitizer || !APP_CONFIG || !getSessionId) {\n            throw new Error('[serviceInit] Missing required dependencies for service initialization.');\n        }\n        if (!logger) {\n            throw new Error('[serviceInit] Logger instance is required; fallback removed.');\n        }\n\n        function safeRegister(name, value) {\n            if (!DependencySystem.modules.has(name)) {\n                DependencySystem.register(name, value);\n                logger.debug(`[serviceInit] Registered \"${name}\"`, { context: 'serviceInit:safeRegister' });\n            } else {\n                logger.debug(`[serviceInit] \"${name}\" already registered – skipping.`, { context: 'serviceInit:safeRegister' });\n            }\n        }\n\n        function registerBasicServices() {\n            logger.info('[serviceInit] Starting registration of basic services...', { context: 'serviceInit:registerBasicServices' });\n            safeRegister('logger', logger);\n            safeRegister('domAPI', domAPI);\n            safeRegister('browserAPI', browserService);\n            safeRegister('browserService', browserService);\n            safeRegister('viewportAPI', browserService);\n            safeRegister('storage', browserService);\n            safeRegister('eventHandlers', eventHandlers);\n\n            // Create global application EventTarget bus\n            const winObj = browserService?.getWindow?.();\n            let AppBusInstance = null;\n            if (winObj && typeof winObj.EventTarget === 'function') {\n                AppBusInstance = new winObj.EventTarget();\n            } else if (typeof EventTarget === 'function') {\n                AppBusInstance = new EventTarget();\n            } else {\n                // fallback minimal shim\n                AppBusInstance = {\n                    addEventListener() { },\n                    removeEventListener() { },\n                    dispatchEvent() { return false; }\n                };\n                logger.warn('[serviceInit] EventTarget not available – using shim for AppBus.', {\n                    context: 'serviceInit:registerBasicServices'\n                });\n            }\n            safeRegister('AppBus', AppBusInstance);\n\n            safeRegister('domReadinessService', domReadinessService);\n\n            if (eventHandlers.setDomReadinessService) {\n                eventHandlers.setDomReadinessService(domReadinessService);\n            } else {\n                logger.warn('[serviceInit] eventHandlers.setDomReadinessService is not defined.', { context: 'serviceInit:registerBasicServices' });\n            }\n\n            const existingErrorReporter = DependencySystem.modules.get('errorReporter');\n            if (!existingErrorReporter) {\n                throw new Error('[serviceInit] errorReporter module must be registered before ServiceInit runs.');\n            }\n            safeRegister('errorReporter', existingErrorReporter);\n\n            if (uiUtils) safeRegister('uiUtils', uiUtils);\n            if (globalUtils) safeRegister('globalUtils', globalUtils);\n            safeRegister('sanitizer', sanitizer);\n            safeRegister('domPurify', sanitizer);\n\n            if (createFileUploadComponent) {\n                safeRegister('FileUploadComponent', createFileUploadComponent);\n            }\n\n            // Register API endpoints\n            if (typeof createApiEndpoints !== 'function') {\n                throw new Error('[serviceInit] createApiEndpoints factory missing.');\n            }\n            const apiEndpointsInstance = createApiEndpoints({ logger, DependencySystem, config: APP_CONFIG });\n            const resolvedEndpoints = DependencySystem.modules.get('apiEndpoints') || apiEndpointsInstance.endpoints;\n            safeRegister('apiEndpoints', resolvedEndpoints);\n\n            logger.debug('[serviceInit] API endpoints registered.', {\n                endpointCount: Object.keys(resolvedEndpoints).length,\n                context: 'serviceInit:registerBasicServices'\n            });\n            logger.info('[serviceInit] Basic services registration completed.', {\n                context: 'serviceInit:registerBasicServices'\n            });\n        }\n\n        function registerAdvancedServices() {\n            logger.info('[serviceInit] Starting registration of advanced services...', {\n                context: 'serviceInit:registerAdvancedServices'\n            });\n            let apiClientInstance = null;\n\n            if (createApiClient && globalUtils) {\n                logger.debug('[serviceInit] Creating API client...', {\n                    context: 'serviceInit:registerAdvancedServices'\n                });\n                apiClientInstance = createApiClient({\n                    APP_CONFIG,\n                    globalUtils: {\n                        shouldSkipDedup: globalUtils.shouldSkipDedup,\n                        stableStringify: globalUtils.stableStringify,\n                        normaliseUrl: globalUtils.normaliseUrl,\n                        isAbsoluteUrl: globalUtils.isAbsoluteUrl\n                    },\n                    getAuthModule: () => DependencySystem.modules.get('auth'),\n                    browserService,\n                    eventHandlers,\n                    logger\n                });\n\n                // Log Delivery Service\n                if (apiClientInstance && APP_CONFIG.LOGGING?.BACKEND_ENABLED !== false) {\n                    try {\n                        const logDelivery = createLogDeliveryService({\n                            apiClient: apiClientInstance,\n                            browserService,\n                            eventHandlers,\n                            enabled: true       // start buffering immediately\n                        });\n                        if (!DependencySystem.modules.has('logDelivery')) {\n                            DependencySystem.register('logDelivery', logDelivery);\n                        } else {\n                            DependencySystem.modules.set('logDelivery', logDelivery);\n                        }\n                        logDelivery.start();   // activate listener + batching now\n                        logger.info('[serviceInit] LogDeliveryService started (pre-auth)',\n                                   { context: 'serviceInit:registerAdvancedServices' });\n\n                        logger.debug('[serviceInit] LogDeliveryService registered', {\n                            context: 'serviceInit:registerAdvancedServices'\n                        });\n                    } catch (err) {\n                        logger.error('[serviceInit] Failed to create LogDeliveryService', err, {\n                            context: 'serviceInit:registerAdvancedServices'\n                        });\n                    }\n                }\n\n                // Replace or register apiRequest\n                if (DependencySystem.modules.has('apiRequest')) {\n                    DependencySystem.modules.set('apiRequest', apiClientInstance.fetch);\n                    logger.debug('[serviceInit] apiRequest proxy replaced with real implementation.', {\n                        context: 'serviceInit:registerAdvancedServices'\n                    });\n                } else {\n                    safeRegister('apiRequest', apiClientInstance.fetch);\n                }\n\n                // Also register apiClient as an alias\n                if (DependencySystem.modules.has('apiClient')) {\n                    DependencySystem.modules.set('apiClient', apiClientInstance.fetch);\n                } else {\n                    safeRegister('apiClient', apiClientInstance.fetch);\n                }\n\n                if (DependencySystem.modules.has('apiClientObject')) {\n                    DependencySystem.modules.set('apiClientObject', apiClientInstance);\n                } else {\n                    safeRegister('apiClientObject', apiClientInstance);\n                }\n\n                // ----------------------------------------------------------\n                // Knowledge-Base Readiness Service (depends on apiRequest)\n                // ----------------------------------------------------------\n                try {\n                    const apiRequestFn = DependencySystem.modules.get('apiRequest');\n                    if (typeof apiRequestFn === 'function') {\n                        const kbReadinessService = createKnowledgeBaseReadinessService({\n                            DependencySystem,\n                            apiClient: apiRequestFn,\n                            logger\n                        });\n                        safeRegister('kbReadinessService', kbReadinessService);\n                        logger.debug('[serviceInit] kbReadinessService registered.', {\n                            context: 'serviceInit:registerAdvancedServices'\n                        });\n                    } else {\n                        logger.warn('[serviceInit] apiRequest not available – skipping kbReadinessService.', {\n                            context: 'serviceInit:registerAdvancedServices'\n                        });\n                    }\n                } catch (err) {\n                    logger.error('[serviceInit] Failed to create kbReadinessService', err, {\n                        context: 'serviceInit:registerAdvancedServices'\n                    });\n                }\n\n                logger.debug('[serviceInit] API client created and registered.', {\n                    context: 'serviceInit:registerAdvancedServices'\n                });\n\n                if (apiClientInstance && logger?.upgradeWithApiClient) {\n                    logger.upgradeWithApiClient(apiClientInstance);\n                    logger.debug('[serviceInit] Logger upgraded with apiClient', {\n                        context: 'serviceInit:registerAdvancedServices'\n                    });\n                }\n            } else {\n                logger.warn('[serviceInit] createApiClient or globalUtils not provided. Skipping API client.', {\n                    context: 'serviceInit:registerAdvancedServices'\n                });\n            }\n\n            if (createAccessibilityEnhancements) {\n                logger.debug('[serviceInit] Creating Accessibility Enhancements...', {\n                    context: 'serviceInit:registerAdvancedServices'\n                });\n                const accessibilityUtilsInstance = createAccessibilityEnhancements({\n                    domAPI,\n                    eventHandlers,\n                    logger,\n                    domReadinessService,\n                    DependencySystem,\n                    safeHandler: DependencySystem.modules.get('safeHandler')\n                });\n                safeRegister('accessibilityUtils', accessibilityUtilsInstance);\n                logger.debug('[serviceInit] Accessibility Enhancements created.', {\n                    context: 'serviceInit:registerAdvancedServices'\n                });\n            }\n\n            if (createNavigationService) {\n                logger.debug('[serviceInit] Creating Navigation Service...', {\n                    context: 'serviceInit:registerAdvancedServices'\n                });\n                const navInstance = createNavigationService({\n                    domAPI,\n                    browserService,\n                    DependencySystem,\n                    eventHandlers,\n                    logger\n                });\n                navInstance.init(); // ACTIVATE lifecycle & popstate handler\n                safeRegister('navigationService', navInstance);\n                logger.debug('[serviceInit] Navigation Service created.', {\n                    context: 'serviceInit:registerAdvancedServices'\n                });\n            }\n\n            if (createHtmlTemplateLoader) {\n                logger.debug('[serviceInit] Creating HTML Template Loader...', {\n                    context: 'serviceInit:registerAdvancedServices'\n                });\n                if (!domReadinessService) {\n                    throw new Error('[serviceInit] domReadinessService required for htmlTemplateLoader');\n                }\n                const htmlLoaderInstance = createHtmlTemplateLoader({\n                    DependencySystem,\n                    domAPI,\n                    sanitizer,\n                    eventHandlers,\n                    apiClient: apiClientInstance,\n                    timerAPI: browserService,\n                    domReadinessService,\n                    logger\n                });\n                safeRegister('htmlTemplateLoader', htmlLoaderInstance);\n                logger.debug('[serviceInit] HTML Template Loader created.', {\n                    context: 'serviceInit:registerAdvancedServices'\n                });\n            }\n\n            if (createUiRenderer && apiClientInstance) {\n                logger.debug('[serviceInit] Creating UI Renderer...', {\n                    context: 'serviceInit:registerAdvancedServices'\n                });\n                const curEndpoints = DependencySystem.modules.get('apiEndpoints');\n                if (curEndpoints) {\n                    const uiRendererInstance = createUiRenderer({\n                        domAPI,\n                        eventHandlers,\n                        apiRequest: apiClientInstance.fetch,\n                        apiEndpoints: curEndpoints,\n                        domReadinessService,\n                        logger,\n                        DependencySystem,\n                        onConversationSelect: (conversationId) => {\n                            const doc = domAPI.getDocument();\n                            if (doc && eventHandlers.createCustomEvent) {\n                                domAPI.dispatchEvent(doc,\n                                    eventHandlers.createCustomEvent('uiRenderer:conversationSelected', {\n                                        detail: { conversationId }\n                                    })\n                                );\n                            }\n                        },\n                        onProjectSelect: (projectId) => {\n                            const doc = domAPI.getDocument();\n                            if (doc && eventHandlers.createCustomEvent) {\n                                domAPI.dispatchEvent(doc,\n                                    eventHandlers.createCustomEvent('uiRenderer:projectSelected', {\n                                        detail: { projectId }\n                                    })\n                                );\n                            }\n                        }\n                    });\n                    safeRegister('uiRenderer', uiRendererInstance);\n                    logger.debug('[serviceInit] UI Renderer created.', {\n                        context: 'serviceInit:registerAdvancedServices'\n                    });\n                } else {\n                    logger.error('[serviceInit] apiEndpoints missing; skipping uiRenderer.', {\n                        context: 'serviceInit:registerAdvancedServices'\n                    });\n                }\n            } else if (!apiClientInstance && createUiRenderer) {\n                logger.warn('[serviceInit] UI Renderer requires API client; skipping.', {\n                    context: 'serviceInit:registerAdvancedServices'\n                });\n            }\n\n            logger.info('[serviceInit] Advanced services registration completed.', {\n                context: 'serviceInit:registerAdvancedServices'\n            });\n        }\n\n        function setLogger(newLogger) {\n            if (!newLogger) return;\n            logger = newLogger;\n            safeRegister('logger', newLogger);\n        }\n\n        function cleanup() {\n            eventHandlers.cleanupListeners({ context: 'serviceInit' });\n            const log = DependencySystem.modules.get('logger');\n            log.debug('[serviceInit] Cleanup completed', { context: 'serviceInit:cleanup' });\n        }\n\n        return {\n            registerBasicServices,\n            registerAdvancedServices,\n            setLogger,\n            cleanup\n        };\n    })();\n\n\n    // ──────────────────────────────────────────────\n    // 5. errorInit (inlined from errorInit.js)\n    // ──────────────────────────────────────────────\n    const errorInit = (() => {\n        if (!DependencySystem || !browserService || !eventHandlers || !logger || !safeHandler) {\n            throw new Error('[errorInit] Missing required dependencies for error handling initialization.');\n        }\n\n        function setupGlobalErrorHandling() {\n            try {\n                const windowObj = browserService.getWindow();\n                if (!windowObj) {\n                    throw new Error('[errorInit] browserService.getWindow() returned null/undefined.');\n                }\n\n                eventHandlers.trackListener(\n                    windowObj,\n                    'error',\n                    (evt) => {\n                        const { message, filename: source, lineno, colno, error } = evt;\n                        const log = DependencySystem.modules.get('logger');\n                        log.error(\n                            '[window.error]',\n                            { message, source, lineno, colno, err: error?.stack || error },\n                            { context: 'global.error' }\n                        );\n                    },\n                    { context: 'errorInit', description: 'window error handler', passive: true }\n                );\n\n                eventHandlers.trackListener(\n                    windowObj,\n                    'unhandledrejection',\n                    safeHandler((event) => {\n                        logger.error('[unhandledrejection]', event?.reason, { context: 'global.unhandledrejection' });\n                    }, 'global unhandledrejection'),\n                    { context: 'errorInit' }\n                );\n\n                logger.log('[errorInit] Global error handling setup completed', {\n                    context: 'errorInit:setupGlobalErrorHandling'\n                });\n            } catch (err) {\n                logger.error('[errorInit] Failed to setup global error handling', err, {\n                    context: 'errorInit:setupGlobalErrorHandling'\n                });\n                throw err;\n            }\n        }\n\n        function setupSpecificErrorHandlers() {\n            try {\n                const windowObj = browserService.getWindow();\n                if (!windowObj) {\n                    throw new Error('[errorInit] browserService.getWindow() returned null/undefined.');\n                }\n                // Placeholder for future specific handlers\n                logger.log('[errorInit] Specific error handlers setup completed', {\n                    context: 'errorInit:setupSpecificErrorHandlers'\n                });\n            } catch (err) {\n                logger.error('[errorInit] Failed to setup specific error handlers', err, {\n                    context: 'errorInit:setupSpecificErrorHandlers'\n                });\n                throw err;\n            }\n        }\n\n        function initializeErrorHandling() {\n            try {\n                logger.log('[errorInit] Starting error handling initialization', {\n                    context: 'errorInit:initializeErrorHandling'\n                });\n                setupGlobalErrorHandling();\n                setupSpecificErrorHandlers();\n                logger.log('[errorInit] Error handling initialization completed', {\n                    context: 'errorInit:initializeErrorHandling'\n                });\n            } catch (err) {\n                logger.error('[errorInit] Error handling initialization failed', err, {\n                    context: 'errorInit:initializeErrorHandling'\n                });\n                throw err;\n            }\n        }\n\n        function cleanup() {\n            eventHandlers.cleanupListeners({ context: 'errorInit' });\n            logger.debug('[errorInit] Cleanup completed', { context: 'errorInit:cleanup' });\n        }\n\n        return {\n            setupGlobalErrorHandling,\n            setupSpecificErrorHandlers,\n            initializeErrorHandling,\n            cleanup\n        };\n    })();\n\n\n    // ──────────────────────────────────────────────\n    // 6. coreInit (inlined from coreInit.js)\n    // ──────────────────────────────────────────────\n    const coreInit = (() => {\n        async function initializeCoreSystems() {\n            logger.log('[coreInit][initializeCoreSystems] Starting core systems initialization.', {\n                context: 'coreInit'\n            });\n\n            function validateRuntimeDeps() {\n                const runtimeRequired = {\n                    DependencySystem, domAPI, browserService, eventHandlers, sanitizer, logger, APP_CONFIG,\n                    domReadinessService, createKnowledgeBaseComponent, MODAL_MAPPINGS,\n                    apiRequest: DependencySystem.modules.get('apiRequest'),\n                    apiClientObject: DependencySystem.modules.get('apiClientObject'),\n                    apiEndpoints: DependencySystem.modules.get('apiEndpoints'),\n                    app: appModule,\n                    uiUtils,\n                    navigationService: DependencySystem.modules.get('navigationService'),\n                    globalUtils,\n                    FileUploadComponent: createFileUploadComponent,\n                    htmlTemplateLoader: DependencySystem.modules.get('htmlTemplateLoader'),\n                    uiRenderer: DependencySystem.modules.get('uiRenderer'),\n                    accessibilityUtils: DependencySystem.modules.get('accessibilityUtils'),\n                    safeHandler\n                };\n                for (const [k, v] of Object.entries(runtimeRequired)) {\n                    if (!v) throw new Error(`[coreInit] Missing required dependency: ${k}`);\n                }\n            }\n\n            // Validate mandatory runtime dependencies\n            validateRuntimeDeps();\n\n            // Phase 1: Basic DOM readiness\n            await domReadinessService.dependenciesAndElements({\n                deps: ['domAPI'],\n                domSelectors: ['body'],\n                timeout: 10000,\n                context: 'coreInit:domReady'\n            });\n\n            // Phase 2: Retrieve factories\n            const factories = {\n                createModalManager: DependencySystem.modules.get('createModalManager'),\n                createAuthModule: DependencySystem.modules.get('createAuthModule'),\n                createProjectManager: DependencySystem.modules.get('createProjectManager'),\n                createModelConfig: DependencySystem.modules.get('createModelConfig'),\n                createProjectDashboard: DependencySystem.modules.get('createProjectDashboard'),\n                createProjectDetailsComponent: DependencySystem.modules.get('createProjectDetailsComponent'),\n                createProjectListComponent: DependencySystem.modules.get('createProjectListComponent'),\n                createProjectModal: DependencySystem.modules.get('createProjectModal'),\n                createSidebar: DependencySystem.modules.get('createSidebar')\n            };\n            for (const [name, fn] of Object.entries(factories)) {\n                if (!fn) {\n                    logger.error(`[coreInit] Missing required factory: ${name}`, {\n                        context: 'coreInit:factoryCheck'\n                    });\n                    throw new Error(`[coreInit] Missing required factory: ${name}`);\n                }\n            }\n            const {\n                createModalManager: makeModalManager,\n                createAuthModule: makeAuthModule,\n                createProjectManager: makeProjectManager,\n                createModelConfig: makeModelConfig,\n                createProjectDashboard: makeProjectDashboard,\n                createProjectDetailsComponent: makeProjectDetailsComponent,\n                createProjectListComponent: makeProjectListComponent,\n                createProjectModal: makeProjectModal,\n                createSidebar: makeSidebar\n            } = factories;\n\n            // Phase 3.1: ModalManager\n            const modalManager = makeModalManager({\n                domAPI,\n                browserService,\n                eventHandlers,\n                DependencySystem,\n                modalMapping: MODAL_MAPPINGS,\n                domPurify: sanitizer,\n                domReadinessService,\n                logger\n            });\n            DependencySystem.register('modalManager', modalManager);\n\n            // Phase 3.2: Auth module factory\n            if (typeof DependencySystem.modules.get('apiRequest') !== 'function') {\n                throw new Error('[coreInit] apiRequest argument is not a function.');\n            }\n            if (!DependencySystem.modules.get('apiClientObject')) {\n                throw new Error('[coreInit] apiClientObject argument is missing.');\n            }\n            const authModule = makeAuthModule({\n                DependencySystem,\n                apiClient: DependencySystem.modules.get('apiRequest'),\n                eventHandlers,\n                domAPI,\n                sanitizer,\n                APP_CONFIG,\n                modalManager,\n                apiEndpoints: DependencySystem.modules.get('apiEndpoints'),\n                logger,\n                domReadinessService\n            });\n            DependencySystem.register('auth', authModule);\n\n            logger.log('[coreInit] auth module registered', { context: 'coreInit' });\n\n            // Phase 3.3: ModelConfig\n            const modelConfigInstance = makeModelConfig({\n                dependencySystem: DependencySystem,\n                domReadinessService,\n                eventHandler: eventHandlers,\n                storageHandler: browserService,\n                sanitizer\n            });\n            DependencySystem.register('modelConfig', modelConfigInstance);\n            await modelConfigInstance.initWithReadiness();\n\n            // Phase 3.4: ProjectDetailsComponent (partial)\n            const projectDetailsComp = makeProjectDetailsComponent({\n                projectManager: null, // set later\n                DependencySystem,\n                eventHandlers,\n                modalManager,\n                FileUploadComponentClass: createFileUploadComponent,\n                domAPI,\n                sanitizer,\n                app: appModule,\n                navigationService: DependencySystem.modules.get('navigationService'),\n                htmlTemplateLoader: DependencySystem.modules.get('htmlTemplateLoader'),\n                logger,\n                APP_CONFIG,\n                chatManager: null, // set later\n                modelConfig: modelConfigInstance,\n                knowledgeBaseComponent: null,\n                apiClient: DependencySystem.modules.get('apiRequest'),\n                domReadinessService\n            });\n            DependencySystem.register('projectDetailsComponent', projectDetailsComp);\n\n            // Phase 3.5: KnowledgeBaseComponent & ChatManager\n            let knowledgeBaseComponentInstance = null;\n\n            const navigationService = DependencySystem.modules.get('navigationService');\n            const chatManagerInstance = (() => {\n                const factory = DependencySystem.modules.get('createChatManager');\n                if (!factory) {\n                    logger.error('[coreInit] createChatManager factory not found.', {\n                        context: 'coreInit:createOrGetChatManager'\n                    });\n                    throw new Error('[coreInit] createChatManager factory missing.');\n                }\n                const instance = factory({\n                    DependencySystem,\n                    apiRequest: DependencySystem.modules.get('apiRequest'),\n                    auth: authModule,\n                    eventHandlers,\n                    modelConfig: modelConfigInstance,\n                    projectDetailsComponent: projectDetailsComp,\n                    app: appModule,\n                    domAPI,\n                    domReadinessService,\n                    logger,\n                    navAPI        : navigationService,      // supply full NavigationService\n                    browserService: browserService,         // timers, location helpers\n                    isValidProjectId: globalUtils.isValidProjectId,\n                    isAuthenticated: () => !!authModule.isAuthenticated?.(),\n                    DOMPurify: sanitizer,\n                    apiEndpoints: DependencySystem.modules.get('apiEndpoints'),\n                    APP_CONFIG\n                });\n                DependencySystem.register('chatManager', instance);\n                return instance;\n            })();\n\n            // Connect the ChatManager instance to the ProjectDetailsComponent so it can\n            // (re-)initialise the chat UI as soon as the dependency becomes available.\n            // Without this explicit wiring the ProjectDetailsComponent is created before\n            // the ChatManager and therefore never receives a valid instance, which\n            // prevents the chat_ui template from being injected and displayed in the\n            // “Chat” tab.\n            if (projectDetailsComp && typeof projectDetailsComp.setChatManager === 'function') {\n                try {\n                    projectDetailsComp.setChatManager(chatManagerInstance);\n                    logger.debug('[coreInit] ChatManager connected to ProjectDetailsComponent.', {\n                        context: 'coreInit'\n                    });\n                } catch (err) {\n                    logger.error('[coreInit] Failed to wire ChatManager into ProjectDetailsComponent', err, {\n                        context: 'coreInit'\n                    });\n                }\n            }\n\n            // Phase 3.6: ProjectManager\n            const pmFactory = await makeProjectManager({\n                DependencySystem,\n                chatManager: chatManagerInstance,\n                app: appModule,\n                modelConfig: modelConfigInstance,\n                apiRequest: DependencySystem.modules.get('apiRequest'),\n                apiEndpoints: DependencySystem.modules.get('apiEndpoints'),\n                storage: browserService,\n                listenerTracker: {\n                    add: (el, type, handler, desc) =>\n                        eventHandlers.trackListener(el, type, handler, { description: desc, context: 'projectManager' }),\n                    remove: () => eventHandlers.cleanupListeners({ context: 'projectManager' })\n                },\n                domAPI,\n                domReadinessService,\n                logger\n            });\n            const projectManager = pmFactory.instance;\n            if (!DependencySystem.modules.has('projectManager')) {\n                DependencySystem.register('projectManager', projectManager);\n                logger.log('[coreInit] projectManager registered', { context: 'coreInit' });\n            }\n\n            // NEW – activate its internal listeners & auth synchronisation\n            if (typeof projectManager.initialize === 'function') {\n                // Run in background so auth phase can begin\n                projectManager.initialize().catch((err) =>\n                    logger.error('[coreInit] ProjectManager initialization failed', err, {\n                        context: 'coreInit:projectManager:init'\n                    })\n                );\n            }\n\n            // Instantiate KnowledgeBaseComponent now that ProjectManager is ready\n            if (!knowledgeBaseComponentInstance) {\n                knowledgeBaseComponentInstance = createKnowledgeBaseComponent({\n                    DependencySystem,\n                    apiRequest: DependencySystem.modules.get('apiRequest'),\n                    app: appModule,\n                    projectManager,\n                    eventHandlers,\n                    modalManager,\n                    uiUtils,\n                    sanitizer\n                });\n                DependencySystem.register('knowledgeBaseComponent', knowledgeBaseComponentInstance);\n                logger.debug('[coreInit] KnowledgeBaseComponent instantiated post ProjectManager.', {\n                    context: 'coreInit'\n                });\n\n                // Do NOT initialize the component here; it must run only after\n                // project_details.html has been injected and the user is\n                // authenticated.  uiInit.registerNavigationViews() will call\n                // knowledgeBaseComponent.initialize() at the appropriate time.\n\n                // Connect the KnowledgeBaseComponent to the ProjectDetailsComponent\n                if (projectDetailsComp && typeof projectDetailsComp.setKnowledgeBaseComponent === 'function') {\n                    projectDetailsComp.setKnowledgeBaseComponent(knowledgeBaseComponentInstance);\n                    logger.debug('[coreInit] KnowledgeBaseComponent connected to ProjectDetailsComponent.', {\n                        context: 'coreInit'\n                    });\n                }\n            }\n\n            // Phase 3.7: ProjectListComponent\n            const projectListComponent = makeProjectListComponent({\n                projectManager,\n                eventHandlers,\n                modalManager,\n                app: appModule,\n                storage: browserService,\n                sanitizer,\n                htmlSanitizer: sanitizer,\n                apiClient: DependencySystem.modules.get('apiRequest'),\n                domAPI,\n                domReadinessService,\n                browserService,\n                globalUtils,\n                APP_CONFIG,\n                logger,\n                DependencySystem\n            });\n            DependencySystem.register('projectListComponent', projectListComponent);\n            logger.debug('[coreInit] ProjectListComponent registered.', { context: 'coreInit' });\n\n            // Phase 4: ModalManager UI init\n            if (modalManager.init) {\n                try {\n                    await modalManager.init();\n                    await domReadinessService.dependenciesAndElements({\n                        // Keep selector values in sync with MODAL_MAPPINGS\n                        domSelectors: ['#loginModal', '#errorModal', '#confirmActionModal', '#projectModal'],\n                        timeout: APP_CONFIG.MODAL_DOM_TIMEOUT ?? 12000,\n                        context: 'coreInit:modalReadiness'\n                    });\n                } catch (err) {\n                    logger.error('[coreInit] ModalManager.init() error', err, {\n                        context: 'coreInit:modalManager:init'\n                    });\n                    throw err;\n                }\n            }\n\n\n            // Phase 6: UI-oriented core components\n            const projectDashboard = makeProjectDashboard({\n                DependencySystem, domAPI, browserService, eventHandlers,\n                logger, sanitizer, APP_CONFIG, domReadinessService\n            });\n            DependencySystem.register('projectDashboard', projectDashboard);\n\n            // preload dashboard templates centrally (no ctor side-effects)\n            if (typeof projectDashboard.preloadTemplates === 'function') {\n              await projectDashboard.preloadTemplates();\n            }\n\n            const plc = DependencySystem.modules.get('projectListComponent');\n            if (plc && projectDashboard.setProjectListComponent) {\n                projectDashboard.setProjectListComponent(plc);\n            }\n            const pdc = DependencySystem.modules.get('projectDetailsComponent');\n            if (pdc && projectDashboard.setProjectDetailsComponent) {\n                projectDashboard.setProjectDetailsComponent(pdc);\n            }\n\n            const projectModal = makeProjectModal({\n                projectManager, eventHandlers, DependencySystem, domAPI,\n                domReadinessService, domPurify: sanitizer, logger\n            });\n            DependencySystem.register('projectModal', projectModal);\n            await projectModal.initialize();\n\n            const sidebar = makeSidebar({\n                eventHandlers, DependencySystem, domAPI,\n                uiRenderer: DependencySystem.modules.get('uiRenderer'),\n                storageAPI: browserService,\n                projectManager, modelConfig: modelConfigInstance,\n                app: appModule, projectDashboard,\n                viewportAPI: browserService,\n                accessibilityUtils: DependencySystem.modules.get('accessibilityUtils'),\n                sanitizer, domReadinessService, logger, safeHandler, APP_CONFIG\n            });\n            DependencySystem.register('sidebar', sidebar);\n\n            logger.info('[coreInit] Core systems initialization completed.', {\n                context: 'coreInit'\n            });\n            return true;\n        }\n\n        function cleanup() {\n            eventHandlers.cleanupListeners({ context: 'coreInit' });\n            logger.debug('[coreInit] Cleanup completed', { context: 'coreInit:cleanup' });\n        }\n\n        return { initializeCoreSystems, cleanup };\n    })();\n\n\n    // ──────────────────────────────────────────────\n    // 7. authInit (inlined from authInit.js)\n    // ──────────────────────────────────────────────\n    const authInit = (() => {\n        if (!DependencySystem || !domAPI || !eventHandlers ||\n            !logger || !sanitizer || !safeHandler ||\n            !domReadinessService || !APP_CONFIG) {\n            throw new Error('[authInit] Missing required dependencies for auth initialization.');\n        }\n\n        async function initializeAuthSystem() {\n            await domReadinessService.documentReady();\n            await domReadinessService.dependenciesAndElements({\n                deps: ['auth', 'eventHandlers'],\n                domSelectors: ['#loginModalForm', '#authButton'],\n                timeout: 8000,\n                context: 'authInit.initializeAuthSystem'\n            });\n\n            const auth = DependencySystem.modules.get('auth');\n            if (!auth?.init) {\n                throw new Error('[authInit] Auth module is missing or invalid.');\n            }\n\n            if (auth.AuthBus) {\n                logger.info('[authInit] Registering AuthBus listeners', { context: 'authInit:init' });\n                eventHandlers.trackListener(\n                    auth.AuthBus,\n                    'authStateChanged',\n                    safeHandler((event) => {\n                        logger.info('[authInit][AuthBus] Received authStateChanged', event?.detail, { context: 'authInit:authStateChanged' });\n                        handleAuthStateChange(event);\n                    }, 'AuthBus authStateChanged handler'),\n                    { description: '[authInit] AuthBus authStateChanged', context: 'authInit' }\n                );\n                eventHandlers.trackListener(\n                    auth.AuthBus,\n                    'authReady',\n                    safeHandler((event) => {\n                        logger.info('[authInit][AuthBus] Received authReady', event?.detail, { context: 'authInit:authReady' });\n                        handleAuthStateChange(event);\n                    }, 'AuthBus authReady handler'),\n                    { description: '[authInit] AuthBus authReady', context: 'authInit' }\n                );\n            } else {\n                logger.warn('[authInit] No AuthBus instance for registration', { context: 'authInit:init' });\n            }\n\n            try {\n                logger.info('[authInit] Calling auth.init()', { context: 'authInit:init' });\n                await auth.init();\n                eventHandlers.dispatch('authReady');\n                renderAuthHeader();\n                return true;\n            } catch (err) {\n                logger.error('[authInit] Auth system initialization failed', err, {\n                    context: 'authInit:init'\n                });\n                throw err;\n            }\n        }\n\n        function handleAuthStateChange(event) {\n            const appModuleLocal = DependencySystem.modules.get('appModule');\n            const projectManager = DependencySystem.modules.get('projectManager');\n            logger.info('[authInit][handleAuthStateChange]', {\n                eventDetail: event?.detail,\n                appModuleState: JSON.stringify(appModuleLocal.state),\n                context: 'authInit:handleAuthStateChange'\n            });\n\n            const isAuthenticated = appModuleLocal.state.isAuthenticated;\n            const navService = DependencySystem.modules.get('navigationService');\n            const appReadyDispatched = DependencySystem.modules.get('appModule')?._appReadyDispatched;\n            const readyNow = appReadyDispatched || appModuleLocal.state.isReady;\n\n            const proceed = () => {\n                if (navService?.navigateToProjectList) {\n                    navService.navigateToProjectList().catch(() => { });\n                } else if (projectManager?.loadProjects) {\n                    projectManager.loadProjects('all').catch(() => { });\n                }\n\n                /* --------------------------------------------------------------------\n                 * UI CONSOLIDATION: Ensure any auth-related modals (e.g. #loginModal,\n                 * #registerModal) are forcibly closed once the user has successfully\n                 * authenticated.  In some fast-load scenarios the authReady /\n                 * authStateChanged events may have fired before ModalManager\n                 * listeners were attached, leaving the modal visible even though the\n                 * application state is already authenticated.\n                 * ------------------------------------------------------------------ */\n                if (isAuthenticated) {\n                    try {\n                        const modalManager = DependencySystem.modules.get?.('modalManager');\n                        if (modalManager && typeof modalManager.hide === 'function') {\n                            ['login', 'register'].forEach((modalName) => {\n                                try { modalManager.hide(modalName); } catch { /* ignore */ }\n                            });\n                        }\n                    } catch (modalErr) {\n                        logger.warn('[authInit][handleAuthStateChange] Unable to hide auth modals after login', modalErr, { context: 'authInit:handleAuthStateChange' });\n                    }\n                }\n            };\n\n            if (isAuthenticated) {\n                if (readyNow) {\n                    proceed();\n                } else {\n                    domReadinessService.waitForEvent('app:ready', {\n                        timeout: APP_CONFIG.TIMEOUTS?.APP_READY_WAIT ?? 30000,\n                        context: 'authInit:handleAuthStateChange'\n                    }).then(proceed).catch(() => { });\n                }\n            }\n\n            renderAuthHeader();\n        }\n\n        function renderAuthHeader() {\n            try {\n                const appModuleLocal = DependencySystem.modules.get('appModule');\n                if (!appModuleLocal) {\n                    logger.error('[authInit][renderAuthHeader] appModule not found.', {\n                        context: 'authInit:renderAuthHeader'\n                    });\n                    return;\n                }\n                const isAuth = appModuleLocal.state.isAuthenticated;\n                const user = appModuleLocal.state.currentUser;\n                const displayName = user?.name || user?.username || 'User';\n\n                logger.debug('[authInit][renderAuthHeader] Rendering auth header', {\n                    isAuth, user, context: 'authInit:renderAuthHeader'\n                });\n\n                const authBtn = domAPI.getElementById('authButton');\n                const userMenu = domAPI.getElementById('userMenu');\n                const logoutBtn = domAPI.getElementById('logoutBtn');\n                const userInitialsEl = domAPI.getElementById('userInitials');\n                const authStatus = domAPI.getElementById('authStatus');\n                const userStatus = domAPI.getElementById('userStatus');\n\n                if (authBtn) {\n                    if (isAuth) {\n                        domAPI.addClass(authBtn, 'hidden');\n                        domAPI.setStyle(authBtn, 'display', 'none');\n                        domAPI.setAttribute(authBtn, 'hidden', 'hidden');\n                    } else {\n                        domAPI.removeClass(authBtn, 'hidden');\n                        domAPI.setStyle(authBtn, 'display', '');\n                        domAPI.removeAttribute(authBtn, 'hidden');\n                    }\n                }\n\n                if (userMenu) {\n                    domAPI.toggleClass(userMenu, 'hidden', !isAuth);\n                    domAPI.setStyle(userMenu, 'display', isAuth ? '' : 'none');\n                    isAuth\n                        ? domAPI.removeAttribute(userMenu, 'hidden')\n                        : domAPI.setAttribute(userMenu, 'hidden', 'hidden');\n                }\n\n                if (!isAuth) {\n                    const orphan = domAPI.getElementById('headerLoginForm');\n                    if (orphan) {\n                        const p = domAPI.getParentNode(orphan);\n                        if (p) domAPI.removeChild(p, orphan);\n                    }\n                }\n\n                if (userMenu && userInitialsEl) {\n                    let initials = 'U';\n                    if (isAuth) {\n                        if (typeof user?.name === 'string' && user.name.trim().length > 0) {\n                            initials = user.name.trim().split(/\\s+/).map(p => p[0]).join('').toUpperCase();\n                        } else if (typeof user?.username === 'string' && user.username.trim().length > 0) {\n                            initials = user.username.slice(0, 2).toUpperCase();\n                        }\n                    }\n                    if (!initials || initials.trim().length === 0) {\n                        initials = 'U';\n                    }\n                    domAPI.setTextContent(userInitialsEl, initials);\n                }\n\n                if (authStatus) {\n                    domAPI.setTextContent(authStatus,\n                        isAuth\n                            ? `Signed in as ${displayName}`\n                            : 'Not Authenticated'\n                    );\n                }\n\n                if (userStatus) {\n                    domAPI.setTextContent(userStatus,\n                        isAuth\n                            ? `Hello, ${displayName}`\n                            : 'Offline'\n                    );\n                }\n\n                if (logoutBtn) {\n                    eventHandlers.trackListener(\n                        logoutBtn,\n                        'click',\n                        safeHandler((e) => {\n                            domAPI.preventDefault(e);\n                            logger.debug('[authInit][renderAuthHeader] Logout clicked.', {\n                                context: 'authInit:logout'\n                            });\n                            const authMod = DependencySystem.modules.get('auth');\n                            authMod?.logout?.().catch(err => {\n                                logger.error('[authInit] Error during logout:', err, {\n                                    context: 'authInit:logout'\n                                });\n                            });\n                        }, 'Auth logout click'),\n                        { description: 'Auth logout click', context: 'authInit' }\n                    );\n                }\n            } catch (err) {\n                logger.error('[authInit][renderAuthHeader] Error during rendering', err, {\n                    context: 'authInit:renderAuthHeader'\n                });\n            }\n        }\n\n        function forceShowLoginModal() {\n            const appModuleLocal = DependencySystem.modules.get?.('appModule');\n            if (appModuleLocal && !appModuleLocal.state?.isAuthenticated) {\n                const modalManager = DependencySystem.modules.get?.('modalManager');\n                if (modalManager && typeof modalManager.show === 'function') {\n                    modalManager.show('login');\n                } else {\n                    throw new Error('[authInit][forceShowLoginModal] modalManager missing.');\n                }\n            }\n        }\n\n        function cleanup() {\n            eventHandlers.cleanupListeners({ context: 'authInit' });\n            logger.debug('[authInit] Cleanup completed', { context: 'authInit:cleanup' });\n        }\n\n        return {\n            initializeAuthSystem,\n            handleAuthStateChange,\n            renderAuthHeader,\n            forceShowLoginModal,\n            cleanup\n        };\n    })();\n\n\n    // ──────────────────────────────────────────────\n    // 8. uiInit (inlined from uiInit.js)\n    // ──────────────────────────────────────────────\n    const uiInit = (() => {\n        if (!DependencySystem || !domAPI || !browserService || !eventHandlers ||\n            !domReadinessService || !logger || !APP_CONFIG || !safeHandler ||\n            !sanitizer || !createProjectDetailsEnhancements ||\n            !createTokenStatsManager || !createKnowledgeBaseComponent ||\n            !domReadinessService || !uiUtils) {\n            throw new Error('[uiInit] Missing required dependencies for UI initialization.');\n        }\n\n        let _uiInitialized = false;\n\n        async function setupSidebarControls() {\n            logger.log('[UIInit] setupSidebarControls: no-op (handled by Sidebar module)', {\n                context: 'uiInit:setupSidebarControls'\n            });\n        }\n\n        async function loadProjectTemplates() {\n            const htmlLoader = DependencySystem.modules.get('htmlTemplateLoader');\n            if (!htmlLoader?.loadTemplate) {\n                logger.error('[UIInit] htmlTemplateLoader.loadTemplate unavailable', {\n                    context: 'uiInit:loadTemplates'\n                });\n                return;\n            }\n            try {\n                logger.log('[UIInit] Loading project templates', {\n                    context: 'uiInit:loadTemplates'\n                });\n                await htmlLoader.loadTemplate({\n                    url: '/static/html/project_list.html',\n                    containerSelector: '#projectListView',\n                    eventName: 'projectListHtmlLoaded'\n                });\n                await htmlLoader.loadTemplate({\n                    url: '/static/html/project_details.html',\n                    containerSelector: '#projectDetailsView',\n                    eventName: 'projectDetailsHtmlLoaded'\n                });\n                /* NEW: Ensure modal dialogs are injected before ModalManager initialization\n                   This prevents race conditions where #projectModal is missing during\n                   modalManager.init() and button clicks. */\n                await htmlLoader.loadTemplate({\n                    url: '/static/html/modals.html',\n                    containerSelector: '#modalsContainer',\n                    eventName: 'modalsHtmlLoaded'\n                });\n                logger.log('[UIInit] Project templates loaded', {\n                    context: 'uiInit:loadTemplates'\n                });\n            } catch (err) {\n                logger.error('[UIInit] Failed to load project templates', err, {\n                    context: 'uiInit:loadTemplates'\n                });\n                throw err;\n            }\n        }\n\n        async function waitForModalReadiness() {\n            const modalMgr = DependencySystem.modules.get('modalManager');\n            if (!modalMgr?.isReadyPromise) {\n                throw new Error('[uiInit] ModalManager or isReadyPromise not available.');\n            }\n            const timeoutMS = 8000;\n            let timedOut = false;\n            await Promise.race([\n                modalMgr.isReadyPromise(),\n                new Promise((_, reject) =>\n                    browserService.getWindow().setTimeout(() => {\n                        timedOut = true;\n                        reject(new Error(`[uiInit] Modal readiness timeout after ${timeoutMS}ms.`));\n                    }, timeoutMS)\n                )\n            ]);\n            if (timedOut) {\n                throw new Error('[uiInit] ModalManager not ready within timeout.');\n            }\n        }\n\n        async function waitForModalReadinessWithTimeout(timeout = 8000, context = 'waitForModalReadiness') {\n            const modalMgr = DependencySystem.modules.get('modalManager');\n            if (!modalMgr?.isReadyPromise) {\n                throw new Error(`[${context}] ModalManager or isReadyPromise not available.`);\n            }\n            let timedOut = false;\n            await Promise.race([\n                modalMgr.isReadyPromise(),\n                new Promise((_, reject) =>\n                    browserService.getWindow().setTimeout(() => {\n                        timedOut = true;\n                        reject(new Error(`[${context}] Modal readiness timeout after ${timeout}ms`));\n                    }, timeout)\n                )\n            ]);\n            if (timedOut) {\n                throw new Error(`[${context}] ModalManager not ready after ${timeout}ms`);\n            }\n            return true;\n        }\n\n        /**\n         * Ensure #projectListView and #projectDetailsView exist before templates load.\n         * Creates them dynamically if missing to avoid race-condition timeouts\n         * in domReadinessService during UI bootstrap.\n         */\n        function ensureBaseProjectContainers() {\n            logger.info('[uiInit] ensureBaseProjectContainers ENTER', { context: 'uiInit:ensureBaseProjectContainers' });\n            try {\n                const doc = domAPI.getDocument?.();\n                if (!doc) {\n                    logger.error('[uiInit] No document available in ensureBaseProjectContainers', { context: 'uiInit:ensureBaseProjectContainers' });\n                    return;\n                }\n\n                const panel = domAPI.querySelector('#projectManagerPanel') || doc.body;\n                if (!panel) {\n                    logger.error('[uiInit] No target panel (projectManagerPanel or body) in ensureBaseProjectContainers', { context: 'uiInit:ensureBaseProjectContainers' });\n                    return;\n                }\n\n                let listFound = !!domAPI.querySelector('#projectListView');\n                let detailsFound = !!domAPI.querySelector('#projectDetailsView');\n                if (listFound && detailsFound) {\n                    logger.info('[uiInit] Both #projectListView and #projectDetailsView already present', { context: 'uiInit:ensureBaseProjectContainers' });\n                }\n\n                if (!listFound) {\n                    const list = domAPI.createElement('div');\n                    list.id = 'projectListView';\n                    list.className = 'project-list-view';\n                    list.dataset.dynamic = 'true';\n                    domAPI.appendChild(panel, list);\n                    logger.info('[uiInit] #projectListView dynamically inserted', { context: 'uiInit:ensureBaseProjectContainers' });\n                }\n\n                if (!detailsFound) {\n                    const details = domAPI.createElement('div');\n                    details.id = 'projectDetailsView';\n                    details.className = 'project-details-view hidden';\n                    details.dataset.dynamic = 'true';\n                    domAPI.appendChild(panel, details);\n                    logger.info('[uiInit] #projectDetailsView dynamically inserted', { context: 'uiInit:ensureBaseProjectContainers' });\n                }\n\n                listFound = !!domAPI.querySelector('#projectListView');\n                detailsFound = !!domAPI.querySelector('#projectDetailsView');\n                if (listFound && detailsFound) {\n                    logger.info('[uiInit] Verified presence of both #projectListView and #projectDetailsView after ensureBaseProjectContainers', { context: 'uiInit:ensureBaseProjectContainers' });\n                } else {\n                    logger.error('[uiInit] One or both containers missing after ensureBaseProjectContainers', { context: 'uiInit:ensureBaseProjectContainers', listFound, detailsFound });\n                }\n            } catch (err) {\n                logger.error('[uiInit] ensureBaseProjectContainers failed', err, {\n                    context: 'uiInit:ensureBaseProjectContainers'\n                });\n            }\n            logger.info('[uiInit] ensureBaseProjectContainers EXIT', { context: 'uiInit:ensureBaseProjectContainers' });\n        }\n\n        async function createAndRegisterUIComponents() {\n            logger.log('[UIInit] Creating late-stage UI components', {\n                context: 'uiInit:createAndRegisterUIComponents'\n            });\n\n            if (createProjectDetailsEnhancements) {\n                const inst = createProjectDetailsEnhancements({\n                    domAPI, browserService, eventHandlers,\n                    domReadinessService, logger, sanitizer,\n                    DependencySystem\n                });\n                DependencySystem.register('projectDetailsEnhancements', inst);\n                if (inst.initialize) {\n                    await inst.initialize().catch(err =>\n                        logger.error('[UIInit] ProjectDetailsEnhancements init failed', err, {\n                            context: 'uiInit:projectDetailsEnhancements'\n                        })\n                    );\n                }\n            }\n\n            if (createTokenStatsManager) {\n                const inst = createTokenStatsManager({\n                    apiClient: DependencySystem.modules.get('apiRequest'),\n                    domAPI, eventHandlers, browserService,\n                    modalManager: DependencySystem.modules.get('modalManager'),\n                    sanitizer, logger,\n                    projectManager: DependencySystem.modules.get('projectManager'),\n                    app: appModule, chatManager: DependencySystem.modules.get('chatManager'),\n                    domReadinessService, DependencySystem\n                });\n                DependencySystem.register('tokenStatsManager', inst);\n                if (typeof inst.initialize === 'function') {\n                    await inst.initialize().catch(err =>\n                        logger.error('[UIInit] TokenStatsManager init failed', err, {\n                            context: 'uiInit:tokenStatsManager'\n                        })\n                    );\n                }\n            }\n\n            const pdDashboard = DependencySystem.modules.get('projectDashboard');\n            const pdc = DependencySystem.modules.get('projectDetailsComponent');\n            const plc = DependencySystem.modules.get('projectListComponent');\n            if (pdDashboard) {\n                if (pdc && typeof pdDashboard.setProjectDetailsComponent === 'function') {\n                    pdDashboard.setProjectDetailsComponent(pdc);\n                }\n                if (plc && typeof pdDashboard.setProjectListComponent === 'function') {\n                    pdDashboard.setProjectListComponent(plc);\n                }\n                // Ensure the dashboard is fully initialised now that its\n                // dependent components are connected and the UI templates\n                // are present.  Without this call the project list remains\n                // in the loading state because ProjectDashboard never\n                // triggers showProjectList / _loadProjects.\nif (typeof pdDashboard.initialize === 'function' && !pdDashboard.__initialized) {\n    try {\n        await domReadinessService.waitForEvent('authReady', { timeout: 30000 });\n        if (!pdDashboard.__initialized) {\n            await pdDashboard.initialize();\n            pdDashboard.__initialized = true;\n        }\n    } catch (err) {\n        logger.error('[UIInit] ProjectDashboard.initialize failed', err, {\n            context: 'uiInit:projectDashboardInit'\n        });\n    }\n}\n            }\n            logger.log('[UIInit] Late-stage UI components registered', {\n                context: 'uiInit:createAndRegisterUIComponents'\n            });\n        }\n\n        async function registerNavigationViews() {\n            const navSvc = DependencySystem.modules.get('navigationService');\n            if (!navSvc || typeof navSvc.registerView !== 'function') {\n                throw new Error('[uiInit] NavigationService missing registerView');\n            }\n            try {\n                if (!navSvc.hasView('projectList')) {\n                    navSvc.registerView('projectList', {\n                        show: async () => {\n                            const dash = DependencySystem.modules.get('projectDashboard');\n                            if (dash?.components?.projectList?.show) {\n                                await dash.components.projectList.show();\n                                return true;\n                            }\n                            const plc = DependencySystem.modules.get('projectListComponent');\n                            if (plc?.show) {\n                                await plc.show();\n                                return true;\n                            }\n                            throw new Error('[uiInit] Cannot show projectList');\n                        },\n                        hide: async () => {\n                            const dash = DependencySystem.modules.get('projectDashboard');\n                            if (dash?.components?.projectList?.hide) {\n                                await dash.components.projectList.hide();\n                                return true;\n                            }\n                            const plc = DependencySystem.modules.get('projectListComponent');\n                            if (plc?.hide) {\n                                await plc.hide();\n                                return true;\n                            }\n                            throw new Error('[uiInit] Cannot hide projectList');\n                        }\n                    });\n                }\n                if (!navSvc.hasView('projectDetails')) {\n                    navSvc.registerView('projectDetails', {\n                        show: async ({ projectId }) => {\n                            await domReadinessService.dependenciesAndElements({\n                                deps: ['projectDashboard', 'projectDetailsComponent'],\n                                timeout: 10000,\n                                context: 'uiInit:nav:projectDetails'\n                            });\n                            const dash = DependencySystem.modules.get('projectDashboard');\n                            if (dash?.showProjectDetails) {\n                                await dash.showProjectDetails(projectId);\n                    // Ensure KnowledgeBaseComponent is initialized once the\n                    // project details template (which contains its DOM nodes)\n                    // is in the document.  Initialize only once.\n                    const kbComp = DependencySystem.modules.get('knowledgeBaseComponent');\n                    if (kbComp && (!kbComp.isInitialized || kbComp.isInitialized() === false) && typeof kbComp.initialize === 'function') {\n                        try {\n                            await kbComp.initialize(true, null, projectId);\n                            logger.debug('[uiInit] KnowledgeBaseComponent initialized (projectDetails navigation)', { context: 'uiInit' });\n                        } catch (err) {\n                            logger.error('[uiInit] KnowledgeBaseComponent initialization failed during projectDetails navigation', err, { context: 'uiInit' });\n                        }\n                    }\n                                return true;\n                            }\n                            const pdc = DependencySystem.modules.get('projectDetailsComponent');\n                            if (pdc?.showProjectDetails) {\n                                await pdc.showProjectDetails(projectId);\n                            const kbComp = DependencySystem.modules.get('knowledgeBaseComponent');\n                            if (kbComp && (!kbComp.isInitialized || kbComp.isInitialized() === false) && typeof kbComp.initialize === 'function') {\n                                try {\n                                    await kbComp.initialize(true, null, projectId);\n                                    logger.debug('[uiInit] KnowledgeBaseComponent initialized (fallback path)', { context: 'uiInit' });\n                                } catch (err) {\n                                    logger.error('[uiInit] KnowledgeBaseComponent initialization failed (fallback)', err, { context: 'uiInit' });\n                                }\n                            }\n                                return true;\n                            }\n                            throw new Error('[uiInit] Cannot show projectDetails');\n                        },\n                        hide: async () => {\n                            const dash = DependencySystem.modules.get('projectDashboard');\n                            if (dash?.components?.projectDetails?.hideProjectDetails) {\n                                await dash.components.projectDetails.hideProjectDetails();\n                                return true;\n                            }\n                            const pdc = DependencySystem.modules.get('projectDetailsComponent');\n                            if (pdc?.hideProjectDetails) {\n                                await pdc.hideProjectDetails();\n                                return true;\n                            }\n                            throw new Error('[uiInit] Cannot hide projectDetails');\n                        }\n                    });\n                }\n                logger.log('[UIInit] Navigation views registered', { context: 'uiInit:navigation' });\n            } catch (err) {\n                logger.error('[uiInit] Failed to register navigation views', err, {\n                    context: 'uiInit:registerNavigationViews'\n                });\n            }\n        }\n\n        async function initializeUIComponents() {\n            if (_uiInitialized) {\n                logger.debug('[uiInit] UI already initialized; skipping', {\n                    context: 'uiInit:initializeUIComponents'\n                });\n                return;\n            }\n            try {\n                logger.log('[uiInit] Starting UI initialization...', { context: 'uiInit' });\n\n                // CRITICAL: Create base containers FIRST\n                ensureBaseProjectContainers();\n\n                // Now load templates into the containers we just created\n                await loadProjectTemplates();\n\n                // Wait for the selectors that should now exist\n                await domReadinessService.dependenciesAndElements({\n                    domSelectors: ['#projectListView', '#projectDetailsView'],\n                    timeout: 10000,\n                    context: 'uiInit:initializeUIComponents:baseDomCheck'\n                });\n                // NEW – wait for inner project-list selectors injected by template\n                await domReadinessService.dependenciesAndElements({\n                    domSelectors: ['#projectCardsPanel', '#projectFilterTabs'],\n                    observeMutations: true,\n                    timeout: APP_CONFIG?.TIMEOUTS?.PROJECT_LIST_ELEMENTS ?? 15000,\n                    context: 'uiInit:initializeUIComponents:projectListInnerSelectors'\n                });\n\n                await setupSidebarControls();\n                await waitForModalReadiness();\n                // Deferred: eventHandlers init after UI DOM is present\n                if (eventHandlers.init) {\n                    await eventHandlers.init();\n                    logger.log('[uiInit] eventHandlers init complete', { context: 'uiInit' });\n                }\n\n                /* ------------------------------------------------------------------\n                 * Emit the global readiness signal **before** late components like\n                 * ProjectDashboard or ProjectListComponent call waitForEvent('app:ready').\n                 * At this point:\n                 *   – Core UI DOM exists\n                 *   – Templates are injected\n                 *   – EventHandlers are wired (keyboard, modals, etc.)\n                 *   – No module that relies on AccessibilityUtils.init has run yet\n                 *\n                 * This is therefore the earliest safe moment to broadcast the\n                 * application-level readiness event without risking consumers\n                 * interacting with incomplete DOM.\n                 * ------------------------------------------------------------------ */\n                try {\n                    domReadinessService.emitReplayable('app:ready');\n                    appModule.setAppLifecycleState({ isReady: true, currentPhase: 'ui_ready_partial' });\n                } catch (earlyEmitErr) {\n                    logger.warn('[uiInit] Early app:ready emit failed', earlyEmitErr, {\n                        context: 'uiInit:earlyAppReady'\n                    });\n                }\n\n                domReadinessService.emitReplayable('ui:templates:ready');\n                await createAndRegisterUIComponents();\n                await registerNavigationViews();\n                logger.log('[uiInit] UI initialization complete', {\n                    context: 'uiInit:initializeUIComponents'\n                });\n\n                // Patch: Initialize projectListComponent after UI is ready\n                const plc = DependencySystem.modules.get('projectListComponent');\n                if (plc?.initialize) {\n                    try {\n                        await plc.initialize();\n                    } catch (e) {\n                        logger.error('[uiInit] projectListComponent.initialize failed', e, { context: 'uiInit' });\n                    }\n                }\n\n                const sidebar = DependencySystem.modules.get('sidebar');\n                if (sidebar?.init) {\n                    try {\n                        await sidebar.init();\n                        logger.info('[uiInit] sidebar.init completed', { context: 'uiInit' });\n\n                        /* ── NEW: explicit mobile-dock initialisation ───────────────────── */\n                        const mobileDock = sidebar.getMobileDock?.();\n                        if (mobileDock?.init) {\n                          await mobileDock.init();\n                          mobileDock.ensureMobileDock?.();   // guarantees DOM is present\n                          logger.debug('[uiInit] Mobile dock initialised by orchestrator', { context: 'uiInit' });\n                        }\n\n                        /* ── NEW: explicit Sidebar-Auth initialisation ─────── */\n                        const sidebarAuth = sidebar.getSidebarAuth?.();\n                        if (sidebarAuth?.init) {\n                          await sidebarAuth.init();\n                          sidebarAuth.setupInlineAuthForm?.();\n\n                          // Ensure the sidebar auth UI immediately reflects the current\n                          // canonical authentication state even if the authReady/authStateChanged\n                          // events fired before SidebarAuth listeners were wired (race condition\n                          // observed on fast connections).\n                          if (typeof sidebarAuth.forceAuthStateSync === 'function') {\n                            try {\n                              sidebarAuth.forceAuthStateSync();\n                            } catch (syncErr) {\n                              logger.warn('[uiInit] sidebarAuth.forceAuthStateSync threw', syncErr, { context: 'uiInit' });\n                            }\n                          }\n\n                          logger.debug('[uiInit] SidebarAuth initialised by orchestrator', { context: 'uiInit' });\n                        }\n                    } catch (err) {\n                        logger.error('[uiInit] sidebar.init failed', err, { context: 'uiInit' });\n                    }\n                }\n\n                const a11yUtils = DependencySystem.modules.get('accessibilityUtils');\n                if (a11yUtils?.init) {\n                  try {\n                    await a11yUtils.init();\n                    logger.debug('[uiInit] AccessibilityUtils initialised by orchestrator', { context: 'uiInit' });\n                  } catch (err) {\n                    logger.error('[uiInit] AccessibilityUtils.init failed', err, { context: 'uiInit' });\n                  }\n                }\n\n                _uiInitialized = true;\n            } catch (err) {\n                logger.error('[uiInit] Critical error in UI init', err, {\n                    context: 'uiInit:initializeUIComponents'\n                });\n                throw err;\n            }\n        }\n\n        function cleanup() {\n            eventHandlers.cleanupListeners({ context: 'uiInit' });\n            logger.debug('[uiInit] Cleanup completed', { context: 'uiInit:cleanup' });\n        }\n\n        return {\n            initializeUIComponents,\n            waitForModalReadinessWithTimeout,\n            registerNavigationViews,\n            cleanup\n        };\n    })();\n\n\n\n    // ──────────────────────────────────────────────\n    // 9. Orchestrator: initializeApp & cleanup\n    // ──────────────────────────────────────────────\n    async function initializeApp() {\n        logger.info('[appInitializer] Boot sequence start');\n        appModule.setAppLifecycleState({\n            initializing: true,\n            currentPhase: 'starting_init_process'\n        });\n\n        // Unified phase runner for structured logging & error handling\n        const phaseRunner = async (name, fn) => {\n            const start = (typeof performance !== 'undefined' && performance.now) ? performance.now() : Date.now();\n            logger.info(`[appInitializer] ▶ Phase start: ${name}`);\n            try {\n                const result = await fn();\n                const duration = ((typeof performance !== 'undefined' && performance.now) ? performance.now() : Date.now()) - start;\n                logger.info(`[appInitializer] ✔ Phase complete: ${name} (${duration.toFixed(0)} ms)`);\n                return result;\n            } catch (err) {\n                const duration = ((typeof performance !== 'undefined' && performance.now) ? performance.now() : Date.now()) - start;\n                logger.error(`[appInitializer] ✖ Phase failed: ${name} after ${duration.toFixed(0)} ms`, err, {\n                    context: `appInitializer:${name}`\n                });\n                // reflect lifecycle failure\n                appModule.setAppLifecycleState({\n                    initializing: false,\n                    initialized: false,\n                    currentPhase: 'failed_idle',\n                    isReady: false\n                });\n                eventHandlers.dispatch('app:failed');\n                throw err;\n            }\n        };\n\n        // Execute phases sequentially\n        await phaseRunner('services:basic', () => serviceInit.registerBasicServices());\n        await phaseRunner('services:advanced', () => serviceInit.registerAdvancedServices());\n        await phaseRunner('errors', () => errorInit.initializeErrorHandling());\n        await phaseRunner('core', () => coreInit.initializeCoreSystems());\n        await phaseRunner('auth', () => authInit.initializeAuthSystem());\n        await phaseRunner('ui', () => uiInit.initializeUIComponents());\n\n        // Mark initialization complete immediately after UI becomes interactive.\n        // Clearing the flag here prevents race conditions where early user actions\n        // (e.g., \"Create Project\" button) reach ModalManager.show() while\n        // appModule.state.initializing is still true, causing the modal to abort.\n        appModule.setAppLifecycleState({\n            initializing: false,\n            currentPhase: 'ui_ready'\n        });\n\n        // --- PATCH: Extra post-UI readiness verification ---\n        // Ensure DOM/selectors needed for post-auth/project UI actually exist\n        // Post-UI verification (ensure key selectors exist on main app pages).\n        // If the current HTML does not include these selectors (e.g. a standalone\n        // login page) we should **not** abort the whole boot sequence — simply\n        // log a warning and continue. The app will lazy-load the missing views\n        // once the user navigates to the main UI.\n\n        const criticalSelectors = [\n            ['#projectListView', 'Project List outer'],\n            ['#projectCardsPanel', 'Project card grid'],\n            ['#projectFilterTabs', 'Project filter tabs']\n        ];\n\n        criticalSelectors.forEach(([sel, desc]) => {\n            const el = domAPI.querySelector(sel);\n            if (!el) {\n                logger.warn(`[appInitializer] Optional selector missing post-UIInit: ${sel} – ${desc}. Continuing…`, {\n                    context: 'appInitializer:postUiInit'\n                });\n            }\n        });\n\n        // Finalize\n        appModule.setAppLifecycleState({\n            initializing: false,\n            initialized: true,\n            currentPhase: 'initialized_idle',\n            isReady: true\n        });\n        // Emit the replay-capable \"app:ready\" only if it has **not** been\n        // dispatched earlier by initializeUIComponents().  Duplicate dispatches\n        // could lead to listeners firing twice; we therefore guard by\n        // inspecting the lifecycle flag we already set.\n\n        if (!appModule.state.isReady) {\n            if (domReadinessService?.emitReplayable) {\n                domReadinessService.emitReplayable('app:ready');\n            } else {\n                // Fallback – standard dispatch (should not normally be used)\n                eventHandlers.dispatch('app:ready');\n                logger.warn('[appInitializer] domReadinessService.emitReplayable unavailable – used fallback dispatch', {\n                    context: 'appInitializer'\n                });\n            }\n        } else {\n            logger.debug('[appInitializer] app:ready was emitted earlier; skipping duplicate dispatch', {\n                context: 'appInitializer'\n            });\n        }\n        logger.info('[appInitializer] Boot sequence complete – app is READY');\n        // ──────────────────────────────────────────────\n        // Hide initial loading overlay (#appLoading)\n        // Doing this inside appInitializer guarantees the overlay is removed\n        // even if external listeners were attached too late.\n        // ──────────────────────────────────────────────\n        try {\n            const loadingEl = domAPI.querySelector('#appLoading');\n            if (loadingEl) {\n                // Fade out first (matches inline base.html listener behaviour)\n                domAPI.setStyle(loadingEl, 'opacity', '0');\n                // After fade-out transition, remove from layout flow\n                browserService.setTimeout(() => {\n                    domAPI.setStyle(loadingEl, 'display', 'none');\n                }, 300);\n                logger.debug('[appInitializer] #appLoading overlay hidden', { context: 'appInitializer' });\n            } else {\n                logger.debug('[appInitializer] #appLoading element not found – nothing to hide', { context: 'appInitializer' });\n            }\n        } catch (err) {\n            logger.warn('[appInitializer] Failed to hide #appLoading overlay', err, { context: 'appInitializer' });\n        }\n    }\n\n    async function cleanup() {\n        logger.info('[appInitializer] Shutdown start');\n        await uiInit.cleanup();\n        await authInit.cleanup();\n        await coreInit.cleanup();\n        await serviceInit.cleanup();\n        await errorInit.cleanup();\n        appModule.cleanup();\n        eventHandlers.cleanupListeners({ context: 'appInitializer' });\n        logger.info('[appInitializer] Shutdown complete');\n    }\n\n    // ──────────────────────────────────────────────\n    // 10. Public API\n    // ──────────────────────────────────────────────\n    return {\n        initializeApp,\n        cleanup,\n        // expose sub-APIs if external code still references them\n        appModule,\n        serviceInit,\n        errorInit,\n        coreInit,\n        authInit,\n        uiInit\n    };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1190,
          "bodySize": 102719,
          "_transferSize": 103909,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.361Z",
        "time": 185.75899998777453,
        "timings": {
          "blocked": 6.053999998037703,
          "dns": 0.036000000000000476,
          "ssl": -1,
          "connect": 4.68,
          "send": 1.093,
          "wait": 172.69099999653082,
          "receive": 1.2049999932060018,
          "_blocked_queueing": 1.9929999980377033,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126409",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 22
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/globalUtils.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1472,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "8418"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"7660d7e1c40b99b7243c4d31fb03ec3f\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 01 Jun 2025 02:34:26 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 8418,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 8418,
          "_transferSize": 9606,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.361Z",
        "time": 225.1979999870602,
        "timings": {
          "blocked": 7.944999990151263,
          "dns": 0.017000000000000348,
          "ssl": -1,
          "connect": 2.880000000000001,
          "send": 1.0649999999999995,
          "wait": 212.0679999976093,
          "receive": 1.2229999992996454,
          "_blocked_queueing": 2.5499999901512638,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126339",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 24
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/projectManager.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1469,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "50840"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"5b8ed5786624de3ecf3e191c49038078\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 08 Jun 2025 14:41:44 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 50840,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "import { safeParseJSON } from './utils/globalUtils.js';\n// VENDOR-EXEMPT-SIZE: Core module pending refactor in Q3-25\n// Refactored to comply with factory export, pure imports, domReadinessService usage, event bus for module events,\n// and logger-based error handling per guardrails. No top-level logic is executed here; all initialization occurs inside createProjectManager.\n\n// ----------------------------------------------------------------------------\n// 1) Provide a top-level export for isValidProjectId (cannot export from inside a function)\n// ----------------------------------------------------------------------------\nexport function isValidProjectId(id) {\n  if (id == null) return false;\n  const idStr = String(id).trim();\n  const uuidLike = /^[0-9a-f-]{32,36}$/i.test(idStr);\n  const numeric = /^\\d+$/.test(idStr);\n  return uuidLike || numeric;\n}\n\n// ----------------------------------------------------------------------------\n// 2) Primary factory export: createProjectManager\n/**\n * Factory function that creates and configures a ProjectManager instance for managing projects and related resources.\n *\n * The returned object includes the ProjectManager instance, a cleanup method, and utility functions for normalizing project responses, extracting resource lists, and retrying asynchronous operations with backoff.\n *\n * @returns {Object} An object containing:\n *   - `instance`: The ProjectManager instance.\n *   - `cleanup`: Function to destroy the instance and clean up listeners.\n *   - `normalizeProjectResponse`: Utility to normalize project server responses.\n *   - `extractResourceList`: Utility to extract resource arrays from API responses.\n *   - `retryWithBackoff`: Utility to retry async functions with exponential backoff.\n *\n * @throws {Error} If required dependencies (`DependencySystem`, `domReadinessService`, or `logger`) are missing.\n *\n * @remark\n * The ProjectManager instance is registered with the DependencySystem under the name `'projectManager'`.\n */\nexport function createProjectManager({\n  DependencySystem,\n  domReadinessService,\n  logger,\n  timer,\n  ...otherDeps\n} = {}) {\n  if (!DependencySystem) {\n    throw new Error('[createProjectManager] Missing DependencySystem');\n  }\n  if (!domReadinessService) {\n    throw new Error('[createProjectManager] Missing domReadinessService');\n  }\n  if (!logger) {\n    throw new Error('[createProjectManager] Missing logger');\n  }\n  if (!otherDeps.apiEndpoints) {\n    throw new Error('[createProjectManager] Missing apiEndpoints');\n  }\n\n  const MODULE = 'ProjectManager';\n\n  function normalizeProjectResponse(res) {\n    /* ------------------------------------------------------------------------\n     * Diagnostic: capture raw server response for on-device debugging\n     * --------------------------------------------------------------------- */\n    logger?.debug?.('[ProjectManager] normalizeProjectResponse - raw response', {\n      type: typeof res,\n      isString: typeof res === 'string',\n      length: typeof res === 'string' ? res.length : undefined,\n      preview:\n        typeof res === 'string'\n          ? res.substring(0, 200)\n          : JSON.stringify(res ?? {}, null, 0).substring(0, 200)\n    });\n\n    /* ------------------------------------------------------------------------\n     * Handle plain-string responses first\n     * --------------------------------------------------------------------- */\n    if (typeof res === 'string') {\n      const trimmed = res.trim();\n\n      /* Detect HTML error/redirect pages early (auth redirect, 404 template, …) */\n      if (\n        trimmed.startsWith('<!DOCTYPE') ||\n        trimmed.startsWith('<html') ||\n        trimmed.includes('</html>')\n      ) {\n        logger?.error?.(\n          '[ProjectManager] Received HTML instead of JSON – possible authentication/redirect',\n          {\n            context: MODULE,\n            htmlPreview: trimmed.substring(0, 500)\n          }\n        );\n        const titleMatch = trimmed.match(/<title>([^<]+)<\\/title>/i);\n        const errMsg = titleMatch\n          ? `Server returned HTML page: ${titleMatch[1]}`\n          : 'Server returned HTML instead of JSON';\n        const err = new Error(errMsg);\n        err.status = 404; // best guess – adjust upstream when more info available\n        err.isHtmlResponse = true;\n        throw err;\n      }\n\n      /* Try JSON-parsing if payload looks like JSON */\n      if (trimmed.startsWith('{') || trimmed.startsWith('[')) {\n        try {\n          res = safeParseJSON(trimmed);\n        } catch (e) {\n          logger?.error?.('[ProjectManager] Failed to parse JSON response', {\n            context: MODULE,\n            error: e.message,\n            responsePreview: trimmed.substring(0, 200)\n          });\n          throw new Error('Invalid JSON response from server');\n        }\n      } else if (trimmed === '') {\n        throw new Error('Empty response from server');\n      }\n    }\n\n    if (!res) {\n      throw new Error('Null or undefined response from server');\n    }\n\n    /* ------------------------------------------------------------------------\n     * Attempt to locate the project object in various known shapes\n     * --------------------------------------------------------------------- */\n    let data = null;\n    const extractionPaths = [\n      () => res.data?.project,\n      () => res.data,\n      () => res.project,\n      () => res,\n      () => (Array.isArray(res) ? res[0] : null)\n    ];\n    for (const fn of extractionPaths) {\n      try {\n        const candidate = fn();\n        if (candidate && (candidate.id || candidate.uuid || candidate.project_id)) {\n          data = candidate;\n          break;\n        }\n      } catch {\n        /* ignore path errors */\n      }\n    }\n\n    /* ------------------------------------------------------------------------\n     * Validate extraction result\n     * --------------------------------------------------------------------- */\n    if (!data) {\n      if (res?.detail === 'Project not found') {\n        const err = new Error('Project not found');\n        err.status = 404;\n        throw err;\n      }\n      logger?.error?.('[ProjectManager] Could not extract project data from response', {\n        context: MODULE,\n        responseStructure: Object.keys(res || {}),\n        response: res\n      });\n      throw new Error('Invalid response structure – no project data found');\n    }\n\n    /* ------------------------------------------------------------------------\n     * Normalise to canonical frontend shape\n     * --------------------------------------------------------------------- */\n    const normalized = {\n      ...data,\n      id: String(\n        data.id || data.uuid || data.project_id || data.projectId || ''\n      ).trim(),\n      name: data.name || data.title || data.project_name || '',\n      description: data.description || data.details || data.project_description || '',\n      goals: data.goals || data.project_goals || '',\n      customInstructions:\n        data.customInstructions ||\n        data.instructions ||\n        data.custom_instructions ||\n        data.project_instructions ||\n        ''\n    };\n\n    /* ------------------------------------------------------------------------\n     * Final ID validity check\n     * --------------------------------------------------------------------- */\n    if (!isValidProjectId(normalized.id)) {\n      logger?.error?.('[ProjectManager] Invalid project ID after normalization', {\n        context: MODULE,\n        providedId: normalized.id,\n        originalData: data\n      });\n      throw new Error(`Invalid project ID: ${normalized.id}`);\n    }\n\n    return normalized;\n  }\n\n  function extractResourceList(res, keys = ['projects', 'conversations', 'files', 'artifacts']) {\n    for (const k of keys) {\n      if (Array.isArray(res?.[k])) return res[k];\n      if (Array.isArray(res?.data?.[k])) return res.data[k];\n      if (res?.[k]?.id) return [res[k]];\n      if (res?.data?.[k]?.id) return [res.data[k]];\n    }\n    if (Array.isArray(res?.data)) return res.data;\n    if (Array.isArray(res)) return res;\n    if (res?.id) return [res];\n    return [];\n  }\n\n  async function retryWithBackoff(fn, maxRetries, timerRef) {\n    let attempt = 0;\n    while (true) {\n      try {\n        return await fn();\n      } catch (err) {\n        logger.error('[ProjectManager][retryWithBackoff-fn]', err, { context: MODULE });\n        // rethrow if 4xx not 429 or if we exceeded max retries\n        if (\n          err &&\n          err.status &&\n          ((err.status >= 400 && err.status < 500 && err.status !== 429) || err.status === 405)\n        ) {\n          throw err;\n        }\n        if (++attempt > maxRetries) {\n          throw err;\n        }\n        await new Promise((r) => timerRef(r, 1000 * attempt));\n      }\n    }\n  }\n\n  class ProjectManager {\n    constructor({\n      app,\n      chatManager,\n      DependencySystem,\n      logger,\n      modelConfig = null,\n      listenerTracker = null,\n      timer: timerFunc = typeof setTimeout === 'function' ? setTimeout : (cb) => cb(),\n      storage = { setItem: () => { }, getItem: () => null },\n      apiEndpoints,\n      apiRequest = null,\n      browserService = null,\n      domReadinessService,\n      domAPI = null\n    } = {}) {\n      if (!DependencySystem) {\n        throw new Error('DependencySystem required');\n      }\n      if (!apiEndpoints) {\n        throw new Error('apiEndpoints required');\n      }\n      if (!domReadinessService) {\n        throw new Error('[createProjectManager] Missing domReadinessService');\n      }\n\n      this.moduleName = MODULE;\n      this.logger = logger;\n      this.DependencySystem = DependencySystem;\n      this.domReadinessService = domReadinessService;\n\n      this.app = app ?? DependencySystem.modules.get('appModule');\n      this.chatManager = chatManager ?? DependencySystem.modules.get('chatManager');\n      this.modelConfig = modelConfig ?? DependencySystem.modules.get('modelConfig');\n      this.timer = timerFunc;\n      this.storage = storage;\n      this.apiRequest = apiRequest ?? this.app?.apiRequest;\n      this.browserService =\n        browserService ?? DependencySystem.modules.get?.('browserService') ?? null;\n      this.domAPI = domAPI ?? DependencySystem.modules.get('domAPI') ?? null;\n\n      // Instead of dispatching to DOM, maintain an EventTarget bus\n      this.eventBus = new EventTarget();\n\n      // track listeners if provided\n      if (!listenerTracker) {\n        const ev = DependencySystem.modules.get('eventHandlers');\n        if (!ev?.trackListener) {\n          throw new Error('eventHandlers.trackListener missing');\n        }\n        listenerTracker = {\n          add: (t, e, h, dsc) => ev.trackListener(t, e, h, { description: dsc, context: MODULE }),\n          remove: () => ev.cleanupListeners?.({ context: MODULE })\n        };\n      }\n      this.listenerTracker = listenerTracker;\n\n      this._loadingProjects = false;\n      this._loadProjectsDebounceTimer = null;\n      this._DEBOUNCE_DELAY = 300;\n      // CONSOLIDATED: Removed _activeProjectId - use canonical appModule.state.currentProjectId instead\n\n      this.apiEndpoints = apiEndpoints;\n      this._CONFIG = {\n        PROJECTS: apiEndpoints.PROJECTS || '/api/projects/',\n        DETAIL: apiEndpoints.DETAIL || '/api/projects/{id}/',\n        STATS: apiEndpoints.STATS || '/api/projects/{id}/stats/',\n        FILES: apiEndpoints.FILES || '/api/projects/{id}/files/',\n        // Always store a string template; never invoke endpoint factories here\n        CONVOS: (typeof apiEndpoints.CONVERSATIONS === 'string'\n          ? apiEndpoints.CONVERSATIONS\n          : '/api/projects/{id}/conversations/'),\n        ARTIFACTS: apiEndpoints.ARTIFACTS || '/api/projects/{id}/artifacts/',\n        KB_LIST_URL_TEMPLATE:\n          apiEndpoints.KB_LIST_URL_TEMPLATE || '/api/projects/{id}/knowledge-bases/',\n        KB_DETAIL_URL_TEMPLATE:\n          apiEndpoints.KB_DETAIL_URL_TEMPLATE || '/api/projects/{id}/knowledge-bases/{kb_id}/',\n        ARCHIVE: apiEndpoints.ARCHIVE || '/api/projects/{id}/archive/',\n        FILE_DETAIL: apiEndpoints.FILE_DETAIL || '/api/projects/{id}/files/{file_id}/',\n        FILE_DOWNLOAD: apiEndpoints.FILE_DOWNLOAD || '/api/projects/{id}/files/{file_id}/download/',\n        ARTIFACT_DOWNLOAD:\n          apiEndpoints.ARTIFACT_DOWNLOAD || '/api/projects/{id}/artifacts/{artifact_id}/download/'\n      };\n    }\n    async _req(url, opts = {}, contextLabel = 'n/a') {\n      if (typeof this.apiRequest !== 'function') {\n        throw new Error('[ProjectManager] apiRequest missing');\n      }\n\n      /* Always include cookies so authenticated calls reach the server.\n         Merge with caller-supplied opts without overwriting them. */\n      const mergedOpts =\n        opts && typeof opts === 'object'\n          ? { credentials: 'include', ...opts }\n          : { credentials: 'include' };\n\n      try {\n        const response = await this.apiRequest(url, mergedOpts, contextLabel);\n\n        /* Successful response diagnostics */\n        this.logger?.debug?.(`[ProjectManager] API response for ${contextLabel}`, {\n          url,\n          status: response?.status,\n          hasData: !!response\n        });\n\n        return response;\n      } catch (err) {\n        /* Enhanced error logging / re-throw with context */\n        this.logger?.error?.(\n          `[ProjectManager] API request failed for ${contextLabel}`,\n          {\n            url,\n            method: opts?.method || 'GET',\n            status: err?.status ?? err?.response?.status,\n            statusText: err?.statusText ?? err?.response?.statusText,\n            responseData: err?.data ?? err?.response?.data,\n            error: err.message\n          }\n        );\n\n        err.apiContext = {\n          url,\n          method: opts?.method || 'GET',\n          contextLabel\n        };\n        throw err;\n      }\n    }\n\n    /**\n     * Centralized error handler used by various load/save helpers.\n     * Ensures we always:\n     *   1. Log the error through the provided logger (if any)\n     *   2. Emit the supplied event so that UI components can react\n     *   3. Return a safe fallback value so callers can continue gracefully\n     *\n     * The signature intentionally mirrors existing call-sites:\n     *   _handleErr(eventName, err, fallbackValue, meta?)\n     *\n     * @param {string} eventName - Event that should be emitted on both the local bus and DOM\n     * @param {*} err - The caught error/exception\n     * @param {*} fallbackVal - Value to return so upstream logic can proceed\n     * @param {object} [meta={}] - Additional metadata to attach to the emitted event\n     * @returns {*} The provided fallbackVal\n     */\n    _handleErr(eventName, err, fallbackVal, meta = {}) {\n      if (this.logger?.error) {\n        this.logger.error(`[ProjectManager][_handleErr] Event: ${eventName}`, err, {\n          context: MODULE,\n          ...meta\n        });\n      }\n\n      // Emit an event carrying details about the failure so interested\n      // subscribers (e.g. UI components) can display notices.\n      try {\n        let message;\n        if (typeof err?.data === 'string') message = err.data;\n        else if (typeof err?.response?.data === 'string') message = err.response.data;\n        else if (err?.data?.message) message = String(err.data.message);\n        else if (err?.response?.data?.message) message = String(err.response.data.message);\n        else if (err?.data?.detail) message = String(err.data.detail);\n        else if (err?.response?.data?.detail) message = String(err.response.data.detail);\n        else if (err?.detail) message = String(err.detail);\n        else if (typeof err === 'string') message = err;\n        else if (err?.message) message = err.message;\n        else message = 'Unknown error';\n\n        const eventDetail = {\n          error: message,\n          exception: err,\n          ...meta\n        };\n\n        // Provide a sensible payload for list endpoints so UI components\n        // that rely on them (e.g. ProjectListComponent) can still render\n        // gracefully even when an error occurs.\n        if (eventName === 'projectsLoaded') {\n          eventDetail.projects = Array.isArray(fallbackVal) ? fallbackVal : [];\n        }\n\n        this._emit(eventName, eventDetail);\n      } catch (emitErr) {\n        // Emitting should never crash the flow; log and swallow.\n        this.logger?.warn?.(`[ProjectManager][_handleErr] Failed to emit \"${eventName}\"`, emitErr, {\n          context: MODULE\n        });\n      }\n\n      return fallbackVal;\n    }\n\n    _emit(event, detail) {\n      /* dispatch on local bus (keeps module-internal listeners) */\n      this.eventBus.dispatchEvent(new CustomEvent(event, { detail }));\n\n      /* additionally broadcast to the global document so other components\n         (e.g. ProjectListComponent, ProjectDashboard) that listen on\n         document receive the same updates. All DOM access goes through\n         the DI-provided domAPI to respect guardrails. */\n      try {\n        if (this.domAPI?.getDocument) {\n          const doc = this.domAPI.getDocument();\n          if (doc) {\n            /* use DependencySystem-provided eventHandlers.createCustomEvent\n               when available, else fall back to new CustomEvent               */\n            const evh = this.DependencySystem?.modules?.get?.('eventHandlers');\n            const domEvt = evh?.createCustomEvent\n              ? evh.createCustomEvent(event, { detail })\n              : new CustomEvent(event, { detail });\n\n            this.domAPI.dispatchEvent(doc, domEvt);\n          }\n        }\n      } catch (err) {\n        /* non-fatal: log and continue */\n        this.logger?.warn?.(`[ProjectManager] failed to rebroadcast \"${event}\"`, err, {\n          context: this.moduleName\n        });\n      }\n    }\n\n    async loadProjects(filter = 'all') {\n      if (this._loadProjectsDebounceTimer) {\n        clearTimeout(this._loadProjectsDebounceTimer);\n      }\n      return new Promise((resolve) => {\n        this._loadProjectsDebounceTimer = this.timer.call(null, async () => {\n          if (this._loadingProjects) {\n            resolve(this.projects || []);\n            return;\n          }\n          if (!this.app?.state?.isAuthenticated) {\n            resolve([]);\n            return;\n          }\n          this._loadingProjects = true;\n          this._emit('projectsLoading', { filter });\n          try {\n            let baseUrl;\n            if (typeof this.apiEndpoints.USER_PROJECTS === 'function') {\n              baseUrl = this.apiEndpoints.USER_PROJECTS();\n            } else if (this.apiEndpoints.USER_PROJECTS) {\n              baseUrl = this.apiEndpoints.USER_PROJECTS;\n            } else if (typeof this.apiEndpoints.PROJECTS === 'function') {\n              baseUrl = this.apiEndpoints.PROJECTS();\n            } else {\n              baseUrl = this.apiEndpoints.PROJECTS || this._CONFIG.PROJECTS;\n            }\n\n            if (typeof baseUrl === 'string' && !baseUrl.endsWith('/') && !baseUrl.includes('?')) {\n              baseUrl += '/';\n            }\n            const origin = this.browserService?.getLocation?.().origin || '';\n            const urlObj = new URL(baseUrl, origin);\n            if (filter && filter !== 'all') {\n              urlObj.searchParams.set('filter', filter);\n            } else {\n              urlObj.searchParams.delete('filter');\n            }\n            const res = await this._req(String(urlObj), undefined, 'loadProjects');\n            const list = extractResourceList(res, ['projects']);\n            this.projects = list;\n            this._emit('projectsLoaded', { projects: list, filter });\n            resolve(list);\n          } catch (err) {\n            this.logger.error('[ProjectManager][loadProjects]', err, { context: MODULE });\n            resolve(this._handleErr('projectsLoaded', err, []));\n          } finally {\n            this._loadingProjects = false;\n          }\n        }, this._DEBOUNCE_DELAY);\n      });\n    }\n\n    async loadProjectDetails(id) {\n      if (!isValidProjectId(id)) {\n        throw new Error('Invalid projectId');\n      }\n      if (!this.app || !this.app.state || !this.app.state.currentUser) {\n        this._emit('projectDetailsError', { error: 'User not authenticated', status: 403 });\n        return null;\n      }\n      let detailUrlTemplate;\n      if (typeof this.apiEndpoints.DETAIL === 'function') {\n        detailUrlTemplate = null;\n      } else {\n        detailUrlTemplate = String(this.apiEndpoints.DETAIL || this._CONFIG.DETAIL);\n      }\n      let detailUrl;\n      if (detailUrlTemplate) {\n        detailUrl = detailUrlTemplate.replace('{id}', id);\n      } else if (typeof this.apiEndpoints.DETAIL === 'function') {\n        detailUrl = this.apiEndpoints.DETAIL(id);\n      } else {\n        throw new Error('Invalid DETAIL endpoint configuration');\n      }\n      // Ensure trailing slash for REST endpoints to avoid unexpected HTML redirects\n      if (typeof detailUrl === 'string' && !detailUrl.endsWith('/') && !detailUrl.includes('?')) {\n        detailUrl += '/';\n      }\n\n      try {\n        logger.info(`[${MODULE}] GET project details → URL: ${detailUrl}`, { context: MODULE });\n        const detailRes = await this._req(detailUrl, undefined, 'loadProjectDetails');\n        logger.debug(`[${MODULE}] RAW loadProjectDetails response:`, detailRes, { context: MODULE });\n        const currentProjectObj = normalizeProjectResponse(detailRes);\n\n        // Race condition check: Only update global state if the loaded project is still the active one.\n        const globalCurrentProjectId = this.app?.getCurrentProject?.()?.id;\n        if (globalCurrentProjectId === id) {\n          this.logger.info(`[${MODULE}][loadProjectDetails] Setting current project in app state.`, { projectId: id, context: MODULE });\n          this.app.setCurrentProject(currentProjectObj); // This will trigger AppBus 'currentProjectChanged'\n        } else {\n          this.logger.warn(`[${MODULE}][loadProjectDetails] Global current project changed (${globalCurrentProjectId}) while loading details for ${id}. Not updating global state.`, { context: MODULE });\n          // Decide if we should still emit 'projectLoaded' on local bus or a different event.\n          // For now, let's assume other components will react to AppBus 'currentProjectChanged'.\n          // If this component specifically needs to signal it loaded 'an old project', add custom event.\n          this._emit('projectDetailsLoadedForStaleId', { loadedProject: currentProjectObj, currentGlobalProjectId: globalCurrentProjectId, context: MODULE });\n          return currentProjectObj; // Return the loaded data, but don't make it the global current\n        }\n\n        this._emit('projectLoaded', currentProjectObj); // Emit on local bus\n\n        if (currentProjectObj.archived) {\n          this._emit('projectArchivedNotice', { id: currentProjectObj.id });\n          return { ...currentProjectObj };\n        }\n\n        let kbLoadResult = { status: 'fulfilled', value: null };\n        if (currentProjectObj && currentProjectObj.knowledge_base_id) {\n          try {\n            const kbValue = await this.loadProjectKnowledgeBase(\n              currentProjectObj.id,\n              currentProjectObj.knowledge_base_id\n            );\n            kbLoadResult = { status: 'fulfilled', value: kbValue };\n          } catch (kbError) {\n            logger.error('[ProjectManager][loadProjectDetails-kbError]', kbError, { context: MODULE });\n            kbLoadResult = { status: 'rejected', reason: kbError };\n          }\n        } else {\n          this._emit('projectKnowledgeBaseLoaded', { id, knowledgeBase: null });\n        }\n\n        const otherResourcesPromises = [\n          this.loadProjectStats(id),\n          this.loadProjectFiles(id),\n          this.loadProjectConversations(id),\n          this.loadProjectArtifacts(id)\n        ];\n        const otherResults = await Promise.allSettled(otherResourcesPromises);\n        const [stats, files, convos, artifacts] = otherResults;\n\n        const allResults = [kbLoadResult, stats, files, convos, artifacts];\n        const criticalErrors = allResults\n          .filter((r) => r.status === 'rejected')\n          .map((r) => r.reason);\n        if (criticalErrors.length > 0) {\n          this._emit('projectDetailsLoadError', { id, errors: criticalErrors });\n        }\n\n        this._emit('projectDetailsFullyLoaded', { projectId: currentProjectObj.id });\n        return { ...currentProjectObj };\n      } catch (err) {\n        logger.error('[ProjectManager][loadProjectDetails]', err, { context: MODULE });\n        const userId = this.app?.state?.currentUser?.id || null;\n        const status = err?.status || err?.response?.status;\n        const endpoint = detailUrl;\n        const backendDetail = err?.detail || err?.response?.data?.detail || err?.response?.detail;\n        this._handleErr('projectDetailsError', err, null, {\n          projectId: id,\n          userId,\n          status,\n          endpoint,\n          backendDetail,\n          originalError: err\n        });\n        if (status === 404) {\n          this._emit('projectNotFound', { id });\n        }\n        return null;\n      }\n    }\n\n    async loadProjectKnowledgeBase(projectId, knowledgeBaseId) {\n      if (!knowledgeBaseId) {\n        this._emit('projectKnowledgeBaseLoaded', { id: projectId, knowledgeBase: null });\n        return null;\n      }\n      try {\n        const url = this._CONFIG.KB_DETAIL_URL_TEMPLATE\n          .replace('{id}', projectId)\n          .replace('{kb_id}', knowledgeBaseId);\n        const res = await this._req(url, undefined, 'loadProjectKnowledgeBase');\n        const kb = res?.data || res;\n        if (!kb || !kb.id) {\n          this._emit('projectKnowledgeBaseLoaded', { id: projectId, knowledgeBase: null });\n          return null;\n        } else {\n          this._emit('projectKnowledgeBaseLoaded', { id: projectId, knowledgeBase: kb });\n          return kb;\n        }\n      } catch (err) {\n        logger.error('[ProjectManager][loadProjectKnowledgeBase]', err, { context: MODULE });\n        this._emit('projectKnowledgeBaseLoaded', { id: projectId, knowledgeBase: null });\n        throw err;\n      }\n    }\n\n    async loadProjectStats(id) {\n      try {\n        const res = await this._req(\n          this._CONFIG.STATS.replace('{id}', id),\n          undefined,\n          'loadProjectStats'\n        );\n        const stats = res?.data ?? {};\n        this._emit('projectStatsLoaded', { id, ...stats });\n        return stats;\n      } catch (err) {\n        logger.error('[ProjectManager][loadProjectStats]', err, { context: MODULE });\n        return this._handleErr('projectStatsError', err, {});\n      }\n    }\n\n    async loadProjectFiles(id) {\n      try {\n        const res = await this._req(\n          this._CONFIG.FILES.replace('{id}', id),\n          undefined,\n          'loadProjectFiles'\n        );\n        const files = extractResourceList(res, ['files', 'file']) ?? [];\n        this._emit('projectFilesLoaded', { id, files });\n        return files;\n      } catch (err) {\n        logger.error('[ProjectManager][loadProjectFiles]', err, { context: MODULE });\n        return this._handleErr('projectFilesError', err, []);\n      }\n    }\n\n    async loadProjectConversations(id) {\n      try {\n        const convosUrl =\n          typeof this._CONFIG.CONVOS === 'function'\n            ? this._CONFIG.CONVOS(id)\n            : this._CONFIG.CONVOS.replace('{id}', id);\n\n        const res = await this._req(\n          convosUrl,\n          undefined,\n          'loadProjectConversations'\n        );\n        const conversations = extractResourceList(res, ['conversations']) ?? [];\n        this._emit('projectConversationsLoaded', { id, conversations });\n        return conversations;\n      } catch (err) {\n        logger.error('[ProjectManager][loadProjectConversations]', err, { context: MODULE });\n        return this._handleErr('projectConversationsError', err, []);\n      }\n    }\n\n    async loadProjectArtifacts(id) {\n      try {\n        const res = await this._req(\n          this._CONFIG.ARTIFACTS.replace('{id}', id),\n          undefined,\n          'loadProjectArtifacts'\n        );\n        const artifacts = extractResourceList(res, ['artifacts']) ?? [];\n        this._emit('projectArtifactsLoaded', { id, artifacts });\n        return artifacts;\n      } catch (err) {\n        logger.error('[ProjectManager][loadProjectArtifacts]', err, { context: MODULE });\n        return this._handleErr('projectArtifactsError', err, []);\n      }\n    }\n\n    async saveProject(id, payload) {\n      if (!this.app?.state?.isAuthenticated) throw new Error('auth');\n      const isUpdate = Boolean(id);\n      const url = isUpdate ? this._CONFIG.DETAIL.replace('{id}', id) : this._CONFIG.PROJECTS;\n      const method = isUpdate ? 'PATCH' : 'POST';\n      try {\n        const res = await this._req(url, { method, body: payload }, 'saveProject');\n        const proj = res?.data ?? res;\n        this._emit(isUpdate ? 'projectUpdated' : 'projectCreated', proj);\n        return proj;\n      } catch (err) {\n        logger.error('[ProjectManager][saveProject]', err, { context: MODULE });\n        this._handleErr('projectSaveError', err, null, {\n          method: 'saveProject',\n          endpoint: url\n        });\n        throw err;\n      }\n    }\n\n    async deleteProject(id) {\n      if (!this.app?.state?.isAuthenticated) throw new Error('auth');\n      try {\n        await this._req(\n          this._CONFIG.DETAIL.replace('{id}', id),\n          { method: 'DELETE' },\n          'deleteProject'\n        );\n        if (this.currentProject?.id === id) {\n          this.currentProject = null;\n        }\n        this._emit('projectDeleted', { id });\n      } catch (err) {\n        logger.error('[ProjectManager][deleteProject]', err, { context: MODULE });\n        this._handleErr('projectDeleteError', err, null, {\n          method: 'deleteProject',\n          endpoint: this._CONFIG.DETAIL.replace('{id}', id)\n        });\n        throw err;\n      }\n    }\n\n    async toggleArchiveProject(id) {\n      if (!this.app?.state?.isAuthenticated) throw new Error('auth');\n      try {\n        const res = await this._req(\n          this._CONFIG.ARCHIVE.replace('{id}', id),\n          { method: 'PATCH' },\n          'toggleArchiveProject'\n        );\n        this._emit('projectArchiveToggled', {\n          id,\n          archived: res?.archived ?? !this.currentProject?.archived\n        });\n        return res;\n      } catch (err) {\n        logger.error('[ProjectManager][toggleArchiveProject]', err, { context: MODULE });\n        this._handleErr('projectArchiveToggled', err, null, {\n          method: 'toggleArchiveProject',\n          endpoint: this._CONFIG.ARCHIVE.replace('{id}', id)\n        });\n        throw err;\n      }\n    }\n\n    async createConversation(projectId, opts = {}) {\n      try {\n        this.storage.setItem?.('selectedProjectId', projectId);\n        return await this.chatManager.createNewConversation(projectId);\n      } catch (origErr) {\n        logger.error('[ProjectManager][createConversation]', origErr, { context: MODULE });\n        let finalErr = origErr;\n        const msg = String(origErr?.message ?? '').toLowerCase();\n        if (msg.includes('no knowledge base')) {\n          try {\n            await this._ensureKnowledgeBase(projectId);\n            return await this.chatManager.createNewConversation(projectId, opts);\n          } catch (retryErr) {\n            logger.error('[ProjectManager][createConversation-retryErr]', retryErr, { context: MODULE });\n            finalErr = retryErr;\n          }\n        }\n        this._handleErr('conversationCreateError', finalErr, null, {\n          source: 'createConversation',\n          detail: { projectId }\n        });\n        throw finalErr;\n      }\n    }\n\n    // CONSOLIDATED: Get projectId from canonical sources only\n    _getEffectiveProjectId() {\n      // Priority order: canonical appModule state, app.getProjectId(), browserService location param\n      const candidates = [\n        // CONSOLIDATED: Use canonical appModule state first\n        (this.app?.getCurrentProject && this.app.getCurrentProject()?.id),\n        (this.app?.getProjectId && this.app.getProjectId())\n      ];\n      for (const id of candidates) {\n        if (isValidProjectId(id)) return id;\n      }\n      // Fallback: extract from URL if browserService provides it\n      const urlSearch = this.browserService?.getLocation?.().search;\n      if (urlSearch) {\n        try {\n          const params = new URLSearchParams(urlSearch);\n          const candidate = params.get('project');\n          if (isValidProjectId(candidate)) return candidate;\n        } catch {\n          // Ignore URL parsing errors for robustness (URL may be malformed or not present)\n        }\n      }\n      return null;\n    }\n\n    async getConversation(conversationId) {\n      if (!this.app?.state?.isAuthenticated) {\n        throw new Error('auth');\n      }\n      const projectId = this._getEffectiveProjectId();\n      if (!isValidProjectId(projectId)) {\n        this._handleErr('conversationLoadError', new Error('No valid project context'), null, {\n          source: 'getConversation',\n          detail: { conversationId }\n        });\n        throw new Error('No valid project context');\n      }\n      try {\n        const endpoint = `/api/projects/${projectId}/conversations/${conversationId}/`;\n        const res = await this._req(endpoint, undefined, 'getConversation');\n        const convo = res?.conversation;\n        if (!convo || !convo.id) {\n          throw new Error('Invalid conversation data received');\n        }\n        return convo;\n      } catch (err) {\n        logger.error('[ProjectManager][getConversation]', err, { context: MODULE });\n        this._handleErr('conversationLoadError', err, null, {\n          source: 'getConversation',\n          detail: { conversationId, projectId }\n        });\n        throw err;\n      }\n    }\n\n    async deleteProjectConversation(projectId, conversationId) {\n      try {\n        this.storage.setItem?.('selectedProjectId', projectId);\n        await this.chatManager.deleteConversation(conversationId);\n        return true;\n      } catch (err) {\n        logger.error('[ProjectManager][deleteProjectConversation]', err, { context: MODULE });\n        this._handleErr('deleteProjectConversationError', err, null, {\n          source: 'deleteProjectConversation',\n          detail: { conversationId, projectId }\n        });\n        throw err;\n      }\n    }\n\n    // getCurrentProject is now synchronous and does not block on app:ready.\n    getCurrentProject() {\n      if (this.app && typeof this.app.getCurrentProject === 'function') {\n        const proj = this.app.getCurrentProject();\n        // this.logger.debug(`[${MODULE}][getCurrentProject] Fetched from app.getCurrentProject()`, { projectId: proj?.id, context: MODULE });\n        return proj;\n      }\n      this.logger.warn(`[${MODULE}][getCurrentProject] app.getCurrentProject is not available.`, { context: MODULE });\n      return null;\n    }\n\n    // CONSOLIDATED: ProjectManager should delegate to canonical appModule state\n    // This method is for when ProjectManager ITSELF decides to change the project.\n    setCurrentProject(project) {\n      if (!project || !project.id) {\n        this.logger.warn(`[${MODULE}][setCurrentProject] Invalid project object provided.`, { project, context: MODULE });\n        return null;\n      }\n      this.logger.info(`[${MODULE}][setCurrentProject] Delegating to canonical appModule state.`, { projectId: project.id, context: MODULE });\n\n      // Store in localStorage for persistence\n      this.storage?.setItem?.('selectedProjectId', project.id);\n\n      // CONSOLIDATED: Delegate to canonical appModule state instead of maintaining local state\n      if (this.app && typeof this.app.setCurrentProject === 'function') {\n        this.logger.debug(`[${MODULE}][setCurrentProject] Calling app.setCurrentProject().`, { projectId: project.id, context: MODULE });\n        this.app.setCurrentProject(project); // This will trigger AppBus event and update appModule.state\n      } else {\n        this.logger.warn(`[${MODULE}][setCurrentProject] app.setCurrentProject is not available. Cannot set project globally.`, { context: MODULE });\n        // Fallback: emit local event if global state update fails\n        this._emit('currentProjectChanged', { project });\n      }\n      return project;\n    }\n\n    async prepareFileUploads(projectId, fileList) {\n      const validatedFiles = [];\n      const invalidFiles = [];\n      for (const file of fileList) {\n        if (file.size > 30000000) {\n          invalidFiles.push({ file, reason: 'Max size exceeded (30MB)' });\n        } else {\n          validatedFiles.push({ file });\n        }\n      }\n      return { validatedFiles, invalidFiles };\n    }\n\n    async uploadFileWithRetry(projectId, { file }, maxRetries = 3) {\n      return retryWithBackoff(\n        async () => {\n          const formData = new FormData();\n          formData.append('file', file);\n          formData.append('projectId', projectId);\n          await this._req(\n            `/api/projects/${projectId}/files/`,\n            { method: 'POST', body: formData },\n            'uploadFileWithRetry'\n          );\n          return true;\n        },\n        maxRetries,\n        this.timer\n      );\n    }\n\n    async deleteFile(projectId, fileId) {\n      if (!this.app?.state?.isAuthenticated) {\n        throw new Error('auth');\n      }\n      const url = this._CONFIG.FILE_DETAIL.replace('{id}', projectId).replace('{file_id}', fileId);\n      return this._req(url, { method: 'DELETE' }, 'deleteFile');\n    }\n\n    async _ensureKnowledgeBase(projectId) {\n      if (!projectId) return null;\n      const listUrl = this._CONFIG.KB_LIST_URL_TEMPLATE.replace('{id}', projectId);\n      try {\n        const res = await this._req(listUrl, undefined, '_ensureKnowledgeBase:list');\n        const items = Array.isArray(res?.data) ? res.data : Array.isArray(res) ? res : [];\n        const active = items.find((kb) => kb && kb.is_active !== false);\n        if (active) return active;\n      } catch (listError) {\n        logger.error('[ProjectManager][_ensureKnowledgeBase:listError]', listError, { context: MODULE });\n        this._emit('projectKnowledgeBaseWarning', {\n          projectId,\n          message: `No active knowledge base found: ${listError?.message || 'Unknown error'}`\n        });\n      }\n      try {\n        const payload = {\n          name: 'Project Knowledge Base',\n          embedding_model: 'all-MiniLM-L6-v2',\n          is_active: true\n        };\n        const createRes = await this._req(\n          listUrl,\n          { method: 'POST', body: payload },\n          '_ensureKnowledgeBase:create'\n        );\n        const kbData = createRes?.data ?? createRes;\n        this._emit('projectKnowledgeBaseCreated', {\n          projectId,\n          knowledgeBaseId: kbData?.id,\n          message: `Created new knowledge base for project ${projectId}`\n        });\n        return kbData;\n      } catch (createError) {\n        logger.error('[ProjectManager][_ensureKnowledgeBase:createError]', createError, { context: MODULE });\n        this._emit('projectKnowledgeBaseError', {\n          projectId,\n          error: createError,\n          message: `Failed to create knowledge base for project ${projectId}: ${createError?.message || 'Unknown error'\n            }`\n        });\n        throw createError;\n      }\n    }\n\n    async downloadFile(projectId, fileId) {\n      const url = this._CONFIG.FILE_DOWNLOAD.replace('{id}', projectId).replace('{file_id}', fileId);\n      /* Request the response as a Blob so the caller can trigger a browser download */\n      return this._req(\n        url,\n        { responseType: 'blob' },\n        'downloadFile'\n      );\n    }\n\n    async downloadArtifact(projectId, artifactId) {\n      const url = this._CONFIG.ARTIFACT_DOWNLOAD.replace('{id}', projectId).replace('{artifact_id}', artifactId);\n      return this._req(url, undefined, 'downloadArtifact');\n    }\n\n    async createProject(projectData) {\n      const response = await this._req(\n        this._CONFIG.PROJECTS,\n        { method: 'POST', body: projectData },\n        'createProject'\n      );\n      const project = response.data || response;\n      if (!project || !project.id) {\n        throw new Error('Invalid project response');\n      }\n      const ensureConversation = async () => {\n        const hasConvo =\n          (Array.isArray(project.conversations) && project.conversations.length > 0) ||\n          Number(project.conversation_count) > 0;\n        if (hasConvo) return project.conversations?.[0];\n        return await this.createDefaultConversation(project.id);\n      };\n      const conversation = await ensureConversation();\n      if (conversation) {\n        project.conversations = [conversation];\n        project.conversation_count = 1;\n      }\n      this._emit('projectCreated', project);\n      this._emit('projectConversationsLoaded', { id: project.id, conversations: project.conversations });\n      return project;\n    }\n\n    async createDefaultConversation(projectId) {\n      try {\n        const response = await this._req(\n          `/api/projects/${projectId}/conversations/`,\n          {\n            method: 'POST',\n            body: {\n              title: 'Default Conversation',\n              model_id:\n                this.modelConfig?.getConfig?.()?.modelName || 'claude-3-sonnet-20240229'\n            }\n          },\n          'createDefaultConversation'\n        );\n        const conversation =\n          response?.data?.conversation || response?.data || response?.conversation || response;\n        if (!conversation || !conversation.id) {\n          throw new Error('Failed to create default conversation');\n        }\n        return conversation;\n      } catch (err) {\n        logger.error('[ProjectManager][createDefaultConversation]', err, { context: MODULE });\n        return null;\n      }\n    }\n\n    async retryWithBackoff(fn, maxRetries = 3) {\n      return retryWithBackoff(fn, maxRetries, this.timer);\n    }\n\n    async initialize() {\n      this.logger.info(`[${MODULE}] Initializing...`, { context: MODULE });\n      await this.domReadinessService.dependenciesAndElements({\n        deps: ['app', 'auth', 'AppBus', 'eventHandlers'], // Ensure AppBus and eventHandlers are available for listeners\n        timeout: 30000,\n        context: `${MODULE}_dependenciesAndElements_wait1`\n      });\n      this.logger.debug(`[${MODULE}] Core dependencies (app, auth, AppBus, eventHandlers) ready.`, { context: MODULE });\n\n      const auth = this.DependencySystem.modules.get('auth');\n      const appModule = this.DependencySystem.modules.get('appModule');\n\n      /* ---------------------------------------------------------------------\n       * Guard against legacy or partially-initialised auth modules that do\n       * not expose `.isReady()`.  Per Dec 2024 guardrails, the canonical\n       * readiness signal is `auth.AuthBus` → `authReady` OR the presence of\n       * `appModule.state.isAuthenticated`.\n       * ------------------------------------------------------------------- */\n      const authIsReadyFn = typeof auth?.isReady === 'function' ? auth.isReady.bind(auth) : null;\n      const authReady =\n        (authIsReadyFn && authIsReadyFn()) ||\n        Boolean(appModule?.state?.isAuthenticated);\n\n      if (!authReady) {\n        this.logger.info(`[${MODULE}] Auth not ready yet, waiting for authReady/authStateChanged.`, { context: MODULE });\n        await new Promise((resolve) => {\n          if (auth?.AuthBus) {\n            this.listenerTracker.add(\n              auth.AuthBus,\n              'authReady',\n              () => {\n                this.logger.info(`[${MODULE}] Received authReady event.`, { context: MODULE });\n                resolve();\n              },\n              'ProjectManager_AuthReadyListener',\n              { once: true }\n            );\n            /* Fallback: also resolve when authenticated state flips true */\n            this.listenerTracker.add(\n              auth.AuthBus,\n              'authStateChanged',\n              (e) => {\n                if (e?.detail?.authenticated) resolve();\n              },\n              'ProjectManager_AuthStateChangedListener',\n              { once: true }\n            );\n          } else {\n            /* No AuthBus available – poll appModule.state as last resort */\n            const poll = setInterval(() => {\n              if (this.DependencySystem.modules.get('appModule')?.state?.isAuthenticated) {\n                clearInterval(poll);\n                resolve();\n              }\n            }, 200);\n          }\n        });\n      }\n      this.logger.info(`[${MODULE}] Auth module is ready. Current appModule auth state: ${appModule?.state?.isAuthenticated}`, { context: MODULE });\n\n      this._setupEventListeners();\n\n      // CONSOLIDATED: No need to track local _activeProjectId - canonical state is in appModule\n      const initialProject = this.app?.getCurrentProject?.();\n      if (initialProject?.id) {\n        this.logger.info(`[${MODULE}] Initial project found from canonical app state.`, { projectId: initialProject.id, context: MODULE });\n        // Optionally, load project details or list if required on init and project exists\n        // For now, deferring to explicit calls or UI-triggered loads.\n      } else {\n        this.logger.info(`[${MODULE}] No initial project found from canonical app state.`, { context: MODULE });\n      }\n\n      this.logger.info(`[${MODULE}] Initialization complete.`, { context: MODULE });\n      return true;\n    }\n\n    _setupEventListeners() {\n      this.logger.debug(`[${MODULE}] Setting up event listeners.`, { context: MODULE });\n      const appBus = this.DependencySystem.modules.get('AppBus');\n      const authBus = this.DependencySystem.modules.get('auth')?.AuthBus;\n\n      if (appBus) {\n        this.listenerTracker.add(appBus, 'currentProjectChanged', this._handleCurrentProjectChanged.bind(this), 'ProjectManager_AppBus_CurrentProjectChanged');\n        this.logger.debug(`[${MODULE}] Subscribed to AppBus \"currentProjectChanged\".`, { context: MODULE });\n      } else {\n        this.logger.warn(`[${MODULE}] AppBus not available. Cannot subscribe to \"currentProjectChanged\".`, { context: MODULE });\n      }\n\n      if (authBus) {\n        this.listenerTracker.add(authBus, 'authStateChanged', this._handleAuthStateChanged.bind(this), 'ProjectManager_AuthBus_AuthStateChanged');\n        this.logger.debug(`[${MODULE}] Subscribed to AuthBus \"authStateChanged\".`, { context: MODULE });\n      } else {\n        this.logger.warn(`[${MODULE}] AuthBus not available. Cannot subscribe to \"authStateChanged\".`, { context: MODULE });\n      }\n    }\n\n    _handleCurrentProjectChanged(event) {\n      const newProject = event?.detail?.project;\n      const oldProject = event?.detail?.previousProject;\n      this.logger.info(`[${MODULE}] Received \"currentProjectChanged\" event via AppBus.`, {\n        newProjectId: newProject?.id,\n        oldProjectId: oldProject?.id,\n        context: MODULE\n      });\n      // CONSOLIDATED: No need to track local _activeProjectId - canonical state is in appModule\n      if (newProject?.id) {\n        this.logger.debug(`[${MODULE}] Project changed to ${newProject.id} via canonical state.`, { context: MODULE });\n        // Clear any data specific to the old project, IF projectManager caches such details.\n        // For example, if this.projects was a list of files for ONLY the current project, clear it.\n        // Currently, loadProjects fetches all projects, so it's less of an issue for the main list.\n        // However, if specific details like current project's files, stats etc., were cached directly\n        // on `this`, they would need clearing here.\n        // Example: if (this.detailedFilesCache?.projectId !== newProject.id) this.detailedFilesCache = null;\n\n        // Optionally, trigger a reload of project-specific data if this component is responsible\n        // for displaying details of the active project.\n        // e.g., if it maintained a this.detailedProjectObject, it might call this.loadProjectDetails(newProject.id);\n        // For now, this manager primarily provides methods; UI components would drive reloads.\n\n      } else {\n        this.logger.info(`[${MODULE}] Current project cleared (null) via canonical state.`, { context: MODULE });\n        // Clear project-specific cached data\n      }\n    }\n\n    _handleAuthStateChanged(event) {\n      const isAuthenticated = event?.detail?.authenticated;\n      this.logger.info(`[${MODULE}] Received \"authStateChanged\" event. Authenticated: ${isAuthenticated}`, { detail: event?.detail, context: MODULE });\n      if (!isAuthenticated) {\n        this.logger.info(`[${MODULE}] User is now unauthenticated. Clearing cached projects list.`, { context: MODULE });\n        this.projects = []; // Clear cached list of all projects\n        // CONSOLIDATED: No need to clear local _activeProjectId - canonical state is in appModule\n        // Emit an event that project data has been cleared due to auth change, if other parts rely on this.\n        this._emit('projectDataClearedDueToAuth', { reason: 'User unauthenticated' });\n      } else {\n        // User is now authenticated. We might want to trigger a reload of projects.\n        // However, UI components or app.js init flow typically handle initial loads post-auth.\n        // Only trigger if projectManager is expected to proactively refresh its list on login.\n        this.logger.debug(`[${MODULE}] User is now authenticated. Project list can be reloaded if necessary.`, { context: MODULE });\n        // Example: this.loadProjects(); // If proactive reload is desired.\n      }\n    }\n\n    destroy() {\n      this.logger.info(`[${MODULE}] Destroying and cleaning up listeners.`, { context: MODULE });\n      this.listenerTracker?.remove?.(); // Cleans up listeners tracked via eventHandlers\n      if (this._loadProjectsDebounceTimer) {\n        clearTimeout(this._loadProjectsDebounceTimer);\n      }\n    }\n  }\n\n  // ----------------------------------------------------------------------------\n  // 4) Instantiate manager and expose cleanup in the returned object\n  // ----------------------------------------------------------------------------\n  const fullDeps = {\n    DependencySystem,\n    domReadinessService,\n    logger,\n    timer,\n    ...otherDeps\n  };\n  const instance = new ProjectManager(fullDeps);\n  DependencySystem.register?.('projectManager', instance);\n\n  function cleanup() {\n    // Canonical event listener cleanup per guardrails\n    // Centralized cleanup for event listeners via eventHandlers module per guardrails\n    const eventHandlers = DependencySystem.modules.get('eventHandlers');\n    if (eventHandlers?.cleanupListeners) {\n      eventHandlers.cleanupListeners({ context: MODULE });\n    }\n    instance.destroy();\n  }\n\n  return {\n    instance,\n    cleanup,\n    normalizeProjectResponse,\n    extractResourceList,\n    retryWithBackoff\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 50840,
          "_transferSize": 52029,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.362Z",
        "time": 91.33000001020264,
        "timings": {
          "blocked": 47.90100000694208,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08299999999999841,
          "wait": 42.58999999471009,
          "receive": 0.7560000085504726,
          "_blocked_queueing": 2.8790000069420785,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126344",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 25
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/apiEndpoints.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1473,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "2861"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"2859595b4b7da93ac0fb552183078f6a\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 28 May 2025 02:35:56 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2861,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * apiEndpoints.js – Provides canonical API endpoint resolution via guarded factory.\n */\n\nexport function createApiEndpoints({ logger, DependencySystem, config } = {}) {\n  // Dependency validation per code guardrails\n  if (!logger) throw new Error('[apiEndpoints] Missing logger dependency');\n  if (typeof logger.error !== \"function\" || typeof logger.info !== \"function\")\n    throw new Error('[apiEndpoints] logger must provide .error and .info methods');\n\n  // Defaults\n  // FALLBACK REMOVED: If no config is provided, throw immediately.\n  if (!config || !config.API_ENDPOINTS) {\n    throw new Error('[apiEndpoints] No API_ENDPOINTS configuration supplied—fallbacks are forbidden under strict configuration.');\n  }\n  const DEFAULT_API_ENDPOINTS = {};\n\n  const REQUIRED_ENDPOINT_KEYS = [\n    'AUTH_CSRF', 'AUTH_LOGIN', 'AUTH_LOGOUT', 'AUTH_REGISTER', 'AUTH_VERIFY', 'AUTH_REFRESH'\n  ];\n\n  // Allow passing custom overrides via config\n  const userCfg = config || {};\n  let endpoints = { ...config.API_ENDPOINTS };\n\n  // Validation\n  const missingKeys = [];\n  const emptyKeys = [];\n  for (const key of REQUIRED_ENDPOINT_KEYS) {\n    if (!(key in endpoints)) {\n      missingKeys.push(key);\n    } else if (!endpoints[key] || typeof endpoints[key] !== 'string' || endpoints[key].trim() === '') {\n      emptyKeys.push(key);\n    }\n  }\n\n  if (missingKeys.length > 0 || emptyKeys.length > 0) {\n    const errors = [];\n    if (missingKeys.length > 0)\n      errors.push(`Missing required endpoint keys: ${missingKeys.join(', ')}`);\n    if (emptyKeys.length > 0)\n      errors.push(`Empty required endpoint keys: ${emptyKeys.join(', ')}`);\n\n    logger.error('[apiEndpoints] Configuration validation failed', {\n      context : 'apiEndpoints:resolveApiEndpoints',\n      errors,\n      provided: userCfg?.API_ENDPOINTS,\n      merged: endpoints\n    });\n\n    throw new Error(`API endpoint configuration invalid: ${errors.join('; ')}`);\n  }\n\n  logger.info('[apiEndpoints] Successfully resolved and validated endpoints', {\n    context : 'apiEndpoints:resolveApiEndpoints',\n    overrides: Object.keys(userCfg?.API_ENDPOINTS ?? {}),\n    total: Object.keys(endpoints).length,\n    required: REQUIRED_ENDPOINT_KEYS.length\n  });\n\n  // Resolve endpoints logic (legacy API if callers expect)\n  function resolveApiEndpoints(cfg = {}) {\n    // Accepts partial config for overrides if needed outside the factory\n    const result = { ...endpoints };\n    if (cfg && cfg.API_ENDPOINTS)\n      Object.assign(result, cfg.API_ENDPOINTS);\n    // NOTE: callers should rerun validation if using this method externally\n    return result;\n  }\n\n  // Cleanup API\n  function cleanup() {\n    // Nothing to clean up in stateless endpoints, present for API uniformity\n  }\n\n  // Return the canonical endpoints and API as factory output\n  return {\n    endpoints,\n    resolveApiEndpoints,\n    cleanup\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 2861,
          "_transferSize": 4049,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.362Z",
        "time": 122.09200000506826,
        "timings": {
          "blocked": 80.9959999988377,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.10600000000000875,
          "wait": 40.235999998357144,
          "receive": 0.754000007873401,
          "_blocked_queueing": 3.0269999988377094,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126320",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 26
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1470,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "13214"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"76757297e00a7e9aa8c159ea1879644e\""
            },
            {
              "name": "last-modified",
              "value": "Tue, 03 Jun 2025 21:37:14 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13214,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * apiClient.js — Handles API requests with deduplication, timeouts, CSRF, and JSON handling.\n *\n * Usage:\n *   import { createApiClient } from './apiClient.js';\n *   const apiClient = createApiClient({ ... });\n */\n\n/**\n * createApiClient\n * @param {Object} opts\n * @param {Object} opts.APP_CONFIG\n * @param {Object} opts.globalUtils\n * @param {Object} opts.getAuthModule\n * @param {Object} opts.browserService\n * @returns {Function} apiRequest(url, opts, skipCache)\n */\nexport function createApiClient({\n  APP_CONFIG,\n  globalUtils,\n  getAuthModule,\n  browserService,\n  eventHandlers,\n  logger\n}) {\n  // Dependency validation (MANDATORY for factories)\n  if (!APP_CONFIG) throw new Error('[apiClient] Missing APP_CONFIG dependency');\n  if (!globalUtils) throw new Error('[apiClient] Missing globalUtils dependency');\n  if (!getAuthModule) throw new Error('[apiClient] Missing getAuthModule dependency');\n  if (!browserService) throw new Error('[apiClient] Missing browserService dependency');\n  if (!eventHandlers) throw new Error('[apiClient] Missing eventHandlers dependency');\n  if (typeof eventHandlers.cleanupListeners !== \"function\") throw new Error('[apiClient] eventHandlers.cleanupListeners is required');\n  if (!logger) throw new Error('[apiClient] Missing logger dependency');\n\n  const pending = new Map();\n  const BASE_URL = APP_CONFIG?.BASE_API_URL || '';\n\n  // Define the main request function\n  const mainApiRequest = async function apiRequest(url, opts = {}, skipCache = false) {\n    const { returnFullResponse = false, ...restOpts } = opts;\n    const method = (restOpts.method || \"GET\").toUpperCase();\n\n    if (!skipCache && method === \"GET\" && globalUtils.shouldSkipDedup(url)) {\n      skipCache = true;\n    }\n\n    const auth = getAuthModule?.();\n    let fullUrl = globalUtils.isAbsoluteUrl(url) ? url : `${BASE_URL}${url}`;\n\n    // Handle restOpts.params for GET requests\n    if (method === \"GET\" && restOpts.params && typeof restOpts.params === 'object') {\n      const queryParams = new browserService.URLSearchParams(restOpts.params)\n        .toString();\n      if (queryParams) {\n        fullUrl += (fullUrl.includes('?') ? '&' : '?') + queryParams;\n      }\n    }\n\n    let normUrl;\n    try {\n      normUrl = globalUtils.normaliseUrl(fullUrl);\n    } catch (err) {\n      logger.error('[apiClient] URL normalization failed', err, { context: 'apiClient:normaliseUrl', url: fullUrl });\n      normUrl = fullUrl; // Fallback to fullUrl if normalization fails\n    }\n\n    const bodyKey =\n      restOpts.body instanceof FormData\n        ? `[form-data-${Date.now()}]`\n        : globalUtils.stableStringify(restOpts.body || {});\n    const key = `${method}-${normUrl}-${bodyKey}`;\n\n    if (!skipCache && method === \"GET\" && pending.has(key)) {\n      return pending.get(key);\n    }\n\n    restOpts.headers = { Accept: \"application/json\", ...(restOpts.headers || {}) };\n    // Always send cookies unless caller over-rides\n    if (!('credentials' in restOpts)) restOpts.credentials = 'include';\n\n    // Inject Authorization header if auth module provides it and caller hasn't set it explicitly\n    if (auth) {\n      try {\n        if (typeof auth.getAuthHeader === 'function') {\n          const authHeaderObj = auth.getAuthHeader();\n          if (\n            authHeaderObj &&\n            authHeaderObj.Authorization &&\n            !restOpts.headers[\"Authorization\"]\n          ) {\n            restOpts.headers[\"Authorization\"] = authHeaderObj.Authorization;\n          }\n        } else if (typeof auth.getAccessToken === 'function') {\n          const token = auth.getAccessToken();\n          if (token && !restOpts.headers[\"Authorization\"]) {\n            restOpts.headers[\"Authorization\"] = `Bearer ${token}`;\n          }\n        }\n        // Fallback: If user appears authenticated but still no Authorization header, check storageService DI\n        if (!restOpts.headers[\"Authorization\"] && ((typeof auth.hasAuthCookies === \"function\" && auth.hasAuthCookies()) || (DependencySystem?.modules?.get('appModule')?.state?.isAuthenticated))) {\n          const storageService = DependencySystem?.modules?.get?.('storageService');\n          const storageTok = storageService?.getItem?.('access_token');\n          if (storageTok) {\n            restOpts.headers[\"Authorization\"] = `Bearer ${storageTok}`;\n          }\n        }\n      } catch (err) {\n        logger?.warn?.('[apiClient] Failed to inject Authorization header', err, {\n          context: 'apiClient:authHeader'\n        });\n      }\n    }\n\n    // Diagnostic: warn only if the header is missing *and* no auth cookies exist\n    // Suppress warning for CSRF and login/verify endpoints (expected to be unauthenticated)\n    const isCsrfOrAuthInit =\n      /\\/api\\/auth\\/csrf\\b/.test(normUrl) ||\n      /\\/api\\/auth\\/(login|register|verify)\\b/.test(normUrl);\n    if (\n      !restOpts.headers[\"Authorization\"] &&\n      !(auth?.hasAuthCookies?.() === true)\n    ) {\n      if (isCsrfOrAuthInit) {\n        logger.info(\n          '[apiClient] Authorization header/cookie missing (this is normal for CSRF/login/register/verify endpoints)',\n          { url: normUrl, context: 'apiClient:authHeader:missing:init' }\n        );\n      } else {\n        logger.warn(\n          '[apiClient] Authorization header missing and no auth cookies present',\n          { url: normUrl, context: 'apiClient:authHeader:missing:noCookie' }\n        );\n      }\n    }\n    // CSRF token injection\n    if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && auth?.getCSRFToken) {\n      // Set log delivery context if this is a request to /api/logs\n      const isLogDelivery = /\\/api\\/logs\\b/.test(normUrl);\n      if (isLogDelivery && auth.setLogDeliveryContext) {\n        auth.setLogDeliveryContext(true);\n      }\n\n      const csrf = auth.getCSRFToken();\n\n      if (isLogDelivery && auth.setLogDeliveryContext) {\n        auth.setLogDeliveryContext(false);\n      }\n\n      if (csrf) {\n        restOpts.headers[\"X-CSRF-Token\"] = csrf;\n      } else if (!isLogDelivery && auth?.logger && typeof auth.logger.warn === \"function\") {\n        auth.logger.warn(\"[apiClient] Missing CSRF token for \" + normUrl, { context: \"apiClient:csrf\" });\n      }\n    }\n\n    // JSON stringify body if plain object (not FormData)\n    if (restOpts.body && typeof restOpts.body === \"object\" && !(restOpts.body instanceof FormData)) {\n      restOpts.headers[\"Content-Type\"] ??= \"application/json;charset=UTF-8\";\n      if (restOpts.headers[\"Content-Type\"].includes(\"application/json\")) {\n        try {\n          restOpts.body = JSON.stringify(restOpts.body);\n        } catch (err) {\n          logger.error('[apiClient] Failed to serialize request body.', err, { context: 'apiClient:jsonStringify', url: normUrl });\n          return Promise.reject(new Error(\"Failed to serialize request body.\"));\n        }\n      }\n    }\n\n    // Timeout via AbortController (browserService/DI if available)\n    const AbortControllerImpl =\n      browserService.getWindow()?.AbortController\n      ?? (()=>{ throw new Error('[apiClient] AbortController unavailable via DI'); })();\n    const abortCtl = new AbortControllerImpl();\n    restOpts.signal = abortCtl.signal;\n    const apiTimeout = APP_CONFIG?.TIMEOUTS?.API_REQUEST || 15000;\n    const timer = browserService.setTimeout(\n      () => abortCtl.abort(new Error(`API Timeout (${apiTimeout}ms)`)),\n      apiTimeout,\n    );\n\n    const p = (async () => {\n      let resp;\n      let payload = null;\n      let contentType = '';\n      try {\n        if (!browserService?.fetch) throw new Error('[apiClient] browserService.fetch unavailable');\n        resp = await browserService.fetch(normUrl, restOpts);\n\n        /* --------------------------------------------------------\n         *  Binary / file download handling\n         * --------------------------------------------------------\n         *  A caller can force binary mode by passing\n         *     { responseType: 'blob' }   or  'arrayBuffer'\n         *  OR the code auto-detects when the server sets\n         *  `Content-Disposition: attachment`.\n         * ------------------------------------------------------ */\n        const wantsBlob =\n          restOpts.responseType === 'blob' ||\n          resp.headers.get('content-disposition')?.includes('attachment');\n\n        const wantsArrayBuffer = restOpts.responseType === 'arrayBuffer';\n\n        if (wantsBlob || wantsArrayBuffer) {\n          const data = wantsArrayBuffer ? await resp.arrayBuffer() : await resp.blob();\n          if (!resp.ok) {\n            const err = new Error(`HTTP ${resp.status}`);\n            err.status = resp.status;\n            err.data = data;\n            throw err;\n          }\n          return data;\n        }\n\n        // ---------- NEW unified response handling ----------\n        contentType = resp.headers.get('content-type') || '';\n\n        if (resp.status !== 204) { // 204 = No-Content\n          if (contentType.includes('application/json')) {\n            try { payload = await resp.json(); }\n            catch (err) {\n              logger.error('[apiClient] JSON parse error in API response', err, { context: 'apiClient:jsonParse', url: normUrl, status: resp.status });\n              payload = null;\n            }\n          } else {\n            try { payload = await resp.text(); }\n            catch (err) {\n              logger.error('[apiClient] Text parse error in API response', err, { context: 'apiClient:textParse', url: normUrl, status: resp.status });\n              payload = null;\n            }\n          }\n        }\n\n        if (resp.ok) { // 2xx\n          // --------------------------------------------------------------\n          // Enforce JSON responses for all `/api/` endpoints unless the\n          // caller explicitly opts-in via `opts.allowNonJsonResponse`.\n          // This prevents HTML redirect pages (added by browsers or\n          // extensions) from being handed to business-logic code that expects\n          // JSON and subsequently fails deep down the stack.\n          // --------------------------------------------------------------\n\n          /* Hardened: also match URLs where “/api/” appears after a leading\n             run of “?” characters or additional query params (e.g. “??project=…”). */\n          const expectsJson =\n            /([?&].*?)?\\/api\\//.test(normUrl) &&\n            !restOpts.allowNonJsonResponse;\n\n          if (expectsJson && !contentType.includes('application/json')) {\n            const err = new Error('Non-JSON payload received for API endpoint');\n            err.status = resp.status;\n            err.data = payload;\n            logger.error('[apiClient] Expected application/json but received', err, {\n              context: 'apiClient:unexpectedContentType',\n              url: normUrl,\n              contentType,\n            });\n            throw err;\n          }\n\n          if (returnFullResponse) {\n            return {\n              data: payload,\n              status: resp.status,\n              headers: Object.fromEntries(resp.headers.entries()),\n            };\n          }\n          return payload;\n        }\n\n        // ----- non-OK: throw rich error object -----\n        // Preserve backend-provided details so callers can display them\n        const humanMsg =\n          (payload?.detail) ? String(payload.detail) :\n          (typeof payload === 'string') ? payload :\n          (payload?.message) ? String(payload.message) :\n          `HTTP ${resp.status}`;\n\n        const err = new Error(humanMsg);\n        err.status = resp.status;\n        err.data = payload;\n\n        // Prevent recursive logger/apiClient loop for logger delivery\n        if (!/\\/api\\/logs\\b/.test(normUrl)) {\n          logger.error('[apiClient] API response not OK', err, { context: 'apiClient:apiError', url: normUrl, status: resp.status, payload });\n        }\n\n        throw err;\n      } catch (outerErr) {\n        // Prevent recursive logger/apiClient loop for logger delivery\n        if (!/\\/api\\/logs\\b/.test(normUrl)) {\n          logger.error('[apiClient] Unexpected API error', outerErr, { context: 'apiClient:outerCatch', url: normUrl, method, opts: restOpts });\n        } else {\n          // Only output to console, not logger, for log delivery failures\n          (browserService?.getWindow?.()?.console ?? console).error('[apiClient] Failed to deliver log to /api/logs', outerErr);\n        }\n        throw outerErr;\n      } finally {\n        browserService.clearTimeout(timer);\n        if (method === \"GET\") pending.delete(key);\n      }\n    })();\n\n    if (!skipCache && method === \"GET\") pending.set(key, p);\n    return p;\n  };\n\n  // Convenience verbs required by other callers\n  mainApiRequest.post = (url, body = {}, opts = {}, skip = true) =>\n    mainApiRequest(url, { ...opts, method: 'POST', body }, skip);\n  mainApiRequest.get = (url, params = {}, opts = {}, skip = false) =>\n    mainApiRequest(url, { ...opts, method: 'GET',  params }, skip);\n\n  mainApiRequest.fetch = mainApiRequest; // Expose the main function as .fetch\n\n  // Expose cleanup\n  const cleanup = () => {\n    pending.clear();\n    eventHandlers.cleanupListeners({ context: \"apiClient\" });\n  };\n\n  return {\n    fetch: mainApiRequest,\n    get: mainApiRequest.get,\n    post: mainApiRequest.post,\n    cleanup\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 13214,
          "_transferSize": 14403,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.362Z",
        "time": 122.19599999662023,
        "timings": {
          "blocked": 81.05400000155625,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06799999999999784,
          "wait": 40.44899999448191,
          "receive": 0.6250000005820766,
          "_blocked_queueing": 3.12100000155624,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126316",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 27
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/htmlTemplateLoader.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1479,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "13815"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"7f582c011330edeab3fe871d0b2a9bfe\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 30 May 2025 20:50:24 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13815,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * Creates an HTML template loader with injected dependencies for DOM manipulation, HTTP requests, and event handling.\n *\n * Returns an object with two methods:\n * - `loadTemplate`: Loads an external HTML template into a specified DOM container, optionally sanitizes it, and emits a custom event upon completion. If the template URL contains `'modals.html'`, also emits a `'modalsLoaded'` event with the result.\n * - `loadAppTemplates`: Sequentially loads multiple HTML templates based on an array of configuration objects, returning an array of results for each load attempt.\n *\n * @returns {{ loadTemplate: Function, loadAppTemplates: Function }} An object with methods to load single or multiple HTML templates.\n *\n * @throws {Error} If required dependencies are missing or invalid.\n */\nexport function createHtmlTemplateLoader({\n  DependencySystem,\n  domAPI,\n  sanitizer = null,\n  eventHandlers,\n  apiClient,\n  timerAPI,\n  domReadinessService,  // NEW: For replay-able events\n  logger = DependencySystem?.modules?.get?.('logger') || { warn () {} }\n} = {}) {\n  // Guardrail checks:\n  if (!DependencySystem) throw new Error('DependencySystem required by HtmlTemplateLoader');\n  if (!domAPI) throw new Error('domAPI required by HtmlTemplateLoader');\n  if (!eventHandlers || typeof eventHandlers.createCustomEvent !== 'function')\n    throw new Error('[HtmlTemplateLoader] eventHandlers.createCustomEvent required');\n  if (!apiClient || typeof apiClient.fetch !== 'function') {\n    throw new Error('[HtmlTemplateLoader] apiClient with a .fetch() method is required');\n  }\n  if (!timerAPI || typeof timerAPI.setTimeout !== 'function' || typeof timerAPI.clearTimeout !== 'function') {\n    throw new Error('[HtmlTemplateLoader] timerAPI with setTimeout/clearTimeout is required');\n  }\n  if (!domReadinessService?.emitReplayable)\n    throw new Error('[HtmlTemplateLoader] domReadinessService with replay capability is mandatory');\n\n  // ──────────────────────────────────────────────────────────────\n  // Native fetch shortcut (bypasses apiClient pre-processing).\n  // Will be used for \"pure\" static assets such as *.html, *.css, …\n  // It is derived from domAPI DI to remain test/environment safe.\n  // ──────────────────────────────────────────────────────────────\n  const _nativeFetch =\n    domAPI?.getWindow?.()?.fetch?.bind?.(domAPI.getWindow()) || null;\n\n  /**\n   * Helper function to emit events using replay capability if available\n   */\n  function emitEvent(eventName, detail) {\n    if (domReadinessService?.emitReplayable) {\n      logger.info?.(`[HtmlTemplateLoader] Emitting replayable event: ${eventName}`, { eventName, detail });\n      domReadinessService.emitReplayable(eventName, detail);\n    } else {\n      logger.info?.(`[HtmlTemplateLoader] Emitting standard event: ${eventName}`, { eventName, detail });\n      const evt = eventHandlers.createCustomEvent(eventName, { detail });\n      domAPI.dispatchEvent(domAPI.getDocument(), evt);\n    }\n  }\n\n  /**\n   * Loads an external HTML template into a specified DOM container and emits a custom event upon completion.\n   *\n   * Fetches the template from the given URL, injects its HTML into the target container, and optionally sanitizes the content if a sanitizer is available. Emits the specified event with success or failure details after the operation. If the URL contains \"modals.html\", also emits a \"modalsLoaded\" event with the same outcome.\n   *\n   * @param {Object} options - Template loading options.\n   * @param {string} options.url - The URL of the HTML template to load.\n   * @param {string} options.containerSelector - CSS selector for the DOM container to inject the template into.\n   * @param {string} [options.eventName='htmlTemplateLoaded'] - Name of the custom event to emit after loading.\n   * @param {number} [options.timeout=15000] - Timeout in milliseconds for the fetch request.\n   * @returns {Promise<boolean>} Resolves to true if the template was loaded and injected successfully; false otherwise.\n   *\n   * @remark\n   * If the container is not found or the fetch fails, the event is still dispatched with failure details. For templates with URLs containing \"modals.html\", a \"modalsLoaded\" event is always emitted in addition to the main event.\n   */\n  async function loadTemplate({\n    url,\n    containerSelector,\n    eventName = 'htmlTemplateLoaded',\n    timeout = 10_000 // default to 10s\n  } = {}) {\n    const isModalsHtml = url && url.includes('modals.html');\n    logger.info?.(`[HtmlTemplateLoader] Attempting to load template: ${url} into ${containerSelector}`, { url, containerSelector, eventName, isModalsHtml });\n\n    const container = domAPI.querySelector(containerSelector);\n    if (!container) {\n      logger.warn(`[HtmlTemplateLoader] containerSelector \"${containerSelector}\" not found in DOM. Template ${url} will not be injected.`,\n        { context: 'HtmlTemplateLoader:containerMissing', url, containerSelector });\n      // Surface template error visibly in document body\n      try {\n        const errDiv = domAPI.createElement('div');\n        errDiv.className = 'template-error';\n        errDiv.setAttribute('style', 'background:#efe5e5;color:#a00;font-size:1.2em;padding:1.5em;margin:2em;border:2px solid #a00;z-index:3000;');\n        domAPI.setInnerHTML(errDiv, `[HtmlTemplateLoader] ERROR: Could not find container <code>${containerSelector}</code> for template: <code>${url}</code>.<br>Check base.html or container injection order.`);\n        domAPI.appendChild(domAPI.getBody(), errDiv);\n      } catch (e) {\n        logger.error('[HtmlTemplateLoader] Failed to inject error div', e,\n          { context: 'HtmlTemplateLoader:errorDiv', url, containerSelector });\n      }\n      // Dispatch event even if container is not found, so listeners are unblocked\n      emitEvent(eventName, { success: false, error: `Container ${containerSelector} not found` });\n\n      if (isModalsHtml) {\n        emitEvent('modalsLoaded', { success: false, error: `Container ${containerSelector} not found for modals.html` });\n      }\n      return false;\n    }\n\n    // Early exit: template already injected – we mark this via a data attribute\n    if (container.dataset?.htmlLoaded === 'true') {\n      // Robustness: Check that DOM actually contains the expected selector for project_list.html\n      let templateValid = true;\n      if (url.endsWith('project_list.html') && !domAPI.querySelector('#projectCardsPanel', container)) {\n        logger.warn?.(`[HtmlTemplateLoader] data-html-loaded is set but #projectCardsPanel missing — resetting loader state for ${url}`,\n          { context: 'HtmlTemplateLoader:projectListPanelMissing', url, containerSelector });\n        templateValid = false;\n        // Reset the state\n        container.removeAttribute('data-html-loaded');\n        domAPI.setInnerHTML(container, ''); // clear out possibly corrupt/partial markup\n      }\n      if (templateValid) {\n        logger.info?.(`[HtmlTemplateLoader] Template already present in ${containerSelector}, skipping fetch for ${url}`, { url, containerSelector });\n        emitEvent(eventName, { success: true, skipped: true, reason: 'Template already present', url });\n        if (isModalsHtml) {\n          emitEvent('modalsLoaded', { success: true, skipped: true, reason: 'Template already present', url });\n        }\n        return true;\n      }\n      // Otherwise, proceed to fetch as normal below.\n    }\n\n    if (container.dataset.htmlLoading === 'true') {\n      logger.info?.('[HtmlTemplateLoader] Another fetch in-flight – waiting…', { url });\n      await domReadinessService.waitForEvent(eventName, { timeout });\n      return container.dataset.htmlLoaded === 'true';\n    }\n    container.dataset.htmlLoading = 'true';\n\n    // Create a manual AbortController for this request\n    const controller = new AbortController();\n    // Use injected timerAPI instead of window\n    const tm = timerAPI.setTimeout(() => {\n      logger.warn(`[HtmlTemplateLoader] Timeout loading template: ${url}`,\n        { url, timeout, context: 'HtmlTemplateLoader:timeout' });\n      controller.abort();\n    }, timeout);\n\n    let success = false;\n    let errorInfo = null;\n    try {\n      logger.info?.(`[HtmlTemplateLoader] Fetching template: ${url}`, { url });\n\n      // Decide which fetch to use:\n      // • /static/… or any *.html → use browser/native fetch directly\n      // • otherwise → try apiClient.fetch first, then fallback\n      const looksStatic = url.startsWith('/static/') || url.endsWith('.html');\n      const primaryFetch = looksStatic && _nativeFetch ? _nativeFetch : apiClient.fetch;\n\n      let resp;\n      try {\n        resp = await primaryFetch(url, {\n          method: 'GET',\n          cache: 'no-store',\n          signal: controller.signal\n        });\n      } catch (primaryErr) {\n        // Fallback: if the first try used apiClient and we have native fetch\n        if (primaryFetch !== _nativeFetch && _nativeFetch) {\n          logger.error('[HtmlTemplateLoader] Primary fetch failed', primaryErr,\n            { context: 'HtmlTemplateLoader:primaryFetchFailed', url });\n          logger.warn('[HtmlTemplateLoader] Primary fetch failed, retrying with native fetch',\n            { url, context: 'HtmlTemplateLoader:primaryFetchRetry' });\n          resp = await _nativeFetch(url, {\n            method: 'GET',\n            cache: 'no-store',\n            signal: controller.signal\n          });\n        } else {\n          throw primaryErr;\n        }\n      }\n\n      if (!resp.ok) {\n        errorInfo = `HTTP ${resp.status}`;\n        throw new Error(errorInfo);\n      }\n\n      const html = await resp.text();\n      logger.info?.(`[HtmlTemplateLoader] Successfully fetched template: ${url}, preparing to inject. Length: ${html.length}`, { url });\n\n      // ── Injection strategy ───────────────────────────────────────────────\n      // Replacing innerHTML on <body> wipes out existing DOM (e.g. the\n      // #projectDetailsView / #projectListView containers already injected),\n      // causing domReadinessService time-outs.  If the target container *is*\n      // <body>, append the fetched markup instead of replacing it.\n      //\n      if (domAPI.isSameNode(container, domAPI.getBody())) {\n        // Build the markup in a temporary wrapper to avoid double sanitisation\n        const tempWrapper = domAPI.createElement('div');\n        domAPI.setInnerHTML(tempWrapper, html);\n        Array.from(tempWrapper.childNodes).forEach((node) =>\n          domAPI.appendChild(container, node)\n        );\n      } else {\n        // Regular containers – safe to replace their content\n        domAPI.setInnerHTML(container, html);\n      }\n      // Mark as loaded so subsequent loadTemplate calls can short-circuit safely\n      container.setAttribute('data-html-loaded', 'true');\n      logger.info?.(\n        `[HtmlTemplateLoader] Successfully injected template: ${url} into ${containerSelector}`,\n        { url }\n      );\n      success = true;\n\n    } catch (err) {\n      errorInfo = errorInfo || err.message;\n      // Log the actual error for debugging\n      logger.error(`[HtmlTemplateLoader] Failed to load template from ${url}`, err, {\n        context: 'HtmlTemplateLoader:loadTemplate',\n        url,\n        containerSelector,\n        eventName\n      });\n      success = false;\n    } finally {\n      delete container.dataset.htmlLoading;\n      timerAPI.clearTimeout(tm);\n\n      // Emit main event using replay capability\n      emitEvent(eventName, { success, error: errorInfo, url });\n\n      // Special handling for modals.html - always emit modalsLoaded event\n      if (isModalsHtml) {\n        emitEvent('modalsLoaded', { success, error: errorInfo, url, synthetic: false });\n      }\n    }\n\n    return success;\n  }\n\n  /**\n   * Orchestrates the loading of multiple HTML templates in sequence.\n   * Each template has its own timeout, container, etc.\n   */\n  async function loadAppTemplates(templateConfigs = []) {\n    if (!Array.isArray(templateConfigs) || templateConfigs.length === 0) {\n      return [];\n    }\n\n    const results = [];\n\n    for (const config of templateConfigs) {\n      if (!config.url || !config.containerSelector) {\n        results.push({\n          url: config.url,\n          success: false,\n          error: 'Invalid configuration'\n        });\n        continue;\n      }\n\n      const eventName = config.eventName ||\n        `templateLoaded:${config.url.split('/').pop()}`;\n      const tmo = config.timeout || 15000;\n\n      try {\n        const success = await loadTemplate({\n          url: config.url,\n          containerSelector: config.containerSelector,\n          eventName,\n          timeout: tmo\n        });\n\n        results.push({\n          url: config.url,\n          success,\n          eventNameEmitted: eventName\n        });\n\n      } catch (err) {\n        logger.error('[HtmlTemplateLoader] loadAppTemplates failed', err,\n          { context: 'HtmlTemplateLoader:loadAppTemplates', url: config.url });\n        results.push({\n          url: config.url,\n          success: false,\n          error: err.message,\n          eventNameEmitted: eventName\n        });\n        // Dispatch event in case something is awaiting\n        emitEvent(eventName, { success: false, error: err.message });\n      }\n    }\n\n    return results;\n  }\n\n  // Guardrails: expose cleanup in factory return\n  function cleanup() {\n    // No-op, present for API uniformity. If listeners or timeouts were set up by this module, clear here.\n  }\n\n  return { loadTemplate, loadAppTemplates, cleanup };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 13815,
          "_transferSize": 15004,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.362Z",
        "time": 127.21099999907892,
        "timings": {
          "blocked": 80.98400000443124,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06199999999999761,
          "wait": 45.5269999969406,
          "receive": 0.6379999977070838,
          "_blocked_queueing": 3.108000004431233,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126339",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 28
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/modalConstants.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1469,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "1185"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"986e10a2259a4d6304d0ca530c4ae497\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 22:48:15 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1185,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * modalConstants.js\n * Centralized modal mapping contract for the application.\n *\n * This file defines the single source of truth for all modal logical keys and their corresponding DOM element IDs.\n *\n * When adding or modifying a modal, update this mapping and ensure the HTML template matches.\n *\n * Usage:\n *   import { MODAL_MAPPINGS } from './modalConstants.js';\n *   // or via DependencySystem: DependencySystem.modules.get('modalMapping')\n */\n\nexport function createModalConstants() {\n  const MODAL_MAPPINGS = {           // moved inside: no top-level state\n    project: 'projectModal',\n    login: 'loginModal',\n    // Alias \"register\" maps to the same combined login/register dialog\n    register: 'loginModal',\n    delete: 'deleteConfirmModal',\n    confirm: 'confirmActionModal',\n    error: 'errorModal',\n    knowledge: 'knowledgeBaseSettingsModal',\n    knowledgeResult: 'knowledgeResultModal',\n    instructions: 'instructionsModal',\n    contentView: 'contentViewModal',\n    tokenStats: 'tokenStatsModal'\n  };\n  return { MODAL_MAPPINGS, cleanup() {} };\n}\n\nexport default createModalConstants;\nexport const MODAL_MAPPINGS = createModalConstants().MODAL_MAPPINGS; // compat\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 1185,
          "_transferSize": 2373,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.363Z",
        "time": 159.46599999733735,
        "timings": {
          "blocked": 90.79400000764988,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.09099999999999397,
          "wait": 68.05599999385514,
          "receive": 0.5249999958323315,
          "_blocked_queueing": 3.1390000076498836,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126344",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 29
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/FileUploadComponent.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1474,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "13548"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"f74c1f1e94840e87ba03bc2e8dca330f\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 09:16:31 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13548,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module FileUploadComponent\n * @description Handles file upload UI and logic for projects using strict Dependency Injection.\n * Manages drag-and-drop, file selection, validation, and upload progress display.\n *\n * @param {Object} deps - Dependency Injection options.\n * @param {Object} deps.app - Required. App core utilities (validateUUID).\n * @param {Object} deps.eventHandlers - Required. Event listener management (trackListener).\n * @param {Object} deps.projectManager - Required. Handles the actual file upload API calls.\n * @param {Object} deps.domAPI - Required. DOM manipulation abstraction.\n * @param {Object} deps.logger - Required. Logging utility.\n * @param {Object} [deps.domReadinessService] - Optional. DOM readiness service.\n * @param {Object} [deps.scheduler] - Optional. Timing utilities (setTimeout, clearTimeout).\n * @param {string} [deps.projectId] - Optional initial project ID.\n * @param {Function} [deps.onUploadComplete] - Optional callback after uploads finish.\n * @param {Object} [deps.elements] - Optional pre-resolved DOM element references.\n * @returns {Object} FileUploadComponent API.\n */\n\nconst MODULE_CONTEXT = \"FileUploadComponentContext\";\n\nexport function createFileUploadComponent({\n  app,\n  eventHandlers,\n  projectManager,\n  domAPI,\n  logger,\n  domReadinessService,\n  scheduler,\n  projectId,\n  onUploadComplete,\n  elements\n} = {}) {\n  // --- Attempt auto-resolution of `logger` when not injected ---\n  if (!logger) {\n    try {\n      const ds = eventHandlers?.DependencySystem;\n      logger = ds?.modules?.get?.('logger');\n    } catch (err) {\n      logger.error('[FileUploadComponent] Auto-resolve logger failed',\n        err,\n        { context: `${MODULE_CONTEXT}:auto-resolve` }\n      );\n    }\n  }\n  // === Dependency validation block ===\n  if (!app) throw new Error(\"[FileUploadComponent] Missing app\");\n  if (!eventHandlers) throw new Error(\"[FileUploadComponent] Missing eventHandlers\");\n  if (!projectManager) throw new Error(\"[FileUploadComponent] Missing projectManager\");\n  if (!domAPI) throw new Error(\"[FileUploadComponent] Missing domAPI\");\n  if (!logger) throw new Error(\"[FileUploadComponent] Missing logger\");\n  // domReadinessService and scheduler are optional\n\n  // --- Configuration ---\n  const fileConstants = {\n    allowedExtensions: ['.txt', '.md', '.csv', '.json', '.pdf', '.doc', '.docx', '.py', '.js', '.html', '.css', '.ini'],\n    maxSizeMB: 30\n  };\n\n  // --- Elements (Lookup via domAPI on init) ---\n  const _elements = {\n    fileInput: null, uploadBtn: null, dragZone: null,\n    uploadProgress: null, progressBar: null, uploadStatus: null,\n    selectors: {\n      fileInput: elements?.fileInput || '#fileInput',\n      uploadBtn: elements?.uploadBtn || '#uploadFileBtn',\n      dragZone: elements?.dragZone || '#dragDropZone',\n      uploadProgress: elements?.uploadProgress || '#filesUploadProgress',\n      progressBar: elements?.progressBar || '#fileProgressBar',\n      uploadStatus: elements?.uploadStatus || '#uploadStatus'\n    }\n  };\n\n  let _projectId = projectId || null;\n  let _onUploadComplete = typeof onUploadComplete === 'function' ? onUploadComplete : () => {};\n  let uploadState = { total: 0, completed: 0, failed: 0 };\n  let _handlersBound = false;\n\n/* Deterministic timers (DI-friendly) — bind to global window to avoid “Illegal invocation” */\nconst win = domAPI?.getWindow?.();\nif (!win) throw new Error(\"[FileUploadComponent] browserService.getWindow() required\");\nconst _scheduler = scheduler || {\n  setTimeout: (...args) => win?.setTimeout?.(...args),\n  clearTimeout: (...args) => win?.clearTimeout?.(...args)\n};\n\n  // --- API Methods ---\n\n  function setProjectId(pid) {\n    _projectId = pid;\n  }\n\n  async function init() {\n    if (_handlersBound) return;\n    try {\n      if (domReadinessService) {\n        // Only pass string selectors, not DOM element objects\n        const stringSelectors = Object.values(_elements.selectors).filter(\n          selector => typeof selector === 'string'\n        );\n        if (stringSelectors.length > 0) {\n          await domReadinessService.dependenciesAndElements({\n            domSelectors: stringSelectors,\n            context: MODULE_CONTEXT + '::init'\n          });\n        }\n      }\n      if (!_findElements()) {\n        logger.error('[FileUploadComponent] Required DOM elements not found', {\n          context: MODULE_CONTEXT, projectId: _projectId || 'unknown'\n        });\n        throw new Error('[FileUploadComponent] Initialization failed: required DOM elements not found');\n      }\n      _bindEvents();\n      _handlersBound = true;\n\n      // Standardized \"fileuploadcomponent:initialized\" event\n      const doc = domAPI?.getDocument?.();\n      if (!doc) throw new Error('[FileUploadComponent] DOM unavailable via domAPI');\n      if (domAPI?.dispatchEvent) {\n        domAPI.dispatchEvent(\n          doc,\n          eventHandlers.createCustomEvent('fileuploadcomponent:initialized',{ detail:{ success:true } })\n        );\n      }\n    } catch (error) {\n      logger.error('[FileUploadComponent][init] Initialization failed',\n        error,\n        { context: \"FileUploadComponentContext:init\" });\n      throw error;\n    }\n  }\n\n  function _findElements() {\n    const els = _elements;\n    const sources = els.selectors;\n    const elementKeys = [\n      'fileInput',\n      'uploadBtn',\n      'dragZone',\n      'uploadProgress',\n      'progressBar',\n      'uploadStatus'\n    ];\n\n    for (const key of elementKeys) {\n      const value = sources[key];\n\n      if (\n        typeof value === \"object\" &&\n        value !== null &&\n        typeof value.nodeType === \"number\"\n      ) {\n        els[key] = value;\n      } else if (typeof value === \"string\") {\n        els[key] = domAPI.querySelector(value);\n      } else {\n        els[key] = null;\n      }\n    }\n\n    if (\n      !(\n        els.fileInput &&\n        els.uploadBtn &&\n        els.dragZone &&\n        els.uploadProgress &&\n        els.progressBar &&\n        els.uploadStatus\n      )\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  function _bindEvents() {\n    const { fileInput, uploadBtn, dragZone } = _elements;\n    const EH = eventHandlers;\n\n    const track = (el, type, handler, description) => {\n      if (!el) return;\n      EH.trackListener(el, type, handler, {\n        description: `FileUpload: ${description}`,\n        module: 'FileUploadComponent',\n        context: MODULE_CONTEXT\n      });\n    };\n\n    // File input\n    track(fileInput, 'change', (e) => _handleFileSelection(e), 'File Input Change');\n\n    // Upload button\n    track(uploadBtn, 'click', () => fileInput?.click(), 'Upload Button Click');\n\n    // Drag-n-drop\n    if (dragZone) {\n      [\"dragenter\", \"dragover\", \"dragleave\", \"drop\"].forEach(eventName => {\n        track(dragZone, eventName, (e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (eventName === 'dragenter' || eventName === 'dragover') {\n            dragZone.classList.add('border-primary');\n          } else {\n            dragZone.classList.remove('border-primary');\n            if (eventName === 'drop') {\n              _handleFileDrop(e);\n            }\n          }\n        }, `DragZone ${eventName}`);\n      });\n      track(dragZone, 'click', () => fileInput?.click(), 'DragZone Click');\n    }\n  }\n\n  function destroy() {\n    if (eventHandlers && typeof eventHandlers.cleanupListeners === 'function') {\n      eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n    }\n    _handlersBound = false;\n  }\n\n  function cleanup() {\n    destroy();\n  }\n\n  function initialize(...args) {\n    return init(...args);\n  }\n\n  function _handleFileSelection(e) {\n    const files = e.target?.files;\n    if (!files || files.length === 0) return;\n    _uploadFiles(files);\n    if (e.target) e.target.value = null;\n  }\n\n  function _handleFileDrop(e) {\n    const files = e.dataTransfer?.files;\n    if (!files || files.length === 0) return;\n    _uploadFiles(files);\n  }\n\n  async function _uploadFiles(files) {\n    const pid = _projectId || app.getProjectId?.();\n    if (!pid || !app.validateUUID?.(pid)) {\n      logger.error('[FileUploadComponent][_uploadFiles] Invalid or missing projectId', { context: MODULE_CONTEXT });\n      return;\n    }\n\n    const { validFiles, invalidFiles } = _validateFiles(files);\n\n    invalidFiles.forEach(({ file, error }) => {\n      logger.error('[FileUploadComponent][_uploadFiles] Invalid file',\n        {\n          status: 400,\n          data: { fileName: file?.name },\n          message: String(error)\n        },\n        { context: MODULE_CONTEXT }\n      );\n    });\n\n    if (validFiles.length === 0) {\n      return;\n    }\n\n    _setupUploadProgress(validFiles.length);\n\n    // Batching logic remains the same\n    const BATCH_SIZE = 3;\n    for (let i = 0; i < validFiles.length; i += BATCH_SIZE) {\n      const batch = validFiles.slice(i, i + BATCH_SIZE);\n      await Promise.all(batch.map(file => _uploadFile(pid, file)));\n    }\n\n    if (typeof _onUploadComplete === 'function') {\n      _onUploadComplete();\n    }\n  }\n\n  async function _uploadFile(pid, file) {\n    try {\n      if (typeof projectManager.uploadFileWithRetry !== \"function\") {\n        throw new Error('projectManager.uploadFileWithRetry function not available');\n      }\n      await projectManager.uploadFileWithRetry(pid, { file });\n      _updateUploadProgress(1, 0);\n    } catch (err) {\n      logger.error(\"[FileUploadComponent] uploadFile\",\n        err,\n        { context: \"FileUploadComponentContext:uploadFile\" });\n      _updateUploadProgress(0, 1);\n    }\n  }\n\n  function _validateFiles(files) {\n    const { allowedExtensions, maxSizeMB } = fileConstants;\n    const validFiles = [];\n    const invalidFiles = [];\n    for (let file of files) {\n      // Replace forbidden characters and control chars with '_'\n      const sanitizedName = file.name\n        .split('')\n        .map(c => {\n          const code = c.charCodeAt(0);\n          // Forbidden: < > : \" / \\ | ? * # % whitespace, DEL, or ASCII control chars\n          if (\n            '<>:\"/\\\\|?*#%'.includes(c) ||\n            /\\s/.test(c) ||\n            code < 32 || code === 127\n          ) {\n            return '_';\n          }\n          return c;\n        })\n        .join('');\n      if (sanitizedName !== file.name) {\n        try {\n          const tempFile = new File([file], sanitizedName, { type: file.type });\n          file = tempFile;\n        } catch (err) {\n          logger.error(\"[FileUploadComponent] validateFiles\",\n            err,\n            { context: \"FileUploadComponentContext:validateFiles\" });\n          invalidFiles.push({\n            status: 400,\n            data: { file },\n            message: 'Filename contains invalid characters'\n          });\n          continue;\n        }\n      }\n\n      if (file.name.length === 0 || file.name === '.' || file.name === '..') {\n        invalidFiles.push({\n          status: 400,\n          data: { file },\n          message: 'Invalid filename'\n        });\n        continue;\n      }\n\n      const ext = file.name.includes('.') ? '.' + file.name.split('.').pop().toLowerCase() : '';\n      const isValidExt = allowedExtensions.includes(ext);\n      const isValidSize = file.size <= maxSizeMB * 1024 * 1024;\n\n      if (!isValidExt) {\n        invalidFiles.push({\n          status: 400,\n          data: { file },\n          message: `Invalid file type (${ext || 'none'}). Allowed: ${allowedExtensions.join(', ')}`\n        });\n      } else if (!isValidSize) {\n        invalidFiles.push({\n          status: 400,\n          data: { file },\n          message: `File too large (${(file.size / (1024 * 1024)).toFixed(1)}MB > ${maxSizeMB}MB)`\n        });\n      } else {\n        validFiles.push(file);\n      }\n    }\n    return { validFiles, invalidFiles };\n  }\n\n  function _setupUploadProgress(total) {\n    uploadState = { total, completed: 0, failed: 0 };\n    const { uploadProgress, progressBar, uploadStatus: statusEl } = _elements;\n    if (uploadProgress) domAPI.removeClass(uploadProgress, 'hidden');\n    if (progressBar) {\n      domAPI.setProperty(progressBar, 'value', 0);\n      domAPI.setProperty(progressBar, 'max', 100);\n      domAPI.setProperty(progressBar, 'className', 'progress progress-info');\n    }\n    if (statusEl) domAPI.setTextContent(statusEl, `Uploading 0/${total} files...`);\n  }\n\n  function _updateUploadProgress(successCount, failedCount) {\n    uploadState.completed += successCount;\n    uploadState.failed += failedCount;\n    const { total, completed, failed } = uploadState;\n    const { progressBar, uploadStatus: statusEl, uploadProgress } = _elements;\n\n    const percent = total > 0 ? Math.round((completed / total) * 100) : 0;\n\n    if (progressBar) {\n      domAPI.setProperty(progressBar, 'value', String(percent));\n\n      let newClassName = 'progress';\n      if (failed > 0) {\n        newClassName += (completed === total ? ' progress-error' : ' progress-warning');\n      } else if (completed === total) {\n        newClassName += ' progress-success';\n      } else {\n        newClassName += ' progress-info';\n      }\n      domAPI.setProperty(progressBar, 'className', newClassName);\n    }\n\n    if (statusEl) {\n      domAPI.setTextContent(statusEl, `Uploaded ${completed}/${total} files${failed > 0 ? ` (${failed} failed)` : ''}.`);\n    }\n\n    if (completed === total && uploadProgress) {\n      _scheduler.setTimeout(() => {\n        if (uploadProgress) domAPI.addClass(uploadProgress, 'hidden');\n      }, 2500);\n    }\n  }\n\n  // Expose API\n  return {\n    setProjectId,\n    init,\n    initialize,\n    destroy,\n    cleanup,\n    _handleFileSelection,\n    _handleFileDrop\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 13548,
          "_transferSize": 14737,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.363Z",
        "time": 171.49600000993814,
        "timings": {
          "blocked": 121.78600000444148,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.1110000000000042,
          "wait": 48.79499999524839,
          "receive": 0.8040000102482736,
          "_blocked_queueing": 3.1940000044414774,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126320",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 30
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/accessibility-utils.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1474,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "22756"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"c3551ff980a8375400cd759fdcdb19d1\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 16:03:46 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 22756,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * accessibility-utils.js – accessibility & keyboard-shortcut helpers.\n * Factory: createAccessibilityEnhancements({...}).\n * Core DI: domAPI, eventHandlers, logger, domReadinessService (+ optional deps).\n */\n\nexport function createAccessibilityEnhancements({\n  domAPI,\n  eventHandlers,\n  logger,\n  domReadinessService,\n  DependencySystem,\n  createDebugTools,\n  errorReporter,\n  safeHandler // ← NEW: allow explicit injection to avoid timing issues\n}) {\n  // Factory-level dependency validation (must be at the very top)\n  if (!logger) throw new Error('Missing required dependency: logger');\n  if (!domReadinessService) throw new Error('Missing required dependency: domReadinessService');\n  if (!domAPI) throw new Error('Missing required dependency: domAPI');\n  if (!eventHandlers) throw new Error('Missing required dependency: eventHandlers');\n\n  const MODULE_CONTEXT = 'accessibilityUtils';\n\n  // Validate logger and domReadinessService methods\n  if (typeof logger.error !== 'function' || typeof logger.info !== 'function') {\n    throw new Error('DI logger with .error/.info must be provided.');\n  }\n  if (\n    typeof domReadinessService.waitForEvent !== 'function' ||\n    typeof domReadinessService.dependenciesAndElements !== 'function'\n  ) {\n    throw new Error('domReadinessService DI with waitForEvent/dependenciesAndElements required.');\n  }\n  if (\n    typeof domAPI.getElementById !== 'function' ||\n    typeof domAPI.getDocument !== 'function'\n  ) {\n    throw new Error('domAPI with core methods (getElementById, getDocument) required.');\n  }\n  if (\n    typeof eventHandlers.trackListener !== 'function' ||\n    typeof eventHandlers.cleanupListeners !== 'function'\n  ) {\n    throw new Error('eventHandlers with trackListener and cleanupListeners required.');\n  }\n  if (typeof domAPI.getComputedStyle !== 'function') {\n    throw new Error('domAPI.getComputedStyle must be provided via DI; no fallback to window allowed.');\n  }\n\n  class AccessibilityUtilsModule {\n    constructor(safeHandler) {\n      this.domAPI = domAPI;\n      this.eventHandlers = eventHandlers;\n      this.DependencySystem = DependencySystem;\n      this.domReadinessService = domReadinessService;\n      this.errorReporter = errorReporter;\n      this.logger = logger;\n      this.safeHandler = safeHandler;\n      this.debug =\n        typeof createDebugTools === 'function'\n          ? createDebugTools({ contextPrefix: MODULE_CONTEXT })\n          : { start: () => null, stop: () => { }, trace: fn => fn() };\n      this.keyboardShortcutsEnabled = true;\n      this.lastFocusedElement = null;\n      this.mutationObservers = [];\n      this._destroyed = false;\n    }\n\n    async init() {\n      const traceId = this.debug.start('init');\n      try {\n        await this.domReadinessService.waitForEvent('app:ready');\n        if (this._destroyed) return;\n\n        this._bindGlobalShortcuts();\n        this._enhanceFormAccessibility();\n        this._improveModalAccessibility();\n        this._setupSkipLinks();\n\n        if (\n          this.DependencySystem &&\n          typeof this.DependencySystem.register === 'function'\n        ) {\n          const already = this.DependencySystem.modules?.get?.(MODULE_CONTEXT);\n          if (!already) {\n            this.DependencySystem.register(MODULE_CONTEXT, {\n              focusElement: this._focusElement?.bind(this),\n              getFocusable: this._getFocusable?.bind(this),\n              trapFocus: this._trapFocus?.bind(this),\n              toggleKeyboardShortcuts: this.toggleKeyboardShortcuts.bind(this),\n              announce: this.announce.bind(this),\n              destroy: this.destroy.bind(this),\n              cleanup: this.destroy.bind(this)\n            });\n          }\n        }\n      } catch (err) {\n        logger.error('[AccessibilityUtils][init] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: 'init' });\n        }\n        throw err;\n      } finally {\n        this.debug.stop(traceId, 'init');\n      }\n    }\n\n    destroy() {\n      const traceId = this.debug.start('destroy');\n      try {\n        if (this.eventHandlers && typeof this.eventHandlers.cleanupListeners === 'function') {\n          this.eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n        }\n        this.mutationObservers.forEach(observer => observer.disconnect());\n        this.mutationObservers.length = 0;\n        this.keyboardShortcutsEnabled = true;\n        this.lastFocusedElement = null;\n        this._destroyed = true;\n      } catch (err) {\n        logger.error('[AccessibilityUtils][destroy] cleanup failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: 'destroy.cleanupListeners' });\n        }\n      } finally {\n        this.debug.stop(traceId, 'destroy');\n      }\n    }\n\n    _trackListener(element, type, handler, options = {}) {\n      if (!element) return;\n      const optionsWithContext = { ...options, context: MODULE_CONTEXT };\n      this.eventHandlers.trackListener(element, type, handler, optionsWithContext);\n    }\n\n    async _handleGlobalKeydown(e) {\n      const traceId = this.debug.start('_handleGlobalKeydown');\n      try {\n        if (!this.keyboardShortcutsEnabled || this._isInput(e.target)) {\n          this.debug.stop(traceId, '_handleGlobalKeydown: skipped');\n          return;\n        }\n\n        let sidebar = null;\n        if (this.DependencySystem && typeof this.DependencySystem.waitFor === 'function') {\n          try {\n            sidebar = await this.DependencySystem.waitFor('sidebar', null, 3000);\n          } catch (err) {\n            logger.error('[AccessibilityUtils][_handleGlobalKeydown] DependencySystem.waitFor failed', err, { context: MODULE_CONTEXT });\n            if (this.errorReporter) {\n              this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_handleGlobalKeydown.DependencySystem.waitFor' });\n            }\n          }\n        }\n        // Defensive: Graceful fallback if sidebar cannot be injected\n        const safeSidebar = sidebar && typeof sidebar === \"object\" ? sidebar : undefined;\n        if (this._noMods(e)) {\n          let handled = false;\n          switch (e.key) {\n            case '/':\n            case '`':\n            case '\\\\':\n              if (typeof safeSidebar?.toggleSidebar === \"function\") {\n                safeSidebar.toggleSidebar();\n                handled = true;\n              } else {\n                this.announce?.('Sidebar unavailable. Cannot toggle sidebar.', 'polite');\n                handled = true;\n              }\n              break;\n            case '1':\n            case '2':\n            case '3': {\n              const mapping = { '1': 'recent', '2': 'starred', '3': 'projects' };\n              if (typeof safeSidebar?.activateTab === \"function\") {\n                safeSidebar.activateTab(mapping[e.key]);\n                handled = true;\n              } else {\n                this.announce?.('Sidebar unavailable. Tab shortcut disabled.', 'polite');\n                handled = true;\n              }\n              break;\n            }\n            case 'p':\n            case 'P':\n              if (typeof safeSidebar?.togglePin === \"function\") {\n                safeSidebar.togglePin();\n                handled = true;\n              } else {\n                this.announce?.('Sidebar unavailable. Pin shortcut disabled.', 'polite');\n                handled = true;\n              }\n              break;\n            case 'n':\n            case 'N':\n              this.domAPI.getElementById('sidebarNewProjectBtn')?.click();\n              handled = true;\n              break;\n            case 's':\n            case 'S':\n              this._focusElement('#sidebarProjectSearch');\n              handled = true;\n              break;\n            case '?':\n              this._toggleKeyboardHelp();\n              handled = true;\n              break;\n            default:\n              handled = false;\n          }\n          if (handled) e.preventDefault();\n        }\n        if (e.key === 'Escape') {\n          if (this._closeKeyboardHelpIfOpen()) {\n            e.preventDefault();\n          }\n        }\n      } catch (err) {\n        logger.error('[AccessibilityUtils][_handleGlobalKeydown] main handler failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_handleGlobalKeydown.main' });\n        }\n      } finally {\n        this.debug.stop(traceId, '_handleGlobalKeydown: processed');\n      }\n    }\n\n    _bindGlobalShortcuts() {\n      this._trackListener(\n        this.domAPI.getDocument(),\n        'keydown',\n        this.safeHandler(this._handleGlobalKeydown.bind(this), '_handleGlobalKeydown'),\n        { description: 'Global keyboard shortcuts' }\n      );\n      const closeHelpHandler = this.safeHandler((e) => {\n        const button = e.target.closest('#keyboardHelp button');\n        if (button) this._closeKeyboardHelpIfOpen();\n      }, 'Help dialog close button click');\n      this._trackListener(\n        this.domAPI.getDocument(),\n        'click',\n        closeHelpHandler,\n        { description: 'Help dialog close button click' }\n      );\n    }\n\n    _noMods(e) {\n      return !e.ctrlKey && !e.altKey && !e.metaKey;\n    }\n\n    _toggleKeyboardHelp(show) {\n      const dlg = this.domAPI.getElementById('keyboardHelp');\n      if (!dlg) return;\n      const isShown = !dlg.classList.contains('hidden');\n      const shouldShow = show === undefined ? !isShown : show;\n      if (shouldShow === isShown) return;\n      if (shouldShow) {\n        this.lastFocusedElement = this.domAPI.getActiveElement();\n        dlg.classList.remove('hidden');\n        this._trapFocus(dlg);\n        this._focusElement(dlg.querySelector('button') || dlg, 50);\n      } else {\n        dlg.classList.add('hidden');\n        this.lastFocusedElement?.focus?.();\n        this.lastFocusedElement = null;\n      }\n    }\n\n    _closeKeyboardHelpIfOpen() {\n      const dlg = this.domAPI.getElementById('keyboardHelp');\n      if (dlg && !dlg.classList.contains('hidden')) {\n        this._toggleKeyboardHelp(false);\n        return true;\n      }\n      return false;\n    }\n\n    toggleKeyboardShortcuts(enable) {\n      this.keyboardShortcutsEnabled =\n        enable === undefined ? !this.keyboardShortcutsEnabled : !!enable;\n      return this.keyboardShortcutsEnabled;\n    }\n\n    _enhanceFormAccessibility() {\n      this._trackListener(\n        this.domAPI.getDocument(),\n        'invalid',\n        this.safeHandler((e) => {\n          if (e.target.classList.contains('validator')) {\n            this._handleFormValidation(e.target, false);\n          }\n        }, 'Form validator invalid event'),\n        { capture: true, description: 'Form validator invalid event' }\n      );\n      this._trackListener(\n        this.domAPI.getDocument(),\n        'change',\n        this.safeHandler((e) => {\n          if (e.target.classList.contains('validator')) {\n            this._handleFormValidation(e.target, e.target.validity.valid);\n          }\n        }, 'Form validator change event'),\n        { description: 'Form validator change event' }\n      );\n    }\n\n    _handleFormValidation(input, isValid) {\n      let hint;\n      try {\n        hint = this.domAPI.querySelector(`#${input.id}-hint`);\n        if (!hint) {\n          hint = this.domAPI.createElement('p');\n          hint.id = `${input.id}-hint`;\n          hint.className = 'validator-hint';\n          if (typeof input.insertAdjacentElement === 'function') {\n            input.insertAdjacentElement('afterend', hint);\n          } else {\n            input.parentNode?.insertBefore(hint, input.nextSibling);\n          }\n        }\n        if (isValid) {\n          input.classList.add('validator-success');\n          input.classList.remove('validator-error');\n          hint.className = 'validator-hint validator-hint-success';\n          hint.textContent = '✓ Valid input';\n          hint.setAttribute('aria-live', 'polite');\n        } else {\n          input.classList.add('validator-error');\n          input.classList.remove('validator-success');\n          hint.className = 'validator-hint validator-hint-error';\n          if (input.validity.valueMissing) {\n            hint.textContent = 'This field is required';\n          } else if (input.validity.typeMismatch) {\n            hint.textContent = `Please enter a valid ${input.type}`;\n          } else if (input.validity.tooShort) {\n            hint.textContent = `Must be at least ${input.minLength} characters`;\n          } else if (input.validity.tooLong) {\n            hint.textContent = `Must be at most ${input.maxLength} characters`;\n          } else if (input.validity.patternMismatch) {\n            hint.textContent = input.title || 'Please match the requested format';\n          } else {\n            hint.textContent = 'Please enter a valid value';\n          }\n          hint.setAttribute('aria-live', 'assertive');\n        }\n      } catch (err) {\n        logger.error('[AccessibilityUtils][_handleFormValidation] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_handleFormValidation' });\n        }\n        throw err;\n      }\n    }\n\n    _improveModalAccessibility() {\n      try {\n        const dialogObserverCallback = mutations => {\n          mutations.forEach(m => {\n            if (\n              m.type === 'attributes' &&\n              m.attributeName === 'open' &&\n              m.target.tagName === 'DIALOG'\n            ) {\n              if (m.target.hasAttribute('open')) {\n                this.lastFocusedElement = this.domAPI.getActiveElement();\n                this._trapFocus(m.target);\n              } else {\n                this.lastFocusedElement?.focus?.();\n                this.lastFocusedElement = null;\n              }\n            }\n          });\n        };\n        const dialogObserver = new MutationObserver(\n          this.safeHandler(dialogObserverCallback, 'dialogObserverCallback')\n        );\n        this.mutationObservers.push(dialogObserver);\n        this.domAPI\n          .querySelectorAll('dialog')\n          .forEach(d => dialogObserver.observe(d, { attributes: true }));\n        const bodyObserverCallback = mutations => {\n          mutations.forEach(m => {\n            m.addedNodes.forEach(node => {\n              if (node.nodeType === Node.ELEMENT_NODE) {\n                if (node.tagName === 'DIALOG') {\n                  dialogObserver.observe(node, { attributes: true });\n                } else if (typeof node.querySelectorAll === 'function') {\n                  node\n                    .querySelectorAll('dialog')\n                    .forEach(d => dialogObserver.observe(d, { attributes: true }));\n                }\n              }\n            });\n          });\n        };\n        const bodyObserver = new MutationObserver(\n          this.safeHandler(bodyObserverCallback, 'bodyObserverCallback')\n        );\n        bodyObserver.observe(this.domAPI.getBody(), { childList: true, subtree: true });\n        this.mutationObservers.push(bodyObserver);\n      } catch (err) {\n        logger.error('[AccessibilityUtils][_improveModalAccessibility] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_improveModalAccessibility' });\n        }\n        throw err;\n      }\n    }\n\n    _setupSkipLinks() {\n      try {\n        const skipLink = this.domAPI.querySelector('.skip-to-content');\n        if (!skipLink) return;\n        const skipHandler = this.safeHandler(e => {\n          e.preventDefault();\n          const targetId = skipLink.getAttribute('href')?.substring(1);\n          if (targetId) {\n            const targetElement = this.domAPI.getElementById(targetId);\n            if (targetElement) {\n              if (!targetElement.hasAttribute('tabindex')) {\n                targetElement.setAttribute('tabindex', '-1');\n              }\n              this._focusElement(targetElement);\n            }\n          }\n        }, 'skip-to-content');\n        this._trackListener(skipLink, 'click', skipHandler, {\n          description: 'Skip to content link'\n        });\n      } catch (err) {\n        logger.error('[AccessibilityUtils][_setupSkipLinks] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_setupSkipLinks' });\n        }\n        throw err;\n      }\n    }\n\n    _trapFocus(container) {\n      try {\n        if (!container) return;\n        const focusables = this._getFocusable(container);\n        if (!focusables.length) return;\n        const first = focusables[0];\n        const last = focusables[focusables.length - 1];\n        const keydownHandler = this.safeHandler(e => {\n          if (e.key === 'Tab') {\n            const currentActiveElement = this.domAPI.getActiveElement();\n            if (e.shiftKey && currentActiveElement === first) {\n              e.preventDefault();\n              last.focus();\n            } else if (!e.shiftKey && currentActiveElement === last) {\n              e.preventDefault();\n              first.focus();\n            }\n          }\n        }, 'trap-focus Tab handler');\n        this._trackListener(container, 'keydown', keydownHandler, {\n          description: 'Trap focus Tab handler for container'\n        });\n        setTimeout(() => {\n          if (\n            this.domAPI.getBody().contains(container) &&\n            !container.contains(this.domAPI.getActiveElement())\n          ) {\n            first.focus();\n          }\n        }, 50);\n      } catch (err) {\n        logger.error('[AccessibilityUtils][_trapFocus] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_trapFocus' });\n        }\n        throw err;\n      }\n    }\n\n    _getFocusable(container) {\n      if (!container || typeof container.querySelectorAll !== 'function') return [];\n      const sel =\n        'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])';\n      return Array.from(container.querySelectorAll(sel)).filter(\n        el =>\n          !el.disabled &&\n          !el.closest('[inert]') &&\n          el.offsetParent !== null &&\n          this.domAPI.getComputedStyle(el).visibility !== 'hidden' &&\n          this.domAPI.getComputedStyle(el).display !== 'none'\n      );\n    }\n\n    _focusElement(target, delay = 0) {\n      try {\n        const el = typeof target === 'string' ? this.domAPI.querySelector(target) : target;\n        if (!el || typeof el.focus !== 'function') return false;\n        const actuallyFocus = () => {\n          if (\n            this.domAPI.getBody().contains(el) &&\n            typeof el.focus === 'function'\n          ) {\n            el.focus();\n          }\n        };\n        if (delay > 0) {\n          setTimeout(actuallyFocus, delay);\n        } else {\n          actuallyFocus();\n        }\n        return true;\n      } catch (err) {\n        logger.error('[AccessibilityUtils][_focusElement] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: '_focusElement' });\n        }\n        throw err;\n      }\n    }\n\n    _isInput(el) {\n      if (!el || typeof el.tagName !== 'string') return false;\n      const name = el.tagName.toLowerCase();\n      return (\n        name === 'input' ||\n        name === 'textarea' ||\n        name === 'select' ||\n        el.isContentEditable\n      );\n    }\n\n    announce(text, mode = 'polite') {\n      try {\n        let region = this.domAPI.getElementById('a11y-announcer');\n        if (!region) {\n          region = this.domAPI.createElement('div');\n          region.id = 'a11y-announcer';\n          Object.assign(region.style, {\n            border: '0',\n            clip: 'rect(0 0 0 0)',\n            height: '1px',\n            margin: '-1px',\n            overflow: 'hidden',\n            padding: '0',\n            position: 'absolute',\n            width: '1px',\n            whiteSpace: 'nowrap'\n          });\n          region.setAttribute('aria-live', mode);\n          region.setAttribute('aria-atomic', 'true');\n          this.domAPI.getBody().appendChild(region);\n        }\n        if (region.getAttribute('aria-live') !== mode) {\n          region.setAttribute('aria-live', mode);\n        }\n        region.textContent = '';\n        setTimeout(() => {\n          region.textContent = text;\n        }, 50);\n      } catch (err) {\n        logger.error('[AccessibilityUtils][announce] failed', err, { context: MODULE_CONTEXT });\n        if (this.errorReporter) {\n          this.errorReporter.capture(err, { module: MODULE_CONTEXT, source: 'announce' });\n        }\n        throw err;\n      }\n    }\n\n    // _safeHandler removed (DI canonical safeHandler always used)\n  }\n\n  // Resolve safeHandler: prefer explicitly injected param, fallback to DependencySystem\n  const resolvedSafeHandler =\n    typeof safeHandler === 'function'\n      ? safeHandler\n      : DependencySystem?.modules?.get?.('safeHandler');\n\n  if (typeof resolvedSafeHandler !== 'function') {\n    throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: safeHandler`);\n  }\n\n  const instance = new AccessibilityUtilsModule(resolvedSafeHandler);\n  function cleanup() {\n    if (eventHandlers?.cleanupListeners) {\n      eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n    }\n    instance.destroy();\n  }\n\n  return {\n    init: instance.init.bind(instance),\n    destroy: instance.destroy.bind(instance),\n    toggleKeyboardShortcuts: instance.toggleKeyboardShortcuts.bind(instance),\n    announce: instance.announce.bind(instance),\n    focusElement: instance._focusElement ? instance._focusElement.bind(instance) : undefined,\n    getFocusable: instance._getFocusable ? instance._getFocusable.bind(instance) : undefined,\n    trapFocus: instance._trapFocus ? instance._trapFocus.bind(instance) : undefined,\n    cleanup,\n    preloadTemplates: async () => {\n      const loader = DependencySystem.modules.get('htmlTemplateLoader');\n      if (!loader?.loadTemplate) return;\n      await Promise.allSettled([\n        loader.loadTemplate({\n          url: '/static/html/project_details.html',\n          containerSelector: '#projectDetailsView',\n          eventName: 'projectDetailsTemplateLoaded'\n        }),\n        loader.loadTemplate({\n          url: '/static/html/project_list.html',\n          containerSelector: '#projectListView',\n          eventName: 'projectListHtmlLoaded'\n        })\n      ]);\n    },\n    _instance: instance\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 22756,
          "_transferSize": 23945,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.363Z",
        "time": 171.83099999965634,
        "timings": {
          "blocked": 121.8309999931287,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.10500000000000398,
          "wait": 49.00699999694619,
          "receive": 0.8880000095814466,
          "_blocked_queueing": 3.396999993128702,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126316",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 31
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/navigationService.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1472,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "11553"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"f2516de14acde9fc8e6d21404100de2d\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 18:07:38 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 11553,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "import { getSafeHandler } from './utils/getSafeHandler.js';\n\nexport function createNavigationService({\n  domAPI,\n  browserService,\n  DependencySystem,\n  eventHandlers,\n  logger: providedLogger\n} = {}) {\n  /**\n   * Dependency/Guard checks\n   */\n  if (!domAPI) throw new Error('[NavigationService] domAPI is required');\n  if (!browserService) throw new Error('[NavigationService] browserService is required');\n  if (!DependencySystem) throw new Error('[NavigationService] DependencySystem is required');\n  if (!eventHandlers) throw new Error('[NavigationService] eventHandlers is required');\n  if (!providedLogger) throw new Error('[NavigationService] logger is required');\n\n  const logger = providedLogger;\n  const MODULE = 'NavigationService';\n  const MODULE_CONTEXT = 'navigationService';\n\n  // Resolve safeHandler at factory time\n  const safeHandler = getSafeHandler(DependencySystem);\n\n  // === Navigation State ===\n  const state = {\n    currentView: null,\n    currentProjectId: null,\n    currentConversationId: null,\n    previousView: null,\n    navigationInProgress: false,\n    navigationStack: [],\n    registeredViews: new Map(),\n    transitionListeners: [],\n    viewParams: new Map()\n  };\n\n  /**\n   * Emit a navigation lifecycle event\n   */\n  function emitNavigationEvent(eventName, detail = {}) {\n    const CustomEventCtor = browserService.getWindow()?.CustomEvent;\n    if (!CustomEventCtor) return;\n    const event = new CustomEventCtor(`navigation:${eventName}`, {\n      detail: {\n        ...detail,\n        timestamp: Date.now(),\n        source: MODULE\n      }\n    });\n\n    const doc = domAPI.getDocument();\n    if (doc) {\n      domAPI.dispatchEvent(doc, event);\n    }\n\n    // Call registered transition listeners\n    state.transitionListeners.forEach(listener => {\n      if (typeof listener[eventName] === 'function') {\n        try {\n          listener[eventName](detail);\n        } catch (err) {\n          logger.error('[NavigationService] transition listener failed', err, {\n            context: 'navigationService:transitionListener'\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Register navigation lifecycle listeners\n   */\n  function addTransitionListener(listener) {\n    state.transitionListeners.push(listener);\n    return () => {\n      const index = state.transitionListeners.indexOf(listener);\n      if (index !== -1) {\n        state.transitionListeners.splice(index, 1);\n      }\n    };\n  }\n\n  // === URL Management ===\n  function getUrlParams() {\n    const searchParams = new browserService.URLSearchParams(\n      browserService.getLocation().search\n    );\n    const params = {};\n    for (const [key, value] of searchParams.entries()) {\n      params[key] = value;\n    }\n    return params;\n  }\n\n  function updateUrlParams(params = {}, replace = false) {\n    try {\n      const newUrl = browserService.buildUrl(params);\n      replace\n        ? browserService.replaceState({}, '', newUrl)\n        : browserService.pushState({}, '', newUrl);\n    } catch (err) {\n      logger.error('[NavigationService] updateUrlParams failed', err, {\n        context: MODULE_CONTEXT\n      });\n    }\n  }\n\n  function getLocationSearch() {\n    return browserService.getLocation().search;\n  }\n  function getCurrentHref() {\n    return browserService.getLocation().href;\n  }\n  function getCurrentPathname() {\n    return browserService.getLocation().pathname;\n  }\n  function pushState(url, title = '') {\n    browserService.pushState({}, title, url);\n  }\n  function replaceState(url, title = '') {\n    browserService.replaceState({}, title, url);\n  }\n\n  const navAPI = {\n    getSearch: getLocationSearch,\n    getHref: getCurrentHref,\n    getPathname: getCurrentPathname,\n    pushState,\n    replaceState\n  };\n\n  // === View Management ===\n  function registerView(viewId, handlers = {}) {\n    if (!viewId) {\n      logger.error('[NavigationService] registerView validation failed',\n        new Error('Missing viewId'), { context: MODULE_CONTEXT });\n      return false;\n    }\n\n    const requiredHandlers = ['show', 'hide'];\n    const missingHandlers = requiredHandlers.filter(h => typeof handlers[h] !== 'function');\n    if (missingHandlers.length > 0) {\n      logger.error('[NavigationService] registerView validation failed',\n        new Error('Missing handlers: ' + missingHandlers.join(',')), { context: MODULE_CONTEXT });\n      return false;\n    }\n    state.registeredViews.set(viewId, handlers);\n    return true;\n  }\n\n  function hasView(viewId) {\n    return state.registeredViews.has(viewId);\n  }\n\n  async function activateView(viewId, params = {}) {\n    if (!state.registeredViews.has(viewId)) {\n      return false;\n    }\n    const viewHandlers = state.registeredViews.get(viewId);\n    const previousViewId = state.currentView;\n    try {\n      // Hide #loginRequiredMessage, show #mainContent if present\n      const loginMessage = domAPI.getElementById('loginRequiredMessage');\n      const mainContent = domAPI.getElementById('mainContent');\n      if (loginMessage) domAPI.addClass(loginMessage, 'hidden');\n      if (mainContent) domAPI.removeClass(mainContent, 'hidden');\n\n      // Hide previous view\n      if (previousViewId && previousViewId !== viewId) {\n        const prevHandlers = state.registeredViews.get(previousViewId);\n        if (prevHandlers?.hide) {\n          await prevHandlers.hide();\n        }\n      }\n\n      // Store params\n      state.viewParams.set(viewId, params);\n\n      // Show new view\n      await viewHandlers.show(params);\n\n      state.previousView = previousViewId;\n      state.currentView = viewId;\n      return true;\n    } catch (error) {\n      logger.error('[NavigationService] activateView failed', error, {\n        context: 'navigationService:activateView'\n      });\n      return false;\n    }\n  }\n\n  // === Core Navigation Functions ===\n  async function navigateTo(viewId, params = {}, options = {}) {\n    const { updateUrl = true, addToHistory = true, replace = false } = options;\n\n    if (state.navigationInProgress) {\n      return false;\n    }\n    state.navigationInProgress = true;\n    const navId = Date.now();\n\n    try {\n      emitNavigationEvent('beforeNavigate', {\n        from: state.currentView,\n        to: viewId,\n        params,\n        navigationId: navId\n      });\n\n      const projectId = params.projectId || params.project || null;\n      const conversationId = params.conversationId || params.chatId || null;\n\n      if (updateUrl) {\n        const urlParams = {};\n        if (viewId === 'projectDetails' && projectId) {\n          urlParams.project = projectId;\n          if (conversationId) {\n            urlParams.chatId = conversationId;\n          }\n        }\n        updateUrlParams(urlParams, replace);\n      }\n\n      if (projectId) {\n        state.currentProjectId = projectId;\n      }\n      if (conversationId) {\n        state.currentConversationId = conversationId;\n      }\n\n      emitNavigationEvent('navigating', {\n        from: state.currentView,\n        to: viewId,\n        params,\n        navigationId: navId\n      });\n\n      const success = await activateView(viewId, params);\n      if (success) {\n        if (addToHistory) {\n          state.navigationStack.push({ viewId, params, timestamp: Date.now() });\n        }\n        emitNavigationEvent('afterNavigate', {\n          from: state.previousView,\n          to: viewId,\n          params,\n          navigationId: navId,\n          success: true\n        });\n      } else {\n        emitNavigationEvent('navigationError', {\n          from: state.currentView,\n          to: viewId,\n          params,\n          navigationId: navId,\n          status: 500,\n          data: null,\n          message: 'View activation failed'\n        });\n      }\n      return success;\n    } catch (error) {\n      logger.error('[NavigationService][navigateTo] before-navigate error', error, {\n        context: 'navigationService:navigateTo'\n      });\n      emitNavigationEvent('navigationError', {\n        from: state.currentView,\n        to: viewId,\n        params,\n        navigationId: navId,\n        status: error?.status ?? 500,\n        data: error,\n        message: error?.message ?? 'Unknown error'\n      });\n      return false;\n    } finally {\n      state.navigationInProgress = false;\n    }\n  }\n\n  function navigateToProjectList(options = {}) {\n    return navigateTo('projectList', {}, options);\n  }\n\n  function navigateToProject(projectId, options = {}) {\n    if (!projectId) {\n      return Promise.resolve(false);\n    }\n    return navigateTo('projectDetails', { projectId }, options);\n  }\n\n  function navigateToConversation(projectId, conversationId, options = {}) {\n    if (!projectId || !conversationId) {\n      return Promise.resolve(false);\n    }\n    return navigateTo(\n      'projectDetails',\n      { projectId, conversationId, activeTab: 'conversations' },\n      options\n    );\n  }\n\n  async function goBack() {\n    try {\n      if (state.navigationStack.length <= 1) {\n        return navigateToProjectList({ replace: true });\n      }\n      state.navigationStack.pop();\n      const previous = state.navigationStack[state.navigationStack.length - 1];\n      return navigateTo(previous.viewId, previous.params, { replace: true });\n    } catch (err) {\n      logger.error('[NavigationService] goBack failed', err, { context: MODULE_CONTEXT });\n      return false;\n    }\n  }\n\n  function handlePopState(/* event */) {\n    const params = getUrlParams();\n    const projectId = params.project;\n    const conversationId = params.chatId;\n    try {\n      if (projectId) {\n        if (conversationId) {\n          navigateToConversation(projectId, conversationId, { addToHistory: false });\n        } else {\n          navigateToProject(projectId, { addToHistory: false });\n        }\n      } else {\n        navigateToProjectList({ addToHistory: false });\n      }\n    } catch (err) {\n      logger.error('[NavigationService] handlePopState failed', err, { context: MODULE_CONTEXT });\n    }\n  }\n\n  function init() {\n    // Register popstate handler using safeHandler\n    eventHandlers.trackListener(\n      browserService.getWindow(),\n      'popstate',\n      safeHandler(handlePopState, 'NavigationService:popstate'),\n      { context: MODULE_CONTEXT, description: 'popstate' }\n    );\n\n    // Parse initial URL\n    const params = getUrlParams();\n    if (params.project) {\n      state.currentProjectId = params.project;\n    }\n    if (params.chatId) {\n      state.currentConversationId = params.chatId;\n    }\n\n    emitNavigationEvent('ready', {\n      currentProjectId: state.currentProjectId,\n      currentConversationId: state.currentConversationId\n    });\n\n    return true;\n  }\n\n  function cleanup() {\n    eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n    state.registeredViews.clear();\n    state.transitionListeners.length = 0;\n    state.navigationStack.length = 0;\n    state.viewParams.clear();\n  }\n\n  return {\n    // Core navigation\n    navigateTo,\n    navigateToProjectList,\n    navigateToProject,\n    navigateToConversation,\n    goBack,\n\n    // View management\n    registerView,\n    hasView,\n\n    // URL management\n    updateUrlParams,\n    getUrlParams,\n\n    // State access\n    getCurrentView: () => state.currentView,\n    getCurrentProjectId: () => state.currentProjectId,\n    getCurrentConversationId: () => state.currentConversationId,\n    isNavigating: () => state.navigationInProgress,\n\n    // Lifecycle\n    addTransitionListener,\n\n    // Initialization & cleanup\n    init,\n    cleanup,\n\n    // Consolidated navigation helpers\n    getLocationSearch,\n    getCurrentHref,\n    getCurrentPathname,\n    pushState,\n    replaceState,\n    navAPI\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 11553,
          "_transferSize": 12742,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.363Z",
        "time": 183.19999999948777,
        "timings": {
          "blocked": 126.6230000136178,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.12300000000000466,
          "wait": 44.51200000306032,
          "receive": 11.941999982809648,
          "_blocked_queueing": 3.5220000136177987,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126339",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 32
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/uiRenderer.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1465,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "12980"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"fe97521da71c14f07a13249c2ad98a35\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 01 Jun 2025 05:40:33 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 12980,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * uiRenderer.js - Renders projects/conversations for the sidebar\n * and addresses stale references or uninitialized DOM by waiting\n * for readiness via domReadinessService.\n */\n\nexport function createUiRenderer(deps) {\n  // Canonical dependency validation for pattern checker\n  if (!deps || typeof deps !== \"object\") throw new Error(\"Missing DI deps object for createUiRenderer\");\n  const {\n    domAPI,\n    eventHandlers,\n    apiRequest,\n    apiEndpoints,\n    onConversationSelect,\n    onProjectSelect,\n    domReadinessService,\n    logger,\n    DependencySystem\n  } = deps;\n\n  if (!domAPI) throw new Error('Missing domAPI');\n  if (!eventHandlers) throw new Error('Missing eventHandlers');\n  if (!apiRequest) throw new Error('Missing apiRequest');\n  if (!apiEndpoints) throw new Error('Missing apiEndpoints');\n  if (typeof onConversationSelect !== 'function') throw new Error('Missing onConversationSelect');\n  if (typeof onProjectSelect !== 'function') throw new Error('Missing onProjectSelect');\n  if (!domReadinessService) throw new Error('Missing domReadinessService');\n  if (!logger) throw new Error('Missing logger');\n  if (!DependencySystem) throw new Error('Missing DependencySystem');\n\n  const MODULE = \"UiRenderer\";\n  const CONTEXT = \"UiRenderer\";\n\n  let _domReady = null;\n  async function ensureSidebarReady() {\n    if (!_domReady) {\n      _domReady = domReadinessService.dependenciesAndElements({\n        domSelectors: [\n          '#projectsSection ul',\n          '#recentChatsSection ul',\n          '#starredChatsSection ul'\n        ],\n        context: `${CONTEXT}::ensureSidebarReady`\n      });\n    }\n    return _domReady;\n  }\n\n  /**\n   * Canonical: cleanup all tracked event listeners for this module.\n   * This matches DI pattern Rule 4: Centralised Event Handling.\n   */\n  function cleanup() {\n    // Canonical cleanup for pattern checker (Pattern Rule 4 compliance)\n    if (eventHandlers && typeof eventHandlers.cleanupListeners === \"function\") {\n      eventHandlers.cleanupListeners({ context: CONTEXT });\n    }\n  }\n\n  function _clearList(selector) {\n    const listElement = domAPI.querySelector(selector);\n    if (listElement) {\n      domAPI.setInnerHTML(listElement, '');\n    }\n    return listElement;\n  }\n\n  function _setLoadingState(listElement, isLoading) {\n    if (!listElement) return;\n    if (isLoading) {\n      const li = domAPI.createElement('li');\n      li.className = 'loading-indicator p-2 text-center text-sm italic';\n      domAPI.setTextContent(li, 'Loading...');\n      listElement.appendChild(li);\n    } else {\n      const loadingEl = listElement.querySelector('.loading-indicator');\n      loadingEl?.remove();\n    }\n  }\n\n  function _displayMessageInList(listElement, message, cssClass = 'info-message') {\n    if (!listElement) return;\n    const li = domAPI.createElement('li');\n    li.className = `${cssClass} p-2 text-center text-sm`;\n    domAPI.setTextContent(li, message);\n    listElement.appendChild(li);\n  }\n\n  function _extractConversations(response) {\n    if (Array.isArray(response?.data?.conversations)) return response.data.conversations;\n    if (Array.isArray(response?.conversations)) return response.conversations;\n    if (Array.isArray(response?.data)) return response.data;\n    if (Array.isArray(response)) return response;\n    return [];\n  }\n\n  const safeHandlerRaw = DependencySystem.modules.get('safeHandler');\n  const safeHandler = (\n    typeof safeHandlerRaw === 'function'\n      ? safeHandlerRaw\n      : (typeof safeHandlerRaw?.safeHandler === 'function' ? safeHandlerRaw.safeHandler : (fn) => fn)\n  );\n\n  function _createConversationListItem(\n    conversation,\n    isStarredTab,\n    isConversationStarredFn,\n    toggleStarConversationCb\n  ) {\n    const li = domAPI.createElement('li');\n    li.className = 'py-1';\n\n    const link = domAPI.createElement('a');\n    link.href = '#';\n    link.className = 'flex items-center justify-between p-2 hover:bg-base-300 rounded-md';\n    domAPI.setTextContent(link, conversation.title || 'Untitled Conversation');\n\n    eventHandlers.trackListener(\n      link,\n      'click',\n      safeHandler((e) => {\n        domAPI.preventDefault(e);\n        onConversationSelect(conversation.id);\n      }, `[UiRenderer] select conversation ${conversation.id}`),\n      { context: \"UiRenderer\" }\n    );\n\n    const starButton = domAPI.createElement('button');\n    starButton.className = 'btn btn-ghost btn-sm btn-square text-accent';\n\n    const starredFn = (typeof isConversationStarredFn === 'function') ? isConversationStarredFn : () => false;\n    const toggleStarCb = (typeof toggleStarConversationCb === 'function') ? toggleStarConversationCb : () => {};\n\n    const isStarred = starredFn(conversation.id);\n    domAPI.setInnerHTML(\n      starButton,\n      /* Fully-defined SVG paths replace previously truncated values that\n       * violated the SVG spec and triggered DOMException: “<path> attribute\n       * d: Expected number”.  Heroicons MIT-licensed outlines are used. */\n      isStarred\n        ? '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"w-5 h-5\" viewBox=\"0 0 24 24\"><path d=\"M12 .587l3.668 7.431 8.332 1.318-6 5.845 1.335 8.819L12 20.128 4.665 24 6 15.181 0 9.336l8.332-1.318L12 .587z\"/></svg>'\n        : '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" class=\"w-5 h-5\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l2.286 7.008a1 1 0 00.95.69h7.353c.969 0 1.371 1.24.588 1.81l-5.946 4.324a1 1 0 00-.364 1.118l2.286 7.009c.3.921-.755 1.688-1.538 1.118L12 19.347l-5.924 4.46c-.783.57-1.838-.197-1.538-1.118l2.286-7.01a1 1 0 00-.364-1.117L.514 12.435c-.783-.57-.38-1.81.588-1.81h7.353a1 1 0 00.95-.69l2.286-7.008z\"/></svg>'\n    );\n\n    starButton.setAttribute('aria-label', isStarred ? 'Unstar' : 'Star');\n    starButton.setAttribute('aria-pressed', String(isStarred));\n\n    eventHandlers.trackListener(\n      starButton,\n      'click',\n      safeHandler(() => {\n        toggleStarCb(conversation.id);\n      }, `[UiRenderer] toggle star ${conversation.id}`),\n      { context: \"UiRenderer\" }\n    );\n\n    const wrapper = domAPI.createElement('div');\n    wrapper.className = 'flex items-center w-full';\n    domAPI.appendChild(wrapper, link);\n    domAPI.appendChild(wrapper, starButton);\n    domAPI.appendChild(li, wrapper);\n\n    return li;\n  }\n\n  async function renderConversations(\n    projectId,\n    searchTerm = '',\n    isConversationStarredFn,\n    toggleStarConversationCb\n  ) {\n    try {\n      await ensureSidebarReady();\n    } catch (err) {\n      logger.error('[UiRenderer][renderConversations] not ready', err, { context: CONTEXT });\n      return;\n    }\n\n    const sel = '#recentChatsSection ul';\n    const listEl = _clearList(sel);\n    if (!listEl) return;\n    if (!projectId) {\n      _displayMessageInList(listEl, 'No project selected.', 'info-message');\n      return;\n    }\n\n    _setLoadingState(listEl, true);\n    try {\n      let conversationsUrl = (typeof apiEndpoints.CONVERSATIONS === 'function')\n        ? apiEndpoints.CONVERSATIONS(projectId)\n        : (apiEndpoints.CONVERSATIONS(projectId) || apiEndpoints.PROJECT_CONVERSATIONS_URL_TEMPLATE)?.replace('{id}', projectId);\n\n      if (!conversationsUrl) {\n        _displayMessageInList(listEl, 'Missing conversation API endpoint.', 'error-message');\n        _setLoadingState(listEl, false);\n        return;\n      }\n      const params = {};\n      if (searchTerm) params.search = searchTerm;\n      const response = await apiRequest(conversationsUrl, { method: 'GET', params });\n      const convos = _extractConversations(response);\n\n      _setLoadingState(listEl, false);\n      if (!convos.length) {\n        _displayMessageInList(listEl, searchTerm ? 'No conversations match.' : 'No recent conversations.');\n        return;\n      }\n      convos.forEach(c => {\n        const li = _createConversationListItem(c, false, isConversationStarredFn, toggleStarConversationCb);\n        listEl.appendChild(li);\n      });\n    } catch (error) {\n      _setLoadingState(listEl, false);\n      logger.error('[UiRenderer] Error loading recent convos', error, { context: CONTEXT });\n      _displayMessageInList(listEl, 'Error loading conversations.', 'error-message');\n    }\n  }\n\n  async function renderStarredConversations(\n    projectId,\n    searchTerm = '',\n    isConversationStarredFn,\n    toggleStarConversationCb\n  ) {\n    await ensureSidebarReady();\n    const sel = '#starredChatsSection ul';\n    const listEl = _clearList(sel);\n    if (!listEl || !projectId) return;\n\n    _setLoadingState(listEl, true);\n    try {\n      let conversationsUrl = (typeof apiEndpoints.CONVERSATIONS === 'function')\n        ? apiEndpoints.CONVERSATIONS(projectId)\n        : (apiEndpoints.CONVERSATIONS(projectId) || apiEndpoints.PROJECT_CONVERSATIONS_URL_TEMPLATE)?.replace('{id}', projectId);\n\n      if (!conversationsUrl) {\n        _displayMessageInList(listEl, 'Missing conversation API endpoint.', 'error-message');\n        _setLoadingState(listEl, false);\n        return;\n      }\n      const params = { starred: 'true' };\n      if (searchTerm) params.search = searchTerm;\n      const response = await apiRequest(conversationsUrl, { method: 'GET', params });\n      const convos = _extractConversations(response);\n\n      _setLoadingState(listEl, false);\n      const isStarredFn = (typeof isConversationStarredFn === 'function') ? isConversationStarredFn : () => false;\n\n      let countRendered = 0;\n      convos.forEach(c => {\n        if (isStarredFn(c.id)) {\n          listEl.appendChild(\n            _createConversationListItem(c, true, isStarredFn, toggleStarConversationCb)\n          );\n          countRendered++;\n        }\n      });\n      if (countRendered === 0) {\n        _displayMessageInList(\n          listEl,\n          searchTerm ? 'No starred conversations match.' : 'No starred conversations.',\n          'info-message'\n        );\n      }\n    } catch (err) {\n      _setLoadingState(listEl, false);\n      logger.error('[UiRenderer] Error loading starred convos', err, { context: CONTEXT });\n      _displayMessageInList(listEl, 'Error loading starred conversations.', 'error-message');\n    }\n  }\n\n  async function renderProjects(projects = []) {\n    try {\n      await ensureSidebarReady();\n    } catch (err) {\n      logger.error('[UiRenderer][renderProjects] not ready', err, { context: CONTEXT });\n      return;\n    }\n    const sel = '#projectsSection ul';\n    const listEl = _clearList(sel);\n    if (!listEl) return;\n\n    if (!projects.length) {\n      _displayMessageInList(listEl, 'No projects found.');\n      return;\n    }\n    projects.forEach(p => {\n      const li = domAPI.createElement('li');\n      li.className = 'py-1';\n\n      const link = domAPI.createElement('a');\n      link.href = '#';\n      link.className = 'block p-2 hover:bg-base-300 rounded-md';\n      domAPI.setTextContent(link, p.name || 'Untitled');\n\n      eventHandlers.trackListener(\n        link,\n        'click',\n        safeHandler((e) => {\n          domAPI.preventDefault(e);\n          onProjectSelect(p.id);\n        }, `[UiRenderer] select project ${p.id}`),\n        { context: \"UiRenderer\" }\n      );\n\n      domAPI.appendChild(li, link);\n      listEl.appendChild(li);\n    });\n  }\n\n  /* -------------------------------------------------------------\n   *  Placeholder implementations for legacy ProjectDetailsComponent.\n   *  Full UX redesign will bring these into their own focused modules.\n   *  For now they simply dispatch events so ProjectDetailsComponent\n   *  can rebuild its DOM via existing private helpers.\n   * ------------------------------------------------------------- */\n\n  function renderFiles(projectId, files = []) {\n    try {\n      const doc = domAPI.getDocument();\n      domAPI.dispatchEvent(doc, eventHandlers.createCustomEvent('uiRenderer:filesRendered', {\n        detail: { projectId, files }\n      }));\n    } catch (err) {\n      logger.error('[UiRenderer][renderFiles] failed', err, { context: CONTEXT });\n    }\n  }\n\n  function renderArtifacts(projectId, artifacts = []) {\n    try {\n      const doc = domAPI.getDocument();\n      domAPI.dispatchEvent(doc, eventHandlers.createCustomEvent('uiRenderer:artifactsRendered', {\n        detail: { projectId, artifacts }\n      }));\n    } catch (err) {\n      logger.error('[UiRenderer][renderArtifacts] failed', err, { context: CONTEXT });\n    }\n  }\n\n  function renderStats(projectId, stats = {}) {\n    try {\n      const doc = domAPI.getDocument();\n      domAPI.dispatchEvent(doc, eventHandlers.createCustomEvent('uiRenderer:statsRendered', {\n        detail: { projectId, stats }\n      }));\n    } catch (err) {\n      logger.error('[UiRenderer][renderStats] failed', err, { context: CONTEXT });\n    }\n  }\n\n  // Canonical cleanup must be first for DI pattern checkers\n  return {\n    renderConversations,\n    renderStarredConversations,\n    renderProjects,\n    renderFiles,\n    renderArtifacts,\n    renderStats,\n    cleanup\n  };\n}\n\nexport default createUiRenderer;\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 12980,
          "_transferSize": 14169,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.363Z",
        "time": 204.02099999773782,
        "timings": {
          "blocked": 158.8299999901075,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.12000000000000455,
          "wait": 44.46399999858997,
          "receive": 0.6070000090403482,
          "_blocked_queueing": 3.6029999901074916,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126344",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 33
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/knowledgeBaseComponent.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1477,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "38650"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"f051ea42f4558719b6673d1263827189\""
            },
            {
              "name": "last-modified",
              "value": "Tue, 03 Jun 2025 16:25:17 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 38650,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module knowledgeBaseComponent\n * @description Refactored factory: NO global document/window. All DOM and event wiring via DI.\n */\n\nimport { createKnowledgeBaseSearchHandler } from './knowledgeBaseSearchHandler.js';\nimport { createKnowledgeBaseManager } from './knowledgeBaseManager.js';\nimport { ELEMENT_SELECTORS } from './utils/selectorConstants.js';\n\nconst MODULE = \"KnowledgeBaseComponent\";\n/**\n * Creates and returns a knowledge base UI component instance with full lifecycle management.\n *\n * This factory function resolves all required dependencies via the provided options or dependency injection system, validates their presence, and constructs a knowledge base component that manages UI rendering, event handling, authentication state, and project context changes. The returned component exposes methods for initialization, rendering, and cleanup, and integrates with injected services for DOM manipulation, event tracking, and logging.\n *\n * @param {Object} [options={}] - Configuration and dependency injection options.\n * @returns {KnowledgeBaseComponentWithDestroy} An instance of the knowledge base component with destroy capability.\n *\n * @throws {Error} If required dependencies such as `DependencySystem`, `logger`, `sanitizer`, `app`, `projectManager`, `eventHandlers`, `uiUtils`, `modalManager`, or `domAPI` are missing or invalid.\n */\nexport function createKnowledgeBaseComponent(options = {}) {\n  const DS = options.DependencySystem;\n  if (!DS) throw new Error(\"DependencySystem is required for KnowledgeBaseComponent\");\n  const getDep = (name) => name in options ? options[name] : DS.modules.get(name);\n\n  const sanitizer = getDep(\"sanitizer\");\n  const app = getDep(\"appModule\") || getDep(\"app\");\n  const projectManager = getDep(\"projectManager\");\n  const eventHandlers = getDep(\"eventHandlers\");\n  const uiUtils = getDep(\"uiUtils\") || getDep(\"uiUtilsInstance\");\n  const modalManager = getDep(\"modalManager\");\n  const domAPI = getDep(\"domAPI\");\n  const domReadinessService = getDep(\"domReadinessService\");\n  const logger = getDep(\"logger\"); // Ensure logger is fetched for constructor scope if needed early\n\n  if (!domReadinessService)\n    throw new Error(`[${MODULE}] requires 'domReadinessService' DI`);\n  if (!logger)\n    throw new Error(`[${MODULE}] requires 'logger' DI`);\n  if (!sanitizer || typeof sanitizer.sanitize !== 'function')\n    throw new Error(`[${MODULE}] requires 'sanitizer' (object with .sanitize).`);\n  if (!app || !projectManager || !eventHandlers || !uiUtils || !modalManager) {\n    throw new Error(\n      `[${MODULE}] requires 'app', 'projectManager', 'eventHandlers', 'uiUtils', and 'modalManager' dependencies.`\n    );\n  }\n  if (!domAPI) throw new Error(`${MODULE} requires 'domAPI' abstraction for DOM access.`);\n\n  // --- Element Selectors (resolution deferred to init) ---\n  const elRefs = options.elRefs || {}; // For externally provided elements\n  // Removed reqEl function from factory scope. It will be part of _initElements.\n\n  // --- domReadinessService Rule 7 compliance: replace any DependencySystem.waitFor(['app']) with domReadinessService.waitForEvent('app:ready', ...)\n  // (No such code found in this file, so nothing to replace here.)\n\n  // Use centralized selectors for consistency\n  const elementSelectors = {\n    ...ELEMENT_SELECTORS.KB,\n    // Add any additional selectors not in the centralized config\n    searchInput: \"knowledgeSearchInput\", // Optional - will be added to HTML\n    searchButton: \"searchKnowledgeBtn\", // Optional - will be added to HTML\n    resultsContainer: \"knowledgeResults\",\n    resultsSection: \"knowledgeResults\",\n    noResultsSection: \"noResults\",\n    topKSelect: \"knowledgeTopK\",\n    resultModal: \"knowledgeResultModal\",\n    resultTitle: \"knowledgeResultTitle\",\n    resultSource: \"knowledgeResultSource\",\n    resultScore: \"knowledgeResultScore\",\n    resultContent: \"knowledgeResultContent\",\n    useInChatBtn: \"useInChatBtn\",\n    kbGitHubAttachedRepoInfo: \"kbGitHubAttachedRepoInfo\",\n    kbAttachedRepoUrlDisplay: \"kbAttachedRepoUrlDisplay\",\n    kbAttachedRepoBranchDisplay: \"kbAttachedRepoBranchDisplay\",\n    kbDetachRepoBtn: \"kbDetachRepoBtn\",\n    kbGitHubAttachForm: \"kbGitHubAttachForm\",\n    kbGitHubRepoUrlInput: \"kbGitHubRepoUrlInput\",\n    kbGitHubBranchInput: \"kbGitHubBranchInput\",\n    kbGitHubFilePathsTextarea: \"kbGitHubFilePathsTextarea\",\n    kbAttachRepoBtn: \"kbAttachRepoBtn\",\n    // Map centralized names to local names for backward compatibility\n    container: ELEMENT_SELECTORS.KB.container,\n    activeSection: ELEMENT_SELECTORS.KB.activeSection,\n    inactiveSection: ELEMENT_SELECTORS.KB.inactiveSection,\n    statusBadge: ELEMENT_SELECTORS.KB.statusBadge,\n    kbToggle: ELEMENT_SELECTORS.KB.toggle,\n    reprocessButton: ELEMENT_SELECTORS.KB.reprocessButton,\n    setupButton: ELEMENT_SELECTORS.KB.setupButton,\n    settingsButton: ELEMENT_SELECTORS.KB.settingsButton,\n    kbNameDisplay: ELEMENT_SELECTORS.KB.baseName,\n    kbModelDisplay: ELEMENT_SELECTORS.KB.modelDisplay,\n    kbVersionDisplay: ELEMENT_SELECTORS.KB.versionDisplay,\n    kbLastUsedDisplay: ELEMENT_SELECTORS.KB.lastUsedDisplay,\n    settingsModal: ELEMENT_SELECTORS.KB.settingsModal,\n    settingsForm: ELEMENT_SELECTORS.KB.settingsForm,\n    cancelSettingsBtn: ELEMENT_SELECTORS.KB.cancelSettingsBtn,\n    deleteKnowledgeBaseBtn: ELEMENT_SELECTORS.KB.deleteBtn,\n    modelSelect: ELEMENT_SELECTORS.KB.modelSelect,\n    knowledgeBaseFilesSection: ELEMENT_SELECTORS.KB.filesSection,\n    knowledgeBaseFilesListContainer: ELEMENT_SELECTORS.KB.filesListContainer,\n    knowledgeFileCount: ELEMENT_SELECTORS.KB.docCount,\n    knowledgeChunkCount: ELEMENT_SELECTORS.KB.chunkCount,\n    knowledgeFileSize: ELEMENT_SELECTORS.KB.fileSize,\n  };\n\n  // Resolve validateUUID and apiRequest with robust fallbacks\n  const validateUUID = app.validateUUID;\n  const apiRequest =\n    // 1. Explicit override via factory options\n    options.apiRequest\n    // 2. DependencySystem registration (e.g., after advanced services phase)\n    || getDep(\"apiRequest\")\n    // 3. Fallback to app proxy (may still be a placeholder in early phases)\n    || app.apiRequest;\n  const config = {\n    maxConcurrentProcesses: options.maxConcurrentProcesses || 3,\n    searchDebounceTime: options.searchDebounceTime || 300,\n    minQueryLength: options.minQueryLength || 2,\n    maxQueryLength: options.maxQueryLength || 500,\n  };\n\n  function _safeSetInnerHTML(el, html) {\n    if (!el) return;\n    domAPI.setInnerHTML(el, html);\n  }\n\n  class KnowledgeBaseComponent {\n    constructor() {\n      this.app = app;\n      this.projectManager = projectManager;\n      this.eventHandlers = eventHandlers;\n      this.uiUtils = uiUtils;\n      this.apiRequest = apiRequest;\n      this.validateUUID = validateUUID;\n      this.config = config;\n      this.modalManager = modalManager;\n      this.domAPI = domAPI;\n      this.getDep = getDep;\n      this.DependencySystem = DS;\n      this.domReadinessService = domReadinessService;\n      this.logger = logger; // Store logger instance\n\n      this.elementSelectors = elementSelectors;\n      this.elements = {};\n      this.elRefs = elRefs; // Store elRefs passed in options for _initElements\n      this.state = {\n        knowledgeBase: null,\n        isSearching: false,\n        searchCache: new Map(),\n        fileProcessingQueue: [],\n        activeProcesses: 0,\n        lastHealthCheck: null,\n        // Track whether initialize() has completed successfully\n        initialized: false,\n        // CONSOLIDATED: No local authState - read from appModule.state\n      };\n\n      this.formatBytes = uiUtils.formatBytes;\n      this.formatDate = uiUtils.formatDate;\n      this.fileIcon = uiUtils.fileIcon;\n      this.scheduler = getDep(\"scheduler\") || { setTimeout, clearTimeout };\n\n      // Public helper for outside modules (via Proxy) to know init status\n      this.isInitialized = () => this.state.initialized === true;\n\n      // Provide all cb/utilities needed by manager/searchHandler\n      this._safeSetInnerHTML = _safeSetInnerHTML;\n      this._setButtonLoading = function (btn, isLoading, loadingText = \"Saving...\") {\n        if (!btn) return;\n        if (isLoading) {\n          btn.disabled = true;\n          btn.dataset.originalText = btn.textContent;\n          _safeSetInnerHTML(btn, `<span class=\"loading loading-spinner loading-xs\"></span> ${loadingText}`);\n        } else {\n          btn.disabled = false;\n          if (btn.dataset.originalText) {\n            btn.textContent = btn.dataset.originalText;\n            delete btn.dataset.originalText;\n          }\n        }\n      };\n\n      // Add utility methods needed by manager\n      this._showInactiveState = this._showInactiveState.bind(this);\n      this._updateStatusIndicator = this._updateStatusIndicator.bind(this);\n      this._updateStatusAlerts = this._updateStatusAlerts.bind(this);\n      this._updateUploadButtonsState = this._updateUploadButtonsState.bind(this);\n      this.renderKnowledgeBaseInfo = this.renderKnowledgeBaseInfo.bind(this);\n\n      // For model/validation logic\n      this._debounce = this._debounce.bind(this);\n\n      // Initialize handlers asynchronously\n      this.searchHandler = null;\n      this.manager = createKnowledgeBaseManager(this);\n\n      // this._bindEventHandlers(); // Call this after _initElements in initialize\n    }\n\n    async _initializeSearchHandler() {\n      try {\n        this.searchHandler = createKnowledgeBaseSearchHandler(this);\n        await this.searchHandler.initialize?.();\n        this.logger.debug(`[${MODULE}] Search handler initialized successfully.`, { context: MODULE });\n      } catch (error) {\n        this.logger.error(`[${MODULE}] Failed to initialize search handler: ${error.message}`, { error, context: MODULE });\n        this.searchHandler = null;\n      }\n    }\n\n    _initElements() {\n      const OPTIONAL_KEYS = new Set([\n        'activeSection', 'inactiveSection', 'statusBadge', 'modelSelect',\n        'searchInput', 'searchButton', // Search elements are optional (not in current HTML)\n        'kbToggle', 'reprocessButton', 'setupButton', 'settingsButton',\n        'kbNameDisplay', 'kbModelDisplay', 'kbVersionDisplay', 'kbLastUsedDisplay',\n        'knowledgeBaseFilesSection', 'knowledgeBaseFilesListContainer',\n        'kbGitHubAttachedRepoInfo', 'kbAttachedRepoUrlDisplay',\n        'kbAttachedRepoBranchDisplay', 'kbDetachRepoBtn',\n        'kbGitHubAttachForm', 'kbGitHubRepoUrlInput',\n        'kbGitHubBranchInput', 'kbGitHubFilePathsTextarea', 'kbAttachRepoBtn',\n        'knowledgeFileCount', 'knowledgeChunkCount', 'knowledgeFileSize',\n        'noResultsSection', 'topKSelect', 'resultsContainer', 'resultsSection',\n        'settingsModal', 'settingsForm', 'cancelSettingsBtn', 'deleteKnowledgeBaseBtn',\n        'resultModal', 'resultTitle', 'resultSource', 'resultScore', 'resultContent', 'useInChatBtn'\n      ]);\n      const reqEl = (key, selector) => {\n        // Prioritize elRefs if provided for a key\n        const el = this.elRefs[key] || this.domAPI.getElementById(selector);\n        if (!el && !OPTIONAL_KEYS.has(key)) {\n          throw new Error(`[${MODULE}] Missing required element/ref: ${key} (${selector})`);\n        }\n        return el;          // may be null for optional keys\n      };\n\n      for (const key in this.elementSelectors) {\n        // Remap legacy 'knowledgeNoResults' property everywhere to 'noResultsSection'\n        const selector = this.elementSelectors[key];\n        const sel = typeof selector === 'string'\n          ? (selector.startsWith('#') || selector.startsWith('.')\n            ? selector\n            : `#${selector}`)\n          : selector;\n        this.elements[key === \"noResultsSection\" ? \"noResultsSection\" : key] = this.elRefs[key] || this.domAPI.querySelector(sel);\n      }\n    }\n\n    async initialize(isVisible, kbData = null, projectId = null) {\n      if (this.state.initialized) {\n        // Already initialised – optionally update visibility only\n        if (isVisible && this.elements?.container) {\n          this.elements.container.classList.remove('hidden');\n        }\n        return;\n      }\n      // Build selector list excluding optional search/UI selectors so\n      // domReadinessService does not wait for elements that may not be\n      // present in certain templates (e.g., mobile view without KB search).\n      const OPTIONAL_KEYS = new Set([\n        'searchInput', 'searchButton', 'modelSelect',\n        'resultsContainer', 'resultsSection',\n        'noResultsSection', 'topKSelect',\n        'resultModal', 'resultTitle', 'resultSource',\n        'resultScore', 'resultContent', 'useInChatBtn'\n      ]);\n\n      const requiredSelectors = Object.entries(this.elementSelectors)\n        .filter(([key]) => !OPTIONAL_KEYS.has(key))\n        .map(([, sel]) =>\n          (sel.startsWith('#') || sel.startsWith('.')) ? sel : `#${sel}`\n        );\n\n      // Always ensure the root KB container participates in readiness check\n      if (!requiredSelectors.includes('#knowledgeTab')) {\n        requiredSelectors.push('#knowledgeTab');\n      }\n\n      this.logger.info(`[${MODULE}] Initializing. Received isVisible: ${isVisible}, kbData ID: ${kbData?.id}, projectId: ${projectId}`, { context: MODULE });\n\n      await this.domReadinessService.dependenciesAndElements({\n        domSelectors: requiredSelectors,\n        deps: ['auth', 'AppBus'], // Ensure auth and AppBus are ready for listeners\n        context: MODULE + '::initializeDOM',\n        timeout: this.app?.APP_CONFIG?.TIMEOUTS?.COMPONENT_ELEMENTS_READY ?? 8000,\n        optional: true\n      });\n      this.logger.debug(`[${MODULE}] DOM elements and core deps (auth, AppBus) ready.`, { context: MODULE });\n\n      try {\n        this._initElements();\n        await this._initializeSearchHandler();\n        this._bindEventHandlers(); // Bind handlers after elements are initialized\n\n        // Mark component as fully initialised to prevent re-initialisation.\n        this.state.initialized = true;\n      } catch (error) {\n        this.logger.error(`[${MODULE}] Failed to initialize elements or bind handlers: ${error.message}`, { error, context: MODULE });\n        this.domAPI.dispatchEvent(\n          this.domAPI.getDocument(),\n          new CustomEvent('knowledgebasecomponent:initialized', { detail: { success: false, error } })\n        );\n        this.elements.container?.classList.add(\"hidden\");\n        return;\n      }\n\n      const auth = this.DependencySystem.modules.get('auth');\n      const authIsReady =\n        typeof auth?.isReady === 'function'\n          ? auth.isReady()\n          : this.app?.state?.isReady === true;\n      if (!authIsReady) {\n        this.logger.info(\n          `[${MODULE}] Auth module not ready yet, waiting for authReady event.`,\n          { context: MODULE }\n        );\n        await new Promise((resolve) => {\n          // Prefer AuthBus, but fall back to document-level event for safety\n          const readyTarget = auth?.AuthBus || this.domAPI.getDocument();\n          this.eventHandlers.trackListener(\n            readyTarget,\n            'authReady',\n            () => {\n              this.logger.info(\n                `[${MODULE}] Received authReady event during init.`,\n                { context: MODULE }\n              );\n              resolve();\n            },\n            { once: true, context: MODULE, description: 'KB_Init_AuthReady' }\n          );\n        });\n      }\n      this.logger.info(`[${MODULE}] Auth module is now ready. App authenticated: ${this.app.state.isAuthenticated}`, { context: MODULE });\n\n      if (!this.app.state.isAuthenticated) {\n        this.logger.warn(`[${MODULE}] User not authenticated. Showing inactive state and hiding component.`, { context: MODULE });\n        this._showInactiveState();\n        this.elements.container?.classList.add(\"hidden\");\n        this.domAPI.dispatchEvent(\n          this.domAPI.getDocument(),\n          new CustomEvent('knowledgebasecomponent:initialized', { detail: { success: true, message: 'Initialized but hidden due to auth state.' } })\n        );\n        return;\n      }\n\n      this.logger.info(`[${MODULE}] First-time initialization logic running.`, { context: MODULE });\n\n      await this.renderOrClear(kbData, projectId);\n\n      if (this.elements.container) {\n        this.elements.container.classList.toggle(\"hidden\", !isVisible);\n        this.elements.container.classList.toggle(\"pointer-events-none\", !isVisible);\n      }\n\n      this.domAPI.dispatchEvent(\n        this.domAPI.getDocument(),\n        new CustomEvent('knowledgebasecomponent:initialized', { detail: { success: true } })\n      );\n      this.logger.info(`[${MODULE}] Initialization complete. Final visibility: ${isVisible}`, { context: MODULE });\n    }\n\n    async renderOrClear(kbData, projectId) {\n      if (kbData) {\n        this.logger.debug(`[${MODULE}] Rendering with provided kbData.`, { kbId: kbData.id, projectId, context: MODULE });\n        await this.renderKnowledgeBaseInfo(kbData, projectId);\n      } else if (projectId) {\n        this.logger.debug(`[${MODULE}] No kbData, but projectId ${projectId} provided. Attempting to load KB via manager.`, { context: MODULE });\n        // This implies manager should fetch if only projectId is given.\n        // For now, KBM's loadKnowledgeBase is called by projectManager, not directly by component on project change without kbData.\n        // So, if kbData is null here, it means no KB exists or it shouldn't be shown.\n        this._showInactiveState(); // Show inactive if no explicit kbData\n        this.domAPI.dispatchEvent(\n          this.domAPI.getDocument(),\n          new CustomEvent('projectKnowledgeBaseRendered', { detail: { projectId } })\n        );\n      } else {\n        this.logger.debug(`[${MODULE}] No kbData or projectId. Showing inactive state.`, { context: MODULE });\n        this._showInactiveState();\n      }\n    }\n\n    _bindEventHandlers() {\n      this.logger.debug(`[${MODULE}] Binding event handlers.`, { context: MODULE });\n      const EH = this.eventHandlers;\n      const DA = this.domAPI;\n      const MODULE_CONTEXT = MODULE; // Defined at the top of the factory\n\n      const addListener = (elRef, type, fn, opts = {}) => {\n        const element = typeof elRef === 'string' ? this.elements[elRef] : elRef;\n        if (element) {\n          EH.trackListener(element, type, fn, { ...opts, context: MODULE_CONTEXT, description: opts.description || `${elRef}_${type}` });\n        } else {\n          this.logger.warn(`[${MODULE}] Element ref \"${elRef}\" not found for listener type \"${type}\".`, { context: MODULE_CONTEXT });\n        }\n      };\n\n      // Search UI\n      addListener(\"searchButton\", \"click\", () => {\n        if (this.searchHandler && typeof this.searchHandler.triggerSearch === 'function') {\n          this.searchHandler.triggerSearch();\n        } else {\n          this.logger.error(`[${MODULE}] searchHandler.triggerSearch is not available`, {\n            searchHandler: this.searchHandler,\n            context: MODULE_CONTEXT\n          });\n        }\n      });\n      addListener(\"searchInput\", \"input\", (e) => {\n        if (this.searchHandler && typeof this.searchHandler.debouncedSearch === 'function') {\n          this.searchHandler.debouncedSearch(e.target.value);\n        } else {\n          this.logger.error(`[${MODULE}] searchHandler.debouncedSearch is not available`, {\n            searchHandler: this.searchHandler,\n            context: MODULE_CONTEXT\n          });\n        }\n      });\n      addListener(\"searchInput\", \"keyup\", (e) => {\n        if (e.key === \"Enter\") {\n          if (this.searchHandler && typeof this.searchHandler.triggerSearch === 'function') {\n            this.searchHandler.triggerSearch();\n          } else {\n            this.logger.error(`[${MODULE}] searchHandler.triggerSearch is not available`, {\n              searchHandler: this.searchHandler,\n              context: MODULE_CONTEXT\n            });\n          }\n        }\n      });\n      addListener(\"resultModal\", \"keydown\", (e) => {\n        if (this.searchHandler && typeof this.searchHandler.handleResultModalKeydown === 'function') {\n          this.searchHandler.handleResultModalKeydown(e);\n        } else {\n          this.logger.error(`[${MODULE}] searchHandler.handleResultModalKeydown is not available`, {\n            searchHandler: this.searchHandler,\n            context: MODULE_CONTEXT\n          });\n        }\n      });\n\n      // Management UI\n      addListener(\"kbToggle\", \"change\", (e) => this.manager.toggleKnowledgeBase(e.target.checked));\n      addListener(\"reprocessButton\", \"click\", () => {\n        const pid = this._getCurrentProjectId();\n        if (pid) this.manager.reprocessFiles(pid); else this.logger.warn(`[${MODULE}] Reprocess clicked but no current project ID found.`, { context: MODULE_CONTEXT });\n      });\n\n      const showModalHandler = () => this.manager.showKnowledgeBaseModal();\n      addListener(\"setupButton\", \"click\", showModalHandler);\n      addListener(\"settingsButton\", \"click\", showModalHandler);\n      addListener(\"settingsForm\", \"submit\", (e) => this.manager.handleKnowledgeBaseFormSubmit(e));\n      addListener(\"cancelSettingsBtn\", \"click\", () => this.manager.hideKnowledgeBaseModal());\n      addListener(\"deleteKnowledgeBaseBtn\", \"click\", () => this.manager.handleDeleteKnowledgeBase());\n      addListener(\"modelSelect\", \"change\", () => this.manager.validateSelectedModelDimensions());\n\n      // GitHub integration\n      addListener(\"kbAttachRepoBtn\", \"click\", () => this.manager.handleAttachGitHubRepo());\n      addListener(\"kbDetachRepoBtn\", \"click\", () => this.manager.handleDetachGitHubRepo());\n\n      // Listen to AppBus for currentProjectChanged\n      const appBus = this.DependencySystem.modules.get('AppBus');\n      if (appBus) {\n        EH.trackListener(appBus, 'currentProjectChanged', this._handleAppCurrentProjectChanged.bind(this),\n          { context: MODULE, description: 'KBComponent_AppBus_CurrentProjectChanged' });\n        this.logger.debug(`[${MODULE}] Subscribed to AppBus \"currentProjectChanged\".`, { context: MODULE });\n      } else {\n        this.logger.error(`[${MODULE}] AppBus not available. Cannot subscribe to \"currentProjectChanged\". Critical for functionality.`, { context: MODULE });\n      }\n\n      // Listen to AuthBus for authStateChanged (more direct than document)\n      const auth = this.DependencySystem.modules.get('auth');\n      if (auth?.AuthBus) {\n        EH.trackListener(auth.AuthBus, \"authStateChanged\", (e) => {\n          this.logger.debug(`[${MODULE}] AuthBus authStateChanged event received.`, { detail: e.detail, context: MODULE_CONTEXT });\n          this._handleAuthStateChange(e.detail?.authenticated);\n        }, { description: \"KB AuthBus authStateChanged Listener\", context: MODULE_CONTEXT });\n        this.logger.debug(`[${MODULE}] Subscribed to AuthBus \"authStateChanged\".`, { context: MODULE });\n      } else {\n        // Fallback to document listener if AuthBus isn't available (though it should be via DI)\n        this.logger.warn(`[${MODULE}] AuthBus not available. Falling back to document listener for \"authStateChanged\".`, { context: MODULE });\n        addListener(this.domAPI.getDocument(), \"authStateChanged\", (e) => {\n          this._handleAuthStateChange(e.detail?.authenticated);\n        }, { description: \"KB Document authStateChanged Listener (Fallback)\", context: MODULE_CONTEXT });\n      }\n    }\n\n    _handleAppCurrentProjectChanged(event) {\n      const newProject = event?.detail?.project;\n      const oldProject = event?.detail?.previousProject; // May be useful for cleanup\n      this.logger.info(`[${MODULE}] Event \"currentProjectChanged\" received via AppBus.`, {\n        newProjectId: newProject?.id,\n        oldProjectId: oldProject?.id,\n        currentInternalKBProjectId: this.state.knowledgeBase?.project_id,\n        context: MODULE\n      });\n\n      if (newProject?.id && newProject.id !== this.state.knowledgeBase?.project_id) {\n        this.logger.info(`[${MODULE}] New project selected (${newProject.id}). Resetting KB view. Manager will load new KB.`, { context: MODULE });\n        // Reset UI to prepare for new project's KB.\n        // The actual fetching of KB data is expected to be triggered by an orchestrator (e.g. projectDetailsComponent)\n        // which would call this.initialize() or this.manager.loadKnowledgeBase()\n        // For now, simply clear and show inactive.\n        this._showInactiveState();\n        this.state.knowledgeBase = null; // Clear internal KB state\n        // It is assumed another component (like projectDetailsComponent) will call this.initialize()\n        // with the new project's KB data or trigger manager.loadKnowledgeBase().\n        // If this component should be fully autonomous, it would call:\n        // this.manager.loadKnowledgeBase(newProject.id);\n      } else if (!newProject && this.state.knowledgeBase) {\n        this.logger.info(`[${MODULE}] Project context cleared. Resetting KB view.`, { context: MODULE });\n        this._showInactiveState();\n        this.state.knowledgeBase = null;\n      }\n    }\n\n    _getCurrentProjectId() {\n      if (typeof this.app.getProjectId === \"function\") {\n        const pid = this.app.getProjectId();\n        if (this.validateUUID(pid)) return pid;\n      }\n      const cur = this.projectManager.currentProject;\n      if (cur?.id && this.validateUUID(cur.id)) {\n        return cur.id;\n      }\n      // notification/logging removed\n      return null;\n    }\n\n    async renderKnowledgeBaseInfo(kbData, projectId = null) {\n      if (!kbData) {\n        this._showInactiveState();\n        this.elements.knowledgeBaseFilesSection?.classList.add(\"hidden\");\n        if (projectId) {\n          this.domAPI.dispatchEvent(\n            this.domAPI.getDocument(),\n            new CustomEvent('projectKnowledgeBaseRendered', { detail: { projectId } })\n          );\n        }\n        return;\n      }\n\n      this.state.knowledgeBase = kbData;\n      const currentProjectId = projectId || kbData.project_id || this._getCurrentProjectId();\n      this.logger.info(`[${MODULE}] Rendering KB Info for KB ID: ${kbData.id}, Project ID: ${currentProjectId}`, { kbData, context: MODULE });\n\n      if (this.elements.activeSection?.dataset) {\n        this.elements.activeSection.dataset.projectId = currentProjectId || \"\";\n      }\n      this._updateBasicInfo(kbData);\n      this.manager._updateModelSelection(kbData.embedding_model); // Manager might need this method if it manipulates the select\n      this._updateStatusIndicator(kbData.is_active !== false);\n\n      this.elements.activeSection?.classList.remove(\"hidden\");\n      this.elements.inactiveSection?.classList?.add(\"hidden\");\n      if (this.elements.kbToggle) {\n        this.elements.kbToggle.checked = kbData.is_active !== false;\n      }\n\n      try {\n        if (kbData.is_active !== false && kbData.id && currentProjectId) {\n          this.logger.debug(`[${MODULE}] KB is active. Loading health and files.`, { kbId: kbData.id, projectId: currentProjectId, context: MODULE });\n          this.manager.loadKnowledgeBaseHealth(kbData.id).catch(err => this.logger.warn(`[${MODULE}] Error loading KB health (non-critical).`, { err, context: MODULE }));\n          this.manager.loadKnowledgeBaseFiles(currentProjectId, kbData.id); // This should handle its own errors and UI updates\n        } else {\n          this.logger.debug(`[${MODULE}] KB is inactive or no ID. Hiding files section and clearing list.`, { kbIsActive: kbData.is_active, kbId: kbData.id, context: MODULE });\n          this.elements.knowledgeBaseFilesSection?.classList.add(\"hidden\");\n          if (this.manager._renderKnowledgeBaseFiles) { // Assuming manager has this method for direct rendering\n            this.manager._renderKnowledgeBaseFiles({ files: [], pagination: { total: 0 } });\n          } else {\n            const container = this.elements.knowledgeBaseFilesListContainer;\n            if (container) _safeSetInnerHTML(container, '<p class=\"text-base-content/60 text-center py-4\">Knowledge Base is inactive or has no files.</p>');\n          }\n        }\n        this._updateStatusAlerts(kbData); // This seems to be for additional alerts, not main status\n        this._updateUploadButtonsState(); // Update based on new KB state\n\n        if (currentProjectId) {\n          this.domAPI.dispatchEvent(\n            this.domAPI.getDocument(),\n            new CustomEvent('projectKnowledgeBaseRendered', { detail: { projectId: currentProjectId, knowledgeBaseId: kbData.id } })\n          );\n        }\n      } catch (err) {\n        this.logger.error(`[${MODULE}] Error during post-render KB info processing (health/files load).`, { error: err, context: MODULE });\n        // Ensure event is still dispatched if there was a project ID\n        if (currentProjectId) {\n          this.domAPI.dispatchEvent(\n            this.domAPI.getDocument(),\n            new CustomEvent('projectKnowledgeBaseRendered', { detail: { projectId: currentProjectId, error: err.message } })\n          );\n        }\n      }\n    }\n\n    _updateBasicInfo(kb) {\n      const { kbNameDisplay, kbModelDisplay, kbVersionDisplay, kbLastUsedDisplay } = this.elements;\n      if (kbNameDisplay) kbNameDisplay.textContent = kb.name || \"Project Knowledge Base\";\n      if (kbModelDisplay) kbModelDisplay.textContent = kb.embedding_model || \"Not Set\";\n      if (kbVersionDisplay) kbVersionDisplay.textContent = kb.version ? `v${kb.version}` : \"v1\";\n      if (kbLastUsedDisplay) kbLastUsedDisplay.textContent = kb.last_used ? this.formatDate(kb.last_used) : \"Never used\";\n    }\n\n    _updateStatusIndicator(isActive) {\n      const badge = this.elements.statusBadge;\n      if (!badge) return;\n      badge.className = `badge ${isActive ? \"badge-success\" : \"badge-warning\"} badge-sm`;\n      badge.textContent = isActive ? \"Active\" : \"Inactive\";\n    }\n\n    _showInactiveState() {\n      this.logger.info(`[${MODULE}] Showing inactive state.`, { context: MODULE });\n      this.state.knowledgeBase = null; // Clear internal state\n\n      this.elements.activeSection?.classList.add(\"hidden\");\n      this.elements.inactiveSection?.classList.remove(\"hidden\");\n      this.elements.knowledgeBaseFilesSection?.classList.add(\"hidden\");\n\n      // Clear displayed KB info\n      if (this.elements.kbNameDisplay) this.elements.kbNameDisplay.textContent = \"N/A\";\n      if (this.elements.kbModelDisplay) this.elements.kbModelDisplay.textContent = \"N/A\";\n      if (this.elements.kbVersionDisplay) this.elements.kbVersionDisplay.textContent = \"N/A\";\n      if (this.elements.kbLastUsedDisplay) this.elements.kbLastUsedDisplay.textContent = \"N/A\";\n      if (this.elements.knowledgeFileCount) this.elements.knowledgeFileCount.textContent = \"0\";\n      if (this.elements.knowledgeChunkCount) this.elements.knowledgeChunkCount.textContent = \"0\";\n      if (this.elements.knowledgeFileSize) this.elements.knowledgeFileSize.textContent = this.formatBytes(0);\n\n\n      if (this.manager?._renderKnowledgeBaseFiles) { // Ask manager to clear its file list UI\n        this.manager._renderKnowledgeBaseFiles({ files: [], pagination: { total: 0 } });\n      } else if (this.elements.knowledgeBaseFilesListContainer) { // Fallback if manager method not available\n        _safeSetInnerHTML(this.elements.knowledgeBaseFilesListContainer, '<p class=\"text-base-content/60 text-center py-4\">No Knowledge Base active or selected.</p>');\n      }\n\n      this._updateStatusIndicator(false); // Set status badge to \"Inactive\"\n      // Consider if an alert is always needed or if the UI state is clear enough\n      // this._showStatusAlert(\"Knowledge Base is not active or configured for this project.\", \"info\");\n      this._updateUploadButtonsState(); // Disable KB-dependent buttons\n    }\n\n    _updateUploadButtonsState() {\n      const hasKB = !!this.state.knowledgeBase;\n      const isActive = hasKB && this.state.knowledgeBase.is_active !== false;\n      const kbDependentEls = this.domAPI.querySelectorAll(\"[data-requires-kb='true']\", this.elements.container);\n      kbDependentEls.forEach((el) => {\n        const disabled = !hasKB || !isActive;\n        el.disabled = disabled;\n        el.classList.toggle(\"opacity-50\", disabled);\n        el.classList.toggle(\"cursor-not-allowed\", disabled);\n        el.title = disabled ? (!hasKB ? \"Setup Knowledge Base first.\" : \"Knowledge Base must be active.\") : \"Ready to use Knowledge Base features.\";\n      });\n      if (this.elements.reprocessButton) {\n        // use the element already captured during _initElements()\n        const fileCountEl = this.elements.knowledgeFileCount\n                          || this.domAPI.getElementById(\"kbDocCount\"); // fallback\n        const fileCount   = parseInt(fileCountEl?.textContent || \"0\", 10);\n        const reDisabled = !hasKB || !isActive || fileCount === 0;\n        this.elements.reprocessButton.disabled = reDisabled;\n        this.elements.reprocessButton.classList.toggle(\"opacity-50\", reDisabled);\n        this.elements.reprocessButton.classList.toggle(\"cursor-not-allowed\", reDisabled);\n        this.elements.reprocessButton.title = !hasKB ? \"Setup Knowledge Base first.\" : !isActive ? \"Knowledge Base must be active.\" : fileCount === 0 ? \"No files to reprocess.\" : \"Reprocess files.\";\n      }\n    }\n\n    _updateStatusAlerts(kb) {\n      // notification/logging removed; adjust as needed if visual indicator required\n    }\n\n    _showStatusAlert(message, type = \"info\") {\n      const statusIndicator = this.domAPI.getElementById(\"kbStatusIndicator\");\n      if (!statusIndicator) {\n        return;\n      }\n      statusIndicator.textContent = \"\";\n      let cls = \"alert-info\";\n      if (type === \"success\") cls = \"alert-success\";\n      else if (type === \"warning\") cls = \"alert-warning\";\n      else if (type === \"error\") cls = \"alert-error\";\n      const alertDiv = this.domAPI.createElement(\"div\");\n      alertDiv.className = `alert ${cls} shadow-xs text-sm py-2 px-3`;\n      alertDiv.setAttribute(\"role\", \"alert\");\n      _safeSetInnerHTML(alertDiv, `<span>${message}</span>`);\n      if (type !== \"error\") {\n        const btn = this.domAPI.createElement(\"button\");\n        btn.className = \"btn btn-xs btn-ghost btn-circle\";\n        btn.textContent = \"✕\";\n        this.eventHandlers.trackListener(\n          btn,\n          'click',\n          () => this.domAPI.removeChild(statusIndicator, alertDiv),\n          { context: MODULE, description: 'dismissStatusAlert' }\n        );\n        this.domAPI.appendChild(alertDiv, btn);\n      }\n      this.domAPI.appendChild(statusIndicator, alertDiv);\n    }\n\n    _debounce(fn, wait) {\n      let id;\n      return (...a) => {\n        this.scheduler.clearTimeout?.(id);\n        id = this.scheduler.setTimeout?.(() => fn.apply(this, a), wait);\n      };\n    }\n\n    _handleAuthStateChange(authenticated) {\n      this.logger.debug(`[${MODULE}] Auth state changed. Authenticated: ${authenticated}`, { context: MODULE });\n      // CONSOLIDATED: No local authState storage - read from appModule.state when needed\n\n      // List of elements that depend on authentication for enabling/disabling\n      const authDependentElements = [\n        this.elements.searchButton, this.elements.reprocessButton, this.elements.setupButton,\n        this.elements.kbToggle, this.elements.settingsButton, this.elements.deleteKnowledgeBaseBtn,\n        this.elements.kbAttachRepoBtn, this.elements.kbDetachRepoBtn,\n        // Add other elements like file input / upload button if they are directly part of this component's elements\n      ];\n\n      authDependentElements.forEach((el) => {\n        if (!el) return; // Skip if an optional element isn't found\n        el.disabled = !authenticated;\n        el.classList.toggle(\"opacity-50\", !authenticated);\n        el.classList.toggle(\"cursor-not-allowed\", !authenticated);\n        if (!authenticated) {\n          el.title = \"Authentication required.\";\n        } else {\n          el.removeAttribute(\"title\"); // Or set to its functional title\n        }\n      });\n\n      if (!authenticated) {\n        this.logger.info(`[${MODULE}] User unauthenticated. Clearing KB data and showing inactive state.`, { context: MODULE });\n        this._showStatusAlert(\"Authentication required to use Knowledge Base features.\", \"warning\");\n        // Clear KB data and UI to prevent interaction with stale data\n        this.state.knowledgeBase = null;\n        this._showInactiveState();\n      } else {\n        // User is authenticated. If there's a current project, KB data might need to be (re)loaded\n        // This is often handled by currentProjectChanged or initial load sequence.\n        // For now, just ensure UI elements are enabled.\n        this.logger.debug(`[${MODULE}] User authenticated. KB UI elements enabled. KB data will load if project context is active.`, { context: MODULE });\n        // Potentially re-check/re-load KB if a project is active:\n        // const currentProjectId = this._getCurrentProjectId();\n        // if (currentProjectId) { this.manager.loadKnowledgeBase(currentProjectId); }\n      }\n    }\n  }\n\n  class KnowledgeBaseComponentWithDestroy extends KnowledgeBaseComponent {\n    destroy() {\n      const ds = this.getDep('DependencySystem');\n      if (ds && typeof ds.cleanupModuleListeners === 'function') {\n        ds.cleanupModuleListeners(MODULE);\n      } else if (this.eventHandlers && typeof this.eventHandlers.cleanupListeners === 'function') {\n        this.eventHandlers.cleanupListeners({ context: MODULE });\n      }\n      // destroy complete\n    }\n  }\n\n // --- public API export (no spread-clone) ---\n const instance = new KnowledgeBaseComponentWithDestroy();\n\n // patch-in canonical cleanup that also clears listeners\n const _origCleanup = typeof instance.cleanup === 'function'\n     ? instance.cleanup.bind(instance)\n     : () => {};\n\n instance.cleanup = function (...args) {\n   (instance.getDep('DependencySystem')?.modules.get('eventHandlers')\n     || instance.eventHandlers)\n     ?.cleanupListeners({ context: 'KnowledgeBaseComponent' });\n   _origCleanup(...args);\n };\n\n // --- never expose `.state` directly – wrap instance ------------------\n const publicAPI = new Proxy(instance, {\n   get (t, p, r) {\n     if (p === 'state') throw new Error('[KBComponent] state is private');\n     const v = Reflect.get(t, p, r);\n     return (typeof v === 'function') ? v.bind(t) : v;\n   },\n   set (t, p, v, r) {\n     if (p === 'state') throw new Error('[KBComponent] state is read-only');\n     return Reflect.set(t, p, v, r);\n   },\n   has (t, p)                { return (p === 'state') ? false : Reflect.has(t, p); },\n   ownKeys (t)               { return Reflect.ownKeys(t).filter(k => k !== 'state'); },\n   getOwnPropertyDescriptor (t, p) {\n     return (p === 'state') ? undefined : Reflect.getOwnPropertyDescriptor(t, p);\n   }\n });\n\n return publicAPI;\n}\n\nexport default createKnowledgeBaseComponent;\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 38650,
          "_transferSize": 39839,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.364Z",
        "time": 222.34400000888854,
        "timings": {
          "blocked": 171.3429999994915,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07800000000000296,
          "wait": 49.22100000073388,
          "receive": 1.7020000086631626,
          "_blocked_queueing": 4.253999999491498,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126320",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 34
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/project-details-enhancements.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1483,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "28135"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"a4b52e9060c84caa0486997157b1a3a9\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 17:54:11 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 28135,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * project-details-enhancements.js\n * Implements enhanced UI features for the project details and project list pages,\n * following the styling in the corresponding CSS files\n */\n\nimport { SELECTORS } from \"./utils/selectorConstants.js\";\nimport { createPullToRefresh } from \"./utils/pullToRefresh.js\";\nimport { getSafeHandler } from './utils/getSafeHandler.js';\n\nexport function createProjectDetailsEnhancements({\n  domAPI,\n  browserService,\n  eventHandlers,\n  domReadinessService,\n  logger,\n  sanitizer,\n  DependencySystem\n} = {}) {\n  // Validate required dependencies\n  if (!domAPI) throw new Error('[createProjectDetailsEnhancements] Missing dependency: domAPI');\n  if (!browserService) throw new Error('[createProjectDetailsEnhancements] Missing dependency: browserService');\n  if (!eventHandlers) throw new Error('[createProjectDetailsEnhancements] Missing dependency: eventHandlers');\n  if (!domReadinessService) throw new Error('[createProjectDetailsEnhancements] Missing dependency: domReadinessService');\n  if (!logger) throw new Error('[createProjectDetailsEnhancements] Missing dependency: logger');\n  if (!sanitizer) throw new Error('[createProjectDetailsEnhancements] Missing dependency: sanitizer');\n  if (!DependencySystem) throw new Error('Missing DependencySystem');\n  // Use canonical safeHandler from DI, normalize for both direct function or object with .safeHandler (early bootstrap)\n  const safeHandler = getSafeHandler(DependencySystem);\n  if (!safeHandler) throw new Error('safeHandler missing from DependencySystem');\n\n  // State management\n  const state = {\n    activeTab: 'chat',\n    currentFilter: 'all',\n    searchTerm: ''\n  };\n\n  // Event tracking context\n  const CONTEXT = 'projectEnhancements';\n\n  /**\n   * Generate a simple sparkline visualization with random data\n   * @param {number} points Number of data points\n   * @param {number} lastValue Last value to end the sparkline (usually current percentage)\n   * @returns {string} HTML for the sparkline\n   */\n  function generateSparkline(points, lastValue) {\n    try {\n      // Generate random data that trends toward the lastValue\n      const data = [];\n      const minValue = Math.max(0, lastValue - 25);\n\n      for (let i = 0; i < points - 1; i++) {\n        const value = minValue + Math.random() * (lastValue - minValue) * (i / (points - 1));\n        data.push(Math.floor(value));\n      }\n\n      // Add the actual lastValue as the final point\n      data.push(lastValue);\n\n      // Create the sparkline SVG\n      let sparkContent = `<div class=\"line\">`;\n\n      // Add points\n      data.forEach((value, index) => {\n        const x = (index / (points - 1)) * 100;\n        const y = 100 - value; // Invert since SVG 0,0 is top-left\n\n        sparkContent += `<div class=\"point\" style=\"left: ${x}%; top: ${y}%;\"></div>`;\n      });\n\n      sparkContent += `</div>`;\n      return sparkContent;\n    } catch (error) {\n      logger.error('[generateSparkline]', error, { context: CONTEXT });\n      return '';\n    }\n  }\n\n  /**\n   * Add a floating action button (FAB) to the project details page\n   * with enhanced mobile interactions\n   */\n  function addFloatingActionButton() {\n    try {\n      // --- Use existing FAB if present, else create it ---\n      const FAB_ID = 'projectFab';\n      let fabElement = domAPI.getElementById(FAB_ID);          // ← reuse if already in HTML\n      if (!fabElement) {                                       // fallback: create only if missing\n        fabElement = domAPI.createElement('button');\n        fabElement.id = FAB_ID;\n        fabElement.className = 'project-fab';\n        fabElement.title = 'Quick Actions';\n        fabElement.setAttribute('aria-label', 'Quick Actions');\n        domAPI.setInnerHTML(\n          fabElement,\n          sanitizer.sanitize(`<svg xmlns=\"http://www.w3.org/2000/svg\"\n                                    class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                                    stroke=\"currentColor\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                                      stroke-width=\"2\"\n                                      d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                              </svg>`)\n        );\n\n        // append to main details container (always present in template)\n        const root =\n          domAPI.getElementById('projectDetailsContainer') ||\n          domAPI.getElementById('projectDetailsView') ||\n          domAPI.getBody();\n        domAPI.appendChild(root, fabElement);\n      }\n\n      // Add click handler only once\n      const handleFabClick = (e) => {\n        e.preventDefault();\n\n        // Determine current tab and perform relevant action\n        let targetBtn;\n\n        switch (state.activeTab) {\n          case 'files':\n            // Trigger file upload\n            targetBtn = domAPI.getElementById('uploadFileBtn');\n            break;\n          case 'chat':\n            // Create new conversation\n            targetBtn = domAPI.getElementById('newConversationBtn');\n            break;\n          case 'knowledge':\n            // Search knowledge base\n            targetBtn = domAPI.getElementById('searchKnowledgeBtn');\n            break;\n          default:\n            // Edit project details\n            targetBtn = domAPI.getElementById('editProjectBtn');\n            break;\n        }\n\n        if (targetBtn) {\n          // Add haptic feedback on mobile if available\n          if (browserService && browserService.isMobile && browserService.getWindow()?.navigator?.vibrate) {\n            browserService.getWindow().navigator.vibrate(50); // Short vibration for feedback\n          }\n\n          // Visual feedback - temporary animation\n          fabElement.classList.add('active');\n          browserService.setTimeout(() => fabElement.classList.remove('active'), 300);\n\n          targetBtn.click();\n        }\n      };\n\n      // Guard against duplicate wiring\n      if (fabElement.dataset.bound !== '1') {\n        eventHandlers.trackListener(\n          fabElement,\n          'click',\n          safeHandler(handleFabClick, 'projectFabClick'),\n          { context: CONTEXT, description: 'FAB main click' }\n        );\n        fabElement.dataset.bound = '1';\n      }\n\n      // For mobile: Add reminder pulse after 5 seconds of inactivity\n      // to subtly draw attention to the FAB\n      if (browserService && browserService.isMobile) {\n        browserService.setTimeout(() => {\n          // Only add pulse if user hasn't interacted with FAB yet\n          if (!fabElement.classList.contains('active')) {\n            fabElement.classList.add('reminder-pulse');\n            // Remove pulse after 5 seconds\n            browserService.setTimeout(() => fabElement.classList.remove('reminder-pulse'), 5000);\n          }\n        }, 5000);\n\n        // Add touch feedback\n        eventHandlers.trackListener(\n          fabElement,\n          'touchstart',\n          () => {\n            fabElement.style.transform = 'scale(0.95)';\n            fabElement.classList.remove('reminder-pulse');\n          },\n          { context: CONTEXT }\n        );\n\n        eventHandlers.trackListener(\n          fabElement,\n          'touchend',\n          () => {\n            fabElement.style.transform = 'scale(1)';\n          },\n          { context: CONTEXT }\n        );\n      }\n    } catch (error) {\n      logger.error('[addFloatingActionButton]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Enhance empty state displays with more visual appeal\n   */\n  function enhanceEmptyStates() {\n    try {\n      // Find all empty state elements\n      const emptyStates = domAPI.querySelectorAll('.empty-state');\n\n      emptyStates.forEach(emptyState => {\n        // Skip if already enhanced\n        if (emptyState.classList.contains('enhanced')) return;\n\n        // Create enhanced empty state element\n        const enhancedEmptyState = domAPI.createElement('div');\n        enhancedEmptyState.className = 'empty-state enhanced';\n\n        // Get parent ID to determine context\n        const parentId = emptyState.parentElement?.id || '';\n        const message = emptyState.textContent || '';\n\n        // Customize based on context\n        let icon = '';\n        let title = '';\n        let description = '';\n\n        if (parentId.includes('filesList')) {\n          icon = `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n          </svg>`;\n          title = 'No Files Uploaded';\n          description = 'Upload files to use in your conversations';\n        } else if (parentId.includes('artifactsList')) {\n          icon = `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z\" />\n          </svg>`;\n          title = 'No Artifacts Generated';\n          description = 'Artifacts will appear here when created during conversations';\n        } else if (parentId.includes('conversationsList')) {\n          icon = `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\" />\n          </svg>`;\n          title = 'No Conversations Yet';\n          description = 'Start a new conversation to chat with the AI';\n        } else if (parentId.includes('knowledgeResults')) {\n          icon = `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n          </svg>`;\n          title = 'Knowledge Search';\n          description = 'Search your project knowledge base';\n        } else {\n          icon = `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>`;\n          title = 'No Content';\n          description = message;\n        }\n\n        // Construct the enhanced empty state HTML\n        domAPI.setInnerHTML(enhancedEmptyState, sanitizer.sanitize(`\n          <div class=\"empty-state-icon\">${icon}</div>\n          <h4 class=\"empty-state-title\">${title}</h4>\n          <p class=\"empty-state-description\">${description}</p>\n        `));\n\n        // Replace the original empty state with the enhanced one\n        emptyState.replaceWith(enhancedEmptyState);\n      });\n    } catch (error) {\n      logger.error('[enhanceEmptyStates]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n * Track active tab changes to update FAB behavior\n */\n  function setupTabTracking() {\n    try {\n      const tabButtons = domAPI.querySelectorAll('.project-tab');\n\n      tabButtons.forEach(button => {\n        const tabHandler = (e) => {\n          const tabId = button.getAttribute('data-tab');\n          if (tabId) {\n            state.activeTab = tabId;\n\n            // Update FAB visibility based on tab\n            const fab = domAPI.getElementById('projectFab');\n            if (fab) {\n              // Always show FAB, but change its appearance based on context\n              const tabToIconMap = {\n                files: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" /></svg>',\n                chat: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" /></svg>',\n                knowledge: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg>',\n                details: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" /></svg>',\n                artifacts: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>'\n              };\n\n              // Update icon based on tab\n              if (tabToIconMap[tabId]) {\n                domAPI.setInnerHTML(fab, sanitizer.sanitize(tabToIconMap[tabId]));\n              }\n            }\n          }\n        };\n\n        // Add click handler to track tab changes\n        eventHandlers.trackListener(\n          button,\n          'click',\n          safeHandler(tabHandler, 'tabClick'),\n          { context: CONTEXT }\n        );\n\n        // Check if this tab is already active\n        if (button.classList.contains('active')) {\n          const tabId = button.getAttribute('data-tab');\n          if (tabId) {\n            state.activeTab = tabId;\n          }\n        }\n      });\n    } catch (error) {\n      logger.error('[setupTabTracking]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Add visual enhancements to project cards\n   */\n  function enhanceProjectCards() {\n    try {\n      // Find all project cards\n      const projectCards = domAPI.querySelectorAll('.project-card');\n      if (projectCards.length === 0) return;\n\n      projectCards.forEach((card, index) => {\n        // Add animation delay for staggered appearance\n        card.style.animationDelay = `${index * 50}ms`;\n\n        // Enhance the badges for pinned and archived projects\n        const badges = card.querySelector('.flex.gap-1');\n        if (badges) {\n          const badgeElems = badges.querySelectorAll('span');\n\n          badgeElems.forEach(badge => {\n            const tip = badge.dataset.tip;\n            if (tip === 'Pinned') {\n              domAPI.setInnerHTML(badge, sanitizer.sanitize(`\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\" />\n                </svg>\n              `));\n              badge.classList.add('text-warning');\n            } else if (tip === 'Archived') {\n              domAPI.setInnerHTML(badge, sanitizer.sanitize(`\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\" />\n                </svg>\n              `));\n              badge.classList.add('text-error');\n            }\n          });\n        }\n\n        // Add hover effect for cards\n        eventHandlers.trackListener(\n          card,\n          'mouseenter',\n          () => {\n            card.classList.add('hover');\n          },\n          { context: CONTEXT }\n        );\n\n        eventHandlers.trackListener(\n          card,\n          'mouseleave',\n          () => {\n            card.classList.remove('hover');\n          },\n          { context: CONTEXT }\n        );\n      });\n    } catch (error) {\n      logger.error('[enhanceProjectCards]', error, { context: CONTEXT });\n    }\n  }\n\n\n  /**\n   * Initialize project list enhancements\n   */\n  async function initializeProjectList() {\n    try {\n      // Wait for DOM to be ready for project list\n      await domReadinessService.dependenciesAndElements({\n        domSelectors: [SELECTORS.projectListContainer],\n        context: CONTEXT\n      });\n\n      // Apply project list enhancements\n      enhanceProjectCards();\n      setupProjectFilters();\n\n      logger.info('[initializeProjectList] Project list enhancements initialized', {\n        context: CONTEXT\n      });\n    } catch (error) {\n      logger.error('[initializeProjectList]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Setup project list filtering and search\n   */\n  function setupProjectFilters() {\n    try {\n      // Get filter buttons and search input\n      const filterButtons = domAPI.querySelectorAll('.project-filter-btn');\n      const searchInput = domAPI.getElementById('projectSearchInput');\n\n      // Add click handlers to filter buttons\n      filterButtons.forEach(button => {\n        const filter = button.dataset.filter || 'all';\n\n        eventHandlers.trackListener(\n          button,\n          'click',\n          safeHandler(() => {\n            // Update active filter\n            state.currentFilter = filter;\n\n            // Update active button state\n            filterButtons.forEach(btn => {\n              if (btn.dataset.filter === filter) {\n                btn.classList.add('active');\n              } else {\n                btn.classList.remove('active');\n              }\n            });\n\n            // Apply filtering\n            applyProjectFilters();\n          }, 'projectFilterClick'),\n          { context: CONTEXT }\n        );\n      });\n\n      // Add search input handler\n      if (searchInput) {\n        eventHandlers.trackListener(\n          searchInput,\n          'input',\n          safeHandler(() => {\n            state.searchTerm = domAPI.getValue(searchInput).toLowerCase();\n            applyProjectFilters();\n          }, 'projectSearchInput'),\n          { context: CONTEXT }\n        );\n      }\n    } catch (error) {\n      logger.error('[setupProjectFilters]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Apply current filters and search term to project list\n   */\n  function applyProjectFilters() {\n    try {\n      const projectCards = domAPI.querySelectorAll('.project-card');\n      let visibleCount = 0;\n\n      projectCards.forEach(card => {\n        // Get project data from card\n        const isPinned = card.dataset.pinned === 'true';\n        const isArchived = card.dataset.archived === 'true';\n        const projectName = (card.querySelector('.project-name')?.textContent || '').toLowerCase();\n        const projectDesc = (card.querySelector('.project-description')?.textContent || '').toLowerCase();\n\n        // Determine if card should be visible based on filter\n        let isVisible = true;\n\n        // Apply filter\n        switch (state.currentFilter) {\n          case 'pinned':\n            isVisible = isPinned;\n            break;\n          case 'archived':\n            isVisible = isArchived;\n            break;\n          case 'active':\n            isVisible = !isArchived;\n            break;\n          case 'all':\n          default:\n            isVisible = true;\n            break;\n        }\n\n        // Apply search term if present\n        if (state.searchTerm && isVisible) {\n          isVisible = projectName.includes(state.searchTerm) ||\n            projectDesc.includes(state.searchTerm);\n        }\n\n        // Update visibility\n        if (isVisible) {\n          card.style.display = '';\n          visibleCount++;\n        } else {\n          card.style.display = 'none';\n        }\n      });\n\n      // Show/hide empty state\n      const emptyState = domAPI.querySelector('.project-list-empty-state');\n      if (emptyState) {\n        if (visibleCount === 0) {\n          emptyState.style.display = '';\n\n          // Update empty state message based on filter/search\n          const messageEl = emptyState.querySelector('p');\n          if (messageEl) {\n            if (state.searchTerm) {\n              domAPI.setTextContent(messageEl, `No projects found matching \"${state.searchTerm}\"`);\n            } else {\n              switch (state.currentFilter) {\n                case 'pinned':\n                  domAPI.setTextContent(messageEl, 'No pinned projects');\n                  break;\n                case 'archived':\n                  domAPI.setTextContent(messageEl, 'No archived projects');\n                  break;\n                case 'active':\n                  domAPI.setTextContent(messageEl, 'No active projects');\n                  break;\n                default:\n                  domAPI.setTextContent(messageEl, 'No projects found');\n                  break;\n              }\n            }\n          }\n        } else {\n          emptyState.style.display = 'none';\n        }\n      }\n    } catch (error) {\n      logger.error('[applyProjectFilters]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Initialize project details enhancements\n   */\n  async function initialize() {\n    try {\n      // Determine if we're on the project list or project details page\n      const isProjectListPage = !!domAPI.querySelector(SELECTORS.projectListContainer);\n      const isProjectDetailsPage = !!domAPI.querySelector('.project-details-root');\n\n      // Initialize appropriate enhancements\n      if (isProjectListPage) {\n        await initializeProjectList();\n      }\n\n      if (isProjectDetailsPage) {\n        // Wait for DOM to be ready for project details\n        await domReadinessService.dependenciesAndElements({\n          domSelectors: ['.project-details-root'],\n          context: CONTEXT\n        });\n\n        // Apply project details enhancements\n        addFloatingActionButton();\n        enhanceEmptyStates();\n        setupTabTracking();\n\n        // Mobile-specific enhancements\n        if (browserService && browserService.isMobile) {\n          createPullToRefresh({\n            element        : domAPI.getElementById('conversationsList'),\n            onRefresh      : () => {\n              const pm = DependencySystem.modules.get('projectManager');\n              return pm?.loadProjectConversations?.(state.currentProjectId);\n            },\n            eventHandlers, domAPI, browserService,\n            ctx            : 'project-details:pull-to-refresh'\n          });\n\n          // Improve touch target sizes for mobile\n          domAPI.querySelectorAll('.btn, button').forEach(btn => {\n            if (!btn.classList.contains('btn-lg') && !btn.classList.contains('project-fab')) {\n              btn.style.minHeight = '44px'; // Ensure minimum touch target size\n            }\n          });\n        }\n\n        logger.info('[initialize] Project details enhancements initialized', {\n          context: CONTEXT\n        });\n      }\n    } catch (error) {\n      logger.error('[initialize]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Clean up event listeners and resources\n   */\n  function cleanup() {\n    try {\n      // Clean up all event listeners\n      eventHandlers.cleanupListeners({ context: CONTEXT });\n\n      logger.info('[cleanup] Project details enhancements cleaned up', {\n        context: CONTEXT\n      });\n    } catch (error) {\n      logger.error('[cleanup]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Add chat UI enhancements to the project chat tab\n   * @param {HTMLElement} chatContainer - The container element for the chat UI\n   */\n  function setupProjectChatUI(chatContainer) {\n    try {\n      if (!chatContainer) return;\n\n      // Find the chat UI container in the project details\n      const chatUIContainer = domAPI.getElementById('chatUIContainer');\n      if (!chatUIContainer) return;\n\n      // Check if we have a chatUIEnhancements module available\n      if (!DependencySystem?.modules?.get('chatUIEnhancements')) {\n        logger.warn('[setupProjectChatUI] chatUIEnhancements module not available', {\n          context: CONTEXT\n        });\n        return;\n      }\n\n      // Get the chatUIEnhancements module\n      const chatUIEnhancements = DependencySystem.modules.get('chatUIEnhancements');\n\n      // Set the message container for the chat UI\n      if (typeof chatUIEnhancements.setMessageContainer === 'function') {\n        const messagesContainer = domAPI.querySelector('#chatUIContainer #chatMessages');\n        if (messagesContainer) {\n          chatUIEnhancements.setMessageContainer(messagesContainer);\n\n          logger.info('[setupProjectChatUI] Set message container for chat UI', {\n            context: CONTEXT\n          });\n        }\n      }\n\n      // Setup project-specific chat enhancements\n      if (typeof chatUIEnhancements.setupProjectChatEnhancements === 'function') {\n        chatUIEnhancements.setupProjectChatEnhancements();\n\n        logger.info('[setupProjectChatUI] Setup project chat enhancements', {\n          context: CONTEXT\n        });\n      }\n    } catch (error) {\n      logger.error('[setupProjectChatUI]', error, { context: CONTEXT });\n    }\n  }\n\n  /**\n   * Enhance project stats with visual elements\n   */\n  function enhanceProjectStats() {\n    try {\n      // Find all stat elements\n      const statElements = domAPI.querySelectorAll('.stat');\n      if (statElements.length === 0) return;\n\n      statElements.forEach(statEl => {\n        // Skip if already enhanced\n        if (statEl.classList.contains('enhanced')) return;\n\n        // Get stat value and title\n        const valueEl = statEl.querySelector('.stat-value');\n        const titleEl = statEl.querySelector('.stat-title');\n\n        if (!valueEl || !titleEl) return;\n\n        const value = valueEl.textContent.trim();\n        const title = titleEl.textContent.trim().toLowerCase();\n\n        // Create sparkline container\n        const sparklineContainer = domAPI.createElement('div');\n        sparklineContainer.className = 'sparkline';\n\n        // Generate appropriate sparkline based on stat type\n        let sparklineHTML = '';\n        let lastValue = 0;\n\n        if (title.includes('completion') || title.includes('progress')) {\n          // For completion/progress stats, use the percentage value\n          const percentMatch = value.match(/(\\d+)%/);\n          if (percentMatch) {\n            lastValue = parseInt(percentMatch[1], 10);\n            sparklineHTML = generateSparkline(7, lastValue);\n          }\n        } else if (title.includes('files') || title.includes('artifacts')) {\n          // For count stats, use a random trend\n          const countMatch = value.match(/(\\d+)/);\n          if (countMatch) {\n            lastValue = parseInt(countMatch[1], 10);\n            sparklineHTML = generateSparkline(7, Math.min(lastValue * 10, 100));\n          }\n        } else if (title.includes('conversations')) {\n          // For conversation stats, use a random trend\n          const countMatch = value.match(/(\\d+)/);\n          if (countMatch) {\n            lastValue = parseInt(countMatch[1], 10);\n            sparklineHTML = generateSparkline(7, Math.min(lastValue * 5, 100));\n          }\n        }\n\n        // Add sparkline if generated\n        if (sparklineHTML) {\n          domAPI.setInnerHTML(sparklineContainer, sanitizer.sanitize(sparklineHTML));\n          domAPI.appendChild(statEl, sparklineContainer);\n          statEl.classList.add('enhanced');\n        }\n      });\n    } catch (error) {\n      logger.error('[enhanceProjectStats]', error, { context: CONTEXT });\n    }\n  }\n\n  // Return public API\n  return {\n    initialize,\n    cleanup,\n    enhanceProjectCards,\n    setupProjectFilters,\n    enhanceEmptyStates,\n    setupProjectChatUI,\n    enhanceProjectStats\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 28135,
          "_transferSize": 29324,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.364Z",
        "time": 222.4160000041593,
        "timings": {
          "blocked": 171.29200000881403,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.04800000000000182,
          "wait": 49.66399999754597,
          "receive": 1.4119999977992848,
          "_blocked_queueing": 4.389000008814037,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126316",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 35
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/tokenStatsManager.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1472,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "24401"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"fd76b532a7e140a7620ce8aa1febb3df\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 16:53:18 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 24401,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * tokenStatsManager.js\n *\n * Manages token usage statistics display and interaction in the UI.\n * Follows all code guardrails - exports factory function only,\n * dependency injection, proper event tracking, and sanitization.\n */\n\nexport function createTokenStatsManager({\n  apiClient,\n  domAPI,\n  eventHandlers,\n  browserService,\n  modalManager,\n  sanitizer,\n  logger,\n  projectManager,\n  app,\n  chatManager,\n  domReadinessService,\n  DependencySystem\n} = {}) {\n  const MODULE_CONTEXT = 'tokenStatsManager';\n\n  // Validate required dependencies\n  if (!apiClient) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: apiClient`);\n  if (!domAPI) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: domAPI`);\n  if (!eventHandlers) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: eventHandlers`);\n  if (!sanitizer) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: sanitizer`);\n  if (!logger) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: logger`);\n  if (!modalManager) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: modalManager`);\n  if (!domReadinessService)\n    throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: domReadinessService`);\n  if (!DependencySystem) throw new Error('Missing DependencySystem');\n\n  // Use canonical safeHandler from DI\n  const safeHandler = DependencySystem.modules.get('safeHandler');\n  if (!safeHandler) throw new Error('safeHandler missing from DependencySystem');\n\n  // Module state\n  const state = {\n    currentProject: null,\n    currentConversation: null,\n    statsData: {\n      project: {\n        tokenUsage: 0,\n        maxTokens: 200000\n      },\n      conversation: {\n        contextTokenUsage: 0,\n        messageCount: 0,\n        userMsgTokens: 0,\n        aiMsgTokens: 0,\n        systemMsgTokens: 0,\n        knowledgeTokens: 0,\n        totalTokens: 0\n      }\n    }\n  };\n\n  /**\n   * Safe logging wrapper functions\n   */\n  function _logInfo(msg, meta = {}) {\n    try { logger.info(`[${MODULE_CONTEXT}] ${msg}`, { context: MODULE_CONTEXT, ...meta }); }\n    catch (e) {\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Failed to log info`, e, { context: MODULE_CONTEXT, ...meta });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log info (secondary catch)`, logErr, { context: MODULE_CONTEXT, ...meta });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  function _logError(message, err, meta = {}) {\n    try {\n      const details = err instanceof Error\n        ? { message: err.message, stack: err.stack }\n        : { error: err };\n      logger.error(\n        `[${MODULE_CONTEXT}] ${message}`,\n        { ...details, context: MODULE_CONTEXT, ...meta }\n      );\n    } catch (logErr) {\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Failed to log error`, logErr, { context: MODULE_CONTEXT, ...meta });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error (secondary catch)`, logErr, { context: MODULE_CONTEXT, ...meta });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n\n  /**\n   * Initialize the token stats manager\n   */\n  async function initialize() {\n\n    // Deferred logic: run only when ui:templates:ready event fires.\n    const runInit = async () => {\n        try {\n          _logInfo('Initializing token stats manager');\n\n          const requiredSel = [\n            '#tokenUsageStat',\n            '#tokenStatsBtn',\n            '#tokenStatsCurrentUsage'\n          ];\n\n          try {\n            await domReadinessService.elementsReady(requiredSel, {\n              observeMutations: true,          // handle late template injection\n              timeout: 8000,\n              context: MODULE_CONTEXT + '::init'\n            });\n          } catch (err) {\n            _logInfo('Token-stats UI not yet present – deferring initialization', {\n              missing: requiredSel\n            });\n            logger.error(`[${MODULE_CONTEXT}] elementsReady failed`, err,\n              { context: MODULE_CONTEXT, phase: 'init', missing: requiredSel });\n            return false;                // non-fatal\n          }\n\n          // Bind event listeners\n          _bindEventListeners();\n\n          // Initialize modal functionality\n          _initializeTokenStatsModal();\n\n          _logInfo('Token stats manager initialized');\n        } catch (err) {\n          _logError('Failed to initialize token stats manager', err);\n          logger.error(`[${MODULE_CONTEXT}] Failed to initialize token stats manager`, err,\n            { context: MODULE_CONTEXT });\n        }\n      return true;\n    };\n\n    // Wait for templates ready via domReadinessService, then initialize\n    await domReadinessService.waitForEvent('ui:templates:ready', { context: MODULE_CONTEXT });\n    return runInit();\n  }\n\n  /**\n   * Bind event listeners for token stats interactions\n   */\n  function _bindEventListeners() {\n    const doc = domAPI.getDocument();\n\n    // Clean up any existing listeners\n    eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n\n    // Token usage stat click in project details\n    const tokenUsageStat = domAPI.getElementById('tokenUsageStat');\n    if (tokenUsageStat) {\n      eventHandlers.trackListener(\n        tokenUsageStat,\n        'click',\n        () => {\n          _showTokenStatsModal();\n        },\n        { context: MODULE_CONTEXT }\n      );\n    }\n\n    // Token stats button in chat UI dropdown\n    const tokenStatsBtn = domAPI.getElementById('tokenStatsBtn');\n    if (tokenStatsBtn) {\n      eventHandlers.trackListener(\n        tokenStatsBtn,\n        'click',\n        () => {\n          _showTokenStatsModal();\n        },\n        { context: MODULE_CONTEXT }\n      );\n    }\n\n    // Refresh button in token stats modal\n    const refreshTokenStatsBtn = domAPI.getElementById('refreshTokenStatsBtn');\n    if (refreshTokenStatsBtn) {\n      eventHandlers.trackListener(\n        refreshTokenStatsBtn,\n        'click',\n        () => {\n          _refreshTokenStats();\n        },\n        { context: MODULE_CONTEXT }\n      );\n    }\n\n    // Listen for conversation changes to update stats\n    eventHandlers.trackListener(\n      doc,\n      'chat:conversationChanged',\n      safeHandler((e) => {\n        if (e.detail && e.detail.conversationId) {\n          state.currentConversation = e.detail.conversationId;\n          fetchConversationTokenStats(e.detail.conversationId);\n        }\n      }, 'conversationChangedEvent'),\n      { context: MODULE_CONTEXT }\n    );\n\n    // Listen for new messages to update stats\n    eventHandlers.trackListener(\n      doc,\n      'chat:messageSent',\n      safeHandler((e) => {\n        if (state.currentConversation) {\n          fetchConversationTokenStats(state.currentConversation);\n        }\n      }, 'messageSentEvent'),\n      { context: MODULE_CONTEXT }\n    );\n\n    // Listen for project changes to update stats\n    eventHandlers.trackListener(\n      doc,\n      'projectLoaded',\n      safeHandler((e) => {\n        // Handle both formats: e.detail.project and e.detail (project object directly)\n        const project = e.detail?.project || e.detail;\n        if (project && project.id) {\n          state.currentProject = project;\n          _updateProjectTokenStats(project);\n          _logInfo('Project loaded, updating token stats', { projectId: project.id, tokenUsage: project.token_usage });\n        }\n      }, 'projectLoadedEvent'),\n      { context: MODULE_CONTEXT }\n    );\n\n    // Listen for AppBus current project changes\n    if (app && app.AppBus) {\n      eventHandlers.trackListener(\n        app.AppBus,\n        'currentProjectChanged',\n        safeHandler((e) => {\n          const project = e.detail?.project;\n          if (project && project.id) {\n            state.currentProject = project;\n            _updateProjectTokenStats(project);\n            _logInfo('Current project changed, updating token stats', { projectId: project.id, tokenUsage: project.token_usage });\n          }\n        }, 'currentProjectChangedEvent'),\n        { context: MODULE_CONTEXT }\n      );\n    }\n  }\n\n  /**\n   * Initialize token stats modal\n   */\n  function _initializeTokenStatsModal() {\n    const closeBtn = domAPI.getElementById('closeTokenStatsModalBtn');\n    const exportBtn = domAPI.getElementById('exportTokenStatsBtn');\n\n    if (closeBtn) {\n      try {\n        eventHandlers.trackListener(\n          closeBtn,\n          'click',\n          () => {\n            modalManager.hide('tokenStats');\n          },\n          { context: MODULE_CONTEXT }\n        );\n      } catch (err) {\n        _logError('Failed to bind closeTokenStatsModalBtn event', err);\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Exception in _initializeTokenStatsModal (closeBtn)`, err, { context: MODULE_CONTEXT });\n        } catch (logErr) {\n          try {\n            logger.error(`[${MODULE_CONTEXT}] Failed to log error in _initializeTokenStatsModal (closeBtn)`, logErr, { context: MODULE_CONTEXT });\n          } catch (finalErr) {\n            // If logging fails, do nothing further to avoid infinite loop\n          }\n        }\n      }\n    }\n\n    if (exportBtn) {\n      try {\n        eventHandlers.trackListener(\n          exportBtn,\n          'click',\n          () => {\n            _exportTokenStats();\n          },\n          { context: MODULE_CONTEXT }\n        );\n      } catch (err) {\n        _logError('Failed to bind exportTokenStatsBtn event', err);\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Exception in _initializeTokenStatsModal (exportBtn)`, err, { context: MODULE_CONTEXT });\n        } catch (logErr) {\n          try {\n            logger.error(`[${MODULE_CONTEXT}] Failed to log error in _initializeTokenStatsModal (exportBtn)`, logErr, { context: MODULE_CONTEXT });\n          } catch (finalErr) {\n            // If logging fails, do nothing further to avoid infinite loop\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Show the token stats modal\n   */\n  function _showTokenStatsModal() {\n    try {\n      // Update stats in the modal\n      _updateTokenStatsModal();\n\n      // Show the modal\n      modalManager.show('tokenStats');\n\n      // If we have a current conversation, refresh the data\n      if (state.currentConversation) {\n        fetchConversationTokenStats(state.currentConversation);\n      }\n    } catch (err) {\n      _logError('Failed to show token stats modal', err);\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Exception in _showTokenStatsModal`, err, { context: MODULE_CONTEXT });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error in _showTokenStatsModal`, logErr, { context: MODULE_CONTEXT });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  /**\n   * Refresh token stats data\n   */\n  function _refreshTokenStats() {\n    try {\n      _logInfo('Refreshing token stats data');\n\n      // Refresh project stats if we have a current project\n      if (state.currentProject) {\n        _updateProjectTokenStats(state.currentProject);\n      }\n\n      // Refresh conversation stats if we have a current conversation\n      if (state.currentConversation) {\n        fetchConversationTokenStats(state.currentConversation);\n      }\n\n      // Update the modal display\n      _updateTokenStatsModal();\n\n      _logInfo('Token stats refreshed successfully');\n    } catch (err) {\n      _logError('Failed to refresh token stats', err);\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Exception in _refreshTokenStats`, err, { context: MODULE_CONTEXT });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error in _refreshTokenStats`, logErr, { context: MODULE_CONTEXT });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  /**\n   * Update project token stats display\n   */\n  function _updateProjectTokenStats(project) {\n    if (!project) return;\n\n    try {\n      // Update state\n      state.statsData.project.tokenUsage = project.token_usage || 0;\n      state.statsData.project.maxTokens = project.max_tokens || 200000;\n\n      // Update UI\n      const tokenUsageEl = domAPI.getElementById('tokenUsage');\n      const maxTokensEl = domAPI.getElementById('maxTokens');\n      const tokenPercentageEl = domAPI.getElementById('tokenPercentage');\n      const tokenProgressBarEl = domAPI.getElementById('tokenProgressBar');\n\n      if (tokenUsageEl) tokenUsageEl.textContent = state.statsData.project.tokenUsage.toLocaleString();\n      if (maxTokensEl) maxTokensEl.textContent = state.statsData.project.maxTokens.toLocaleString();\n\n      // Calculate percentage\n      const percentage = state.statsData.project.maxTokens > 0\n        ? Math.min(100, Math.round((state.statsData.project.tokenUsage / state.statsData.project.maxTokens) * 100))\n        : 0;\n\n      if (tokenPercentageEl) tokenPercentageEl.textContent = `${percentage}%`;\n      if (tokenProgressBarEl) {\n        tokenProgressBarEl.value = percentage;\n        tokenProgressBarEl.max = 100;\n      }\n\n      // Update dropdown stats\n      const projectTokenLimitEl = domAPI.getElementById('projectTokenLimit');\n      if (projectTokenLimitEl) {\n        projectTokenLimitEl.textContent = state.statsData.project.maxTokens.toLocaleString();\n      }\n\n      // Update total tokens in dropdown\n      const totalTokenCountEl = domAPI.getElementById('totalTokenCount');\n      if (totalTokenCountEl) {\n        totalTokenCountEl.textContent = state.statsData.project.tokenUsage.toLocaleString();\n      }\n    } catch (err) {\n      _logError('Failed to update project token stats', err);\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Exception in _updateProjectTokenStats`, err, { context: MODULE_CONTEXT });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error in _updateProjectTokenStats`, logErr, { context: MODULE_CONTEXT });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the token stats modal with current data\n   */\n  function _updateTokenStatsModal() {\n    try {\n      // Project usage stats\n      const currentUsageEl = domAPI.getElementById('tokenStatsCurrentUsage');\n      const projectLimitEl = domAPI.getElementById('tokenStatsProjectLimit');\n      const percentageEl = domAPI.getElementById('tokenStatsPercentage');\n      const progressBarEl = domAPI.getElementById('tokenStatsProgressBar');\n\n      if (currentUsageEl) currentUsageEl.textContent = state.statsData.project.tokenUsage.toLocaleString();\n      if (projectLimitEl) projectLimitEl.textContent = state.statsData.project.maxTokens.toLocaleString();\n\n      // Calculate percentage\n      const percentage = state.statsData.project.maxTokens > 0\n        ? Math.min(100, Math.round((state.statsData.project.tokenUsage / state.statsData.project.maxTokens) * 100))\n        : 0;\n\n      if (percentageEl) percentageEl.textContent = `${percentage}%`;\n      if (progressBarEl) {\n        progressBarEl.value = percentage;\n        progressBarEl.max = 100;\n      }\n\n      // Conversation stats\n      const contextUsageEl = domAPI.getElementById('tokenStatsContextUsage');\n      const messageCountEl = domAPI.getElementById('tokenStatsMessageCount');\n      const avgPerMessageEl = domAPI.getElementById('tokenStatsAvgPerMessage');\n\n      if (contextUsageEl) contextUsageEl.textContent = state.statsData.conversation.contextTokenUsage.toLocaleString();\n      if (messageCountEl) messageCountEl.textContent = state.statsData.conversation.messageCount.toLocaleString();\n\n      // Calculate average tokens per message\n      const avgTokens = state.statsData.conversation.messageCount > 0\n        ? Math.round(state.statsData.conversation.totalTokens / state.statsData.conversation.messageCount)\n        : 0;\n\n      if (avgPerMessageEl) avgPerMessageEl.textContent = avgTokens.toLocaleString();\n\n      // Token breakdown\n      const userMsgTokensEl = domAPI.getElementById('tokenStatsUserMsgTokens');\n      const userMsgPercentEl = domAPI.getElementById('tokenStatsUserMsgPercent');\n      const aiMsgTokensEl = domAPI.getElementById('tokenStatsAIMsgTokens');\n      const aiMsgPercentEl = domAPI.getElementById('tokenStatsAIMsgPercent');\n      const systemMsgTokensEl = domAPI.getElementById('tokenStatsSystemMsgTokens');\n      const systemMsgPercentEl = domAPI.getElementById('tokenStatsSystemMsgPercent');\n      const knowledgeTokensEl = domAPI.getElementById('tokenStatsKnowledgeTokens');\n      const knowledgePercentEl = domAPI.getElementById('tokenStatsKnowledgePercent');\n      const totalTokensEl = domAPI.getElementById('tokenStatsTotalTokens');\n\n      if (userMsgTokensEl) userMsgTokensEl.textContent = state.statsData.conversation.userMsgTokens.toLocaleString();\n      if (aiMsgTokensEl) aiMsgTokensEl.textContent = state.statsData.conversation.aiMsgTokens.toLocaleString();\n      if (systemMsgTokensEl) systemMsgTokensEl.textContent = state.statsData.conversation.systemMsgTokens.toLocaleString();\n      if (knowledgeTokensEl) knowledgeTokensEl.textContent = state.statsData.conversation.knowledgeTokens.toLocaleString();\n      if (totalTokensEl) totalTokensEl.textContent = state.statsData.conversation.totalTokens.toLocaleString();\n\n      // Calculate percentages\n      const totalTokens = state.statsData.conversation.totalTokens || 1; // Avoid division by zero\n\n      const userPercent = Math.round((state.statsData.conversation.userMsgTokens / totalTokens) * 100);\n      const aiPercent = Math.round((state.statsData.conversation.aiMsgTokens / totalTokens) * 100);\n      const systemPercent = Math.round((state.statsData.conversation.systemMsgTokens / totalTokens) * 100);\n      const knowledgePercent = Math.round((state.statsData.conversation.knowledgeTokens / totalTokens) * 100);\n\n      if (userMsgPercentEl) userMsgPercentEl.textContent = `${userPercent}%`;\n      if (aiMsgPercentEl) aiMsgPercentEl.textContent = `${aiPercent}%`;\n      if (systemMsgPercentEl) systemMsgPercentEl.textContent = `${systemPercent}%`;\n      if (knowledgePercentEl) knowledgePercentEl.textContent = `${knowledgePercent}%`;\n    } catch (err) {\n      _logError('Failed to update token stats modal', err);\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Exception in _updateTokenStatsModal`, err, { context: MODULE_CONTEXT });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error in _updateTokenStatsModal`, logErr, { context: MODULE_CONTEXT });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  /**\n   * Export token stats as CSV\n   */\n  function _exportTokenStats() {\n    try {\n      // Create CSV content\n      const csvContent = [\n        'Category,Item,Value',\n        `Project,Token Usage,${state.statsData.project.tokenUsage}`,\n        `Project,Max Tokens,${state.statsData.project.maxTokens}`,\n        `Project,Usage Percentage,${Math.round((state.statsData.project.tokenUsage / state.statsData.project.maxTokens) * 100)}%`,\n        `Conversation,Context Tokens,${state.statsData.conversation.contextTokenUsage}`,\n        `Conversation,Message Count,${state.statsData.conversation.messageCount}`,\n        `Conversation,Avg Tokens per Message,${state.statsData.conversation.messageCount > 0 ? Math.round(state.statsData.conversation.totalTokens / state.statsData.conversation.messageCount) : 0}`,\n        `Breakdown,User Messages Tokens,${state.statsData.conversation.userMsgTokens}`,\n        `Breakdown,AI Responses Tokens,${state.statsData.conversation.aiMsgTokens}`,\n        `Breakdown,System Messages Tokens,${state.statsData.conversation.systemMsgTokens}`,\n        `Breakdown,Knowledge Context Tokens,${state.statsData.conversation.knowledgeTokens}`,\n        `Breakdown,Total Tokens,${state.statsData.conversation.totalTokens}`\n      ].join('\\n');\n\n      // Create download link\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n      const url = URL.createObjectURL(blob);\n\n      // Create and trigger download\n      const link = domAPI.createElement('a');\n      link.setAttribute('href', url);\n      link.setAttribute('download', `token_stats_${new Date().toISOString().split('T')[0]}.csv`);\n      link.style.display = 'none';\n\n      domAPI.appendChild(domAPI.getDocument().body, link);\n      link.click();\n\n      // Clean up\n      browserService.setTimeout(() => {\n        URL.revokeObjectURL(url);\n        if (link.parentNode) {\n          domAPI.removeChild(link.parentNode, link);\n        }\n      }, 100);\n    } catch (err) {\n      _logError('Failed to export token stats', err);\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Exception in _exportTokenStats`, err, { context: MODULE_CONTEXT });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error in _exportTokenStats`, logErr, { context: MODULE_CONTEXT });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  /**\n   * Fetch token statistics for a conversation\n   */\n  async function fetchConversationTokenStats(conversationId) {\n    if (!conversationId) return;\n\n    try {\n      // Get current project ID\n      const projectId = state.currentProject?.id || projectManager?.getCurrentProject()?.id;\n      if (!projectId) {\n        _logError('No project ID available for token stats', new Error('Missing project ID'));\n        return;\n      }\n\n      // Make API request\n      const response = await apiClient(`/api/projects/${projectId}/conversations/${conversationId}/token-stats`);\n\n      if (!response) {\n        _logError('Empty response from token stats API', new Error('Empty response'));\n        return;\n      }\n\n      // Update state with conversation stats\n      state.statsData.conversation = {\n        contextTokenUsage: response.context_token_usage || 0,\n        messageCount: response.message_count || 0,\n        userMsgTokens: response.user_msg_tokens || 0,\n        aiMsgTokens: response.ai_msg_tokens || 0,\n        systemMsgTokens: response.system_msg_tokens || 0,\n        knowledgeTokens: response.knowledge_tokens || 0,\n        totalTokens: response.total_tokens || 0\n      };\n\n      // Update conversation token count in header\n      const conversationTokenCountEl = domAPI.getElementById('conversationTokenCount');\n      if (conversationTokenCountEl) {\n        conversationTokenCountEl.textContent = state.statsData.conversation.contextTokenUsage.toLocaleString();\n      }\n\n      // Update context token count in dropdown\n      const contextTokenCountEl = domAPI.getElementById('contextTokenCount');\n      if (contextTokenCountEl) {\n        contextTokenCountEl.textContent = state.statsData.conversation.contextTokenUsage.toLocaleString();\n      }\n\n      // If modal is open, update it\n      _updateTokenStatsModal();\n\n      _logInfo('Updated conversation token stats', { conversationId });\n    } catch (err) {\n      _logError('Failed to fetch conversation token stats', err, { conversationId });\n      try {\n        logger.error(`[${MODULE_CONTEXT}] Exception in fetchConversationTokenStats`, err, { context: MODULE_CONTEXT, conversationId });\n      } catch (logErr) {\n        try {\n          logger.error(`[${MODULE_CONTEXT}] Failed to log error in fetchConversationTokenStats`, logErr, { context: MODULE_CONTEXT, conversationId });\n        } catch (finalErr) {\n          // If logging fails, do nothing further to avoid infinite loop\n        }\n      }\n    }\n  }\n\n  /**\n   * Set the current input token count\n   */\n  function setInputTokenCount(count) {\n    const liveTokenCountEl = domAPI.getElementById('liveTokenCount');\n    if (liveTokenCountEl) {\n      liveTokenCountEl.textContent = count.toLocaleString();\n    }\n  }\n\n  /**\n   * Cleanup function\n   */\n  function cleanup() {\n    eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n    _logInfo('Token stats manager cleaned up');\n  }\n\n  // Public API\n  return {\n    initialize,\n    fetchConversationTokenStats,\n    setInputTokenCount,\n    cleanup\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 24401,
          "_transferSize": 25590,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.364Z",
        "time": 228.83399999409448,
        "timings": {
          "blocked": 182.71499999377224,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07800000000000296,
          "wait": 43.016000002161604,
          "receive": 3.024999998160638,
          "_blocked_queueing": 4.537999993772246,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 36
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/modalManager.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1467,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "51962"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"dfdb5d3d6f2ae062159cd74807b723ee\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 01 Jun 2025 18:17:11 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 51962,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/*\n// VENDOR-EXEMPT-SIZE: Core module pending refactor in Q3-25\n*/\n/*\n// VENDOR-EXEMPT-SIZE: Core module pending refactor in Q3-25\n*/\nimport { MODAL_MAPPINGS } from './modalConstants.js';\n\n/**\n * Provides methods to show/hide mapped modals, handle scroll lock,\n * manages <dialog> elements (or fallback), and tracks event cleanup.\n */\nclass ModalManager {\n  /**\n   * @constructor\n   * @param {Object} opts - Dependencies config object.\n   * @param {Object} [opts.eventHandlers]\n   * @param {Object} [opts.DependencySystem]\n   * @param {Object} [opts.domAPI]\n   * @param {Object} [opts.browserService]\n   * @param {Object} [opts.modalMapping]\n   * @param {Object} [opts.domPurify]\n   * @param {Object} [opts.domReadinessService]\n   * @param {Object} [opts.logger]\n   * @param {Object} [opts.errorReporter]\n   */\n  constructor({\n    eventHandlers,\n    domAPI,\n    browserService,\n    DependencySystem,\n    modalMapping,\n    domPurify,\n    domReadinessService,\n    logger,            // New: injectable logger\n    errorReporter      // New: injectable error reporting\n  } = {}) {\n    this.DependencySystem = DependencySystem || undefined;\n    this.eventHandlers =\n      eventHandlers ||\n      this.DependencySystem?.modules?.get?.('eventHandlers') ||\n      undefined;\n    this.domAPI = domAPI || this.DependencySystem?.modules?.get?.('domAPI');\n    if (!this.domAPI) {\n      throw new Error('[ModalManager] domAPI DI not provided');\n    }\n    this.browserService =\n      browserService ||\n      this.DependencySystem?.modules?.get?.('browserService');\n    if (!this.browserService) {\n      throw new Error('[ModalManager] browserService DI not provided');\n    }\n    this.modalMappings =\n      modalMapping ||\n      this.DependencySystem?.modules?.get?.('modalMapping') ||\n      MODAL_MAPPINGS;\n    this.domPurify =\n      domPurify ||\n      this.DependencySystem?.modules?.get?.('domPurify') ||\n      this.DependencySystem?.modules?.get?.('sanitizer') ||\n      null;\n\n    this.domReadinessService =\n      domReadinessService ||\n      this.DependencySystem?.modules?.get?.('domReadinessService') ||\n      null;\n\n    // logger and errorReporter DI pattern\n    if (!logger) throw new Error('[ModalManager] logger is required');\n    this.logger = logger;\n    this.errorReporter =\n      errorReporter ||\n      this.DependencySystem?.modules?.get?.('errorReporter') ||\n      { report: () => { } };\n    this.app = this.DependencySystem?.modules?.get?.('app') || null;\n\n    // Ensure safeHandler is available everywhere\n    this.safeHandler =\n      this.DependencySystem?.modules?.get?.('safeHandler');\n    if (typeof this.safeHandler !== 'function')\n      throw new Error('[ModalManager] safeHandler dependency missing');\n\n    // ─── Deferred “fully-ready” promise ─────────────────────────\n    this._readyResolve = null;\n    this._readyReject = null;\n    this._readyPromise = new Promise((res, rej) => {\n      this._readyResolve = res;\n      this._readyReject = rej;\n    });\n\n    this.activeModal = null;\n    this._scrollLockY = undefined;\n\n    this.logger.debug?.('[ModalManager] constructed', { withApp: !!this.app }); // Changed to debug\n  }\n\n  isReadyPromise() { return this._readyPromise; }\n\n  _isDebug() {\n    return !!this.app?.config?.debug;\n  }\n\n  _manageBodyScroll(enableScroll) {\n    const scrollingEl = this.domAPI.getScrollingElement();\n    if (!enableScroll) {\n      // Store both vertical and horizontal scroll positions\n      this._scrollLockY = scrollingEl.scrollTop;\n      this._scrollLockX = scrollingEl.scrollLeft;\n      this.domAPI.getBody().style.position = 'fixed';\n      this.domAPI.getBody().style.top = `-${this._scrollLockY}px`;\n      this.domAPI.getBody().style.left = `-${this._scrollLockX || 0}px`;\n      this.domAPI.getBody().style.width = '100vw';\n      this.domAPI.getBody().style.overflow = 'hidden';\n      this.domAPI.getDocumentElement().style.overflow = 'hidden';\n      /* iOS Safari viewport-height fix:\n         Force html element to full height while locked, preventing\n         shrink on address-bar collapse which otherwise allows\n         background scroll. */\n      this.domAPI.getDocumentElement().style.height = '100%';\n    } else {\n      this.domAPI.getBody().style.position = '';\n      this.domAPI.getBody().style.top = '';\n      this.domAPI.getBody().style.left = '';\n      this.domAPI.getBody().style.width = '';\n      this.domAPI.getBody().style.overflow = '';\n      this.domAPI.getDocumentElement().style.overflow = '';\n      /* reset iOS fix */\n      this.domAPI.getDocumentElement().style.height = '';\n      // Patch: always reset scrollTop and scrollLeft using the stored values from before modal open.\n      const y = this._scrollLockY !== undefined ? this._scrollLockY : 0;\n      const x = this._scrollLockX !== undefined ? this._scrollLockX : 0;\n      setTimeout(() => {\n        if (typeof scrollingEl.scrollTo === 'function') {\n          scrollingEl.scrollTo({ left: x, top: y, behavior: 'auto' });\n        } else {\n          scrollingEl.scrollTop = y;\n          scrollingEl.scrollLeft = x;\n        }\n      }, 0);\n      this._scrollLockY = undefined;\n      this._scrollLockX = undefined;\n    }\n  }\n\n  _showModalElement(modalEl) {\n    const modalId = modalEl.id || 'unknown_modal_id';\n    this.logger.debug?.(`[ModalManager] Showing modal element: #${modalId}`, { modalId });\n\n    // Patch: always clear inline display (let DaisyUI/Tailwind flex show responsively)\n    modalEl.style.display = '';\n    modalEl.classList.remove('hidden');\n    modalEl.removeAttribute('hidden'); // Defensive: clear if present\n    modalEl.style.zIndex = '9999';\n\n    if (typeof modalEl.showModal === 'function') {\n      modalEl.showModal();\n      this._manageBodyScroll(false);\n    } else {\n      modalEl.setAttribute('open', 'true');\n      this._manageBodyScroll(false);\n    }\n  }\n\n  _hideModalElement(modalEl) {\n    const modalId = modalEl.id || 'unknown_modal_id';\n    this.logger.debug?.(`[ModalManager] Hiding modal element: #${modalId}`, { modalId });\n\n    // Patch: always clear any inline display (do not force display:none/flex, let DaisyUI handle)\n    modalEl.style.display = '';\n    modalEl.removeAttribute('hidden');\n    if (typeof modalEl.close === 'function') {\n      modalEl.close();\n    } else {\n      modalEl.classList.add('hidden');\n      modalEl.removeAttribute('open');\n    }\n    this._manageBodyScroll(true);\n  }\n\n  _onDialogClose(modalId) {\n    // Find the modalName for this modalId for robust activeModal clearing\n    let modalNameForId = null;\n    if (this.modalMappings) {\n      for (const [name, id] of Object.entries(this.modalMappings)) {\n        if (id === modalId) {\n          modalNameForId = name;\n          break;\n        }\n      }\n    }\n    if (this.activeModal === modalNameForId) {\n      this.activeModal = null;\n      this._manageBodyScroll(true);\n      this.logger.debug?.(`[ModalManager] Dialog ${modalId} (${modalNameForId || 'unknown'}) closed via 'close' event, activeModal cleared.`);\n    }\n  }\n\n  _registerAvailableModals() {\n    const sh = this.safeHandler;\n    if (!this.modalMappings || typeof this.modalMappings !== 'object') {\n      this.logger.warn?.('[ModalManager] _registerAvailableModals: No modalMappings available to register.');\n      return;\n    }\n    let registeredCount = 0;\n    let notFoundCount = 0;\n    this.logger.debug?.(`[ModalManager] _registerAvailableModals: Starting registration for ${Object.keys(this.modalMappings).length} mapped modals.`);\n\n    Object.entries(this.modalMappings).forEach(([modalName, modalId]) => {\n      const modalEl = this.domAPI.getElementById(modalId);\n      if (!modalEl) {\n        this.logger.warn?.(`[ModalManager] _registerAvailableModals: Modal element #${modalId} for \"${modalName}\" not found in DOM.`);\n        notFoundCount++;\n        return;\n      }\n\n      // For <dialog> elements, listen to the native 'close' event\n      if (modalEl.tagName === 'DIALOG' && typeof this.eventHandlers?.trackListener === 'function') {\n        this.eventHandlers.trackListener(\n          modalEl,\n          'close',\n          sh(() => this._onDialogClose(modalId),\n             `ModalManager:dialogClose:${modalId}`),\n          {\n            description: `Dialog close event for ${modalId}`,\n            context: 'modalManager',\n            source: 'ModalManager._registerAvailableModals'\n          }\n        );\n      }\n\n      // For generic close buttons within modals\n      const closeButtons = this.domAPI.querySelectorAll('[data-modal-dismiss], .modal-close-button', modalEl);\n      closeButtons.forEach(button => {\n        if (typeof this.eventHandlers?.trackListener === 'function') {\n          this.eventHandlers.trackListener(\n            button,\n            'click',\n            sh((e) => {\n                e.preventDefault();\n                this.hide(modalName); // Use modalName for hiding\n              },`ModalManager:closeBtn:${modalName}`),\n            {\n              description: `Close button click for modal ${modalName} (${modalId})`,\n              context: 'modalManager',\n              source: 'ModalManager._registerAvailableModals'\n            }\n          );\n        }\n      });\n      this.logger.debug?.(`[ModalManager] _registerAvailableModals: Successfully registered modal: ${modalName} (#${modalId})`);\n      registeredCount++;\n    });\n    this.logger.info?.(`[ModalManager] _registerAvailableModals: Finished. Registered ${registeredCount} modals. ${notFoundCount} modals not found in DOM.`);\n  }\n\n  async init() {\n    this.logger.info?.('[ModalManager] init() called.');\n\n    // Track the (possibly synthetic) modalsLoaded event so we can replay it later\n    let modalsLoadedEventData = null;\n\n    try {\n      const depSys = this.DependencySystem;\n      if (!depSys) {\n        this.logger.error?.('[ModalManager] init: DependencySystem missing.');\n        throw new Error('[ModalManager] DependencySystem missing in init');\n      }\n\n      if (!this.domReadinessService) {\n        this.logger.error?.('[ModalManager] init: domReadinessService missing from DI.');\n        throw new Error('[ModalManager] Missing domReadinessService in DI. Make sure it is registered.');\n      }\n\n      this.logger.debug?.('[ModalManager] init: Awaiting core dependencies (eventHandlers, domAPI).');\n      await this.domReadinessService.dependenciesAndElements({\n        deps: ['eventHandlers', 'domAPI'],\n        timeout: 5000,\n        context: 'modalManager.init:coreDeps'\n      });\n      this.logger.debug?.('[ModalManager] init: Core dependencies ready.');\n\n      this.logger.debug?.('[ModalManager] init: Awaiting body element readiness.');\n      await this.domReadinessService.dependenciesAndElements({\n        deps: [],\n        domSelectors: ['body'],\n        timeout: 5000,\n        context: 'modalManager.init:bodyReady'\n      });\n      this.logger.debug?.('[ModalManager] init: Body element ready.');\n\n      /* ----------------------------------------------------------\n         Eager-load modals template if it is not yet in the DOM.\n         This guarantees that the required 'modalsLoaded' event\n         will fire, allowing init() to proceed without timing out.\n      ---------------------------------------------------------- */\n      let shouldWaitForEvent = true;\n      try {\n        const container = this.domAPI.getElementById('modalsContainer');\n        const modalsAlreadyInjected =\n          !!(container && container.children && container.children.length > 0);\n\n        const htmlTemplateLoader =\n          this.DependencySystem?.modules?.get?.('htmlTemplateLoader');\n\n        if (modalsAlreadyInjected) {\n          this.logger.info?.(\n            '[ModalManager] init: Modals already injected, skipping load and event wait.'\n          );\n          shouldWaitForEvent = false;\n        } else if (htmlTemplateLoader?.loadTemplate) {\n          this.logger.info?.(\n            '[ModalManager] init: Loading /static/html/modals.html template eagerly.'\n          );\n\n          // Fire-and-forget; `loadTemplate` will dispatch the\n          //   `modalsLoaded` event on success (or even on error),\n          //   which is what this.init() waits for next.\n          htmlTemplateLoader\n            .loadTemplate({\n              url: '/static/html/modals.html',\n              containerSelector: '#modalsContainer',\n              eventName: 'modalsLoaded'\n            })\n            .catch((err) =>\n              this.logger.warn?.(\n                '[ModalManager] init: Failed to load modals.html',\n                err,\n                { context: 'modalManager' }\n              )\n            );\n        } else {\n          this.logger.warn?.(\n            '[ModalManager] init: htmlTemplateLoader not available and modals not pre-injected. Emitting synthetic modalsLoaded event.'\n          );\n          // Emit synthetic event to unblock initialization\n          this.domAPI.dispatchEvent(this.domAPI.getDocument(),\n            new CustomEvent('modalsLoaded', {\n              detail: { success: false, error: 'loader missing (synthetic)', synthetic: true }\n            }));\n          shouldWaitForEvent = false; // Don't wait for event we just dispatched\n        }\n      } catch (err) {\n        this.logger.warn?.(\n          '[ModalManager] init: Unexpected error during eager modals load',\n          err,\n          { context: 'modalManager' }\n        );\n        // Emit synthetic event to unblock initialization\n        const doc = this.domAPI.getDocument();\n        this.domAPI.dispatchEvent(\n          doc,\n          new CustomEvent('modalsLoaded', {\n            detail: {\n              success: false,\n              error: err.message || 'Unexpected error during modal load',\n              synthetic: true\n            }\n          })\n        );\n      }\n\n      if (shouldWaitForEvent) {\n        this.logger.info?.(\"[ModalManager] init: Waiting for 'modalsLoaded' event...\");\n        // CRITICAL CHANGE: Strict wait for modalsLoaded.\n        // If modals.html fails to load or the event doesn't fire, ModalManager init will fail.\n        modalsLoadedEventData = await this.domReadinessService.waitForEvent('modalsLoaded', {\n          timeout: 15000, // Increased timeout to 15s for modals.html loading\n          context: 'modalManager.init:waitForModalsLoaded'\n        });\n\n        if (!modalsLoadedEventData?.detail?.success) {\n          this.logger.warn?.('[ModalManager] modalsLoaded indicated failure – continuing in degraded mode', { detail: modalsLoadedEventData.detail });\n        }\n        this.logger.info?.(\"[ModalManager] init: 'modalsLoaded' event received.\", { synthetic: modalsLoadedEventData?.detail?.synthetic });\n      } else {\n        this.logger.info?.(\"[ModalManager] init: Skipping 'modalsLoaded' event wait - modals already present.\");\n      }\n\n      /* -----------------------------------------------------------------\n       * Ensure late listeners (e.g. app.js Stage-4) can still observe the\n       * event even if it happened earlier in this init().\n       * ----------------------------------------------------------------- */\n      if (this.domReadinessService?.emitReplayable) {\n        const detail =\n          modalsLoadedEventData?.detail\n            ?? { success: true, synthetic: !shouldWaitForEvent };\n        this.domReadinessService.emitReplayable('modalsLoaded', detail);\n      }\n\n      // The one-time listener for 'modalsLoaded' to re-scan is removed as we now strictly await it.\n      // If it was necessary due to late injection by other means, that's a separate issue.\n      // For now, assume modals.html load is the sole trigger for 'modalsLoaded'.\n\n      this.logger.debug?.('[ModalManager] init: Registering available modals after modalsLoaded.');\n      this._registerAvailableModals();\n\n      // Validate mapping ↔ DOM consistency\n      this.validateModalMappings(this.modalMappings);\n\n      const doc = this.domAPI.getDocument();\n      this.domAPI.dispatchEvent(\n        doc,\n        new CustomEvent('modalmanager:initialized', { detail: { success: true } })\n      );\n      this.logger.info?.('[ModalManager] init() completed successfully. ModalManager is ready.');\n      this._readyResolve?.(true);\n    } catch (err) {\n      this.logger.error?.('[ModalManager] init() failed catastrophically.', err, { context: 'modalManager.init' });\n      this._readyReject?.(err); // Reject the promise\n      // No rethrow here, error is reported via promise.\n      // If rethrow is desired, ensure calling initializers (coreInit/uiInit) handle it.\n    }\n  }\n\n  destroy() {\n    if (!this.eventHandlers?.cleanupListeners) {\n      return;\n    }\n    this.eventHandlers.cleanupListeners({ context: 'modalManager' });\n  }\n\n  validateModalMappings(modalMapping) {\n    Object.entries(modalMapping).forEach(([key, modalId]) => {\n      const elements = this.domAPI.querySelectorAll(`#${modalId}`);\n      if (elements.length === 0) {\n        this.logger.error?.(`[ModalManager][validateModalMappings] No modal element found for modalId '${modalId}' (mapping key '${key}')`);\n        this.errorReporter.report?.(new Error('Modal element not found'), { module: 'ModalManager', modalId, mappingKey: key, fn: 'validateModalMappings' });\n      } else if (elements.length > 1) {\n        this.logger.warn?.(`[ModalManager][validateModalMappings] Multiple modal elements found for modalId '${modalId}' (mapping key '${key}'). IDs must be unique.`);\n        this.errorReporter.report?.(new Error('Duplicate modal element IDs'), { module: 'ModalManager', modalId, mappingKey: key, fn: 'validateModalMappings' });\n      }\n    });\n  }\n\n  async show(modalName, options = {}) {\n    this.logger.debug?.(`[ModalManager] show() called for modal: ${modalName}`, { modalName, options });\n\n    // CRITICAL CHANGE: Await readiness before proceeding\n    try {\n      this.logger.debug?.(`[ModalManager] show(${modalName}): Awaiting manager readiness (isReadyPromise).`);\n      await this.isReadyPromise(); // Ensures init() completed successfully\n      this.logger.debug?.(`[ModalManager] show(${modalName}): Manager is ready.`);\n    } catch (err) {\n      this.logger.error?.(`[ModalManager] show(${modalName}): ModalManager not ready or its initialization failed. Cannot show modal.`, { error: err, modalName });\n      this.errorReporter.report?.(err, { module: 'ModalManager', fn: 'show', modalName, reason: 'ManagerNotReadyOrInitFailed' });\n      return false; // Cannot proceed if manager isn't ready\n    }\n\n    // --- Ensure the injected modals container is visible and clear display overrides\n    // Patch: make #modalsContainer always visible (remove 'hidden'/hidden/display:none) whenever opening\n    const containerEl = this.domAPI.getElementById('modalsContainer');\n    if (containerEl) {\n      this.domAPI.removeClass(containerEl, 'hidden');\n      containerEl.removeAttribute?.('hidden');\n      containerEl.style.display = '';\n    } else {\n      // This might not be a critical error if modals are directly in body, but good to log.\n      this.logger.warn?.(`[ModalManager] show(${modalName}): #modalsContainer element not found. Modals might not display correctly if they rely on this container.`, { modalName });\n    }\n\n    const INIT_SAFE = new Set(['login', 'register', 'error', 'fatal', 'confirm']);\n\n    // Detect current app-initializing state regardless of whether the appModule\n    // exposes it as a *method* (canonical as of 2025) or as a boolean flag.\n    let appIsInitializing = false;\n    if (this.app) {\n      if (typeof this.app.isInitializing === 'function') {\n        appIsInitializing = !!this.app.isInitializing();\n      } else if (typeof this.app.isInitializing === 'boolean') {\n        appIsInitializing = this.app.isInitializing;\n      } else if (this.app.state && typeof this.app.state.initializing === 'boolean') {\n        appIsInitializing = this.app.state.initializing;\n      }\n    }\n\n    if (appIsInitializing && !options.showDuringInitialization && !INIT_SAFE.has(modalName)) {\n      this.logger.warn?.(`[ModalManager] show(${modalName}): Attempt to show modal during app initialization (and !options.showDuringInitialization). Aborting.`, { modalName });\n      return false;\n    }\n\n    const modalId = this.modalMappings[modalName];\n    if (!modalId) {\n      this.logger.warn?.(`[ModalManager] show(${modalName}): Modal name not found in mappings. Cannot show.`, { modalName });\n      return false;\n    }\n    this.logger.debug?.(`[ModalManager] show(${modalName}): Found modalId \"${modalId}\" in mappings.`);\n\n    const modalEl = this.domAPI.getElementById(modalId);\n    if (!modalEl) {\n      this.logger.warn?.(`[ModalManager] show(${modalName}): Modal element with ID \"${modalId}\" NOT FOUND in DOM. Cannot show. This is unexpected if init was successful.`, { modalName, modalId });\n      return false;\n    }\n    this.logger.debug?.(`[ModalManager] show(${modalName}): Found modal element for ID \"${modalId}\". Proceeding to show.`);\n\n    // Dynamic content for error modal\n    if (modalName === 'error') {\n      const titleEl = modalEl.querySelector('#errorModalTitle');\n      const messageEl = modalEl.querySelector('#errorModalMessage');\n      if (titleEl && options.title) titleEl.textContent = options.title;\n      if (messageEl && options.message) messageEl.textContent = options.message;\n      this.logger.debug?.(`[ModalManager] show(${modalName}): Populated error modal content.`, { title: options.title });\n    }\n\n    this._showModalElement(modalEl);\n\n    if (this.domReadinessService?.emitReplayable)\n      this.domReadinessService.emitReplayable('modalShown', { modal: modalName });\n\n    this.activeModal = modalName;\n    this.logger.info?.(`[ModalManager] Successfully shown modal: ${modalName} (#${modalId})`);\n    return true;\n  }\n\n  async confirmAction(options) {\n    this.logger.debug?.('[ModalManager] confirmAction() called.', { options });\n\n    const sh = this.safeHandler;\n\n    // CRITICAL CHANGE: Await readiness before proceeding (as it calls show())\n    try {\n      this.logger.debug?.('[ModalManager] confirmAction: Awaiting manager readiness (isReadyPromise).');\n      await this.isReadyPromise();\n      this.logger.debug?.('[ModalManager] confirmAction: Manager is ready.');\n    } catch (err) {\n      this.logger.error?.('[ModalManager] confirmAction: ModalManager not ready or its initialization failed. Cannot show confirmation.', { error: err });\n      this.errorReporter.report?.(err, { module: 'ModalManager', fn: 'confirmAction', reason: 'ManagerNotReadyOrInitFailed' });\n      // Optionally call options.onCancel() or throw, depending on desired behavior\n      if (typeof options.onCancel === 'function') {\n        options.onCancel(); // Simulate cancellation as modal cannot be shown\n      }\n      return; // Cannot proceed\n    }\n\n    const modalName = 'confirm';\n    const modalId = this.modalMappings[modalName];\n    if (!modalId) {\n      this.logger.warn?.('[ModalManager] confirmAction: Confirm modal \"confirm\" not found in mappings.');\n      return; // Cannot proceed\n    }\n\n    const modalEl = this.domAPI.getElementById(modalId);\n    if (!modalEl) {\n      this.logger.warn?.(`[ModalManager] confirmAction: Confirm modal element with ID \"${modalId}\" NOT FOUND in DOM.`);\n      return; // Cannot proceed\n    }\n\n    const titleEl = modalEl.querySelector('h3');\n    const messageEl = modalEl.querySelector('p');\n    const confirmBtn = modalEl.querySelector('#confirmActionBtn');\n    const cancelBtn = modalEl.querySelector('#cancelActionBtn');\n\n    if (titleEl) {\n      titleEl.textContent = options.title || 'Confirm?';\n    }\n    if (messageEl) {\n      messageEl.textContent = options.message || '';\n    }\n    if (confirmBtn) {\n      confirmBtn.textContent = options.confirmText || 'Confirm';\n      confirmBtn.className = `btn ${options.confirmClass || 'btn-primary'}`;\n    }\n    if (cancelBtn) {\n      cancelBtn.textContent = options.cancelText || 'Cancel';\n    }\n\n    function replaceWithClone(btn) {\n      const newBtn = btn.cloneNode(true);\n      btn.parentNode.replaceChild(newBtn, btn);\n      return newBtn;\n    }\n    const newConfirmBtn = confirmBtn ? replaceWithClone(confirmBtn) : null;\n    const newCancelBtn = cancelBtn ? replaceWithClone(cancelBtn) : null;\n\n    const confirmHandler = sh(() => {\n      this.hide(modalName);\n      if (typeof options.onConfirm === 'function') {\n        options.onConfirm();\n      }\n    }, 'ModalManager:confirmAction:confirm');\n    const cancelHandler = sh(() => {\n      this.hide(modalName);\n      if (typeof options.onCancel === 'function') {\n        options.onCancel();\n      }\n    }, 'ModalManager:confirmAction:cancel');\n\n    if (this.eventHandlers?.trackListener) {\n      if (newConfirmBtn) {\n        this.eventHandlers.trackListener(newConfirmBtn, 'click', confirmHandler, {\n          description: 'Confirm Modal Confirm Click',\n          context: 'modalManager',\n          source: 'ModalManager.confirmAction'\n        });\n      }\n      if (newCancelBtn) {\n        this.eventHandlers.trackListener(newCancelBtn, 'click', cancelHandler, {\n          description: 'Confirm Modal Cancel Click',\n          context: 'modalManager',\n          source: 'ModalManager.confirmAction'\n        });\n      }\n    } else {\n      throw new Error('[ModalManager] eventHandlers.trackListener is required for confirmAction');\n    }\n\n    this.show(modalName, {\n      showDuringInitialization: options.showDuringInitialization,\n    });\n  }\n\n  /**\n   * Display the dedicated Delete confirmation modal (#deleteConfirmModal).\n   * Mirrors confirmAction() but targets the \"delete\" mapping so we can have\n   * separate copy/styling for destructive actions.\n   *\n   * @param {Object} options\n   * @param {string} [options.title]        – Heading text (defaults to \"Confirm Delete\")\n   * @param {string} [options.message]      – Body text\n   * @param {string} [options.confirmText]  – Confirm button label (defaults \"Delete\")\n   * @param {string} [options.cancelText]   – Cancel button label\n   * @param {Function} [options.onConfirm]  – callback if user confirms\n   * @param {Function} [options.onCancel]   – callback if user cancels/ closes\n   * @returns {Promise<void>|undefined}\n   */\n  async confirmDelete(options = {}) {\n    this.logger.debug?.('[ModalManager] confirmDelete() called.', { options });\n\n    const sh = this.safeHandler;\n\n    try {\n      await this.isReadyPromise();\n    } catch (err) {\n      this.logger.error?.('[ModalManager] confirmDelete: manager not ready', err);\n      if (typeof options.onCancel === 'function') options.onCancel();\n      return;\n    }\n\n    const modalName = 'delete';\n    const modalId = this.modalMappings[modalName];\n    if (!modalId) {\n      this.logger.warn?.('[ModalManager] confirmDelete: mapping \"delete\" missing');\n      return;\n    }\n\n    const modalEl = this.domAPI.getElementById(modalId);\n    if (!modalEl) {\n      this.logger.warn?.(`[ModalManager] confirmDelete: element #${modalId} not found`);\n      return;\n    }\n\n    // Populate content\n    const titleEl = modalEl.querySelector('h3');\n    const messageEl = modalEl.querySelector('#deleteConfirmText');\n    const confirmBtn = modalEl.querySelector('#confirmDeleteBtn');\n    const cancelBtn = modalEl.querySelector('#cancelDeleteBtn');\n\n    if (titleEl) titleEl.textContent = options.title || 'Confirm Delete';\n    if (messageEl) messageEl.textContent = options.message || 'Are you sure you want to delete this item?';\n    if (confirmBtn) {\n      confirmBtn.textContent = options.confirmText || 'Delete';\n      confirmBtn.className = `btn ${options.confirmClass || 'btn-error'}`;\n    }\n    if (cancelBtn) cancelBtn.textContent = options.cancelText || 'Cancel';\n\n    // Replace buttons to remove stale listeners\n    function _replace(btn) {\n      if (!btn) return null;\n      const clone = btn.cloneNode(true);\n      btn.parentNode.replaceChild(clone, btn);\n      return clone;\n    }\n    const newConfirmBtn = _replace(confirmBtn);\n    const newCancelBtn = _replace(cancelBtn);\n\n    const confirmHandler = sh(() => {\n      this.hide(modalName);\n      if (typeof options.onConfirm === 'function') options.onConfirm();\n    }, 'ModalManager:confirmDelete:confirm');\n\n    const cancelHandler = sh(() => {\n      this.hide(modalName);\n      if (typeof options.onCancel === 'function') options.onCancel();\n    }, 'ModalManager:confirmDelete:cancel');\n\n    if (!this.eventHandlers?.trackListener) {\n      throw new Error('[ModalManager] eventHandlers.trackListener is required for confirmDelete');\n    }\n    if (newConfirmBtn) {\n      this.eventHandlers.trackListener(newConfirmBtn, 'click', confirmHandler, {\n        description: 'Delete Modal Confirm Click',\n        context: 'modalManager',\n        source: 'ModalManager.confirmDelete'\n      });\n    }\n    if (newCancelBtn) {\n      this.eventHandlers.trackListener(newCancelBtn, 'click', cancelHandler, {\n        description: 'Delete Modal Cancel Click',\n        context: 'modalManager',\n        source: 'ModalManager.confirmDelete'\n      });\n    }\n\n    // Show modal via existing util\n    this.show(modalName, {\n      showDuringInitialization: options.showDuringInitialization,\n    });\n  }\n\n  hide(modalName) {\n    const modalId = this.modalMappings[modalName];\n    if (!modalId) {\n      this.logger.warn?.(`[ModalManager] hide(${modalName}): Modal name not found in mappings. Cannot hide.`, { modalName });\n      return;\n    }\n    const modalEl = this.domAPI.getElementById(modalId);\n    if (!modalEl) {\n      this.logger.warn?.(`[ModalManager] hide(${modalName}): Modal element with ID \"${modalId}\" NOT FOUND in DOM. Cannot hide.`, { modalName, modalId });\n      return;\n    }\n    this._hideModalElement(modalEl); // This logs internally\n\n    if (this.domReadinessService?.emitReplayable)\n      this.domReadinessService.emitReplayable('modalHidden', { modal: modalName });\n\n    if (this.activeModal === modalName) {\n      this.activeModal = null;\n      this.logger.debug?.(`[ModalManager] hide(${modalName}): Modal hidden and activeModal cleared.`);\n    } else {\n      this.logger.debug?.(`[ModalManager] hide(${modalName}): Modal hidden. It was not the active modal (activeModal was ${this.activeModal}).`);\n    }\n\n    // Race-proof PATCH: Only hide #modalsContainer if *no* modals are visible or open.\n    const containerEl = this.domAPI.getElementById('modalsContainer');\n    if (containerEl) {\n      const modals = containerEl.querySelectorAll('.modal');\n      let stillOpen = false;\n      modals.forEach(modal => {\n        if ((typeof modal.open === 'boolean' && modal.open) ||\n            (!modal.classList.contains('hidden') && !modal.hasAttribute('hidden'))) {\n          stillOpen = true;\n        }\n      });\n      if (!stillOpen) {\n        containerEl.classList.add('hidden');\n        containerEl.setAttribute('hidden', 'true');\n        containerEl.style.display = 'none';\n      }\n    }\n  }\n}\n\n/**\n * A dedicated class for handling the project creation/editing modal.\n */\nclass ProjectModal {\n  /**\n   * @constructor\n   * @param {Object} opts\n   *   @param {Object} [opts.projectManager]\n   *   @param {Object} [opts.eventHandlers]\n   *   @param {Object} [opts.DependencySystem]\n   *   @param {Object} [opts.domAPI]\n   *   @param {Object} [opts.domPurify]\n   *   @param {Object} [opts.domReadinessService] -- injected readiness service\n   *   @param {Object} [opts.logger]\n   *   @param {Object} [opts.errorReporter]\n   */\n  constructor({ projectManager, eventHandlers, DependencySystem, domAPI, domPurify, domReadinessService, logger, errorReporter } = {}) {\n    this.DependencySystem = DependencySystem || undefined;\n\n    this.eventHandlers =\n      eventHandlers ||\n      this.DependencySystem?.modules?.get?.('eventHandlers') ||\n      undefined;\n    this.projectManager =\n      projectManager ||\n      this.DependencySystem?.modules?.get?.('projectManager') ||\n      undefined;\n    this.domAPI = domAPI || this.DependencySystem?.modules?.get?.('domAPI');\n    if (!this.domAPI) {\n      throw new Error('[ProjectModal] domAPI DI not provided');\n    }\n\n    this.domPurify =\n      domPurify ||\n      this.DependencySystem?.modules?.get?.('domPurify') ||\n      this.DependencySystem?.modules?.get?.('sanitizer') ||\n      null;\n\n    this.domReadinessService =\n      domReadinessService ||\n      this.DependencySystem?.modules?.get?.('domReadinessService') ||\n      null;\n\n    if (!this.domReadinessService) {\n      throw new Error('[ProjectModal] domReadinessService DI not provided');\n    }\n\n    if (!logger) throw new Error('[ProjectModal] logger is required');\n    this.logger = logger;\n    this.errorReporter =\n      errorReporter ||\n      this.DependencySystem?.modules?.get?.('errorReporter') ||\n      { report: () => { } };\n\n    this.modalElement = null;\n    this.formElement = null;\n    this.isOpen = false;\n    this.currentProjectId = null;\n\n    this.logger.info?.('[ProjectModal] constructed'); // Changed to info for better visibility\n\n    // Inject mobile modal safe-area CSS via domAPI (once per instance)\n    try {\n      const doc = this.domAPI.getDocument();\n      const win = this.domAPI.getWindow?.();\n      const markerId = 'modal-box-safe-area-css';\n      if (doc && win && !this.domAPI.getElementById(markerId)) {\n        const styleEl = this.domAPI.createElement('style');\n        styleEl.id = markerId;\n        styleEl.textContent =\n          `@media (max-width:640px){` +\n          `.modal-box{max-width:calc(100vw - 2rem)!important;` +\n          `max-height:calc(100vh - 3.5rem)!important;overflow-y:auto;}` +\n          `.modal.modal-bottom{align-items:flex-end;}` +\n          `.sm\\\\:modal-middle{align-items:flex-start;}` +\n          `}`;\n        this.domAPI.appendChild(doc.head, styleEl);\n      }\n    } catch (e) {\n      this.logger.debug?.('[ProjectModal] safe-area CSS injection failed', e, { context: 'modalManager' });\n    }\n  }\n\n  _isDebug() {\n    const app = this.DependencySystem?.modules?.get?.('app');\n    return !!app?.config?.debug;\n  }\n\n  _showModalElement() {\n    if (typeof this.modalElement.showModal === 'function') {\n      this.modalElement.showModal();\n    } else {\n      this.modalElement.classList.remove('hidden');\n      this.modalElement.style.display = 'flex';\n      this.modalElement.setAttribute('open', 'true');\n    }\n  }\n\n  _hideModalElement() {\n    if (typeof this.modalElement.close === 'function') {\n      this.modalElement.close();\n    } else {\n      this.modalElement.classList.add('hidden');\n      this.modalElement.style.display = 'none';\n      this.modalElement.removeAttribute('open');\n    }\n  }\n\n  _setButtonLoading(btn, isLoading, loadingText = 'Saving...') {\n    if (!btn) return;\n    if (isLoading) {\n      btn.disabled = true;\n      btn.dataset.originalText = btn.textContent;\n      const html = `<span class=\"loading loading-spinner loading-xs\"></span> ${loadingText}`;\n      if (this.domPurify && typeof this.domPurify.sanitize === 'function') {\n        btn.innerHTML = this.domPurify.sanitize(html);\n      } else {\n        btn.textContent = loadingText;\n      }\n    } else {\n      btn.disabled = false;\n      if (btn.dataset.originalText) {\n        btn.textContent = btn.dataset.originalText;\n        delete btn.dataset.originalText;\n      }\n    }\n  }\n\n  /**\n   * Await readiness of modal DOM elements via domReadinessService.\n   * This method must be called and awaited before interacting with modal DOM.\n   */\n  async init() {\n    this.logger.info?.('[ProjectModal] init() called.');\n    try {\n      // This relies on modals.html (containing #projectModal) already being loaded.\n      // ModalManager's init should ensure this before ProjectModal.init is typically called.\n      this.logger.debug?.('[ProjectModal] init: Awaiting DOM elements #projectModal and #projectModalForm.');\n      await this.domReadinessService.dependenciesAndElements({\n        domSelectors: ['#projectModal', '#projectModalForm'],\n        timeout: 7000, // Increased timeout slightly, assuming modals.html is loaded\n        context: 'projectModal.init:awaitElements'\n      });\n      this.logger.debug?.('[ProjectModal] init: DOM elements wait completed.');\n\n      this.modalElement = this.domAPI.getElementById('projectModal');\n      this.formElement = this.domAPI.getElementById('projectModalForm');\n\n      if (!this.modalElement) {\n        this.logger.error?.('[ProjectModal] init: #projectModal element NOT FOUND in DOM after domReadinessService wait. This is critical.');\n        throw new Error('[ProjectModal] #projectModal element not found on init.');\n      }\n      if (!this.formElement) {\n        this.logger.error?.('[ProjectModal] init: #projectModalForm element NOT FOUND in DOM after domReadinessService wait. This is critical.');\n        throw new Error('[ProjectModal] #projectModalForm element not found on init.');\n      }\n      this.logger.debug?.('[ProjectModal] init: #projectModal and #projectModalForm elements successfully found.');\n\n      this.setupEventListeners(); // Internal logging within this method\n\n      if (typeof this.domAPI.dispatchEvent === 'function' && this.modalElement) {\n        this.domAPI.dispatchEvent(\n          this.modalElement,\n          new CustomEvent('projectModal:ready', { detail: { success: true } })\n        );\n      }\n      this.logger.info?.('[ProjectModal] init() completed successfully.');\n    } catch (err) {\n      this.logger.error?.('[ProjectModal] init() failed.', err, { context: 'projectModal.init' });\n      this.errorReporter.report?.(err, { module: 'ProjectModal', fn: 'init', reason: 'DomElementsOrListenersFailed' });\n      throw err; // Re-throw so callers (e.g., UI initializer) know init failed\n    }\n  }\n\n  destroy() {\n    if (!this.eventHandlers?.cleanupListeners) {\n      return;\n    }\n    this.eventHandlers.cleanupListeners({ context: 'projectModal' });\n  }\n\n  openModal(project = null) {\n    if (!this.modalElement) {\n      this.logger.warn?.('[ProjectModal] openModal: modalElement is null (likely init failed). Cannot open.');\n      return;\n    }\n    this.logger.debug?.(`[ProjectModal] openModal called. Project: ${project ? project.id : 'new'}`, { project });\n\n    if (this.formElement) {\n      this.formElement.reset();\n      this.logger.debug?.('[ProjectModal] openModal: Form reset.');\n    } else {\n      this.logger.warn?.('[ProjectModal] openModal: formElement is null. Cannot reset form.');\n    }\n\n    const titleEl = this.modalElement.querySelector('#projectModalTitle');\n    if (titleEl) {\n      titleEl.textContent = project ? 'Edit Project' : 'Create Project';\n    } else {\n      this.logger.warn?.('[ProjectModal] openModal: #projectModalTitle element not found.');\n    }\n\n    if (project) {\n      this.currentProjectId = project.id;\n      this.logger.debug?.(`[ProjectModal] openModal: Populating form for editing project ID: ${this.currentProjectId}`);\n      const idInput = this.modalElement.querySelector('#projectModalIdInput');\n      const nameInput = this.modalElement.querySelector('#projectModalNameInput');\n      const descInput = this.modalElement.querySelector('#projectModalDescInput');\n      const goalsInput = this.modalElement.querySelector('#projectModalGoalsInput');\n      const maxTokensInput = this.modalElement.querySelector('#projectModalMaxTokensInput');\n\n      if (idInput) idInput.value = project.id || ''; else this.logger.warn?.('[ProjectModal] openModal: #projectModalIdInput not found.');\n      if (nameInput) nameInput.value = project.name || ''; else this.logger.warn?.('[ProjectModal] openModal: #projectModalNameInput not found.');\n      if (descInput) descInput.value = project.description || ''; else this.logger.warn?.('[ProjectModal] openModal: #projectModalDescInput not found.');\n      if (goalsInput) goalsInput.value = project.goals || ''; else this.logger.warn?.('[ProjectModal] openModal: #projectModalGoalsInput not found.');\n      if (maxTokensInput) maxTokensInput.value = project.max_tokens || ''; else this.logger.warn?.('[ProjectModal] openModal: #projectModalMaxTokensInput not found.');\n    } else {\n      this.currentProjectId = null;\n      this.logger.debug?.('[ProjectModal] openModal: Clearing form for new project.');\n      const idEl = this.modalElement.querySelector('#projectModalIdInput');\n      if (idEl) {\n        idEl.value = ''; // Ensure hidden ID field is cleared for new projects\n      } else {\n        this.logger.warn?.('[ProjectModal] openModal: #projectModalIdInput not found for clearing.');\n      }\n      // Explicitly clear other fields for new project scenario\n      const nameInput = this.modalElement.querySelector('#projectModalNameInput');\n      if (nameInput) nameInput.value = '';\n      const descInput = this.modalElement.querySelector('#projectModalDescInput');\n      if (descInput) descInput.value = '';\n      const goalsInput = this.modalElement.querySelector('#projectModalGoalsInput');\n      if (goalsInput) goalsInput.value = '';\n      const maxTokensInput = this.modalElement.querySelector('#projectModalMaxTokensInput');\n      if (maxTokensInput) maxTokensInput.value = '';\n\n    }\n\n    this._showModalElement(); // Internal logging for show\n    this.isOpen = true;\n    this.logger.info?.(`[ProjectModal] Modal opened. Mode: ${project ? 'edit' : 'create'}, Project ID: ${this.currentProjectId || 'N/A'}`);\n  }\n\n  setupEventListeners() {\n    if (!this.modalElement) {\n      this.logger.warn?.('[ProjectModal] setupEventListeners: modalElement is null. Cannot set up common listeners.');\n      // If modalElement is null, formElement is also likely null or irrelevant.\n      return;\n    }\n    if (!this.formElement) {\n      this.logger.warn?.('[ProjectModal] setupEventListeners: formElement is null. Cannot set up form submit listener.');\n      // Proceed to set up modal-specific listeners like ESC and backdrop if modalElement exists\n    }\n\n    this.logger.debug?.('[ProjectModal] Setting up event listeners.');\n\n    if (this.formElement) {\n      const submitHandler = async (e) => {\n        // e.preventDefault() is called in handleSubmit\n        await this.handleSubmit(e);\n      };\n      this._bindEvent(\n        this.formElement,\n        'submit',\n        submitHandler,\n        'ProjectModal form submit', // More specific description\n        { passive: false }\n      );\n    }\n\n    const cancelBtn = this.modalElement.querySelector('#projectCancelBtn');\n    if (cancelBtn) {\n      const cancelHandler = (e) => {\n        e.preventDefault();\n        this.logger.debug?.('[ProjectModal] Cancel button clicked.');\n        this.closeModal();\n      };\n      this._bindEvent(cancelBtn, 'click', cancelHandler, 'ProjectModal Cancel button click');\n    } else {\n      this.logger.warn?.('[ProjectModal] setupEventListeners: Cancel button #projectCancelBtn not found in #projectModal.');\n    }\n\n    // Listen on document for ESC key for wider capture, e.g., if focus is not directly in modal\n    const escHandler = (e) => {\n      if (e.key === 'Escape' && this.isOpen) {\n        this.logger.debug?.('[ProjectModal] ESC key pressed while modal is open, closing modal.');\n        this.closeModal();\n      }\n    };\n    this._bindEvent(\n      this.domAPI.ownerDocument, // Changed from this.modalElement for broader scope if modal loses focus\n      'keydown',\n      escHandler,\n      'ProjectModal Document ESC key handler'\n    );\n\n    // Click on backdrop (dialog element itself) to close, if it's a <dialog>\n    // For non-<dialog> fallbacks, this might need CSS to make the backdrop clickable.\n    const backdropHandler = (e) => {\n      // Check if the click is directly on the dialog/modalElement itself\n      if (e.target === this.modalElement && this.isOpen) {\n        this.logger.debug?.('[ProjectModal] Backdrop clicked (e.target is modalElement), closing modal.');\n        this.closeModal();\n      }\n    };\n    this._bindEvent(\n      this.modalElement, // Listener on the modal itself\n      'click',\n      backdropHandler,\n      'ProjectModal backdrop click handler'\n    );\n    this.logger.debug?.('[ProjectModal] Event listeners setup completed.');\n  }\n\n  closeModal() {\n    if (!this.modalElement) {\n      this.logger.warn?.('[ProjectModal] closeModal: modalElement is null. Cannot close.');\n      return;\n    }\n    if (!this.isOpen) {\n      this.logger.debug?.('[ProjectModal] closeModal: Modal is already closed or was never opened.');\n      return;\n    }\n    this._hideModalElement(); // Internal logging for hide\n    this.isOpen = false;\n    const closedProjectId = this.currentProjectId; // Capture before resetting\n    this.currentProjectId = null;\n    this.logger.info?.(`[ProjectModal] Modal closed. Was for Project ID: ${closedProjectId || 'N/A'}`);\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault(); // Always prevent default for form submission via JS\n    if (!this.formElement) {\n      this.logger.warn?.('[ProjectModal] handleSubmit: formElement is null. Cannot process submission.');\n      return;\n    }\n    this.logger.debug?.('[ProjectModal] handleSubmit: Form submission initiated.');\n\n    const saveBtn = this.modalElement.querySelector('#projectSaveBtn');\n    if (!saveBtn) {\n      this.logger.warn?.('[ProjectModal] handleSubmit: Save button #projectSaveBtn not found. UI update for loading state will fail.');\n    }\n\n    try {\n      const formData = new FormData(this.formElement);\n      const projectData = {\n        name: formData.get('name')?.trim() || '', // Ensure trimmed\n        description: formData.get('description') || '',\n        goals: formData.get('goals') || '',\n        max_tokens: formData.get('maxTokens') || null\n      };\n      // projectId from hidden input for existing projects, or null/empty for new.\n      // this.currentProjectId is set when opening for an existing project.\n      const projectIdFromForm = formData.get('projectId');\n      const idToSave = projectIdFromForm || this.currentProjectId; // Prefer form ID if available, else currentProjectId\n\n      this.logger.debug?.(`[ProjectModal] handleSubmit: Project data extracted. Name: \"${projectData.name}\", Form ID: \"${projectIdFromForm}\", Current Edit ID: \"${this.currentProjectId}\", Effective ID for save: \"${idToSave}\"`);\n\n      if (!projectData.name) { // Check after trim\n        this.logger.warn?.('[ProjectModal] handleSubmit: Project name is empty after trim. Aborting save.');\n        // TODO: Implement user-facing validation feedback (e.g., highlight field, show message)\n        this.errorReporter.report?.(new Error('Validation: Project name empty'), {\n          module: 'ProjectModal', fn: 'handleSubmit', validationError: true, field: 'name'\n        });\n        if (saveBtn) this._setButtonLoading(saveBtn, false); // Reset button if validation fails early\n        return;\n      }\n\n      if (saveBtn) this._setButtonLoading(saveBtn, true, 'Saving...');\n      this.logger.info?.(`[ProjectModal] handleSubmit: Attempting to save project. ID: ${idToSave || '(new project)'}, Name: \"${projectData.name}\"`);\n\n      await this.saveProject(idToSave, projectData); // Use idToSave (could be null for new project)\n\n      this.logger.info?.(`[ProjectModal] handleSubmit: Project save successful. ID: ${idToSave || '(new project after save)'}, Name: \"${projectData.name}\"`);\n      this.closeModal();\n\n    } catch (err) {\n      this.logger.error?.('[ProjectModal][handleSubmit] Error during project save operation:', err, { projectId: this.currentProjectId, formData: Object.fromEntries(new FormData(this.formElement)) });\n      this.errorReporter.report?.(err, { module: 'ProjectModal', fn: 'handleSubmit', currentProjectId: this.currentProjectId });\n      // TODO: Show error to user within the modal (e.g., a toast or message area in the modal)\n    } finally {\n      // Ensure button loading state is always reset, even if saveBtn was not found initially (though less likely)\n      if (saveBtn) this._setButtonLoading(saveBtn, false);\n      this.logger.debug?.('[ProjectModal] handleSubmit: Submission process finished.');\n    }\n  }\n\n  async saveProject(projectId, projectData) {\n    if (!this.projectManager) {\n      throw new Error('[ProjectModal] projectManager not available (not injected)');\n    }\n    await this.projectManager.saveProject(projectId, projectData);\n  }\n\n  setLoading(isLoading) {\n    const saveBtn = this.modalElement.querySelector('#projectSaveBtn');\n    const cancelBtn = this.modalElement.querySelector('#projectCancelBtn');\n    if (saveBtn) {\n      saveBtn.disabled = isLoading;\n      saveBtn.classList.toggle('loading', isLoading);\n    }\n    if (cancelBtn) {\n      cancelBtn.disabled = isLoading;\n    }\n  }\n\n  _bindEvent(element, type, handler, description, options = {}) {\n    if (this.eventHandlers?.trackListener) {\n      this.eventHandlers.trackListener(element, type, handler, {\n        description,\n        context: 'projectModal',\n        source: 'ProjectModal._bindEvent',\n        ...options\n      });\n    } else {\n      throw new Error('[ProjectModal] eventHandlers.trackListener is required');\n    }\n  }\n}\n\n/**\n * Create a single ModalManager instance using the classes above.\n */\nexport function createModalManager({\n  eventHandlers, domAPI, browserService, DependencySystem,\n  modalMapping, domPurify, domReadinessService, logger\n} = {}) {\n  if (!logger) throw new Error('[createModalManager] logger dependency is required');\n  return new ModalManager({\n    eventHandlers, domAPI, browserService, DependencySystem,\n    modalMapping, domPurify, domReadinessService, logger\n  });\n}\n\n/**\n * Factory that creates a **ProjectModal** instance.\n * Validates required dependencies and exposes a compliant public API that\n * includes a mandatory `cleanup()` method for listener/resource teardown.\n *\n * @param {Object} deps\n * @param {Object} deps.projectManager          – Required\n * @param {Object} deps.eventHandlers           – Required\n * @param {Object} deps.domAPI                  – Required\n * @param {Object} deps.domReadinessService     – Required\n * @param {Object} [deps.DependencySystem]      – Optional DI container\n * @param {Object} [deps.domPurify]             – Optional sanitizer\n * @returns {Object} Public API surface for the created ProjectModal\n */\nexport function createProjectModal(deps = {}) {\n  const {\n    projectManager,\n    eventHandlers,\n    DependencySystem,\n    domAPI,\n    domPurify,\n    domReadinessService,\n    logger\n  } = deps;\n\n  // ─── Dependency validation (Factory Rule #1) ────────────────────────────────\n  if (!projectManager) throw new Error('[createProjectModal] Missing dependency: projectManager');\n  if (!eventHandlers) throw new Error('[createProjectModal] Missing dependency: eventHandlers');\n  if (!domAPI) throw new Error('[createProjectModal] Missing dependency: domAPI');\n  if (!domReadinessService) throw new Error('[createProjectModal] Missing dependency: domReadinessService');\n  if (!logger)             throw new Error('[createProjectModal] Missing dependency: logger');\n\n  // ─── Instance creation ──────────────────────────────────────────────────────\n  const instance = new ProjectModal({\n    projectManager, eventHandlers, DependencySystem,\n    domAPI, domPurify, domReadinessService, logger\n  });\n\n  // ─── Exposed public API (no direct instance leak) ───────────────────────────\n  return {\n    // Conveniences mirroring underlying instance ------------------------------\n    initialize: (...args) => instance.init(...args),\n    openModal: (...args) => instance.openModal(...args),\n    closeModal: (...args) => instance.closeModal(...args),\n\n    // Optional direct access (kept minimal & explicit)\n    getInstance: () => instance,\n\n    // MANDATORY cleanup hook per guardrails -----------------------------------\n    cleanup: () => {\n      if (eventHandlers?.cleanupListeners) {\n        eventHandlers.cleanupListeners({ context: 'projectModal' });\n      }\n      instance.destroy();\n    }\n  };\n}\n\n// Inject mobile modal safe-area rule once only (after library/module load)\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 51962,
          "_transferSize": 53151,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.364Z",
        "time": 228.98100000747945,
        "timings": {
          "blocked": 182.89200000329222,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.05500000000000682,
          "wait": 43.53499999492149,
          "receive": 2.4990000092657283,
          "_blocked_queueing": 4.910000003292225,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126339",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 37
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/auth.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1459,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "53301"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"28df0795cba57d43b225e9f0a8a5bad7\""
            },
            {
              "name": "last-modified",
              "value": "Tue, 03 Jun 2025 21:36:43 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 53301,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "import createAuthFormListenerFactory from './authFormListenerFactory.js';\n\n/**\n * Creates and returns a centralized authentication module with dependency injection.\n *\n * This factory function provides a complete authentication system, including login, logout, registration, session verification, CSRF token management, authenticated API requests, event broadcasting, and UI form integration. All external dependencies must be supplied via the `deps` object, ensuring strict modularity and testability.\n *\n * The returned module exposes methods for authentication actions, state queries, event handling, and diagnostics, and manages all authentication state and event wiring internally.\n *\n * @param {object} deps - Dependency injection object containing required services and configuration.\n * @returns {object} Public API for authentication operations, including methods for login, logout, registration, state verification, CSRF handling, event bus, and diagnostics.\n *\n * @throws {Error} If required dependencies or endpoint configurations are missing or invalid.\n *\n * @remark\n * All authentication logic, state, and event handling are encapsulated in this module. No authentication primitives exist outside this context. All previous modular primitives are removed.\n */\n\n // VENDOR-EXEMPT-SIZE: Core module pending refactor in Q3-25\nexport function createAuth(deps) {   // canonical factory required by guardrails (file auth.js)\n  // === FACTORY GUARDRAIL: STRICT DI VALIDATION (No fallback, throw immediately, BEFORE destructuring) ===\n  if (!deps || typeof deps !== \"object\") {\n    throw new Error(\"[AuthModule] 'deps' DI object is required as argument to createAuthModule\");\n  }\n  if (!deps.apiClient) throw new Error(\"[AuthModule] DI param 'apiClient' is required.\");\n  if (!deps.logger) throw new Error(\"[AuthModule] DI param 'logger' is required.\");\n  if (!deps.domReadinessService) throw new Error(\"[AuthModule] DI param 'domReadinessService' is required.\");\n  if (!deps.eventHandlers) throw new Error(\"[AuthModule] DI param 'eventHandlers' is required.\");\n  if (!deps.domAPI) throw new Error(\"[AuthModule] DI param 'domAPI' is required.\");\n  if (!deps.sanitizer) throw new Error(\"[AuthModule] DI param 'sanitizer' is required.\");\n  if (!deps.apiEndpoints) throw new Error(\"[AuthModule] DI param 'apiEndpoints' is required.\");\n\n  // Validate that apiEndpoints contains all required auth endpoint keys\n  const requiredEndpoints = ['AUTH_CSRF', 'AUTH_LOGIN', 'AUTH_LOGOUT', 'AUTH_REGISTER', 'AUTH_VERIFY', 'AUTH_REFRESH'];\n  const missingEndpoints = requiredEndpoints.filter(key => !deps.apiEndpoints[key]);\n  if (missingEndpoints.length > 0) {\n    throw new Error(`[AuthModule] Missing required auth endpoints in apiEndpoints: ${missingEndpoints.join(', ')}. Available endpoints: ${Object.keys(deps.apiEndpoints).join(', ')}`);\n  }\n\n  // DependencySystem and modalManager may be undefined\n\n  const {\n    apiClient,\n    eventHandlers,\n    domAPI,\n    sanitizer,\n    modalManager,\n    apiEndpoints,\n    DependencySystem,\n    logger,\n    domReadinessService\n  } = deps;\n\n  // Use canonical safeHandler from DI\n  const safeHandler = DependencySystem.modules.get('safeHandler');\n\n  // --- bearer token storage ---------------------------------\n  let accessToken = null;           // stores latest JWT / bearer\n  let tokenType = 'Bearer';       // e.g. \"Bearer\"\n  let refreshToken = null;           // optional refresh token\n\n  // === 2) INTERNAL UTILITIES & HELPERS ===\n\n  function extendProps(target, props) {\n    if (target && props) Object.assign(target, props);\n  }\n  function applyStyles(target, styles) {\n    if (target && styles) Object.assign(target, styles);\n  }\n\n  // === 3) DOM/COOKIE & STATE MANAGEMENT ===\n  // CONSOLIDATED: No local authState - appModule.state is the single source of truth per .clinerules\n\n  const AuthBus = new EventTarget();\n\n  // Helper to get the canonical app state\n  function getAppState() {\n    const appModuleRef = DependencySystem?.modules?.get('appModule');\n    if (!appModuleRef?.state) {\n      logger.warn('[AuthModule] appModule.state not available. Using fallback empty state.', { context: 'getAppState' });\n      return {\n        isAuthenticated: false,\n        currentUser: null,\n        isReady: false\n      };\n    }\n    return appModuleRef.state;\n  }\n\nfunction readCookie(name) {\n    const doc = domAPI.getDocument?.();\n    if (!doc || typeof doc.cookie !== 'string') return null;\n    const cookies = doc.cookie.split('; ');\n    const pair = cookies.map(c => c.split('=')).find(([k]) => k === name);\n    return pair ? decodeURIComponent(pair[1]) : null;\n}\n\n  function validateUsername(username) {\n    return typeof username === 'string' && /^[a-zA-Z0-9_.-]{3,32}$/.test(username);\n  }\n  function validatePassword(password) {\n    if (typeof password !== 'string' || password.length < 12) {\n      return { valid: false, message: 'Password must be at least 12 characters' };\n    }\n    const hasUpper = /[A-Z]/.test(password);\n    const hasLower = /[a-z]/.test(password);\n    const hasNumber = /\\d/.test(password);\n    const hasSpecial = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(password);\n    if (!hasUpper) return { valid: false, message: 'Password must contain an uppercase letter' };\n    if (!hasLower) return { valid: false, message: 'Password must contain a lowercase letter' };\n    if (!hasNumber) return { valid: false, message: 'Password must contain a number' };\n    if (!hasSpecial) return { valid: false, message: 'Password must contain a special character' };\n    return { valid: true };\n  }\n\n  // === 4) UI/FORM HELPERS ===\n  function setButtonLoading(btn, isLoading, loadingText = 'Saving...') {\n    if (!btn) return;\n    if (isLoading) {\n      btn.disabled = true;\n      btn.dataset.originalText = btn.textContent;\n      const htmlContent = `<span class=\"loading loading-spinner loading-xs\"></span> ${loadingText}`;\n      domAPI.setInnerHTML(btn, sanitizer.sanitize(htmlContent));\n    } else {\n      btn.disabled = false;\n      if (btn.dataset.originalText) {\n        btn.textContent = btn.dataset.originalText;\n        delete btn.dataset.originalText;\n      }\n    }\n  }\n  function showError(el, msg) {\n    if (el) {\n      domAPI.setTextContent(el, msg);\n      domAPI.removeClass(el, 'hidden');\n    }\n  }\n  function hideError(el) {\n    if (el) {\n      domAPI.setTextContent(el, '');\n      domAPI.addClass(el, 'hidden');\n    }\n  }\n\n  // === 5) CSRF & TOKEN LOGIC ===\n  let csrfToken = '';\n  let csrfTokenPromise = null;\n  let _lastLoginTimestamp = 0;\n// Logging simplification: always treat as not in log-delivery context\n  const _inLogDelivery = false;\n\n  function getCSRFToken() {\n    const current = readCookie('csrf_token');\n    if (current) csrfToken = current;\n    return csrfToken;\n  }\n\n  async function fetchCSRFToken() {\n    if (!apiEndpoints.AUTH_CSRF) throw new Error('AUTH_CSRF endpoint missing in apiEndpoints');\n    const csrfUrl = apiEndpoints.AUTH_CSRF;\n    const url = csrfUrl.includes('?')\n      ? `${csrfUrl}&ts=${Date.now()}`\n      : `${csrfUrl}?ts=${Date.now()}`;\n\n    if (!_inLogDelivery) {\n      logger.log('[DIAGNOSTIC][auth.js][fetchCSRFToken] Fetching', url, { context: 'fetchCSRFToken' });\n    }\n\n    const data = await apiClient(url, {\n      method: 'GET',\n      headers: { Accept: 'application/json', 'Cache-Control': 'no-cache' },\n      credentials: 'include',\n      cache: 'no-store'\n    });\n\n    if (!data || !data.token) {\n      if (!_inLogDelivery) {\n        logger.error('[DIAGNOSTIC][auth.js][fetchCSRFToken] Missing or bad response:', data, { context: 'fetchCSRFToken' });\n      }\n      throw new Error('CSRF token missing');\n    }\n\n    if (!_inLogDelivery) {\n      logger.log('[DIAGNOSTIC][auth.js][fetchCSRFToken] Received CSRF token (masked)', { context: 'fetchCSRFToken' });\n    }\n\n    return data.token;\n  }\n  async function getCSRFTokenAsync(forceFetch = false) {\n    const cookieVal = readCookie('csrf_token');\n    if (!forceFetch && cookieVal) {\n      csrfToken = cookieVal;\n      return csrfToken;\n    }\n    if (csrfToken && !forceFetch) return csrfToken;\n    if (csrfTokenPromise) return csrfTokenPromise;\n    csrfTokenPromise = (async () => {\n      try {\n        const token = await fetchCSRFToken();\n        if (token) csrfToken = token;\n        return token;\n      } finally {\n        csrfTokenPromise = null;\n      }\n    })();\n    return csrfTokenPromise;\n  }\n\n  // === 6) AUTH REQUEST WRAPPER ===\n  // CONSOLIDATED: Standardized error object creation to match apiClient.js pattern\n  function extendErrorWithStatus(error, message) {\n    if (!error.status) {\n      // Use same structure as apiClient.js: status, data (full payload), message\n      extendProps(error, {\n        status: 0,\n        data: { detail: message || 'Network/CORS issue' },\n        // message is already set on the Error object\n      });\n    }\n  }\n  async function authRequest(endpoint, method, body = null) {\n    const headers = { Accept: 'application/json' };\n    const options = { method: method.toUpperCase(), headers, credentials: 'include' };\n    const isStateChanging =\n      !['GET', 'HEAD', 'OPTIONS'].includes(options.method) &&\n      endpoint !== apiEndpoints.AUTH_CSRF;\n    if (isStateChanging) {\n      const token = getCSRFToken() || (await getCSRFTokenAsync());\n      if (token) {\n        options.headers['X-CSRF-Token'] = token;\n        if (!_inLogDelivery) {\n          logger.log('[DIAGNOSTIC][auth.js][authRequest] Adding X-CSRF-Token header [masked] for', endpoint, { context: 'authRequest' });\n        }\n      } else {\n        if (!_inLogDelivery) {\n          logger.warn('[DIAGNOSTIC][auth.js][authRequest] No CSRF token found for state-changing request', endpoint, { context: 'authRequest' });\n        }\n      }\n    }\n    // Bearer-auth header when we already hold an access token\n    if (accessToken && !options.headers['Authorization']) {\n      options.headers['Authorization'] = `${tokenType} ${accessToken}`;\n    }\n    if (body) {\n      options.body = JSON.stringify(body);\n      options.headers['Content-Type'] = 'application/json';\n    }\n    try {\n      if (!_inLogDelivery) {\n        logger.log('[DIAGNOSTIC][auth.js][authRequest][REQUEST]', endpoint, options, { context: 'authRequest' });\n      }\n      const data = await apiClient(endpoint, options);\n      if (!_inLogDelivery) {\n        logger.log('[DIAGNOSTIC][auth.js][authRequest][RESPONSE]', endpoint, data, { context: 'authRequest' });\n      }\n      return data;\n    } catch (error) {\n      if (!_inLogDelivery) {\n        logger.error('[DIAGNOSTIC][auth.js][authRequest][ERROR]', endpoint, error, { context: 'authRequest' });\n      }\n      extendErrorWithStatus(error, error.message);\n      throw error;\n    }\n  }\n\n  // === 7) TOKEN REFRESH & CLEAR ===\n  let tokenRefreshInProgress = false;\n  let tokenRefreshPromise = null;\n  async function refreshTokens() {\n    if (tokenRefreshInProgress) return tokenRefreshPromise;\n    tokenRefreshInProgress = true;\n    tokenRefreshPromise = (async () => {\n      try {\n        await getCSRFTokenAsync();\n        const response = await authRequest(apiEndpoints.AUTH_REFRESH, 'POST');\n        // Store bearer tokens if present\n        if (response && response.access_token) {\n          accessToken = response.access_token;\n          tokenType = response.token_type || 'Bearer';\n          refreshToken = response.refresh_token || refreshToken;\n        }\n        return { success: true, response };\n      } catch (error) {\n        if (logger && logger.error) logger.error('[refreshTokens] error', error, { context: 'refreshTokens' });\n        if (error.status === 401) {\n          await clearTokenState({ source: 'refresh_401_error' });\n        }\n        throw error;\n      } finally {\n        tokenRefreshInProgress = false;\n        tokenRefreshPromise = null;\n      }\n    })();\n    return tokenRefreshPromise;\n  }\n  async function clearTokenState(options = { source: 'unknown' }) {\n    accessToken = null;\n    refreshToken = null;\n    broadcastAuth(false, null, `clearTokenState:${options.source}`);\n  }\n\n  /**\n   * Broadcasts authentication state changes to the application and updates relevant UI elements.\n   *\n   * Updates the canonical appModule.state and dispatches authStateChanged events. This is the ONLY\n   * function that should modify authentication state per .clinerules single source of truth.\n   *\n   * @param {boolean} authenticated - Whether the user is authenticated.\n   * @param {object|null} [userObject=null] - The current user object, or `null` if not authenticated.\n   * @param {string} [source='unknown'] - The source of the state change for diagnostic purposes.\n   */\n  function broadcastAuth(authenticated, userObject = null, source = 'unknown') {\n    const appModuleRef = DependencySystem?.modules?.get('appModule');\n    if (!appModuleRef?.setAuthState) {\n      logger.error('[AuthModule][broadcastAuth] appModule.setAuthState not available. Cannot update authentication state.', { source, context: 'broadcastAuth' });\n      return;\n    }\n\n    const currentState = appModuleRef.state;\n    const previousAuth = currentState.isAuthenticated;\n    const previousUserObject = currentState.currentUser;\n\n    logger.log('[DIAGNOSTIC][auth.js][broadcastAuth] called.', {\n      authenticated, userObject, source,\n      previousAuth,\n      previousUserObject\n    }, { context: 'broadcastAuth' });\n\n    const changed =\n      authenticated !== previousAuth ||\n      JSON.stringify(userObject) !== JSON.stringify(previousUserObject);\n\n    if (changed) {\n      logger.info('[AuthModule][broadcastAuth] Updating canonical app state.', {\n        authenticated,\n        userId: userObject?.id,\n        source,\n        context: 'broadcastAuth:appModuleUpdate'\n      });\n\n      // SINGLE SOURCE OF TRUTH: Update only appModule.state per .clinerules\n      appModuleRef.setAuthState({\n        isAuthenticated: authenticated,\n        currentUser: userObject\n      });\n\n      const eventDetail = {\n        authenticated,\n        user: userObject,\n        timestamp: Date.now(),\n        source\n      };\n      try {\n        logger.log('[DIAGNOSTIC][auth.js][broadcastAuth] Broadcasting authStateChanged event', { source, authenticated, userId: userObject?.id, context: 'broadcastAuth:dispatchEvents' });\n        if (!eventHandlers.createCustomEvent) {\n          throw new Error('[AuthModule] eventHandlers.createCustomEvent is required to DI-create events for guardrail compliance.');\n        }\n        // Dispatch event via AuthBus\n        const evt = eventHandlers.createCustomEvent('authStateChanged', { detail: eventDetail });\n        AuthBus.dispatchEvent(evt);\n\n        // Now create a NEW event for the document target\n        try {\n          const docObj = domAPI?.getDocument?.();\n          if (docObj) {\n            const docEvt = eventHandlers.createCustomEvent('authStateChanged', { detail: eventDetail });\n            domAPI.dispatchEvent(docObj, docEvt);\n          }\n        } catch (docErr) {\n          logger.error('[AuthModule][broadcastAuth] Failed to dispatch authStateChanged on document',\n            docErr,\n            { context: 'broadcastAuth:docDispatch' });\n        }\n\n        // ── NEW: make the event replayable for late listeners ───────────\n        try {\n          const drs = DependencySystem?.modules?.get?.('domReadinessService');\n          if (drs?.emitReplayable) {\n            drs.emitReplayable('authStateChanged', eventDetail);\n            drs.emitReplayable('auth:stateChanged', eventDetail); // legacy alias\n          }\n        } catch (emitErr) {\n          logger.error('[AuthModule][broadcastAuth] emitReplayable failed',\n                       emitErr,\n                       { context: 'broadcastAuth:emitReplayable' });\n        }\n      } catch (busErr) {\n        logger.error('[DIAGNOSTIC][auth.js][broadcastAuth] AuthBus dispatch failed', busErr, { context: 'broadcastAuth' });\n      }\n    } else {\n      logger.log('[DIAGNOSTIC][auth.js][broadcastAuth] No auth/user change; not broadcasting', { context: 'broadcastAuth' });\n    }\n  }\n\n  // === 9) VERIFICATION, AUTO-REFRESH ===\n  let authCheckInProgress = false;\n  const AUTH_CONFIG = { VERIFICATION_INTERVAL: 300000 };\n  let verifyInterval = null;\n  /**\n   * Verifies the current authentication state by querying the backend and updates the application state accordingly.\n   *\n   * This function checks for authentication cookies and calls the backend verification endpoint to determine if the user is authenticated. It handles various response formats, including user objects and boolean flags, and updates the authentication state, user object, and broadcasts changes. On errors, it attempts token refresh for 401 responses, clears tokens for 500 or unhandled errors, and maintains state for network errors if cookies are present.\n   *\n   * @param {boolean} [forceVerify=false] - If true, forces verification even if a check is already in progress.\n   * @returns {Promise<boolean>} Resolves to true if the user is authenticated, false otherwise.\n   *\n   * @throws {Error} If the backend returns a non-JSON response when JSON is expected.\n   */\n  async function verifyAuthState(forceVerify = false) {\n    // Remove the early return that was causing issues with page refresh\n    // Always check auth state on page load/refresh regardless of recent login timestamp\n    if (authCheckInProgress && !forceVerify) {\n      const currentAuth = getAppState().isAuthenticated;\n      logger.debug('[AuthModule][verifyAuthState] Verification already in progress and not forced. Returning current state.', { currentAuth, context: 'verifyAuthState:inProgress' });\n      return currentAuth;\n    }\n    authCheckInProgress = true;\n    logger.debug('[AuthModule][verifyAuthState] Starting verification.', { forceVerify, context: 'verifyAuthState:start' });\n\n    try {\n      const hasExistingCookies = publicAuth.hasAuthCookies();\n      if (!hasExistingCookies && !forceVerify) {\n        // HttpOnly cookies are not visible to JavaScript; absence of\n        // readable cookies does NOT necessarily indicate the user is logged\n        // out. Continue with backend verification instead of clearing state.\n        logger.debug('[AuthModule][verifyAuthState] No readable auth cookies (likely HttpOnly). Proceeding with backend verification.', { context: 'verifyAuthState:noReadableCookies' });\n      }\n\n      logger.debug('[AuthModule][verifyAuthState] Proceeding to call AUTH_VERIFY endpoint.', { hasExistingCookies, forceVerify, context: 'verifyAuthState:apiCall' });\n      let response = await authRequest(apiEndpoints.AUTH_VERIFY, 'GET');\n\n      // Attempt to parse if response is a string (though apiClient should handle JSON)\n      if (typeof response === 'string') {\n        try {\n          response = JSON.parse(response);\n        } catch (parseErr) {\n          logger.error('[AuthModule][verifyAuthState] API response was a string, failed to parse as JSON.',\n            parseErr,\n            { responseString: response, context: 'verifyAuthState:jsonParseError' });\n          // Depending on backend, an unparsable string might mean an error page or non-JSON success.\n          // For now, assume it's a failure if it's not parsable and was expected to be JSON.\n          // If backend sometimes sends non-JSON success, this needs adjustment.\n          throw new Error('Non-JSON response from AUTH_VERIFY');\n        }\n      }\n      logger.debug('[AuthModule][verifyAuthState] AUTH_VERIFY response received.', { response, context: 'verifyAuthState:apiResponse' });\n\n      // Enhanced response validation for user object\n      let userObject = null;\n      if (response && typeof response === 'object') {\n        // Common patterns for user object nesting or direct properties\n        if (response.user && typeof response.user === 'object' && response.user.id) {\n          userObject = response.user;\n          logger.debug('[AuthModule][verifyAuthState] User object found in response.user.', { userId: userObject.id, context: 'verifyAuthState:userObjSource' });\n        } else if (response.id && response.username) { // User object might be the response itself\n          userObject = response;\n          logger.debug('[AuthModule][verifyAuthState] User object is the response itself.', { userId: userObject.id, context: 'verifyAuthState:userObjSource' });\n        }\n      }\n\n      let finalUserObject = null;\n      if (userObject) {\n        const userIdFromObject = userObject.id || userObject.user_id || userObject.userId || userObject._id;\n        if (userIdFromObject) {\n          finalUserObject = { ...userObject, id: userIdFromObject }; // Ensure 'id' field is standardized\n          logger.debug('[AuthModule][verifyAuthState] Standardized user object.', { finalUserObject, context: 'verifyAuthState:userObjStandardized' });\n        } else {\n          logger.warn('[AuthModule][verifyAuthState] User object found but lacks a usable ID field.', { userObject, context: 'verifyAuthState:userObjNoId' });\n        }\n      }\n\n      // Primary condition: Valid user object with an ID means authenticated\n      if (finalUserObject?.id) {\n        logger.info('[AuthModule][verifyAuthState] Verification successful: Valid user object with ID found.', { username: finalUserObject.username, userId: finalUserObject.id, context: 'verifyAuthState:successWithUserObject' });\n        // KILOCODE: Added detailed logging before broadcast\n        logger.debug('[AuthModule][verifyAuthState] PRE-BROADCAST (user object):', {\n          authenticated: true,\n          userObject: JSON.parse(JSON.stringify(finalUserObject)),\n          source: 'verify_success_with_user_id',\n          context: 'verifyAuthState:preBroadcast:user'\n        });\n        broadcastAuth(true, finalUserObject, 'verify_success_with_user_id');\n        return true;\n      }\n\n      // Secondary condition: Check for boolean authentication flags if no complete user object\n      const truthy = (v) => v === true || v === 'true' || v === 1 || v === '1';\n      const isAuthenticatedByFlags =\n        truthy(response?.authenticated) || truthy(response?.is_authenticated) ||\n        truthy(response?.auth) || truthy(response?.isAuth); // Common flag names\n\n      if (isAuthenticatedByFlags) {\n        // If authenticated by flag but no user object, create a minimal one if username is available\n        const usernameFromResponse = response?.username || response?.user?.username;\n        const tempUserObj = usernameFromResponse ? { username: usernameFromResponse, id: `flag-auth-${Date.now()}` } : null;\n        logger.info('[AuthModule][verifyAuthState] Verification successful: Authenticated by boolean flag.', { username: tempUserObj?.username, context: 'verifyAuthState:successWithFlag' });\n        // KILOCODE: Added detailed logging before broadcast\n        logger.debug('[AuthModule][verifyAuthState] PRE-BROADCAST (flag):', {\n          authenticated: true,\n          userObject: JSON.parse(JSON.stringify(tempUserObj)),\n          source: 'verify_success_via_flag',\n          context: 'verifyAuthState:preBroadcast:flag'\n        });\n        broadcastAuth(true, tempUserObj, 'verify_success_via_flag');\n        return true;\n      }\n\n      // If here, API response did not indicate authentication (no user object, no true flags)\n      logger.info('[AuthModule][verifyAuthState] Verification negative: API response does not indicate active authentication.', { response: JSON.parse(JSON.stringify(response)), context: 'verifyAuthState:negativeApiReponse' });\n      if (hasExistingCookies) {\n        logger.warn('[AuthModule][verifyAuthState] Stale Cookies: Auth cookies were present, but backend verification failed. Clearing token state.', { context: 'verifyAuthState:staleCookies' });\n        await clearTokenState({ source: 'verify_stale_cookies_after_api_check' });\n      } else {\n        await clearTokenState({ source: 'verify_negative_no_cookies_after_api_check' });\n      }\n      // KILOCODE: Added detailed logging before broadcast\n      logger.debug('[AuthModule][verifyAuthState] PRE-BROADCAST (negative API):', {\n        authenticated: false,\n        userObject: null,\n        source: 'verify_negative_after_api_check',\n        context: 'verifyAuthState:preBroadcast:negativeApi'\n      });\n      broadcastAuth(false, null, 'verify_negative_after_api_check');\n      return false;\n\n    } catch (error) {\n      logger.error('[AuthModule][verifyAuthState] Error during verification API call or processing.', { status: error.status, message: error.message, data: error.data ? JSON.parse(JSON.stringify(error.data)) : null, stack: error.stack, context: 'verifyAuthState:catchAllError' });\n\n      if (error.status === 500) {\n        logger.warn('[AuthModule][verifyAuthState] Server error (500). Clearing token state.', { context: 'verifyAuthState:error500' });\n        await clearTokenState({ source: 'verify_500_error' });\n        // KILOCODE: Added detailed logging before broadcast\n        logger.debug('[AuthModule][verifyAuthState] PRE-BROADCAST (500 error):', {\n          authenticated: false,\n          userObject: null,\n          source: 'verify_500_error',\n          context: 'verifyAuthState:preBroadcast:500'\n        });\n        broadcastAuth(false, null, 'verify_500_error');\n        return false;\n      }\n\n      if (error.status === 401) {\n        logger.info('[AuthModule][verifyAuthState] Unauthorized (401). Attempting token refresh.', { context: 'verifyAuthState:error401' });\n        try {\n          await refreshTokens();\n          logger.info('[AuthModule][verifyAuthState] Token refresh successful after 401. Re-verifying.', { context: 'verifyAuthState:postRefreshAttempt' });\n          return await verifyAuthState(true); // Force re-verification after refresh\n        } catch (refreshErr) {\n          logger.error('[AuthModule][verifyAuthState] Token refresh failed after 401.',\n            refreshErr,\n            { context: 'verifyAuthState:refreshFailed' });\n          await clearTokenState({ source: 'refresh_failed_after_401_in_verify' });\n          // KILOCODE: Added detailed logging before broadcast\n          logger.debug('[AuthModule][verifyAuthState] PRE-BROADCAST (refresh failed):', {\n            authenticated: false,\n            userObject: null,\n            source: 'refresh_failed_after_401_in_verify',\n            context: 'verifyAuthState:preBroadcast:refreshFailed'\n          });\n          broadcastAuth(false, null, 'refresh_failed_after_401_in_verify');\n          return false;\n        }\n      }\n\n      // For network errors (status 0 or no status) or other non-401/500 errors\n      const hasCookiesOnNetworkError = publicAuth.hasAuthCookies(); // Re-check, might have changed\n      if (hasCookiesOnNetworkError && (error.status === 0 || !error.status)) {\n        const currentAuth = getAppState().isAuthenticated;\n        logger.warn('[AuthModule][verifyAuthState] Network error occurred, but auth cookies are present. Maintaining current auth state.',\n          error,\n          { currentAuth, context: 'verifyAuthState:networkErrorWithCookies' });\n        // Do not change authentication state here; return existing state.\n        // The user might be temporarily offline but still \"logged in\".\n        return currentAuth;\n      }\n\n      // For other errors where cookies might not be present or it's not a network error\n      logger.warn(`[AuthModule][verifyAuthState] Unhandled error (status: ${error.status || 'unknown'}). Clearing token state.`, { context: 'verifyAuthState:unhandledErrorClear' });\n      await clearTokenState({ source: `verify_unhandled_error_status_${error.status || 'unknown'}` });\n      // KILOCODE: Added detailed logging before broadcast\n      logger.debug('[AuthModule][verifyAuthState] PRE-BROADCAST (unhandled error):', {\n        authenticated: false,\n        userObject: null,\n        source: `verify_unhandled_error_status_${error.status || 'unknown'}`,\n        context: 'verifyAuthState:preBroadcast:unhandledError'\n      });\n      broadcastAuth(false, null, `verify_unhandled_error_status_${error.status || 'unknown'}`);\n      return false;\n    } finally {\n      authCheckInProgress = false;\n    }\n  }\n\n  /**\n   * Attempts to log in a user with the provided credentials.\n   *\n   * Fetches a CSRF token, sends a login request to the backend, stores authentication tokens on success, and broadcasts the authenticated state. If the backend response does not include a user object, a provisional user is created for state broadcasting. Logs detailed diagnostics and clears token state on failure.\n   *\n   * @param {string} username - The username to authenticate.\n   * @param {string} password - The password for the user.\n   * @returns {Promise<Object>} The full API response from the login endpoint.\n   *\n   * @throws {Error} If the login attempt fails due to invalid credentials, network issues, or backend errors.\n   */\n\n  async function loginUser(username, password) {\n    logger.info('[AuthModule][loginUser] Attempting login.', { username: username, context: 'loginUser:start' });\n    try {\n      logger.log('[DIAGNOSTIC][auth.js][loginUser] Attempting login', username, { context: 'loginUser' });\n      await getCSRFTokenAsync();\n      const response = await authRequest(apiEndpoints.AUTH_LOGIN, 'POST', {\n        username: username.trim(),\n        password\n      });\n      logger.info('[AuthModule][loginUser] Login API response received.', { response, context: 'loginUser:apiResponse' });\n\n      if (response && response.access_token) {\n        accessToken = response.access_token;\n        tokenType = response.token_type || 'Bearer';\n        refreshToken = response.refresh_token || null;\n        // store token for reload\n        const storageService = DependencySystem?.modules?.get('storageService');\n        if (storageService?.setItem) {\n          storageService.setItem('access_token', accessToken);\n        }\n        logger.info('[AuthModule][loginUser] Access and refresh tokens stored from login response.', { context: 'loginUser:tokensStored' });\n      }\n\n      // Log cookie state after login attempt for diagnostics\n      try {\n        const doc = domAPI.getDocument?.();\n        if (doc && typeof doc.cookie === 'string') {\n          logger.debug('[AuthModule][loginUser] Cookies after login API call (contents masked for security).', { hasCookies: !!doc.cookie, context: 'loginUser:cookieCheck' });\n          if (!doc.cookie) {\n            logger.warn('[AuthModule][loginUser] No cookies seem to be set after login API call. Backend might not be setting session/CSRF cookies correctly.', { context: 'loginUser:noCookiesWarning' });\n          }\n        }\n      } catch (cookieErr) {\n        logger.error('[AuthModule][loginUser] Error reading cookies after login.',\n          cookieErr,\n          { context: 'loginUser:cookieReadError' });\n      }\n\n      // Determine user object from response\n      let userObject = null;\n      if (response && typeof response === 'object') {\n        if (response.user && typeof response.user === 'object' && response.user.id) {\n          userObject = response.user;\n        } else if (response.id && response.username) {\n          userObject = response;\n        } else if (response.username) { // If only username is directly in response\n          userObject = { username: response.username, id: `login-temp-${Date.now()}` };\n        }\n      }\n\n      if (userObject?.id && userObject?.username) {\n        logger.info('[AuthModule][loginUser] Login successful. User object identified from response.', { userId: userObject.id, username: userObject.username, context: 'loginUser:successWithUserObject' });\n        broadcastAuth(true, userObject, 'login_success_with_user_object');\n      } else {\n        // If API indicates success (e.g. 200 OK) but no clear user object, broadcast with provisional user.\n        // This might happen if backend sends just a success message or JWT without user details.\n        logger.warn('[AuthModule][loginUser] Login API success, but user object not clearly identified in response. Broadcasting provisional auth.', { response, context: 'loginUser:successProvisional' });\n        const provisionalUser = { username: username.trim(), id: `provisional-${Date.now()}` };\n        broadcastAuth(true, provisionalUser, 'login_success_provisional_user_data');\n      }\n\n      _lastLoginTimestamp = Date.now();\n      return response; // Return full API response\n    } catch (error) {\n      logger.error('[AuthModule][loginUser] Login attempt failed.',\n        error,\n        { username: username, context: 'loginUser:error' });\n      await clearTokenState({ source: 'login_api_error' }); // Clear any partial token state on login failure\n      throw error; // Re-throw for form handler\n    }\n  }\n\n  /**\n   * Logs out the current user by clearing authentication tokens and broadcasting a logged-out state.\n   *\n   * Attempts to call the backend logout API endpoint, but ensures the user is logged out locally regardless of API errors.\n   */\n  async function logout() {\n    logger.info('[AuthModule][logout] Initiating logout process.', { context: 'logout:start' });\n    accessToken = null;\n    refreshToken = null;\n    // Broadcast logged-out state immediately\n    await clearTokenState({ source: 'logout_manual_clear' });\n    // clearTokenState calls broadcastAuth(false, null, ...)\n\n    try {\n      await getCSRFTokenAsync(); // Ensure CSRF is available if needed by logout endpoint\n      logger.debug('[AuthModule][logout] Attempting to call logout API endpoint.', { context: 'logout:apiCall' });\n      await authRequest(apiEndpoints.AUTH_LOGOUT, 'POST');\n      logger.info('[AuthModule][logout] Logout API call successful.', { context: 'logout:apiSuccess' });\n    } catch (err) {\n      // Log error but don't re-throw; user is already logged out on client-side.\n      logger.error('[AuthModule][logout] Error calling logout API endpoint. User is already logged out locally.',\n        err,\n        { context: 'logout:apiError' });\n    }\n    logger.info('[AuthModule][logout] Logout process completed on client-side.', { context: 'logout:end' });\n  }\n\n  /**\n   * Registers a new user with the provided credentials.\n   *\n   * Validates that both username and password are present, then submits a registration request to the backend. After successful registration, forces authentication state verification to synchronize the client with the backend. Clears any partial authentication state and rethrows the error if registration fails.\n   *\n   * @param {Object} userData - The registration data containing at least a username and password.\n   * @returns {Object} The full API response from the registration endpoint.\n   *\n   * @throws {Error} If username or password is missing, or if the registration request fails.\n   */\n  async function registerUser(userData) {\n    if (!userData?.username || !userData?.password) {\n      logger.error('[AuthModule][registerUser] Username and password are required for registration.', { context: 'registerUser:validationError' });\n      throw new Error('Username and password required.');\n    }\n    const trimmedUsername = userData.username.trim();\n    logger.info('[AuthModule][registerUser] Attempting user registration.', { username: trimmedUsername, context: 'registerUser:start' });\n\n    try {\n      await getCSRFTokenAsync(); // Ensure CSRF token is fetched before POST request\n      const response = await authRequest(apiEndpoints.AUTH_REGISTER, 'POST', {\n        username: trimmedUsername,\n        password: userData.password // Assuming password validation happened in form\n      });\n      logger.info('[AuthModule][registerUser] Registration API call successful.', { response, context: 'registerUser:apiResponse' });\n\n      // After successful registration, typically backend auto-logins or requires login.\n      // Forcing verifyAuthState helps sync client with backend's post-registration state.\n      logger.debug('[AuthModule][registerUser] Triggering auth state verification after registration.', { context: 'registerUser:postVerify' });\n      await verifyAuthState(true);\n      return response; // Return full API response\n    } catch (error) {\n      logger.error('[AuthModule][registerUser] Registration failed.',\n        error,\n        { username: trimmedUsername, context: 'registerUser:error' });\n      await clearTokenState({ source: 'register_api_error' }); // Clear any partial state\n      throw error;\n    }\n  }\n\n  // === 11) FORM EVENT HANDLER SETUP ===\n  const authFormListenerFactory = createAuthFormListenerFactory({\n    eventHandlers,\n    domAPI,\n    domReadinessService,\n    browserService: DependencySystem.modules.get('browserService'),\n    safeHandler,\n    logger,\n    DependencySystem\n  });\n\n  // CONSOLIDATED: Generic form handler for both login and register\n  function createAuthFormHandler(formType, formElement, errorElementId, submitButtonSelector, loadingText, successText) {\n    return async (e) => {\n      logger.log(`[AuthModule] ${formType} form submit handler invoked.`, { context: `${formType}Form` });\n      domAPI.preventDefault(e);\n      const errorEl = domAPI.getElementById(errorElementId);\n      hideError(errorEl);\n      const submitBtn = domAPI.querySelector(submitButtonSelector, formElement);\n      setButtonLoading(submitBtn, true, loadingText);\n\n      const browserService = DependencySystem.modules.get('browserService');\n      if (!browserService || !browserService.FormData) {\n        throw new Error('[AuthModule] browserService.FormData is required for guardrail compliance. No global FormData fallback allowed.');\n      }\n\n      const formData = new browserService.FormData(formElement);\n      const username = formData.get('username')?.trim();\n      const password = formData.get('password');\n\n      // Common validation\n      if (!username || !password) {\n        showError(errorEl, 'Username and password are required.');\n        setButtonLoading(submitBtn, false, successText);\n        return;\n      }\n      if (!validateUsername(username)) {\n        showError(errorEl, 'Invalid username. Use 3-32 letters, numbers, or ._-');\n        setButtonLoading(submitBtn, false, successText);\n        return;\n      }\n      const pwCheck = validatePassword(password);\n      if (!pwCheck.valid) {\n        showError(errorEl, pwCheck.message);\n        setButtonLoading(submitBtn, false, successText);\n        return;\n      }\n\n      // Register-specific validation\n      if (formType === 'register') {\n        const passwordConfirm = formData.get('passwordConfirm');\n        if (!passwordConfirm) {\n          showError(errorEl, 'All fields are required.');\n          setButtonLoading(submitBtn, false, successText);\n          return;\n        }\n        if (password !== passwordConfirm) {\n          showError(errorEl, 'Passwords do not match.');\n          setButtonLoading(submitBtn, false, successText);\n          return;\n        }\n      }\n\n      try {\n        if (formType === 'login') {\n          await publicAuth.login(username, password);\n        } else {\n          await publicAuth.register({ username, password });\n        }\n        if (modalManager?.hide) modalManager.hide('login');\n      } catch (error) {\n        logger.error(`[${formType}Form][catch]`, error, { context: `${formType}Form` });\n        let msg = `${formType === 'login' ? 'Login' : 'Registration'} failed due to server error.`;\n\n        if (formType === 'login') {\n          if (error.status === 401) {\n            msg = 'Incorrect username or password.';\n          } else if (error.status === 400) {\n            msg = error.data?.detail || 'Invalid login request.';\n          }\n        } else {\n          if (error.status === 409) {\n            msg = 'A user with that username already exists.';\n          } else if (error.status === 400) {\n            msg = error.data?.detail || 'Invalid registration data.';\n          }\n        }\n\n        if (!msg.includes('server error')) {\n          // Use specific error message\n        } else {\n          msg = error.data?.detail || error.message || msg;\n        }\n        showError(errorEl, msg);\n      } finally {\n        setButtonLoading(submitBtn, false, successText);\n      }\n    };\n  }\n\n  // No-op: extracted to separate factory\n\n  /**\n   * Wiring step 1: Waits for DOM readiness and attaches form event handlers (no network).\n   *\n   * Ensures all forms and related UI are ready, then wires listeners using the factory.\n   * No network/api/CSRF attempted in this setup.\n   */\n  async function setupAuthFormDOM() {\n    await domReadinessService.documentReady();\n\n    // Attach form listeners via dedicated factory\n    authFormListenerFactory.setup({\n      loginHandler: createAuthFormHandler(\n        'login',\n        domAPI.getElementById('loginModalForm'),\n        'loginModalError',\n        'button[type=\"submit\"]',\n        'Logging in...',\n        'Login'\n      ),\n      registerHandler: createAuthFormHandler(\n        'register',\n        domAPI.getElementById('registerModalForm'),\n        'registerModalError',\n        '#registerModalSubmitBtn',\n        'Registering...',\n        'Register'\n      )\n    });\n  }\n\n  /**\n   * Initializes the authentication module, orchestrating (a) DOM/form wiring and (b) CSRF/auth initialization.\n   *\n   * Returns the result of the initial authentication verification.\n   */\n  async function init() {\n    // Prevent multiple initializations\n    const currentState = getAppState();\n    if (currentState.isReady) {\n      broadcastAuth(currentState.isAuthenticated, currentState.currentUser, 'init_already_ready');\n      return currentState.isAuthenticated;\n    }\n    // (a) DOM & form setup only\n    await setupAuthFormDOM();\n\n    // (b) CSRF fetch, initial verify, periodic, lifecycle\n    try {\n      // CSRF retry logic: 3 attempts, user-visible modal on failure\n      let csrfFetched = false, lastError = null;\n      for (let attempt = 0; attempt < 3 && !csrfFetched; ++attempt) {\n        try {\n          await getCSRFTokenAsync(true);\n          csrfFetched = true;\n        } catch (csrfErr) {\n          lastError = csrfErr;\n          logger.error('[AuthModule] CSRF token fetch during init (retry attempt ' + (attempt + 1) + '):', csrfErr, { context: 'init' });\n        }\n      }\n      if (!csrfFetched) {\n        logger.error('[AuthModule] Failed to initialize CSRF after 3 attempts. Raising fatal modal.', lastError, { context: 'init' });\n        if (modalManager && typeof modalManager.show === 'function') {\n          modalManager.show('fatal', {\n            title: 'Startup Failure',\n            message: 'Could not fetch security token from the server after multiple attempts. Please check your connection or contact support.',\n            type: 'error',\n            context: 'CSRF_bootstrap'\n          });\n        }\n      }\n      let verified = false;\n      try {\n        verified = await verifyAuthState(true);\n      } catch (verifyErr) {\n        logger.error('[AuthModule] Error during init verifyAuthState:', verifyErr, { context: 'init' });\n        await clearTokenState({ source: 'init_verify_error' });\n        verified = false;\n      }\n\n      // Setup periodic verification\n      const browserService = DependencySystem.modules.get('browserService');\n      if (!browserService || typeof browserService.setInterval !== 'function') {\n        logger.error('[AuthModule][init] browserService.setInterval is NOT available. Periodic auth verification will NOT run.', { context: 'init:setIntervalMissing' });\n        throw new Error('[AuthModule] browserService.setInterval is required for periodic auth verification.');\n      }\n      if (verifyInterval) browserService.clearInterval(verifyInterval); // Clear existing if any (e.g. re-init)\n      verifyInterval = browserService.setInterval(() => {\n        const periodicState = getAppState();\n        if (!domAPI.isDocumentHidden?.() && periodicState.isAuthenticated) { // Check if document is visible\n          logger.debug('[AuthModule][init] Performing periodic auth verification.', { context: 'init:periodicVerify' });\n          verifyAuthState(false).catch((err) => {\n            logger.warn(\n              '[AuthModule][init] Periodic verifyAuthState encountered an error (logged by verifyAuthState).',\n              err,\n              { context: 'init:periodicVerify:error' }\n            );\n          });\n        } else {\n          logger.debug('[AuthModule][init] Skipping periodic auth verification.', { isHidden: domAPI.isDocumentHidden?.(), isAuthenticated: periodicState.isAuthenticated, context: 'init:periodicVerifySkipped' });\n        }\n      }, AUTH_CONFIG.VERIFICATION_INTERVAL);\n      logger.info('[AuthModule][init] Periodic auth verification scheduled.', { interval: AUTH_CONFIG.VERIFICATION_INTERVAL, context: 'init' });\n\n      // Mark auth module as ready via appModule lifecycle only — no global window flags\n      const appModuleRef = DependencySystem?.modules?.get('appModule');\n      if (appModuleRef?.setAppLifecycleState) {\n        appModuleRef.setAppLifecycleState({ isReady: true });\n      }\n      logger.info('[AuthModule][init] Auth module is now ready', { context: 'init' });\n\n      // Dispatch authReady event\n      const finalState = getAppState();\n      const readyEventDetail = {\n        authenticated: finalState.isAuthenticated,\n        user: finalState.currentUser,\n        username: finalState.currentUser?.username || null,\n        errorDetail: null, // No error at this stage of emitting 'authReady'\n        timestamp: Date.now(),\n        source: 'init_auth_module_ready'\n      };\n\n      if (!eventHandlers.createCustomEvent) {\n        logger.error('[AuthModule][init] eventHandlers.createCustomEvent is NOT available. Cannot dispatch authReady event.', { context: 'init:dispatchAuthReady' });\n      } else {\n        logger.debug('[AuthModule][init] Dispatching authReady event.', { detail: readyEventDetail, context: 'init:dispatchAuthReady' });\n        AuthBus.dispatchEvent(eventHandlers.createCustomEvent('authReady', { detail: readyEventDetail }));\n\n        // Also broadcast via domReadinessService for global listeners/replay support\n        try {\n          if (!domReadinessService?.emitReplayable) {\n            throw new Error('[AuthModule] domReadinessService.emitReplayable is required for emitting authReady event. Unsafe fallback disabled.');\n          }\n          logger.info('[AuthModule] emitReplayable authReady', { context: 'init:dispatchAuthReady', detail: readyEventDetail });\n          domReadinessService.emitReplayable('authReady', readyEventDetail);\n          logger.debug('[AuthModule] Successfully emitted authReady via domReadinessService', { context: 'init:dispatchAuthReady' });\n        } catch (err) {\n          logger.error('[AuthModule] Failed to emit authReady event', err, {\n            context: 'init:dispatchAuthReady'\n          });\n        }\n      }\n\n      const broadcastState = getAppState();\n      logger.debug('[AuthModule][init] Performing final broadcastAuth after init completion.', { authenticated: broadcastState.isAuthenticated, context: 'init' });\n      broadcastAuth(broadcastState.isAuthenticated, broadcastState.currentUser, 'init_final_broadcast');\n\n      return verified;\n    } catch (err) {\n      logger.error('[AuthModule][init] Unhandled error during initialization process.',\n        err,\n        { stack: err.stack, context: 'init:unhandledError' });\n      await clearTokenState({ source: 'init_unhandled_error' });\n\n      const appModuleRef = DependencySystem?.modules?.get('appModule');\n      if (appModuleRef?.setAppLifecycleState) {\n        appModuleRef.setAppLifecycleState({ isReady: true });\n      }\n      broadcastAuth(false, null, 'init_unhandled_error');\n      throw err;\n    }\n  }\n\n  function cleanup() {\n    authFormListenerFactory.cleanup();\n    if (verifyInterval) {\n      const browserService = DependencySystem.modules.get('browserService');\n      if (!browserService || typeof browserService.clearInterval !== 'function') {\n        throw new Error('[AuthModule] browserService.clearInterval is required for guardrail compliance. No global clearInterval fallback allowed.');\n      }\n      browserService.clearInterval(verifyInterval);\n      verifyInterval = null;\n    }\n  }\n\n  // === 13) FETCH CURRENT USER ===\n  async function fetchCurrentUser() {\n    try {\n      const resp = await apiClient(apiEndpoints.AUTH_VERIFY, {\n        method: 'GET',\n        credentials: 'include',\n        headers: { Accept: 'application/json' }\n      });\n      if (!resp) {\n        const location = domAPI.getWindow()?.location;\n        const browserService = DependencySystem?.modules?.get('browserService');\n        const windowObj = browserService?.getWindow?.();\n        if (!windowObj || typeof windowObj.URLSearchParams !== 'function') {\n          logger.error('[AuthModule] window.URLSearchParams (via browserService.getWindow()) is required for guardrail compliance (fetchCurrentUser).', { context: 'fetchCurrentUser' });\n        }\n        const urlParams = location && windowObj?.URLSearchParams ? new windowObj.URLSearchParams(location.search) : null;\n        const hasLoginParams = urlParams && urlParams.has('username') && urlParams.has('password');\n        if (hasLoginParams) {\n          return {\n            username: urlParams.get('username'),\n            id: 'temp-id-' + Date.now()\n          };\n        }\n        return null;\n      }\n      let userToReturn = null;\n      if (resp.user && typeof resp.user === 'object') {\n        const userId = resp.user.id || resp.user.user_id || resp.user.userId || resp.user._id;\n        const username = resp.user.username || resp.user.name || resp.user.email;\n        if (userId || username) {\n          userToReturn = { ...resp.user, id: userId || ('user-' + Date.now()) };\n        }\n      } else if (resp.username) {\n        const userId = resp.id || resp.user_id || resp.userId || resp._id;\n        userToReturn = {\n          ...resp,\n          username: resp.username,\n          id: userId || ('user-' + Date.now())\n        };\n      } else if (resp.authenticated === true || resp.is_authenticated === true) {\n        userToReturn = {\n          id: 'auth-' + Date.now(),\n          username: 'user'\n        };\n      }\n      if (userToReturn) return userToReturn;\n      if (publicAuth.hasAuthCookies()) {\n        return {\n          username: 'authenticated-user',\n          id: 'cookie-auth-' + Date.now()\n        };\n      }\n      return null;\n    } catch (error) {\n      logger.error('[AuthModule][fetchCurrentUser][catch]', error, { context: 'fetchCurrentUser' });\n      return null;\n    }\n  }\n\n  // === 13.5) FETCH LIVE AUTH SETTINGS DIAGNOSTICS ===\n  async function fetchAuthSettingsDiagnostic() {\n    if (!apiEndpoints.AUTH_SETTINGS) {\n      logger.error('[AuthModule] No AUTH_SETTINGS endpoint provided in apiEndpoints', { context: 'fetchAuthSettingsDiagnostic' });\n      return;\n    }\n    try {\n      const settings = await apiClient(apiEndpoints.AUTH_SETTINGS, {\n        method: 'GET',\n        credentials: 'include',\n        headers: { Accept: 'application/json' }\n      });\n      logger.info('[AuthModule][fetchAuthSettingsDiagnostic] Backend config LIVE:', settings, { context: 'fetchAuthSettingsDiagnostic' });\n      return settings;\n    } catch (err) {\n      logger.error('[AuthModule][fetchAuthSettingsDiagnostic] Error fetching auth settings:', err, { context: 'fetchAuthSettingsDiagnostic' });\n      throw err;\n    }\n  }\n\n  // === 14) PUBLIC API EXPORT (FACTORY PATTERN) ===\n  const publicAuth = {\n    // Auth actions only - state reads must go through appModule.state per guardrails\n    init,\n    login: loginUser,\n    logout,\n    register: registerUser,\n    verifyAuthState,\n    AuthBus,\n    getCSRFTokenAsync,\n    getCSRFToken,\n    hasAuthCookies: () => {\n      // Robust check: trust appModule DI (single source of truth), fallback to cookie string as legacy\n      if (\n        DependencySystem?.modules?.get('appModule')?.state?.isAuthenticated\n      ) return true;\n      const doc = domAPI.getDocument?.();\n      if (!doc || typeof doc.cookie !== 'string') return false;\n      const cookieStr = doc.cookie || '';\n      return /(?:^|;\\s*)(session|access_token|refresh_token)=/.test(cookieStr);\n    },\n    cleanup,\n    fetchCurrentUser,\n    fetchAuthSettingsDiagnostic,\n    // New helper to expose current access token and Authorization header for apiClient.\n    // Falls back to the `access_token` cookie on first call after page load so that\n    // apiClient can still send Bearer auth on refresh without an explicit login call.\n    getAccessToken: () => {\n      if (accessToken) return accessToken;\n      // Try localStorage (storageService) fallback for JWT after refresh\n      const storageService = DependencySystem?.modules?.get('storageService');\n      const lsTok = storageService?.getItem?.('access_token');\n      if (lsTok) {\n        accessToken = lsTok;\n        return accessToken;\n      }\n      const cookieToken = readCookie('access_token');\n      if (cookieToken) {\n        accessToken = cookieToken;\n        return accessToken;\n      }\n      return null;\n    },\n    getAuthHeader: () => {\n      const tok = accessToken || readCookie('access_token');\n      if (tok && !accessToken) accessToken = tok;   // sync in-memory cache\n      return tok ? { Authorization: `${tokenType} ${tok}` } : {};\n    }\n  };\n\n  return publicAuth;\n }\n\n /* guard-rail: default & named export */\n export default createAuth;\n export { createAuth as createAuthModule };\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 53301,
          "_transferSize": 54490,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.364Z",
        "time": 255.16200000129174,
        "timings": {
          "blocked": 203.23900000556185,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08100000000001728,
          "wait": 51.00200000239815,
          "receive": 0.8399999933317304,
          "_blocked_queueing": 5.497000005561858,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126344",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 39
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/modelConfig.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1466,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "32222"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"166813c467b489f3209bd0a9ba66606d\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 08 Jun 2025 05:05:02 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 32222,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * modelConfig.js\n *\n * Key checklist points enforced:\n *  1. No top-level logic; all code in factory or internal functions.\n *  2. Strict dependency injection (no direct global usage).\n *  3. Pure imports, no side effects at import time.\n *  4. All DOM and app readiness handled via domReadinessService (await ...).\n *  5. All logs go through the injected logger with context.\n *  6. Provide a dedicated EventTarget for broadcasting module events, but still\n *     use eventHandler.trackListener(...) / eventHandler.dispatchEvent(...).\n */\n\nexport function createModelConfig({\n  dependencySystem,\n  domReadinessService,\n  eventHandler,\n  storageHandler,\n  sanitizer,\n  scheduleTask,\n  logger\n} = {}) {\n  // The entire module is wrapped inside this factory to avoid top-level side effects.\n  const MODULE_CONTEXT = \"ModelConfig\";\n\n  function createNoopLogger() {\n    return ['info', 'warn', 'error', 'debug', 'log']\n      .reduce((acc, m) => { acc[m] = () => {}; return acc; }, {});\n  }\n  const localLogger = logger\n    || dependencySystem?.modules?.get?.('logger')\n    || createNoopLogger();\n\n  // Validate required dependencies\n  if (!dependencySystem) {\n    const msg = `[${MODULE_CONTEXT}][constructor] Missing dependencySystem`;\n    localLogger.error(msg, { status: 'error', data: null, message: msg }, { context: MODULE_CONTEXT });\n    throw new Error(\"[ModelConfig] dependencySystem is required\");\n  }\n  if (!domReadinessService || typeof domReadinessService.dependenciesAndElements !== \"function\") {\n    const msg = `[${MODULE_CONTEXT}][constructor] Missing or invalid domReadinessService`;\n    localLogger.error(msg, { status: 'error', data: null, message: msg }, { context: MODULE_CONTEXT });\n    throw new Error(\"[ModelConfig] domReadinessService is required for readiness gating.\");\n  }\n  if (!eventHandler) {\n    const msg = `[${MODULE_CONTEXT}][constructor] Missing eventHandler`;\n    localLogger.error(msg, { status: 'error', data: null, message: msg }, { context: MODULE_CONTEXT });\n    throw new Error(\"[ModelConfig] eventHandler is required\");\n  }\n  if (!storageHandler) {\n    const msg = `[${MODULE_CONTEXT}][constructor] Missing storageHandler`;\n    localLogger.error(msg, { status: 'error', data: null, message: msg }, { context: MODULE_CONTEXT });\n    throw new Error(\"[ModelConfig] storageHandler is required\");\n  }\n  if (!sanitizer || typeof sanitizer.sanitize !== \"function\") {\n    const msg = `[${MODULE_CONTEXT}][constructor] Missing or invalid sanitizer`;\n    localLogger.error(msg, { status: 'error', data: null, message: msg }, { context: MODULE_CONTEXT });\n    throw new Error(\"[ModelConfig] sanitizer with sanitize() is required\");\n  }\n\n  // Dedicated module event bus object. We rely on eventHandler for adding/removing listeners,\n  // rather than calling addEventListener directly.\n  const busTarget = new EventTarget();\n  dependencySystem?.modules?.register?.('modelConfigBus', busTarget);   // NEW\n\n  function dispatchEventToBus(api, eventName, detailObj) {\n    busTarget.dispatchEvent(new CustomEvent(eventName, { detail: detailObj }));\n  }\n\n  function setupDependencies() {\n    const ds = dependencySystem;\n    const fallbackEventHandler = {\n      trackListener: () => { },\n      untrackListener: () => { },\n      cleanupListeners: () => { },\n      dispatchEvent: null,\n    };\n    const evts = eventHandler || fallbackEventHandler;\n    const blankStorage = {\n      getItem: () => null,\n      setItem: () => { },\n    };\n    const store = storageHandler || blankStorage;\n    const safe = (html) => sanitizer.sanitize(html);\n    const delayed = scheduleTask || ((fn, ms) => setTimeout(fn, ms));\n\n    return { ds, evts, store, safe, delayed, log: localLogger };\n  }\n\n  function buildState(api) {\n    const rawModelName = api.store.getItem(\"modelName\") || \"claude-3-sonnet-20240229\";\n    return {\n      modelName: rawModelName,\n      provider: api.store.getItem(\"provider\") || \"anthropic\",\n      maxTokens: parseInt(api.store.getItem(\"maxTokens\") || \"4096\", 10),\n      // New: temperature (0-2 range per many providers, default 0.7)\n      temperature: parseFloat(api.store.getItem(\"temperature\") || \"0.7\"),\n      reasoningEffort: api.store.getItem(\"reasoningEffort\") || \"medium\",\n      reasoningSummary: api.store.getItem(\"reasoningSummary\") || \"concise\",\n      visionEnabled: api.store.getItem(\"visionEnabled\") === \"true\",\n      visionDetail: api.store.getItem(\"visionDetail\") || \"auto\",\n      visionImage: null,\n      extendedThinking: api.store.getItem(\"extendedThinking\") === \"true\",\n      thinkingBudget: parseInt(api.store.getItem(\"thinkingBudget\") || \"16000\", 10),\n      customInstructions: api.store.getItem(\"globalCustomInstructions\") || \"\",\n      // NEW: web search checkbox state (default false)\n      enable_web_search: api.store.getItem(\"enableWebSearch\") === \"true\",\n      azureParams: {\n        maxCompletionTokens: parseInt(api.store.getItem(\"azureMaxCompletionTokens\") || \"5000\", 10),\n        reasoningEffort: api.store.getItem(\"azureReasoningEffort\") || \"medium\",\n        visionDetail: api.store.getItem(\"azureVisionDetail\") || \"auto\",\n      },\n    };\n  }\n\n  /**\n   * Use eventHandler.trackListener(...) with context for all event listeners.\n   */\n  function registerListener(api, el, evt, handler, opts = {}) {\n    const optionsWithContext = {\n      ...opts,\n      context: MODULE_CONTEXT,\n      module: MODULE_CONTEXT,\n      source: opts.source || opts.description || `event_${evt}`,\n    };\n    api.evts.trackListener(el, evt, handler, optionsWithContext);\n  }\n\n  /**\n   * Cleanup all listeners registered by this module.\n   */\n  function cleanup(api) {\n    if (typeof api.evts.cleanupListeners === \"function\") {\n      api.evts.cleanupListeners({ context: MODULE_CONTEXT });\n    }\n  }\n\n  function clampInt(val, min, max, fallback) {\n    if (val === undefined || val === null || isNaN(val)) return fallback;\n    return Math.max(min, Math.min(max, parseInt(val, 10)));\n  }\n\n  function getModelOptions() {\n    return [\n      {\n        id: \"claude-3-opus-20240229\",\n        name: \"Claude 3 Opus\",\n        provider: \"anthropic\",\n        maxTokens: 200000,\n        supportsVision: false,\n      },\n      {\n        id: \"claude-3-sonnet-20240229\",\n        name: \"Claude 3 Sonnet\",\n        provider: \"anthropic\",\n        maxTokens: 200000,\n        supportsVision: false,\n      },\n      // Azure OpenAI Models\n      {\n        id: \"o1\",\n        name: \"Azure o1 Reasoning\",\n        provider: \"azure\",\n        maxTokens: 100000,\n        supportsVision: true,\n      },\n      {\n        id: \"o3\",\n        name: \"Azure o3 Reasoning\",\n        provider: \"azure\",\n        maxTokens: 100000,\n        supportsVision: false,\n      },\n      {\n        id: \"o3-mini\",\n        name: \"Azure o3-mini Reasoning\",\n        provider: \"azure\",\n        maxTokens: 100000,\n        supportsVision: false,\n      },\n      {\n        id: \"gpt-4.1\",\n        name: \"GPT-4.1\",\n        provider: \"azure\",\n        maxTokens: 4096,\n        supportsVision: false,\n      },\n      {\n        id: \"gpt-4.1-mini\",\n        name: \"GPT-4.1 Mini\",\n        provider: \"azure\",\n        maxTokens: 4096,\n        supportsVision: false,\n      },\n      {\n        id: \"gpt-4o\",\n        name: \"GPT-4o\",\n        provider: \"azure\",\n        maxTokens: 128000,\n        supportsVision: true,\n      }\n    ];\n  }\n\n  function getConfig(state) {\n    // Logging suppressed (was: localLogger.info(`[${MODULE_CONTEXT}][getConfig] Returning config:` ...))\n    return { ...state };\n  }\n\n  /**\n   * Instead of directly busTarget.addEventListener, we use eventHandler.trackListener.\n   */\n  function onConfigChange(api, callback) {\n    const listener = (evt) => {\n      if (evt.detail) callback(evt.detail);\n    };\n    registerListener(api, busTarget, \"modelConfigChanged\", listener, {\n      description: \"modelConfigBus onConfigChange\",\n    });\n  }\n\n  function setStateFromConfig(state, config) {\n    Object.assign(state, {\n      modelName: config.modelName || state.modelName,\n      provider: config.provider || state.provider,\n      maxTokens: clampInt(config.maxTokens, 100, 100000, state.maxTokens),\n      // Temperature can be between 0 and 2 (per OpenAI docs); clamp similar pattern.\n      temperature:\n        config.temperature !== undefined\n          ? Math.max(0, Math.min(2, parseFloat(config.temperature)))\n          : state.temperature,\n      reasoningEffort: config.reasoningEffort || state.reasoningEffort,\n      reasoningSummary: config.reasoningSummary || state.reasoningSummary,\n      visionEnabled:\n        config.visionEnabled !== undefined ? config.visionEnabled : state.visionEnabled,\n      visionDetail: config.visionDetail || state.visionDetail,\n      extendedThinking:\n        config.extendedThinking !== undefined\n          ? config.extendedThinking\n          : state.extendedThinking,\n      thinkingBudget: clampInt(config.thinkingBudget, 2048, 32000, state.thinkingBudget),\n      customInstructions:\n        config.customInstructions !== undefined\n          ? config.customInstructions\n          : state.customInstructions,\n      enable_web_search:\n        config.enable_web_search !== undefined\n          ? !!config.enable_web_search\n          : state.enable_web_search,\n      azureParams: {\n        maxCompletionTokens: clampInt(\n          config.azureParams?.maxCompletionTokens,\n          1000,\n          10000,\n          state.azureParams.maxCompletionTokens\n        ),\n        reasoningEffort: config.azureParams?.reasoningEffort || state.azureParams.reasoningEffort,\n        visionDetail: config.azureParams?.visionDetail || state.azureParams.visionDetail,\n      },\n    });\n  }\n\n  function persistConfig(api, state) {\n    api.store.setItem(\"modelName\", state.modelName);\n    api.store.setItem(\"provider\", state.provider);\n    api.store.setItem(\"maxTokens\", state.maxTokens.toString());\n    api.store.setItem(\"temperature\", state.temperature.toString());\n    api.store.setItem(\"reasoningEffort\", state.reasoningEffort);\n    api.store.setItem(\"reasoningSummary\", state.reasoningSummary);\n    api.store.setItem(\"visionEnabled\", state.visionEnabled.toString());\n    api.store.setItem(\"visionDetail\", state.visionDetail);\n    api.store.setItem(\"extendedThinking\", state.extendedThinking.toString());\n    api.store.setItem(\"thinkingBudget\", state.thinkingBudget.toString());\n    api.store.setItem(\"globalCustomInstructions\", state.customInstructions);\n    api.store.setItem(\"enableWebSearch\", state.enable_web_search ? \"true\" : \"false\");\n    api.store.setItem(\n      \"azureMaxCompletionTokens\",\n      state.azureParams.maxCompletionTokens.toString()\n    );\n    api.store.setItem(\"azureReasoningEffort\", state.azureParams.reasoningEffort);\n    api.store.setItem(\"azureVisionDetail\", state.azureParams.visionDetail);\n  }\n\n  function notifyChatManager(api, state) {\n    const chatManager = api.ds?.modules?.get?.(\"chatManager\");\n    if (chatManager?.updateModelConfig) {\n      chatManager.updateModelConfig({ ...state });\n    }\n  }\n\n  function updateModelConfig(api, state, config, opts = {}) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    const loadingEl =\n      domAPI && typeof domAPI.getElementById === \"function\"\n        ? domAPI.getElementById(\"modelConfigLoading\")\n        : null;\n    if (loadingEl) loadingEl.classList.remove(\"hidden\");\n\n    setStateFromConfig(state, config);\n    persistConfig(api, state);\n\n    if (!opts.skipNotify) {\n      notifyChatManager(api, state);\n      dispatchEventToBus(api, \"modelConfigChanged\", { ...state });\n    }\n\n    updateModelDisplay(api, state);\n\n    api.delayed(() => {\n      if (loadingEl) loadingEl.classList.add(\"hidden\");\n    }, 100);\n  }\n\n  // ---------- UI Setup ----------\n  function initializeUI(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    setupModelDropdown(api, state);\n    setupMaxTokensUI(api, state);\n    setupVisionUI(api, state);\n    setupReasoningSummaryUI(api, state);\n    setupExtendedThinkingUI(api, state);\n    setupCustomInstructionsUI(api, state);\n\n    // NEW: Enable Web Search Checkbox UI\n    const webSearchConfigPanel = domAPI.getElementById(\"webSearchConfigPanel\")\n      || domAPI.getElementById(\"modelConfigPanel\")\n      || domAPI.getElementById(\"modelSidebarPanel\")\n      || null;\n    if (webSearchConfigPanel) {\n      const outerDiv = domAPI.createElement(\"div\");\n      outerDiv.className = \"form-control mb-2\";\n      const label = domAPI.createElement(\"label\");\n      label.className = \"label cursor-pointer\";\n      const labelText = domAPI.createElement(\"span\");\n      labelText.className = \"label-text\";\n      labelText.textContent = \"Enable Web Search\";\n      const input = domAPI.createElement(\"input\");\n      input.type = \"checkbox\";\n      input.id = \"enableWebSearch\";\n      input.className = \"toggle toggle-primary\";\n      input.checked = state.enable_web_search;\n      // Track with event handler\n      registerListener(\n        api,\n        input,\n        \"change\",\n        () => {\n          updateModelConfig(api, state, { enable_web_search: input.checked });\n        },\n        { description: \"web search toggle change\" }\n      );\n      label.appendChild(labelText);\n      label.appendChild(input);\n      outerDiv.appendChild(label);\n      webSearchConfigPanel.appendChild(outerDiv);\n    }\n\n    updateModelDisplay(api, state);\n\n    // Another internal event dispatch\n    dispatchEventToBus(api, \"modelconfig:initialized\", { success: true });\n  }\n\n  function setupReasoningSummaryUI(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n    const container = domAPI.getElementById(\"reasoningSummaryContainer\");\n    if (!container) return;\n\n    container.textContent = \"\";\n\n    const label = domAPI.createElement(\"label\");\n    label.htmlFor = \"reasoningSummarySelect\";\n    label.className = \"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\";\n    label.textContent = \"Reasoning Summary:\";\n\n    const select = domAPI.createElement(\"select\");\n    select.id = \"reasoningSummarySelect\";\n    select.className = \"select select-bordered select-xs w-full\";\n    [\"concise\", \"detailed\"].forEach((opt) => {\n      const o = domAPI.createElement(\"option\");\n      o.value = opt;\n      o.textContent = opt.charAt(0).toUpperCase() + opt.slice(1);\n      select.appendChild(o);\n    });\n    select.value = state.reasoningSummary;\n\n    registerListener(\n      api,\n      select,\n      \"change\",\n      () => {\n        updateModelConfig(api, state, { reasoningSummary: select.value });\n      },\n      { description: \"reasoning summary select\" }\n    );\n\n    container.appendChild(label);\n    container.appendChild(select);\n  }\n\n  function setupModelDropdown(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n    const sel = domAPI.getElementById(\"modelSelect\");\n    if (!sel) return;\n\n    sel.textContent = \"\";\n    const opts = getModelOptions();\n    opts.forEach((m) => {\n      const opt = domAPI.createElement(\"option\");\n      opt.value = m.id;\n      opt.textContent = m.name;\n      sel.appendChild(opt);\n    });\n    sel.value = state.modelName;\n\n    registerListener(\n      api,\n      sel,\n      \"change\",\n      () => {\n        const selectedModel = getModelOptions().find((m) => m.id === sel.value);\n        updateModelConfig(api, state, {\n          modelName: sel.value,\n          provider: selectedModel?.provider || \"unknown\",\n        });\n        setupVisionUI(api, state);\n        updateModelDisplay(api, state);\n      },\n      { description: \"model dropdown change\" }\n    );\n  }\n\n  function setupMaxTokensUI(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n    const container = domAPI.getElementById(\"maxTokensContainer\");\n    if (!container) return;\n\n    container.textContent = \"\";\n    const currentVal = state.maxTokens || 4096;\n\n    const slider = domAPI.createElement(\"input\");\n    slider.type = \"range\";\n    slider.min = \"100\";\n    slider.max = \"100000\";\n    slider.value = currentVal;\n    slider.className = \"w-full mt-2 range range-xs\";\n\n    const display = domAPI.createElement(\"div\");\n    display.className = \"text-sm text-gray-600 dark:text-gray-400\";\n    display.textContent = `${currentVal} tokens`;\n\n    registerListener(\n      api,\n      slider,\n      \"input\",\n      (e) => {\n        const t = parseInt(e.target.value, 10);\n        display.textContent = `${t} tokens`;\n        updateModelConfig(api, state, { maxTokens: t });\n      },\n      { description: \"maxTokens slider input\" }\n    );\n\n    container.append(slider, display);\n  }\n\n  function setupVisionUI(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n    const panel = domAPI.getElementById(\"visionPanel\");\n    if (!panel) return;\n\n    const supportsVision = getModelOptions().find((m) => m.id === state.modelName)?.supportsVision;\n    panel.classList.toggle(\"hidden\", !supportsVision);\n    if (!supportsVision) {\n      panel.textContent = \"\";\n      return;\n    }\n\n    panel.textContent = \"\";\n\n    const toggle = domAPI.createElement(\"input\");\n    toggle.type = \"checkbox\";\n    toggle.id = \"visionToggle\";\n    toggle.className = \"toggle toggle-sm mr-2\";\n    toggle.checked = state.visionEnabled;\n\n    const label = domAPI.createElement(\"label\");\n    label.htmlFor = \"visionToggle\";\n    label.className = \"text-sm cursor-pointer\";\n    label.textContent = \"Enable Vision\";\n\n    const wrapper = domAPI.createElement(\"div\");\n    wrapper.className = \"flex items-center\";\n    wrapper.append(toggle, label);\n\n    registerListener(\n      api,\n      toggle,\n      \"change\",\n      () => {\n        updateModelConfig(api, state, { visionEnabled: toggle.checked });\n      },\n      { description: \"vision toggle check\" }\n    );\n\n    panel.appendChild(wrapper);\n  }\n\n  function setupExtendedThinkingUI(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const toggle = domAPI.getElementById(\"extendedThinkingToggle\");\n    const budgetSelect = domAPI.getElementById(\"thinkingBudget\");\n    const panel = domAPI.getElementById(\"extendedThinkingPanel\");\n    if (!toggle || !budgetSelect || !panel) return;\n\n    toggle.checked = state.extendedThinking;\n    budgetSelect.value = state.thinkingBudget.toString();\n    panel.classList.toggle(\"hidden\", !state.extendedThinking);\n\n    registerListener(\n      api,\n      toggle,\n      \"change\",\n      () => {\n        const isChecked = toggle.checked;\n        panel.classList.toggle(\"hidden\", !isChecked);\n        updateModelConfig(api, state, { extendedThinking: isChecked });\n      },\n      { description: \"extended thinking toggle change\" }\n    );\n\n    registerListener(\n      api,\n      budgetSelect,\n      \"change\",\n      () => {\n        updateModelConfig(api, state, {\n          thinkingBudget: parseInt(budgetSelect.value, 10),\n        });\n      },\n      { description: \"thinking budget select change\" }\n    );\n  }\n\n  function setupCustomInstructionsUI(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const textarea = domAPI.getElementById(\"globalCustomInstructions\");\n    const saveButton = domAPI.getElementById(\"saveGlobalInstructions\");\n    if (!textarea || !saveButton) return;\n\n    textarea.value = state.customInstructions;\n\n    registerListener(\n      api,\n      saveButton,\n      \"click\",\n      () => {\n        updateModelConfig(api, state, { customInstructions: textarea.value });\n      },\n      { description: \"save global custom instructions\" }\n    );\n  }\n\n  function updateModelDisplay(api, state) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const modelNameEl = domAPI.getElementById(\"currentModelName\");\n    const maxTokensEl = domAPI.getElementById(\"currentMaxTokens\");\n    const reasoningEl = domAPI.getElementById(\"currentReasoning\");\n    const visionStatusEl = domAPI.getElementById(\"visionEnabledStatus\");\n\n    if (modelNameEl) {\n      const modelOption = getModelOptions().find((m) => m.id === state.modelName);\n      modelNameEl.textContent = modelOption ? modelOption.name : state.modelName;\n    }\n    if (maxTokensEl) {\n      maxTokensEl.textContent = state.maxTokens.toString();\n    }\n    if (reasoningEl) {\n      reasoningEl.textContent = state.reasoningEffort || \"N/A\";\n    }\n    const tempEl = domAPI.getElementById(\"temperatureDisplay\");\n    if (tempEl) {\n      tempEl.textContent = state.temperature.toFixed(2);\n    }\n    if (visionStatusEl) {\n      const modelSupportsVision = getModelOptions().find((m) => m.id === state.modelName)?.supportsVision;\n      if (modelSupportsVision) {\n        visionStatusEl.textContent = state.visionEnabled ? \"Enabled\" : \"Disabled\";\n      } else {\n        visionStatusEl.textContent = \"Not Supported\";\n      }\n    }\n  }\n\n  /**\n   * Render a quick config UI into a given container.\n   */\n  function renderQuickConfig(api, state, container) {\n    if (!container) return;\n    container.textContent = \"\";\n\n    // Add mobile-friendly wrapper\n    const configWrapper = api.ds?.modules?.get?.(\"domAPI\")?.createElement(\"div\");\n    if (configWrapper) {\n      configWrapper.className = \"model-config-container\";\n      container.appendChild(configWrapper);\n      container = configWrapper;\n    }\n\n    api.delayed(() => {\n      buildModelSelectUI(api, state, container);\n      buildMaxTokensUI(api, state, container);\n      buildTemperatureUI(api, state, container);\n      buildReasoningEffortUI(api, state, container);\n      buildVisionToggleIfNeeded(api, state, container);\n      buildWebSearchToggleUI(api, state, container);\n      dispatchEventToBus(api, \"modelConfigRendered\", { containerId: container.id });\n    }, 0);\n  }\n\n  function buildModelSelectUI(api, state, container) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const section = domAPI.createElement(\"div\");\n    section.className = \"model-config-section\";\n\n    const modelLabel = domAPI.createElement(\"label\");\n    modelLabel.htmlFor = `quickModelSelect-${container.id}`;\n    modelLabel.className = \"block text-sm font-medium text-base-content mb-2\";\n    modelLabel.textContent = \"AI Model\";\n\n    const modelSelect = domAPI.createElement(\"select\");\n    modelSelect.id = `quickModelSelect-${container.id}`;\n    modelSelect.className = \"select select-bordered w-full\";\n\n    getModelOptions().forEach((opt) => {\n      const option = domAPI.createElement(\"option\");\n      option.value = opt.id;\n      option.text = opt.name;\n      modelSelect.appendChild(option);\n    });\n    modelSelect.value = state.modelName;\n\n    registerListener(\n      api,\n      modelSelect,\n      \"change\",\n      () => {\n        const selectedModel = getModelOptions().find((m) => m.id === modelSelect.value);\n        updateModelConfig(api, state, {\n          modelName: modelSelect.value,\n          provider: selectedModel?.provider || \"unknown\",\n        });\n        const visionContainer = container.querySelector(\".quick-vision-container\");\n        if (visionContainer) {\n          visionContainer.remove();\n          buildVisionToggleIfNeeded(api, state, container);\n        }\n      },\n      { description: `quick config model select for ${container.id}` }\n    );\n\n    section.appendChild(modelLabel);\n    section.appendChild(modelSelect);\n    container.appendChild(section);\n  }\n\n  function buildMaxTokensUI(api, state, container) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const section = domAPI.createElement(\"div\");\n    section.className = \"model-config-section\";\n\n    const maxTokensDiv = domAPI.createElement(\"div\");\n    maxTokensDiv.className = \"flex flex-col w-full\";\n\n    const headerDiv = domAPI.createElement(\"div\");\n    headerDiv.className = \"flex justify-between items-center mb-3\";\n\n    const maxTokensLabel = domAPI.createElement(\"label\");\n    maxTokensLabel.htmlFor = `quickMaxTokens-${container.id}`;\n    maxTokensLabel.className = \"text-sm font-medium text-base-content\";\n    maxTokensLabel.textContent = \"Max Tokens\";\n\n    const maxTokensValue = domAPI.createElement(\"span\");\n    maxTokensValue.className = \"text-sm font-medium text-primary\";\n    maxTokensValue.textContent = state.maxTokens.toLocaleString();\n\n    const maxTokensInput = domAPI.createElement(\"input\");\n    maxTokensInput.id = `quickMaxTokens-${container.id}`;\n    maxTokensInput.type = \"range\";\n    maxTokensInput.min = \"100\";\n    maxTokensInput.max = \"100000\";\n    maxTokensInput.value = state.maxTokens;\n    maxTokensInput.className = \"range w-full\";\n\n    registerListener(\n      api,\n      maxTokensInput,\n      \"input\",\n      (e) => {\n        const val = parseInt(e.target.value, 10);\n        maxTokensValue.textContent = val.toLocaleString();\n        updateModelConfig(api, state, { maxTokens: val });\n      },\n      { description: `quick config maxTokens slider for ${container.id}` }\n    );\n\n    headerDiv.append(maxTokensLabel, maxTokensValue);\n    maxTokensDiv.append(headerDiv, maxTokensInput);\n    section.appendChild(maxTokensDiv);\n    container.appendChild(section);\n  }\n\n  function buildTemperatureUI(api, state, container) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const section = domAPI.createElement(\"div\");\n    section.className = \"model-config-section\";\n\n    const tempDiv = domAPI.createElement(\"div\");\n    tempDiv.className = \"flex flex-col w-full\";\n\n    const headerDiv = domAPI.createElement(\"div\");\n    headerDiv.className = \"flex justify-between items-center mb-3\";\n\n    const tempLabel = domAPI.createElement(\"label\");\n    tempLabel.htmlFor = `quickTemperature-${container.id}`;\n    tempLabel.className = \"text-sm font-medium text-base-content\";\n    tempLabel.textContent = \"Temperature\";\n\n    const tempValue = domAPI.createElement(\"span\");\n    tempValue.className = \"text-sm font-medium text-primary\";\n    tempValue.textContent = state.temperature.toFixed(2);\n\n    const tempInput = domAPI.createElement(\"input\");\n    tempInput.id = `quickTemperature-${container.id}`;\n    tempInput.type = \"range\";\n    tempInput.min = \"0\";\n    tempInput.max = \"2\";\n    tempInput.step = \"0.05\";\n    tempInput.value = state.temperature;\n    tempInput.className = \"range w-full\";\n\n    registerListener(\n      api,\n      tempInput,\n      \"input\",\n      (e) => {\n        const val = parseFloat(e.target.value);\n        tempValue.textContent = val.toFixed(2);\n        updateModelConfig(api, state, { temperature: val });\n      },\n      { description: `quick config temperature slider for ${container.id}` }\n    );\n\n    headerDiv.append(tempLabel, tempValue);\n    tempDiv.append(headerDiv, tempInput);\n    section.appendChild(tempDiv);\n    container.appendChild(section);\n  }\n\n  function buildReasoningEffortUI(api, state, container) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const section = domAPI.createElement(\"div\");\n    section.className = \"model-config-section\";\n\n    const label = domAPI.createElement(\"label\");\n    label.htmlFor = `quickReasoning-${container.id}`;\n    label.className = \"block text-sm font-medium text-base-content mb-2\";\n    label.textContent = \"Reasoning Effort\";\n\n    const select = domAPI.createElement(\"select\");\n    select.id = `quickReasoning-${container.id}`;\n    select.className = \"select select-bordered w-full\";\n\n    const options = [\n      { id: \"low\", name: \"Low\" },\n      { id: \"medium\", name: \"Medium\" },\n      { id: \"high\", name: \"High\" },\n    ];\n    options.forEach((opt) => {\n      const option = domAPI.createElement(\"option\");\n      option.value = opt.id;\n      option.text = opt.name;\n      select.appendChild(option);\n    });\n    select.value = state.reasoningEffort;\n\n    registerListener(\n      api,\n      select,\n      \"change\",\n      () => {\n        updateModelConfig(api, state, { reasoningEffort: select.value });\n      },\n      { description: `quick config reasoning effort select for ${container.id}` }\n    );\n\n    section.appendChild(label);\n    section.appendChild(select);\n    container.appendChild(section);\n  }\n\n  function buildWebSearchToggleUI(api, state, container) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const section = domAPI.createElement(\"div\");\n    section.className = \"model-config-section\";\n\n    const outerDiv = domAPI.createElement(\"div\");\n    outerDiv.className = \"flex items-center justify-between\";\n\n    const labelDiv = domAPI.createElement(\"div\");\n    labelDiv.className = \"flex flex-col\";\n\n    const label = domAPI.createElement(\"label\");\n    label.htmlFor = `quickWebSearch-${container.id}`;\n    label.className = \"text-sm font-medium text-base-content cursor-pointer\";\n    label.textContent = \"Web Search\";\n\n    const description = domAPI.createElement(\"div\");\n    description.className = \"text-xs text-base-content/60 mt-1\";\n    description.textContent = \"Enable real-time web search\";\n\n    const toggle = domAPI.createElement(\"input\");\n    toggle.type = \"checkbox\";\n    toggle.id = `quickWebSearch-${container.id}`;\n    toggle.className = \"toggle toggle-primary\";\n    toggle.checked = state.enable_web_search;\n\n    registerListener(\n      api,\n      toggle,\n      \"change\",\n      () => {\n        updateModelConfig(api, state, { enable_web_search: toggle.checked });\n      },\n      { description: `quick config web search toggle for ${container.id}` }\n    );\n\n    labelDiv.append(label, description);\n    outerDiv.append(labelDiv, toggle);\n    section.appendChild(outerDiv);\n    container.appendChild(section);\n  }\n\n  function buildVisionToggleIfNeeded(api, state, container) {\n    const domAPI = api.ds?.modules?.get?.(\"domAPI\");\n    if (!domAPI) return;\n\n    const model = getModelOptions().find((m) => m.id === state.modelName);\n    if (!model?.supportsVision) return;\n\n    const section = domAPI.createElement(\"div\");\n    section.className = \"model-config-section quick-vision-container\";\n\n    const visionDiv = domAPI.createElement(\"div\");\n    visionDiv.className = \"flex items-center justify-between\";\n\n    const labelDiv = domAPI.createElement(\"div\");\n    labelDiv.className = \"flex flex-col\";\n\n    const toggleLabel = domAPI.createElement(\"label\");\n    toggleLabel.htmlFor = `quickVisionToggle-${container.id}`;\n    toggleLabel.className = \"text-sm font-medium text-base-content cursor-pointer\";\n    toggleLabel.textContent = \"Vision Processing\";\n\n    const description = domAPI.createElement(\"div\");\n    description.className = \"text-xs text-base-content/60 mt-1\";\n    description.textContent = \"Enable image analysis\";\n\n    const toggle = domAPI.createElement(\"input\");\n    toggle.type = \"checkbox\";\n    toggle.id = `quickVisionToggle-${container.id}`;\n    toggle.className = \"toggle toggle-primary\";\n    toggle.checked = state.visionEnabled;\n\n    registerListener(\n      api,\n      toggle,\n      \"change\",\n      () => {\n        updateModelConfig(api, state, { visionEnabled: toggle.checked });\n      },\n      { description: `quick config vision toggle for ${container.id}` }\n    );\n\n    labelDiv.append(toggleLabel, description);\n    visionDiv.append(labelDiv, toggle);\n    section.appendChild(visionDiv);\n    container.appendChild(section);\n  }\n\n  // Build and return the final public module object (the factory's product).\n  const moduleBuild = (function buildModule() {\n    const api = setupDependencies();\n    const state = buildState(api);\n\n    const modelApi = {\n      getConfig: () => getConfig(state),\n      updateConfig: (cfg, opts = {}) => updateModelConfig(api, state, cfg, opts),\n      getModelOptions,\n      onConfigChange: (cb) => onConfigChange(api, cb),\n      initializeUI: () => initializeUI(api, state),\n      renderQuickConfig: (container) => renderQuickConfig(api, state, container),\n      cleanup: () => cleanup(api),\n      initWithReadiness: async () => {\n        // We rely entirely on the DI-provided domReadinessService for readiness gating.\n        await api.ds.modules.get(\"domReadinessService\").dependenciesAndElements([\"app\", \"domAPI\"]);\n        initializeUI(api, state);\n      },\n      // Provide a handle for advanced usage if another module wants to manually track or dispatch\n      // events. This ensures no direct global usage of addEventListener.\n      getEventBus: () => busTarget,\n    };\n\n    return modelApi;\n  })();\n\n  return moduleBuild;\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 32222,
          "_transferSize": 33411,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.365Z",
        "time": 265.32799999404233,
        "timings": {
          "blocked": 222.22999999320785,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.13400000000001455,
          "wait": 42.28800000481493,
          "receive": 0.6759999960195273,
          "_blocked_queueing": 5.4819999932078645,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126320",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 40
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1471,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "39584"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"bc9cda57e3c0b89b109cbaa8a2aa0545\""
            },
            {
              "name": "last-modified",
              "value": "Tue, 03 Jun 2025 21:20:54 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 39584,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": " // VENDOR-EXEMPT-SIZE: Core module pending refactor in Q3-25\n/**\n * projectDashboard.js\n *\n * A fully remediated implementation of the ProjectDashboard, enforcing:\n * - Factory function export\n * - Strict DI & no top-level logic\n * - Pure imports\n * - Logging via DI logger\n * - HTML sanitization\n * - DOM readiness only via domReadinessService\n * - Single event bus for custom events\n * - Navigation via navigationService\n */\n\nimport { SELECTORS } from \"./utils/selectorConstants.js\";\nimport { getSafeHandler } from './utils/getSafeHandler.js';\n\nexport function createProjectDashboard({\n  DependencySystem,\n  domAPI,\n  browserService,\n  eventHandlers,\n  domReadinessService,\n  logger,\n  sanitizer,\n  APP_CONFIG\n}) {\n  // ─────────────────────────────────────────────────────────────────────────\n  // 1) Validate dependencies upfront\n  // ─────────────────────────────────────────────────────────────────────────\n  if (!DependencySystem || typeof DependencySystem !== 'object') {\n    throw new Error('[createProjectDashboard] A dependencies object is required.');\n  }\n\n  const {\n    modules: {\n      get: getModule\n    }\n  } = DependencySystem;\n\n  if (!domAPI) {\n    throw new Error('[createProjectDashboard] Missing dependency: domAPI');\n  }\n  if (!browserService) {\n    throw new Error('[createProjectDashboard] Missing dependency: browserService');\n  }\n  if (!eventHandlers) {\n    throw new Error('[createProjectDashboard] Missing dependency: eventHandlers');\n  }\n  if (!domReadinessService) {\n    throw new Error('[createProjectDashboard] Missing dependency: domReadinessService');\n  }\n\n  if (!logger) {\n    throw new Error('[createProjectDashboard] logger dependency is required for observability');\n  }\n  if (!sanitizer) {\n    throw new Error('[createProjectDashboard] sanitizer dependency is required');\n  }\n  if (!APP_CONFIG) {\n    throw new Error('[createProjectDashboard] APP_CONFIG dependency is required');\n  }\n\n  // ─────────────────────────────────────────────────────────────────────────\n  // 2) Local event bus for the ProjectDashboard (avoid global doc events)\n  // ─────────────────────────────────────────────────────────────────────────\n  const dashboardBus = new EventTarget();\n\n  // ─────────────────────────────────────────────────────────────────────────\n  // 3) Class Definition: wrapped entirely inside the factory\n  //    (no top-level logic)\n  // ─────────────────────────────────────────────────────────────────────────\n  class ProjectDashboard {\n    constructor() {\n      // Basic DI references\n      this.dependencySystem = DependencySystem;\n      this.domAPI = domAPI;\n      this.browserService = browserService;\n      this.domReadinessService = domReadinessService;\n      this.eventHandlers = eventHandlers;\n      this.logger = logger;\n      this.sanitizer = sanitizer;\n      this.dashboardBus = dashboardBus;\n\n      // Canonical safeHandler for this instance\n      const _safeHandler = getSafeHandler(DependencySystem);\n      // Patch for legacy no-undef usage in event attachment\n      this.safeHandler = _safeHandler;\n\n      // Modules retrieved from dependencySystem\n      this.getModule = (key) => {\n        const module = this.dependencySystem.modules.get(key);\n        if (!module) {\n          logger.error('[ProjectDashboard][getModule]', `Missing required module \"${key}\"`, { context: 'projectDashboard' });\n          throw new Error(`[ProjectDashboard] Module \"${key}\" not found`);\n        }\n        return module;\n      };\n\n      try {\n        this.app = this.getModule('app');\n        this.projectManager = this.getModule('projectManager');\n        this.auth = this.getModule('auth');\n        this.navigationService = this.getModule('navigationService');\n      } catch (err) {\n        logger.error('[ProjectDashboard][constructor]', err, { context: 'projectDashboard' });\n        throw err;\n      }\n\n      // Components\n      this.components = {\n        projectList: this.getModuleSafe('projectListComponent'),\n        projectDetails: this.getModuleSafe('projectDetailsComponent')\n      };\n\n      // Additional checks\n      this._verifyRequiredMethods();\n\n      // Internal state\n      this.state = {\n        currentView: null,\n        _aborted: false\n      };\n      this._unsubs = [];\n\n      this._authBusBound = false;      // orchestration will bind once\n    }\n\n    /**\n     * Attempt to get a module from the system, but return null if missing.\n     * Logs a warning instead of throwing.\n     */\n    getModuleSafe(key) {\n      const mod = this.dependencySystem.modules.get(key);\n      if (!mod) {\n        logger.error('[ProjectDashboard][getModuleSafe]', `Optional module \"${key}\" not found`, { context: 'projectDashboard' });\n        return null;\n      }\n      return mod;\n    }\n\n    /**\n     * Verifies that essential modules and methods exist.\n     */\n    _verifyRequiredMethods() {\n      if (!this.eventHandlers?.trackListener) {\n        logger.error('[ProjectDashboard][constructor]', 'EventHandlers.trackListener is missing', { context: 'projectDashboard' });\n        throw new Error('[ProjectDashboard] eventHandlers.trackListener is required');\n      }\n      if (!this.browserService) {\n        throw new Error('[ProjectDashboard] browserService is required');\n      }\n      if (!this.domAPI) {\n        throw new Error('[ProjectDashboard] domAPI is required for DOM manipulation');\n      }\n    }\n\n    /**\n     * Utility: wrap any event handler using canonical safeHandler from DI\n     */\n    _wrapHandler(fn, desc) {\n      return this.safeHandler(fn, `ProjectDashboard:${desc}`);\n    }\n\n    /**\n     * Public method: Initialize the ProjectDashboard\n     */\n    async initialize() {\n\n      /* ---- first–time bindings moved from ctor -------------------- */\n      if (!this._authBusBound) {\n        const authBus = this.auth?.AuthBus;\n        if (authBus && typeof authBus.addEventListener === 'function') {\n          const safeAuthHandler = this._wrapHandler(\n            this._onAuthStateChanged.bind(this),\n            'authStateChangedGlobal'\n          );\n          const unsub = this.eventHandlers.trackListener(\n            authBus, 'authStateChanged', safeAuthHandler,\n            { context: 'projectDashboard' }\n          );\n          if (typeof unsub === 'function') this._unsubs.push(unsub);\n          this._authBusBound = true;\n        }\n      }\n\n      // Defer template-dependent init until 'ui:templates:ready' event.\n      const initStartTime = Date.now();\n      const runInitialize = async () => {\n        try {\n          const appModule = this.dependencySystem.modules.get('appModule');\n          if (!appModule?.state?.isReady) {\n            logger.debug?.('[ProjectDashboard] Proceeding before app:ready (bootstrap phase).', { context: 'projectDashboard' });\n          }\n\n          const authenticated = appModule?.state?.isAuthenticated ?? false;\n\n          if (!authenticated) {\n            logger.warn('[ProjectDashboard][initialize] User not authenticated – dashboard initialisation deferred until login.', { context: 'projectDashboard' });\n            this._onAuthStateChanged({ detail: { authenticated: false } });\n            return false;\n          }\n\n          // Ensure required DOM elements are ready\n          await domReadinessService.dependenciesAndElements({\n            deps: ['app'],\n            domSelectors: ['#mainContent'],\n            context: 'ProjectDashboard_Init'\n          });\n\n          // Only now initialize components when DOM is ready\n          await this._initializeComponents();\n          this._setupEventListeners();\n          this._registerNavigationViews();\n\n          this.logger.debug('[ProjectDashboard][initialize] Checking initial auth state', {\n            authenticated,\n            appModuleExists: !!appModule,\n            context: 'projectDashboard'\n          });\n\n          if (authenticated) {\n            try {\n              await this.showProjectList();\n            } catch (err) {\n              this.logger.error('[ProjectDashboard][initialize] showProjectList failed', err, { context: 'projectDashboard' });\n            }\n          } else {\n            // Show login required state\n            const loginMsg = this.domAPI.getElementById('loginRequiredMessage');\n            const mainCnt = this.domAPI.getElementById('mainContent');\n            if (loginMsg) loginMsg.classList.remove('hidden');\n            if (mainCnt) mainCnt.classList.add('hidden');\n          }\n\n          // Mark initialized\n          const initDuration = Date.now() - initStartTime;\n\n          // Dispatch an internal event on the local bus\n          this.dashboardBus.dispatchEvent(\n            new CustomEvent('projectDashboardInitialized', {\n              detail: {\n                success: true,\n                timestamp: Date.now(),\n                duration: initDuration\n              }\n            })\n          );\n          return true;\n        } catch (err) {\n          logger.error('[ProjectDashboard][initialize]', err, { context: 'projectDashboard' });\n          const initDuration = Date.now() - initStartTime;\n\n          this.dashboardBus.dispatchEvent(\n            new CustomEvent('projectDashboardInitialized', {\n              detail: {\n                success: false,\n                error: err,\n                errorMessage: err?.message,\n                timestamp: Date.now(),\n                duration: initDuration\n              }\n            })\n          );\n          return false;\n        }\n      };\n\n      // Wait for templates ready event via domReadinessService, then initialize\n      await domReadinessService.waitForEvent('ui:templates:ready', { context: 'projectDashboard' });\n      await runInitialize();\n    }\n\n    /**\n     * Cleanup method for unsubscribing from events, etc.\n     */\n    cleanup() {\n      // Unsubscribe from any tracked listeners\n      if (this._unsubs?.length) {\n        this._unsubs.forEach((unsub) => {\n          try {\n            unsub?.();\n          } catch (err) {\n            logger.error('[ProjectDashboard][cleanup]', err, { context: 'projectDashboard' });\n          }\n        });\n        this._unsubs = [];\n      }\n\n      // Use eventHandlers cleanup\n      if (this.eventHandlers?.cleanupListeners) {\n        this.eventHandlers.cleanupListeners({ context: 'projectDashboard' });\n      }\n\n      // Detach any local-bus listeners and null-out the bus\n      this.dashboardBus?.dispatchEvent(new Event('dashboardDestroyed'));\n      this.dashboardBus = null;\n\n      // Cleanup readiness service if applicable\n      if (typeof this.domReadinessService.destroy === 'function') {\n        try {\n          this.domReadinessService.destroy();\n        } catch (err) {\n          logger.error('[ProjectDashboard][_initializeComponents:detailsTemplate]', err, {\n            context: 'projectDashboard'\n          });\n        }\n      }\n    }\n\n    /**\n     * Show the list of projects.\n     */\n    async showProjectList() {\n      try {\n        await domReadinessService.dependenciesAndElements({\n          deps: ['app'],\n          domSelectors: [SELECTORS.projectListView],\n          context: 'ProjectDashboard_showList'\n        });\n\n        this.state.currentView = 'list';\n        this.app.setCurrentProject?.(null); // usage depends on your app interface\n        this.browserService.removeSearchParam?.('project');\n        this.browserService.removeSearchParam?.('chatId');\n\n        // Toggle UI\n        this._setView({ showList: true, showDetails: false });\n        if (this.components.projectDetails) {\n          this.components.projectDetails.hide?.();\n        }\n\n        // Initialize projectList component if not already\n        if (this.components.projectList?.initialize) {\n          try {\n            await this.components.projectList.initialize();\n          } catch (err) {\n            logger.error('[ProjectDashboard][showProjectList:initializeList]', err, { context: 'projectDashboard' });\n            return;\n          }\n        }\n\n        this.components.projectList?.show();\n        this._loadProjects();\n      } catch (err) {\n        logger.error('[ProjectDashboard][showProjectList]', err && err.stack ? err.stack : err, {\n          context: 'projectDashboard'\n        });\n      }\n    }\n\n    /**\n     * Show details for a given project (by object or ID).\n     */\n    async showProjectDetails(projectObjOrId) {\n      let project = null;\n      let projectId = null;\n      const currentLoadId = Symbol('loadId');\n      this._lastLoadId = currentLoadId;\n\n      try {\n        // Determine if argument is an object or a string\n        if (typeof projectObjOrId === 'object' && projectObjOrId?.id) {\n          project = projectObjOrId;\n          projectId = projectObjOrId.id;\n        } else if (typeof projectObjOrId === 'string') {\n          projectId = projectObjOrId;\n        } else {\n          await this.showProjectList();\n          return false;\n        }\n\n        // Initialize projectDetails component if needed\n        if (this.components.projectDetails && !this.components.projectDetails.state?.initialized) {\n          try {\n            await this.components.projectDetails.initialize();\n          } catch (err) {\n            logger.error('[ProjectDashboard][showProjectDetails:initializeDetails]', err, { context: 'projectDashboard' });\n            throw err;\n          }\n        }\n\n        // If no project object supplied, load from projectManager\n        if (!project) {\n          // CONSOLIDATED: Check authentication state from appModule.state\n          const appModuleRef = this.app?.DependencySystem?.modules?.get?.('appModule');\n          const isAuthenticated = appModuleRef?.state?.isAuthenticated ?? false;\n\n          if (isAuthenticated && this.projectManager?.loadProjectDetails) {\n            logger.info('[ProjectDashboard][showProjectDetails] Calling loadProjectDetails with:', {\n              projectId,\n              source: \"showProjectDetails\",\n              stack: (new Error().stack || \"\").split('\\n')[2] || \"unknown\"\n            });\n            project = await this.projectManager.loadProjectDetails(projectId);\n            if (!project) {\n              await this.showProjectList();\n              return false;\n            }\n          } else {\n            await this.showProjectList();\n            return false;\n          }\n        }\n\n        if (this._lastLoadId !== currentLoadId) {\n          // Another load took place, cancel\n          return false;\n        }\n\n        // Switch UI to details and render via component show()\n        this._setView({ showList: false, showDetails: true });\n        this.components.projectList?.hide?.();\n        await this.components.projectDetails?.show?.({ projectId });\n\n        // Post success: set search param, handle default conversation, dispatch events\n        return this._postProjectDetailsSuccess(project, projectId, typeof projectObjOrId === 'object');\n      } catch (err) {\n        logger.error('[ProjectDashboard][showProjectDetails:outerCatch]', err, { context: 'projectDashboard' });\n        await this.showProjectList();\n        return false;\n      }\n    }\n\n    /**\n     * Post success logic after showing project details\n     */\n    _postProjectDetailsSuccess(project, projectId, wasFullObject) {\n      this.browserService.setSearchParam?.('project', projectId);\n      this.state.currentView = 'details';\n\n      // If project has conversations, set the first as default in search param\n      if (Array.isArray(project.conversations) && project.conversations.length > 0) {\n        const conv = project.conversations[0];\n        if (conv?.id) {\n          this.browserService.setSearchParam?.('chatId', conv.id);\n        }\n      }\n\n      // Optionally dispatch 'projectLoaded' if we originally had the full object\n      if (wasFullObject && project?.id) {\n        this.dashboardBus.dispatchEvent(\n          new CustomEvent('projectLoaded', { detail: project })\n        );\n      }\n\n      // Initialize chat manager if available\n      const chatManager = this.getModuleSafe('chatManager');\n      if (chatManager && typeof chatManager.initialize === 'function') {\n        Promise.resolve(chatManager.initialize({ projectId })).catch((err) => {\n          logger.error('[ProjectDashboard][_postProjectDetailsSuccess:chatManager]', err, {\n            context: 'projectDashboard'\n          });\n        });\n      }\n\n      return true;\n    }\n\n    /**\n     * Load the list of projects from the projectManager\n     */\n    _loadProjects() {\n      if (this.state._aborted) {\n        return;\n      }\n\n      // CONSOLIDATED: Single source of truth - only check app.state\n      const isAuthed = this.app?.state?.isAuthenticated;\n\n      if (!isAuthed) {\n        // Wait a bit and retry if user logs in\n        this.browserService.setTimeout(() => {\n          if (this.app?.state?.isAuthenticated) {\n            this._loadProjects();\n          }\n        }, 500);\n        return;\n      }\n\n      if (!this.projectManager || typeof this.projectManager.loadProjects !== 'function') {\n        return;\n      }\n\n      this.browserService.setTimeout(() => this._executeProjectLoad(), 100);\n    }\n\n    /**\n     * Actually call projectManager.loadProjects\n     */\n    _executeProjectLoad() {\n      if (this.state._aborted) {\n        return;\n      }\n      this.projectManager\n        .loadProjects('all')\n        .then(() => {\n          // success, no direct log needed unless debugging\n        })\n        .catch((err) => {\n          logger.error('[ProjectDashboard][_executeProjectLoad]', err, { context: 'projectDashboard' });\n        });\n    }\n\n    /**\n     * Setup centralized event listeners with safe handlers\n     */\n    _setupEventListeners() {\n      const doc = this.domAPI.getDocument();\n      const add = (target, event, handler, opts = {}) => {\n        if (!this.eventHandlers?.trackListener) {\n          logger.error('[ProjectDashboard][_setupEventListeners]', 'Missing trackListener', { context: 'projectDashboard' });\n          throw new Error('[ProjectDashboard] eventHandlers.trackListener is required');\n        }\n        const safeHandler = this._wrapHandler(handler, `Evt_${event}`);\n        const optionsWithContext = { ...opts, context: 'projectDashboard' };\n        // trackListener _already_ stores its own removal; capture the returned unsub if provided.\n        const maybeUnsub = this.eventHandlers.trackListener(\n          target,\n          event,\n          safeHandler,\n          optionsWithContext\n        );\n        if (typeof maybeUnsub === 'function') {\n          this._unsubs.push(maybeUnsub);\n        }\n      };\n\n      // Example events: define as needed\n      add(doc, 'projectsLoaded', this._handleProjectsLoaded.bind(this), {\n        description: 'Dashboard: projectsLoaded'\n      });\n      add(doc, 'projectLoaded', this._handleProjectLoaded.bind(this), {\n        description: 'Dashboard: projectLoaded'\n      });\n      add(doc, 'projectStatsLoaded', this._handleProjectStatsLoaded.bind(this), {\n        description: 'Dashboard: projectStatsLoaded'\n      });\n      add(doc, 'projectFilesLoaded', this._handleFilesLoaded.bind(this), {\n        description: 'Dashboard: projectFilesLoaded'\n      });\n      add(doc, 'projectArtifactsLoaded', this._handleArtifactsLoaded.bind(this), {\n        description: 'Dashboard: projectArtifactsLoaded'\n      });\n      add(doc, 'projectNotFound', this._handleProjectNotFound.bind(this), {\n        description: 'Dashboard: projectNotFound'\n      });\n      add(doc, 'projectCreated', this._handleProjectCreated.bind(this), {\n        description: 'Dashboard: projectCreated'\n      });\n      add(doc, 'authStateChanged', this._handleAuthStateChange.bind(this), {\n        description: 'Dashboard: authStateChanged(global)'\n      });\n      add(doc, 'auth:stateChanged', this._handleAuthStateChange.bind(this), {\n        description: 'Dashboard: auth:stateChanged(global)'\n      });\n      add(doc, 'projectDeleted', this._handleProjectDeleted.bind(this), {\n        description: 'Dashboard: projectDeleted'\n      });\n    }\n\n    // ───────────────────────────────────────────────────────────────────────────\n    //  Event handlers\n    // ───────────────────────────────────────────────────────────────────────────\n\n    _handleProjectsLoaded(e) {\n      const { projects = [], error = false, message } = e.detail || {};\n      if (error) {\n        if (this.components.projectList?._showErrorState) {\n          // Provide some user feedback\n          this.components.projectList._showErrorState(message || 'Failed to load projects');\n        }\n        return;\n      }\n      // Render projects\n      this.browserService.requestAnimationFrame(() => {\n        this.components.projectList?.renderProjects?.({ projects });\n      });\n    }\n\n    _handleProjectLoaded(e) {\n      const project = e.detail;\n      (async () => {\n        try {\n          await this.domReadinessService.dependenciesAndElements({\n            deps: ['app'],\n            domSelectors: [],\n            context: 'ProjectDashboard_appReady'\n          });\n          this.app.setCurrentProject?.(project || null);\n        } catch (err) {\n          logger.error('[ProjectDashboard][_handleProjectLoaded]', err, {\n            context: 'projectDashboard'\n          });\n        }\n      })();\n      this.browserService.requestAnimationFrame(() => {\n        this.components.projectDetails?.renderProject?.(project);\n      });\n    }\n\n    _handleProjectStatsLoaded(e) {\n      const stats = e.detail;\n      this.browserService.requestAnimationFrame(() => {\n        this.components.projectDetails?.renderStats?.(stats);\n      });\n    }\n\n    _handleFilesLoaded(e) {\n      const { files } = e.detail || {};\n      this.browserService.requestAnimationFrame(() => {\n        this.components.projectDetails?.renderFiles?.(files);\n      });\n    }\n\n    _handleArtifactsLoaded(e) {\n      const { artifacts } = e.detail || {};\n      this.browserService.requestAnimationFrame(() => {\n        this.components.projectDetails?.renderArtifacts?.(artifacts);\n      });\n    }\n\n    _handleProjectNotFound(e) {\n      const { projectId } = e.detail || {};\n      // CONSOLIDATED: Use canonical appModule state instead of local state\n      this.app.setCurrentProject?.(null);\n      const detailsView = this.domAPI.getElementById('projectDetailsView');\n      if (detailsView) {\n        detailsView.classList.add('hidden');\n        detailsView.style.display = 'none';\n      }\n      this.showProjectList();\n    }\n\n    _handleProjectCreated(e) {\n      const project = e.detail;\n      if (project?.id) {\n        // Possibly schedule post-creation events\n        this.browserService.setTimeout(() => {\n          const pId = project.id;\n          // Fire some \"rendered\" events\n          const events = [\n            'projectStatsRendered',\n            'projectFilesRendered',\n            'projectConversationsRendered',\n            'projectArtifactsRendered',\n            'projectKnowledgeBaseRendered'\n          ];\n          events.forEach((evName) => {\n            this.dashboardBus.dispatchEvent(\n              new CustomEvent(evName, { detail: { projectId: pId } })\n            );\n          });\n        }, 3000);\n      }\n      this.showProjectDetails(project);\n      this.browserService.setItem?.('selectedProjectId', project.id);\n    }\n\n    _handleAuthStateChange(event) {\n      const { authenticated } = event.detail || {};\n      this.browserService.requestAnimationFrame(() => {\n        const loginRequiredMessage = this.domAPI.getElementById('loginRequiredMessage');\n        const mainContent = this.domAPI.getElementById('mainContent');\n        const projectListView = this.domAPI.getElementById(SELECTORS.projectListView.replace('#', ''));\n        const projectDetailsView = this.domAPI.getElementById('projectDetailsView');\n\n        if (!authenticated) {\n          if (loginRequiredMessage) loginRequiredMessage.classList.remove('hidden');\n          if (mainContent) mainContent.classList.add('hidden');\n          if (projectListView) projectListView.classList.add('hidden');\n          if (projectDetailsView) projectDetailsView.classList.add('hidden');\n          this.state._aborted = true;\n        } else {\n          this.state._aborted = false;\n          if (loginRequiredMessage) loginRequiredMessage.classList.add('hidden');\n          if (mainContent) mainContent.classList.remove('hidden');\n          this.state.currentView = 'list';\n          // CONSOLIDATED: Use canonical appModule state instead of local state\n          this.app.setCurrentProject?.(null);\n          this.browserService.removeSearchParam?.('project');\n\n          if (projectListView) {\n            projectListView.classList.remove('hidden', 'opacity-0');\n            projectListView.style.display = '';\n            void projectListView.offsetHeight;\n          }\n          if (projectDetailsView) projectDetailsView.classList.add('hidden');\n\n          // If components not initialized, do so\n          const isProjectListInited = this.components.projectList?.state?.initialized;\n          if (!isProjectListInited) {\n            this._initializeComponents()\n              .then(() => {\n                this.components.projectList?.show();\n                this._loadProjects();\n              })\n              .catch((err) => {\n                logger.error('[ProjectDashboard][_handleAuthStateChange]', err, {\n                  context: 'projectDashboard'\n                });\n              });\n          } else {\n            this.components.projectList?.show();\n            this.components.projectDetails?.hide();\n            this.browserService.setTimeout(() => {\n              this._loadProjects();\n              this.browserService.setTimeout(() => {\n                const plv = this.domAPI.getElementById(SELECTORS.projectListView.replace('#', ''));\n                if (plv) {\n                  plv.classList.remove('opacity-0');\n                  plv.style.display = '';\n                  plv.classList.remove('hidden');\n                }\n              }, 100);\n            }, 300);\n          }\n        }\n      });\n    }\n\n    /**\n     * Separate from global auth changes: local auth event\n     */\n    _onAuthStateChanged(e) {\n      const { authenticated } = e.detail || {};\n      if (!authenticated) {\n        this.state._aborted = true;\n        const loginMsg = this.domAPI.getElementById('loginRequiredMessage');\n        const mainCnt = this.domAPI.getElementById('mainContent');\n        if (loginMsg) loginMsg.classList.remove('hidden');\n        if (mainCnt) mainCnt.classList.add('hidden');\n        return;\n      }\n      this.state._aborted = false;\n      this.initialize().catch((err) => {\n        logger.error('[ProjectDashboard][_onAuthStateChanged]', err, { context: 'projectDashboard' });\n      });\n    }\n\n    _handleProjectDeleted(e) {\n      const { projectId } = e.detail || {};\n      (async () => {\n        try {\n          await this.domReadinessService.dependenciesAndElements({\n            deps: ['app'],\n            domSelectors: [],\n            context: 'ProjectDashboard_appReady'\n          });\n          const currentProject = this.app?.getCurrentProject?.();\n          if (currentProject?.id === projectId) {\n            await this.showProjectList();\n          } else {\n            if (this.state.currentView === 'list') {\n              this._loadProjects();\n            }\n          }\n        } catch (err) {\n          logger.error('[ProjectDashboard][_handleProjectDeleted]', err, { context: 'projectDashboard' });\n        }\n      })();\n    }\n\n\n    /**\n     * Register final show/hide for projectList & projectDetails.\n     */\n    _registerNavigationViews() {\n      if (!this.navigationService?.registerView) return;\n      try {\n        // projectList\n        this.navigationService.registerView('projectList', {\n          show: async () => {\n            await this.showProjectList();\n            return true;\n          },\n          hide: async () => {\n            this.components.projectList?.hide?.();\n            return true;\n          }\n        });\n      } catch (err) {\n        logger.error('[ProjectDashboard][_registerNavigationViews:projectList]', err, {\n          context: 'projectDashboard'\n        });\n      }\n\n      try {\n        // projectDetails\n        this.navigationService.registerView('projectDetails', {\n          show: async (params = {}) => {\n            const { projectId, conversationId, activeTab } = params;\n            if (!projectId) {\n              this.navigationService.navigateTo('projectList');\n              return false;\n            }\n            // Switch UI\n            this._setView({ showList: false, showDetails: true });\n            if (!this.components.projectDetails) {\n              this.navigationService.navigateTo('projectList');\n              return false;\n            }\n\n            await this.components.projectDetails.show({ projectId, activeTab });\n            let projectToRender = null;\n            if (typeof this.projectManager?.loadProjectDetails === 'function') {\n              try {\n                projectToRender = await this.projectManager.loadProjectDetails(projectId);\n              } catch (error) {\n                logger.error('[ProjectDashboard][detailsViewShow:loadProjectDetails]', error, {\n                  context: 'projectDashboard'\n                });\n                // If load fails, an event may be dispatched that triggers showProjectList\n                return false;\n              }\n            }\n            if (!projectToRender) {\n              // Possibly a 404\n              this.navigationService.navigateTo('projectList');\n              return false;\n            }\n\n            // Render the project\n            this.components.projectDetails.renderProject?.(projectToRender);\n            // Possibly load conversation\n            if (conversationId && this.components.projectDetails.loadConversation) {\n              this.components.projectDetails.switchTab?.(activeTab || 'conversations');\n              await this.components.projectDetails.loadConversation(conversationId);\n            } else if (activeTab && this.components.projectDetails.switchTab) {\n              this.components.projectDetails.switchTab(activeTab);\n            }\n            return true;\n          },\n          hide: async () => {\n            this.components.projectDetails?.hide?.();\n            return true;\n          }\n        });\n      } catch (err) {\n        logger.error('[ProjectDashboard][_registerNavigationViews:projectDetails]', err, {\n          context: 'projectDashboard'\n        });\n      }\n    }\n\n    /**\n     * Initialize sub-components, waiting for relevant DOM elements.\n     */\n    async _initializeComponents() {\n      // Reload references in case new modules arrived\n      this.components.projectList = this.components.projectList || this.getModuleSafe('projectListComponent');\n      this.components.projectDetails =\n        this.components.projectDetails || this.getModuleSafe('projectDetailsComponent');\n\n      // ------------------------------------------------------------------\n      // 1) Wait for Project-Details template if it hasn’t already been loaded\n      // ------------------------------------------------------------------\n      const detailsTemplateAlreadyLoaded = (() => {\n        try {\n          // Fast heuristics: component reports templateLoaded OR DOM element exists\n          if (this.components.projectDetails?.state?.templateLoaded) return true;\n          const detailsViewEl = this.domAPI.getElementById('projectDetailsView');\n          return !!(detailsViewEl && detailsViewEl.childElementCount > 0);\n        } catch {\n          return false;\n        }\n      })();\n\n      if (!detailsTemplateAlreadyLoaded) {\n        try {\n          await this.domReadinessService.waitForEvent('projectDetailsTemplateLoaded', {\n            timeout: 8000,\n            context: 'ProjectDashboard_template'\n          });\n        } catch (err) {\n          // This is non-fatal; log as error per pattern, also warn for visibility\n          logger.error('[ProjectDashboard][_initializeComponents:detailsTemplate]', err, {\n            context: 'projectDashboard'\n          });\n          logger.warn('[ProjectDashboard][_initializeComponents:detailsTemplate] Event timeout – continuing', {\n            err: err?.message || err,\n            context: 'projectDashboard'\n          });\n        }\n      }\n\n      // ------------------------------------------------------------------\n      // 2) Wait for Project-List template if it hasn’t already been loaded\n      // ------------------------------------------------------------------\n      const listTemplateAlreadyLoaded = (() => {\n        try {\n          if (this.components.projectList?.state?.templateLoaded) return true;\n          const listViewEl = this.domAPI.getElementById(SELECTORS.projectListView.replace('#', ''));\n          return !!(listViewEl && listViewEl.childElementCount > 0);\n        } catch {\n          return false;\n        }\n      })();\n\n      if (!listTemplateAlreadyLoaded) {\n        try {\n          await this.domReadinessService.waitForEvent('projectListHtmlLoaded', {\n            timeout: 8000,\n            context: 'ProjectDashboard_template'\n          });\n        } catch (err) {\n          logger.error('[ProjectDashboard][_initializeComponents:listTemplate] Failed waiting for projectListHtmlLoaded', err, { context: 'projectDashboard' });\n          logger.warn('[ProjectDashboard][_initializeComponents:listTemplate] Event timeout – continuing', {\n            err: err?.message || err,\n            context: 'projectDashboard'\n          });\n        }\n      }\n\n      // Initialise child components only once the app is fully ready to avoid\n      // premature waits for the `app:ready` event inside their own logic.\n      // Always attempt to initialize ProjectListComponent; do not block on appIsReady\n      if (this.components.projectList?.initialize) {\n        try {\n          await this.domReadinessService.dependenciesAndElements({\n            domSelectors: ['#projectListView'],\n            timeout: 5000,\n            context: 'ProjectDashboard_InitProjectList'\n          });\n          await this.components.projectList.initialize();\n        } catch (err) {\n          logger.error('[ProjectDashboard][_initializeComponents:projectList] Failed to initialize ProjectListComponent', err, { context: 'projectDashboard' });\n        }\n      }\n\n      // Retain appIsReady check for details, as details may depend on full app config\n      const appIsReady = this.dependencySystem.modules.get('appModule')?.state?.isReady === true;\n      if (appIsReady && this.components.projectDetails?.initialize) {\n        try {\n          await this.domReadinessService.dependenciesAndElements({\n            domSelectors: ['#projectDetailsView'],\n            timeout: 5000,\n            context: 'ProjectDashboard_InitProjectDetails'\n          });\n          await this.components.projectDetails.initialize();\n        } catch (err) {\n          logger.error('[ProjectDashboard][_initializeComponents:projectDetails]', err, {\n            context: 'projectDashboard'\n          });\n        }\n      } else if (!appIsReady) {\n        logger.debug?.('[ProjectDashboard] Skipping early ProjectDetailsComponent initialization – waiting for app:ready.', {\n          context: 'projectDashboard'\n        });\n      }\n    }\n\n    /**\n     * Core helper to toggle list vs. details in the DOM\n     */\n    _setView({ showList, showDetails }) {\n      if (this.state._aborted) return;\n\n      // Hide login message\n      const loginMessage = this.domAPI.getElementById('loginRequiredMessage');\n      if (loginMessage) this.domAPI.toggleClass(loginMessage, 'hidden', true);\n      const mainContent = this.domAPI.getElementById('mainContent');\n      if (mainContent) this.domAPI.toggleClass(mainContent, 'hidden', false);\n\n      // List view controlling\n      const listView = this.domAPI.getElementById(SELECTORS.projectListView.replace('#', ''));\n      if (listView) {\n        this.domAPI.toggleClass(listView, 'hidden', !showList);\n        this.domAPI.toggleClass(listView, 'opacity-0', !showList);\n        this.domAPI.setStyle(listView, 'display', showList ? '' : 'none');\n      }\n\n      // Details\n      const detailsView = this.domAPI.getElementById('projectDetailsView');\n      if (detailsView) {\n        this.domAPI.toggleClass(detailsView, 'hidden', !showDetails);\n        this.domAPI.toggleClass(detailsView, 'opacity-0', !showDetails);\n        this.domAPI.setStyle(detailsView, 'display', showDetails ? 'flex' : 'none');\n      }\n    }\n\n    /**\n     * Example method for safely inserting HTML from server:\n     */\n    _insertTemplate(containerEl, incomingHtml) {\n      // Must sanitize per guardrails\n      containerEl.innerHTML = this.sanitizer.sanitize(incomingHtml);\n    }\n  } // End of ProjectDashboard class\n\n  // ─────────────────────────────────────────────────────────────────────────\n  // 4) Instantiate the dashboard & return with a cleanup() method\n  // ─────────────────────────────────────────────────────────────────────────\n  const dashboard = new ProjectDashboard();\n\n\n  function cleanup() {\n    if (eventHandlers?.cleanupListeners) {\n      eventHandlers.cleanupListeners({ context: 'projectDashboard' });\n    }\n    dashboard.cleanup();\n  }\n\n  // Return an API exposing .initialize() and .cleanup(), plus any additional\n  // methods you want to make publicly accessible\n  return {\n    initialize: dashboard.initialize.bind(dashboard),\n    showProjectList: dashboard.showProjectList.bind(dashboard),\n    showProjectDetails: dashboard.showProjectDetails.bind(dashboard),\n    cleanup: dashboard.cleanup.bind(dashboard),\n    // Optionally expose the local bus if needed:\n    dashboardBus: dashboard.dashboardBus,\n    setProjectListComponent: (component) => {\n      if (dashboard.components) dashboard.components.projectList = component;\n      else dashboard.logger.warn('[ProjectDashboard] Components object not ready for projectList', { context: 'projectDashboard' });\n    },\n    setProjectDetailsComponent: (component) => {\n      if (dashboard.components) dashboard.components.projectDetails = component;\n      else dashboard.logger.warn('[ProjectDashboard] Components object not ready for projectDetails', { context: 'projectDashboard' });\n    }\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 39584,
          "_transferSize": 40773,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.365Z",
        "time": 268.9469999895664,
        "timings": {
          "blocked": 222.27099999591616,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08699999999998909,
          "wait": 46.10300000374485,
          "receive": 0.4859999899053946,
          "_blocked_queueing": 5.4899999959161505,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126409",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 41
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/chat.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1459,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "66769"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"c493574b9279e1c6ab18019e482d6ac1\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 08 Jun 2025 14:17:37 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 66769,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "import { getSafeHandler } from './utils/getSafeHandler.js';\nimport { createChatUIEnhancements } from './chatUIEnhancements.js';\n\n/**\n * @typedef {Object} DomAPI\n * @property {function(string): HTMLElement|null} querySelector\n * @property {function(string): HTMLElement|null} getElementById\n * @property {function(string): NodeListOf<HTMLElement>} querySelectorAll\n * @property {function(HTMLElement, HTMLElement): void} appendChild\n * @property {function(HTMLElement): HTMLElement[]} replaceChildren\n * @property {function(string): HTMLElement} createElement\n * @property {function(HTMLElement, string): void} removeChild\n * @property {function(HTMLElement, string): void} setInnerHTML\n * @property {function(): Document} getDocument\n * @property {function(HTMLElement, string): void} addClass\n * @property {function(HTMLElement, string): void} removeClass\n */\n\n/**\n * @typedef {Object} NavAPI\n * @property {function(): string} getSearch\n * @property {function(): string} getHref\n * @property {function(url: string): void} pushState\n * @property {function(): string} getPathname\n */\n\n/**\n * Creates and returns a chat manager for handling chat UI, conversation lifecycle, message sending, authentication, and project context changes.\n *\n * The returned chat manager provides methods to initialize the chat UI, manage conversations (create, load, delete), send messages with queueing and abort handling, update model configuration, set images for vision models, and clean up resources. It integrates with injected dependencies for API requests, DOM manipulation, navigation, event handling, logging, and configuration, and uses an event bus for chat-related events.\n *\n * @param {Object} deps - Dependency injection object containing required APIs, services, and configuration.\n * @returns {Object} Chat manager instance with methods: initialize, sendMessage, createNewConversation, loadConversation, deleteConversation, setImage, updateModelConfig, cleanup, and chatBus.\n *\n * @throws {Error} If required dependencies are missing from {@link deps}.\n *\n * @remark\n * The chat manager automatically responds to global authentication and project context changes, disabling or re-initializing the chat UI as needed. It requires valid authentication and project selection to function.\n */\n\nexport function createChatManager(deps = {}) {\n  const {\n    apiRequest,\n    app,\n    eventHandlers,\n    modelConfig,\n    projectDetailsComponent,\n    isValidProjectId,\n    domAPI,\n    navAPI,\n    DOMPurify,\n    apiEndpoints,\n    domReadinessService,\n    logger,\n    DependencySystem,\n    APP_CONFIG,               // ← NEW (DI)\n    browserService            // ← Must be injected and used as this.browserService\n  } = deps;\n\n  /**\n   * Ensure the chatUIEnhancements module is available in the DependencySystem.\n   * It is needed for attaching event handlers and extra UI logic.  Because the\n   * enhancements module itself depends on ChatManager, we lazily create it the\n   * first time ChatManager.initialise() runs and pass the current ChatManager\n   * instance into the factory.\n   *\n   * This avoids bootstrap-order issues where chatUIEnhancements was never\n   * instantiated, causing undefined errors when ChatManager tried to access it.\n   */\n  function _ensureChatUIEnhancements(chatManagerInstance) {\n    if (!DependencySystem?.modules?.get('chatUIEnhancements')) {\n      try {\n        // Resolve ModalManager (may not be registered yet during early bootstrap)\n        const modalMgr =\n            DependencySystem?.modules?.get('modalManager') || {\n              /* minimal no-op stub so chatUIEnhancements can bootstrap */\n              showModal   () {},\n              closeModal  () {},\n              confirmDelete  : () => Promise.resolve(false),\n              confirmAction  : () => Promise.resolve(false),\n              show       () {},\n              isReadyPromise : () => Promise.resolve()\n            };\n\n        createChatUIEnhancements({\n          domAPI              : _domAPI,\n          eventHandlers       : _EH,\n          browserService      : deps.browserService,\n          domReadinessService : domReadinessService,\n          logger,\n          sanitizer           : DOMPurify,\n          chatManager         : chatManagerInstance,\n          modalManager        : modalMgr,        // ← use stub/final instance\n          DependencySystem\n        });\n        logger.info('[ChatManager] chatUIEnhancements module instantiated on-demand');\n      } catch (err) {\n        logger.error('[ChatManager] Failed to create chatUIEnhancements', err);\n      }\n    }\n  }\n\n  // Dependency-injected global replacements with defaults\n  const {\n    clock = { now: () => performance.now() },\n    urlFactory = (base, search = {}) => {\n      const u = new URL(base, navAPI?.getHref?.() || \"/\");\n      Object.entries(search).forEach(([k, v]) => u.searchParams.set(k, v));\n      return u;\n    },\n    eventBusFactory = () => new EventTarget(),\n    URLSearchParams = globalThis.URLSearchParams,\n    DateCtor = globalThis.Date,\n  } = deps;\n\n  if (!apiRequest) throw new Error('Missing apiRequest in createChatManager');\n  if (!app) throw new Error('Missing app in createChatManager');\n  if (!isValidProjectId) throw new Error('Missing isValidProjectId in createChatManager');\n  if (!DOMPurify) throw new Error('Missing DOMPurify in createChatManager');\n  if (!apiEndpoints) throw new Error('Missing apiEndpoints in createChatManager');\n  if (!domReadinessService) throw new Error('Missing domReadinessService in createChatManager');\n  if (!logger) throw new Error('Missing logger in createChatManager');\n  if (!APP_CONFIG) throw new Error('Missing APP_CONFIG in createChatManager');\n\n  /* NEW – ensure late-failing deps are present _before_ projectDetails,\n     chatUIEnhancements and projectManager get access to ChatManager      */\n  if (!navAPI)                    throw new Error('Missing navAPI (NavigationService) in createChatManager');\n  if (!browserService)           throw new Error('Missing browserService in createChatManager');\n  if (typeof isValidProjectId !== 'function')\n      throw new Error('Missing isValidProjectId(fn) in createChatManager');\n\n  // --- Dependency-injected global replacements with defaults (moved up) ---\n  const _domAPI = domAPI || createDefaultDomAPI();\n  const _navAPI = navAPI || createDefaultNavAPI();\n  const _EH = eventHandlers || createDefaultEventHandlers({ domReadinessService, logger });\n\n\n  // Use canonical safeHandler from DI, normalize for both direct function or object with .safeHandler (early bootstrap)\n  const safeHandler = getSafeHandler(DependencySystem);\n\n  // --- Live Token Estimation Logic ---\n  // (patch instance after construction, see after ChatManager)\n\n  // (Removed legacy _updateURLWithConversationId and _removeConversationIdFromURL helpers)\n\n\n  function createDefaultDomAPI() {\n    throw new Error(\"[ChatManager] No domAPI provided. All DOM operations must be injected.\");\n  }\n  function createDefaultNavAPI() {\n    throw new Error(\"[ChatManager] No navAPI provided. All navigation operations must be injected.\");\n  }\n  function createDefaultEventHandlers({ domReadinessService, logger }) {\n    if (!domReadinessService) throw new Error('Missing domReadinessService in createDefaultEventHandlers');\n    if (!logger) throw new Error('Missing logger in createDefaultEventHandlers');\n    function trackListener() { throw new Error(\"[ChatManager] No eventHandlers.trackListener provided.\"); }\n    function untrackListener() { throw new Error(\"[ChatManager] No eventHandlers.untrackListener provided.\"); }\n    function cleanupListeners() { }\n    return { trackListener, untrackListener, cleanupListeners };\n  }\n  function getInjectedModelConfig(modelCfg) {\n    if (modelCfg) return modelCfg;\n    return {\n      getConfig: () => ({}),\n      updateConfig: () => { },\n      getModelOptions: () => [],\n      onConfigChange: () => { }\n    };\n  }\n\n  const CHAT_CONFIG = {\n    DEFAULT_MODEL: \"claude-3-sonnet-20240229\",\n    MAX_TOKENS: 4096,\n    THINKING_BUDGET: 16000,\n    REASONING_EFFORT: \"medium\",\n    MAX_IMAGE_SIZE: 4 * 1024 * 1024 // 4MB\n  };\n\n  class MessageQueue {\n    constructor() {\n      this.queue = [];\n      this.isProcessing = false;\n    }\n\n    // (Removed orphaned _updateURLWithConversationId and _removeConversationIdFromURL)\n\n    /**\n     * Replace the (placeholder) ProjectDetailsComponent reference with the\n     * final instance registered later by coreInit.\n     * Called by coreInit once the definitive component is ready.\n     */\n    setProjectDetailsComponent(component) {\n      if (component) this.projectDetails = component;\n    }\n    add(task) {\n      return new Promise((resolve) => {\n        this.queue.push({ task, resolve });\n        this.process();\n      });\n    }\n    async process() {\n      if (this.isProcessing || this.queue.length === 0) return;\n      this.isProcessing = true;\n      const { task, resolve } = this.queue.shift();\n      try {\n        const controller = new AbortController();\n        const timeout = setTimeout(() => controller.abort(), 30000);\n        const result = await task(controller.signal);\n        clearTimeout(timeout);\n        resolve(result);\n      } finally {\n        this.isProcessing = false;\n        this.process();\n      }\n    }\n  }\n\n  class ChatManager {\n    _api(endpoint, opts = {}, ctx = 'chatManager') {\n      const { params, ...rest } = opts;\n      if (params && typeof params === 'object') {\n        const u = urlFactory(endpoint, params);\n        endpoint = String(u);\n      }\n      return this.apiRequest(endpoint,\n        { credentials: 'include', ...rest },\n        ctx);\n    }\n\n    constructor() {\n      this.apiRequest = apiRequest;\n      this.app = app;\n      this.modelConfigAPI = getInjectedModelConfig(modelConfig);\n      this.domAPI = _domAPI;\n      this.navAPI = _navAPI;\n      this.eventHandlers = _EH;\n      this.projectDetails = projectDetailsComponent;\n      this.isValidProjectId = isValidProjectId;\n      this.DOMPurify = DOMPurify;\n      this.chatBus = eventBusFactory();\n      this.projectId = null;\n      this.currentConversationId = null;\n      this.isLoading = false;\n      this.currentImage = null;\n      this.loadPromise = null;\n      this.currentRequestId = 0;\n      this.messageQueue = new MessageQueue();\n      this.container = null;\n      this.messageContainer = null;\n      this.inputField = null;\n      this.sendButton = null;\n      this.titleElement = null;\n      this.containerSelector = null;\n      this.messageContainerSelector = null;\n      this.inputSelector = null;\n      this.sendButtonSelector = null;\n      this.minimizeButtonSelector = null;\n      this._authChangeListener = null;\n      this.modelConfig = this.modelConfigAPI.getConfig();\n      this.DependencySystem = DependencySystem || undefined;\n      this.domReadinessService = domReadinessService;\n      this._uiAttached = false;\n      this.APP_CONFIG = APP_CONFIG;\n      this._appEventListenersAttached = false; // Flag to ensure app/auth listeners are attached once\n      this.browserService = browserService;    // Store browserService in the instance\n\n      // Store last rendered KB status key to avoid duplicate UI messages\n      this._lastKBStatusKey = null;\n    }\n\n\n    _setupAppEventListeners() {\n      if (this._appEventListenersAttached) return;\n\n      logger.debug(`[ChatManager] Setting up AppBus/AuthBus event listeners.`, { context: \"chatManager\" });\n      const appBus = this.DependencySystem?.modules?.get('AppBus');\n      const auth = this.DependencySystem?.modules?.get('auth');\n\n      if (appBus) {\n        this.eventHandlers.trackListener(appBus, 'currentProjectChanged',\n          safeHandler(this._handleAppCurrentProjectChanged.bind(this), \"_handleAppCurrentProjectChanged\"),\n          { context: 'chatManagerAppEvents', description: 'ChatManager_AppBus_CurrentProjectChanged' });\n        logger.info(`[ChatManager] Subscribed to AppBus \"currentProjectChanged\".`, { context: \"chatManager\" });\n      } else {\n        logger.warn(`[ChatManager] AppBus not available. Cannot subscribe to \"currentProjectChanged\".`, { context: \"chatManager\" });\n      }\n\n      if (auth?.AuthBus) {\n        this.eventHandlers.trackListener(auth.AuthBus, \"authStateChanged\",\n          safeHandler(this._handleGlobalAuthStateChanged.bind(this), \"_handleGlobalAuthStateChanged\"),\n          { context: 'chatManagerAppEvents', description: \"ChatManager_AuthBus_AuthStateChanged\" });\n        logger.info(`[ChatManager] Subscribed to AuthBus \"authStateChanged\".`, { context: \"chatManager\" });\n      } else {\n        logger.warn(`[ChatManager] AuthBus not available. Cannot subscribe to \"authStateChanged\".`, { context: \"chatManager\" });\n      }\n      this._appEventListenersAttached = true;\n    }\n\n\n    /**\n     * Initialize the chat manager with optional UI selectors or overrides.\n     */\n    async initialize(options = {}) {\n      const _initStart = clock.now();\n      logger.info(`[ChatManager][initialize] Starting initialization. Project ID: ${options.projectId}`, { options, currentInternalPid: this.projectId, context: \"chatManager.initialize\" });\n\n      await this.domReadinessService.documentReady();\n\n      await domReadinessService.dependenciesAndElements({\n        deps: ['app', 'domAPI', 'eventHandlers', 'AppBus'], // Added AppBus\n        context: 'ChatManager.init:core'\n      });\n\n      await domReadinessService.dependenciesAndElements({\n        deps: ['auth'], // Auth is needed for AuthBus listener\n        context: 'ChatManager.init:auth'\n      });\n      const auth = app?.DependencySystem?.modules?.get('auth') || null;\n\n      this._setupAppEventListeners(); // Setup global event listeners if not already\n\n      this.containerSelector = options.containerSelector || this.containerSelector;\n      this.messageContainerSelector = options.messageContainerSelector || this.messageContainerSelector;\n      this.inputSelector = options.inputSelector || this.inputSelector;\n      this.sendButtonSelector = options.sendButtonSelector || this.sendButtonSelector;\n      this.titleSelector = options.titleSelector || this.titleSelector;\n      this.minimizeButtonSelector = options.minimizeButtonSelector || this.minimizeButtonSelector;\n\n      try {\n        if (!auth || !this.app.state.isAuthenticated) { // Check appModule state directly\n          const msg = \"User not authenticated. Cannot initialize ChatManager.\";\n          logger.warn(`[ChatManager][initialize] Auth check failed: ${msg}`, { context: \"chatManager.initialize\" });\n          this.projectDetails?.disableChatUI?.(\"Not authenticated\");\n\n          // The global authStateChanged listener (_handleGlobalAuthStateChanged) should handle re-enabling if user logs in.\n          // The specific _authChangeListener for retrying init might be redundant if global listener is effective.\n          // For now, keeping it to see if it's needed for an initial load race condition.\n          if (!this._authChangeListener && auth?.AuthBus) {\n            this._authChangeListener = safeHandler(async (e) => {\n              logger.info(`[ChatManager][initialize] _authChangeListener triggered by authStateChanged. Authenticated: ${e.detail?.authenticated}`, { context: \"chatManager.initialize\" });\n              if (e.detail?.authenticated && (this.projectId || options.projectId)) { // Ensure projectId is available\n                if (this._authChangeListener && auth?.AuthBus?.removeEventListener) { // Use optional chaining\n                  auth.AuthBus.removeEventListener('authStateChanged', this._authChangeListener);\n                  logger.debug(`[ChatManager][initialize] Removed temporary _authChangeListener.`, { context: \"chatManager.initialize\" });\n                }\n                this._authChangeListener = null; // Clear the listener\n                // Re-attempt initialization with the project ID that was intended.\n                const projectIdForRetry = options.projectId || this.projectId;\n                logger.info(`[ChatManager][initialize] Re-attempting initialization after auth. Project ID: ${projectIdForRetry}`, { context: \"chatManager.initialize\" });\n                await this.initialize({ ...options, projectId: projectIdForRetry });\n              }\n            }, \"authChangeListenerForRetry\");\n\n            this.eventHandlers.trackListener(\n              auth.AuthBus,\n              'authStateChanged',\n              this._authChangeListener,\n              {\n                context: 'chatManagerAuthRetryListener',\n                description: 'Auth state change listener for chat initialization retry (specific to init failure)'\n              }\n            );\n            logger.debug(`[ChatManager][initialize] Temporary _authChangeListener attached for re-init on auth.`, { context: \"chatManager.initialize\" });\n          }\n          throw new Error(msg);\n        }\n\n        // Clear the temporary auth change listener if auth is now okay and it was previously set\n        if (this._authChangeListener && auth?.AuthBus) {\n          eventHandlers.untrackListener(auth.AuthBus, 'authStateChanged', this._authChangeListener);\n          logger.debug(`[ChatManager][initialize] Auth successful, removed temporary _authChangeListener.`, { context: \"chatManager.initialize\" });\n          this._authChangeListener = null;\n        }\n\n        const newProjectId = options.projectId;\n        logger.debug(`[ChatManager][initialize] Requested Project ID: ${newProjectId}, Current internal Project ID: ${this.projectId}`, { context: \"chatManager.initialize\" });\n\n        // If no new projectId is provided, and internal one exists, use that.\n        // This can happen if initialize is called to just refresh UI for current project.\n        const targetProjectId = this.isValidProjectId(newProjectId) ? newProjectId : this.projectId;\n\n        if (!this.isValidProjectId(targetProjectId)) {\n          const noProjectMsg = `No valid project ID for ChatManager. Provided: ${newProjectId}, Internal: ${this.projectId}`;\n          logger.error(`[ChatManager][initialize] ${noProjectMsg}`, { context: \"chatManager.initialize\" });\n          this.projectDetails?.disableChatUI?.(\"No project selected\");\n          throw new Error(noProjectMsg);\n        }\n\n        // Project Switch Logic\n        if (this._uiAttached && this.projectId && this.projectId !== targetProjectId) {\n          logger.info(`[ChatManager][initialize] Project changed from ${this.projectId} to ${targetProjectId}. Clearing old project data.`, { context: \"chatManager.initialize\" });\n          this._clearProjectSpecificData(); // Clear conversation list, current conversation, messages\n        }\n        this.projectId = targetProjectId; // Set the new project ID\n\n        // UI Setup (ensure elements are present and events are bound)\n        await this._setupUIElements(); // Resolves DOM elements based on selectors\n\n        // Update knowledge-base status indicator once UI is attached\n        await this._updateKBStatusIndicator();\n\n        // Ensure enhancements module is ready then attach its event handlers\n        _ensureChatUIEnhancements(this);\n        const chatUIEnh = DependencySystem.modules.get('chatUIEnhancements');\n        if (chatUIEnh?.attachEventHandlers) {\n          chatUIEnh.attachEventHandlers({\n            inputField       : this.inputField,\n            sendButton       : this.sendButton,\n            messageContainer : this.messageContainer,\n            onSend           : (txt) => this.sendMessage(txt)\n          });\n        } else {\n          logger.warn('[ChatManager] chatUIEnhancements module not ready – UI handlers deferred',\n                      { context: 'chatManager' });\n        }\n\n        // If already initialized for this same project, could be a UI refresh or re-bind.\n        if (this._uiAttached && this.projectId === targetProjectId) {\n          logger.info(`[ChatManager][initialize] Already initialized for project ${this.projectId}. Re-checking conversation history / UI state.`, { context: \"chatManager.initialize\" });\n          // Potentially reload current conversation if needed, or ensure UI is consistent.\n          // _loadConversationHistory will handle loading last/URL-specified convo or creating new one.\n          if (this.currentConversationId) {\n            await this.loadConversation(this.currentConversationId); // Refresh current conversation view\n          } else {\n            await this._loadConversationHistory(); // Load history or new convo for current project\n          }\n          logger.info(`[ChatManager][initialize] Re-initialization for same project ${this.projectId} complete.`, { context: \"chatManager.initialize\" });\n          return true;\n        }\n\n        // First time initialization for this project context (or after project switch)\n        logger.info(`[ChatManager][initialize] Initializing for project ${this.projectId}. Loading history.`, { context: \"chatManager.initialize\" });\n        await this._loadConversationHistory();\n\n\n        this.chatBus?.dispatchEvent(new CustomEvent('chatManagerReady', { detail: { projectId: this.projectId } }));\n        logger.info(`[ChatManager][initialize] Initialization successful for project ${this.projectId}. Duration: ${clock.now() - _initStart}ms`, { context: \"chatManager.initialize\" });\n        return true;\n\n      } catch (error) {\n        logger.error(`[ChatManager][initialize] Initialization failed for project ${options.projectId || this.projectId}.`, { error: error, context: \"chatManager.initialize\" });\n        const originalErrorMessage = this._extractErrorMessage(error);\n        // Specific error handling for KB missing\n        const chatUIEnh = DependencySystem.modules.get('chatUIEnhancements');\n        if (originalErrorMessage.toLowerCase().includes(\"project has no knowledge base\")) {\n          const specificMessage = \"Chat initialization failed: Project has no knowledge base. Please add one to enable chat.\";\n          chatUIEnh.appendMessage(\"system\", specificMessage);\n          this.projectDetails?.disableChatUI?.(specificMessage);\n        } else if (!originalErrorMessage.includes(\"User not authenticated\")) { // Don't show generic if auth was the issue\n          chatUIEnh.appendMessage(\"system\", `Chat error: ${originalErrorMessage}`);\n        }\n        return false;\n      }\n    }\n\n    _clearProjectSpecificData() {\n      logger.info(`[ChatManager][_clearProjectSpecificData] Clearing data for project ${this.projectId}.`, { context: \"chatManager\" });\n      this.currentConversationId = null;\n      this.loadPromise = null; // Cancel any ongoing load for the old project\n      this.isLoading = false;\n      const chatUIEnh = this.DependencySystem.modules.get('chatUIEnhancements');\n      if (this.messageContainer) {\n        chatUIEnh.setMessageContainer(this.messageContainer);\n        chatUIEnh.hideTypingIndicator();\n        this.domAPI.replaceChildren(this.messageContainer);\n      }\n      this._clearConversationList && this._clearConversationList(); // Assumes this method exists or is added via UI utils\n      if (this.titleElement) this.titleElement.textContent = \"Chat\"; // Reset title\n      // this.projectId itself will be updated by the calling context (e.g., _handleAppCurrentProjectChanged or initialize)\n    }\n\n    _handleAppCurrentProjectChanged(event) {\n      // Robustly resolve the new/old project IDs – the event may contain\n      // either a full `project` object or just a bare `projectId` string\n      // depending on where `app.setCurrentProject()` was called.\n      const eventDetail = event?.detail || {};\n      const newProjectObj = eventDetail.project || null;\n      const newProjectId = newProjectObj?.id || eventDetail.projectId || null;\n\n      const oldProjectId = this.projectId;\n\n      logger.info(\n        `[ChatManager][_handleAppCurrentProjectChanged] Received. New: ${newProjectId}, Old: ${oldProjectId}`,\n        { detail: event.detail, context: \"chatManager\" }\n      );\n\n      if (newProjectId && newProjectId !== oldProjectId) {\n        // If we only have an ID, wrap it into a minimal object so downstream\n        // logic that previously expected `project.id` keeps working.\n        // Ensure we have a minimal project-like object in case future logic\n        // expects `project.id`. Not used at the moment but kept for clarity.\n\n        logger.info(`[ChatManager][_handleAppCurrentProjectChanged] Project changed to ${newProjectId}. Re-initializing chat.`, { context: \"chatManager\" });\n        // Cleanup old project listeners and state before re-initializing\n        this.eventHandlers.cleanupListeners?.({ context: 'chatManager:UI' }); // Clean UI specific listeners for the old project\n        this._clearProjectSpecificData(); // Clear data related to oldProjectId\n\n        // Re-initialize for the new project. Pass along current UI selectors.\n        this.initialize({\n          projectId: newProjectId,\n          containerSelector: this.containerSelector,\n          messageContainerSelector: this.messageContainerSelector,\n          inputSelector: this.inputSelector,\n          sendButtonSelector: this.sendButtonSelector,\n          titleSelector: this.titleSelector,\n          minimizeButtonSelector: this.minimizeButtonSelector\n        }).catch(err => logger.error(`[ChatManager][_handleAppCurrentProjectChanged] Error during re-initialization for new project ${newProjectId}`, { error: err, context: \"chatManager\" }));\n      } else if (!newProjectId && oldProjectId) {\n        logger.info(`[ChatManager][_handleAppCurrentProjectChanged] Project context cleared. Cleaning up chat for project ${oldProjectId}.`, { context: \"chatManager\" });\n        this._clearProjectSpecificData();\n        this.projectId = null;\n        this.projectDetails?.disableChatUI?.(\"No project selected\");\n        if (this.inputField) this.inputField.disabled = true;\n        if (this.sendButton) this.sendButton.disabled = true;\n      }\n    }\n\n    _handleGlobalAuthStateChanged(event) {\n      const isAuthenticated = event?.detail?.authenticated;\n      logger.info(`[ChatManager][_handleGlobalAuthStateChanged] Received. Authenticated: ${isAuthenticated}`, { detail: event.detail, context: \"chatManager\" });\n\n      if (!isAuthenticated) {\n        logger.info(`[ChatManager][_handleGlobalAuthStateChanged] User logged out. Cleaning up chat.`, { context: \"chatManager\" });\n        this.cleanup(); // Full cleanup on logout\n        this.projectDetails?.disableChatUI?.(\"Logged out\");\n        if (this.inputField) this.inputField.disabled = true;\n        if (this.sendButton) this.sendButton.disabled = true;\n      } else {\n        // User logged in. If a projectId is already set (e.g. from URL or previous state),\n        // try to re-initialize. This might also be handled by a subsequent currentProjectChanged event.\n        logger.info(`[ChatManager][_handleGlobalAuthStateChanged] User authenticated.`, { currentProjectId: this.projectId, context: \"chatManager\" });\n        if (this.projectId && !this._uiAttached) { // If a project context exists but chat not initialized\n          logger.info(`[ChatManager][_handleGlobalAuthStateChanged] Attempting to re-initialize chat for project ${this.projectId} after auth.`, { context: \"chatManager\" });\n          this.initialize({ projectId: this.projectId }).catch(err => logger.error(`[ChatManager][_handleGlobalAuthStateChanged] Error re-initializing post-auth`, { error: err, context: \"chatManager\" }));\n        } else if (this.projectId && this._uiAttached) {\n          if (this.inputField) this.inputField.disabled = false;\n          if (this.sendButton) this.sendButton.disabled = false;\n        }\n      }\n    }\n\n    /**\n     * Force synchronization of project ID from canonical appModule.state (appState.js)\n     * @returns {string|null} The resolved project ID or null if none found\n     */\n    forceProjectIdSync() {\n      logger.debug(`[ChatManager][forceProjectIdSync] Current project ID: ${this.projectId}`, { context: \"chatManager\" });\n\n      // Get project ID from canonical appModule.state (appState.js)\n      const appModule = this.DependencySystem?.modules?.get('appModule');\n      const appProjectId = appModule?.state?.currentProjectId;\n\n      if (this.isValidProjectId(appProjectId)) {\n        logger.info(`[ChatManager][forceProjectIdSync] Synced project ID from appModule.state: ${appProjectId}`, {\n          context: \"chatManager\",\n          oldProjectId: this.projectId,\n          newProjectId: appProjectId\n        });\n        this.projectId = appProjectId;\n        return appProjectId;\n      }\n\n      // Try to get from URL as fallback\n      const navigationService = this.DependencySystem?.modules?.get('navigationService');\n      const urlProjectId = navigationService?.getUrlParams?.()?.project;\n\n      if (this.isValidProjectId(urlProjectId)) {\n        logger.info(`[ChatManager][forceProjectIdSync] Synced project ID from URL: ${urlProjectId}`, {\n          context: \"chatManager\",\n          oldProjectId: this.projectId,\n          newProjectId: urlProjectId\n        });\n        this.projectId = urlProjectId;\n        return urlProjectId;\n      }\n\n      logger.warn(`[ChatManager][forceProjectIdSync] Could not resolve valid project ID`, {\n        context: \"chatManager\",\n        currentProjectId: this.projectId,\n        appProjectId,\n        urlProjectId\n      });\n\n      return null;\n    }\n\n    /**\n     * Called by coreInit once the definitive ProjectDetailsComponent\n     * has been created.  Replaces the placeholder reference.\n     */\n    setProjectDetailsComponent(component) {\n      if (component) {\n        this.projectDetails = component;\n      }\n    }\n\n    cleanup() {\n      logger.info(`[ChatManager][cleanup] Cleaning up ChatManager for project ${this.projectId}.`, { context: \"chatManager\" });\n      this.eventHandlers.cleanupListeners?.({ context: \"chatManager:UI\" });\n      this.eventHandlers.cleanupListeners?.({ context: \"chatManager\" }); // General listeners for this manager instance\n      this.eventHandlers.cleanupListeners?.({ context: 'chatManagerAuthRetryListener' });\n      // Enforce full context cleanup as per codebase event pattern rule:\n      this.eventHandlers.cleanupListeners?.({ context: \"chatManagerAppEvents\" }); // Clean global app/auth listeners\n\n      // Rule 4: Ensure static checker sees a direct call inside the method.\n      this.eventHandlers.cleanupListeners?.({ context: 'chatManager' });\n\n      const chatUIEnh = this.DependencySystem?.modules?.get?.('chatUIEnhancements');\n      chatUIEnh?.cleanup?.(); // Assuming this cleans up its own tracked listeners\n\n      this._clearProjectSpecificData();\n      this.projectId = null;\n      // this.isGlobalMode = false; // If isGlobalMode is a relevant state\n      this._uiAttached = false; // Allow UI to re-attach on next init\n\n      // Clear the specific auth listener if it's still active\n      const auth = this.DependencySystem?.modules?.get('auth');\n      if (this._authChangeListener && auth?.AuthBus?.removeEventListener) {\n        auth.AuthBus.removeEventListener('authStateChanged', this._authChangeListener);\n        logger.debug(`[ChatManager][cleanup] Removed temporary _authChangeListener.`, { context: \"chatManager\" });\n        this._authChangeListener = null;\n      }\n      logger.info(`[ChatManager][cleanup] Cleanup finished.`, { context: \"chatManager\" });\n    }\n\n    async loadConversation(conversationId) {\n      if (!conversationId) {\n        logger.warn(\"[ChatManager][loadConversation] No conversation ID provided\", { context: \"chatManager\" });\n        return false;\n      }\n\n      {\n        // Centralized canonical authentication check\n        const appModule = this.DependencySystem?.modules?.get('appModule');\n        if (!appModule?.state?.isAuthenticated) {\n          logger.warn(\"[ChatManager][loadConversation] User not authenticated\", { context: \"chatManager\" });\n          return false;\n        }\n      }\n\n      // ENHANCED: Try to get project ID from multiple sources if not set\n      if (!this.isValidProjectId(this.projectId)) {\n        logger.warn(`[ChatManager][loadConversation] Invalid project ID (${this.projectId}), attempting to resolve from app state`, {\n          context: \"chatManager\",\n          conversationId,\n          currentProjectId: this.projectId\n        });\n\n        // Try to get project ID from canonical appModule.state (appState.js)\n        const appModule = this.DependencySystem?.modules?.get('appModule');\n        const appProjectId = appModule?.state?.currentProjectId;\n\n        if (this.isValidProjectId(appProjectId)) {\n          logger.info(`[ChatManager][loadConversation] Found valid project ID from app state: ${appProjectId}`, {\n            context: \"chatManager\",\n            conversationId,\n            resolvedProjectId: appProjectId\n          });\n          this.projectId = appProjectId;\n        } else {\n          // Try to get from URL as last resort\n          const navigationService = this.DependencySystem?.modules?.get('navigationService');\n          const urlProjectId = navigationService?.getUrlParams?.()?.project;\n\n          if (this.isValidProjectId(urlProjectId)) {\n            logger.info(`[ChatManager][loadConversation] Found valid project ID from URL: ${urlProjectId}`, {\n              context: \"chatManager\",\n              conversationId,\n              resolvedProjectId: urlProjectId\n            });\n            this.projectId = urlProjectId;\n          } else {\n            const errorMsg = `Invalid or missing project ID (${this.projectId}). Cannot load conversation. App project: ${appProjectId}, URL project: ${urlProjectId}`;\n            logger.error(\"[ChatManager][loading conversation]\" + errorMsg, new Error(errorMsg), {\n              context: \"chatManager\",\n              conversationId,\n              appProjectId,\n              urlProjectId\n            });\n            const chatUIEnh = this.DependencySystem.modules.get('chatUIEnhancements');\n            chatUIEnh.appendMessage(\"system\", \"Cannot load conversation: invalid/missing project ID.\");\n            return false;\n          }\n        }\n      }\n\n      // Update the current conversation ID in token stats manager\n      const tokenStatsManager = this.DependencySystem?.modules?.get('tokenStatsManager');\n      if (tokenStatsManager?.fetchConversationTokenStats) {\n        tokenStatsManager.fetchConversationTokenStats(conversationId);\n      }\n\n      const requestId = ++this.currentRequestId;\n      if (this.loadPromise) {\n        const result = await this.loadPromise;\n        return requestId === this.currentRequestId ? result : false;\n      }\n\n      this.isLoading = true;\n      const chatUIEnh = this.DependencySystem.modules.get('chatUIEnhancements');\n      chatUIEnh.showTypingIndicator();\n\n      this.loadPromise = (async () => {\n        try {\n          if (this.messageContainer) {\n            chatUIEnh.setMessageContainer(this.messageContainer);\n            chatUIEnh.hideTypingIndicator();\n            this.domAPI.replaceChildren(this.messageContainer);\n          }\n\n          const [conversationResponse, messagesResponse] = await Promise.all([\n            this._api(apiEndpoints.CONVERSATION(this.projectId, conversationId), { method: \"GET\" }),\n            this._api(apiEndpoints.MESSAGES(this.projectId, conversationId), { method: \"GET\" })\n          ]);\n\n          const conversation =\n            conversationResponse?.data?.conversation\n            ?? conversationResponse?.data\n            ?? conversationResponse?.conversation\n            ?? conversationResponse;\n\n          if (!conversation?.id) {\n            throw new Error('Failed to fetch valid conversation details.');\n          }\n\n          const messages = messagesResponse.data?.messages || [];\n\n          this.currentConversationId = conversationId;\n          if (this.titleElement) {\n            this.titleElement.textContent = conversation.title || \"New Conversation\";\n          }\n          if (this.messageContainer) {\n            chatUIEnh.setMessageContainer(this.messageContainer);\n            chatUIEnh.hideTypingIndicator();\n            this.domAPI.replaceChildren(this.messageContainer);\n            if (!messages?.length) {\n              chatUIEnh.appendMessage(\"system\", \"No messages yet\");\n            } else {\n              messages.forEach((msg) => {\n                chatUIEnh.appendMessage(\n                  msg.role,\n                  msg.content,\n                  msg.id,\n                  msg.thinking,\n                  msg.redacted_thinking\n                );\n              });\n            }\n          }\n          this.browserService.setSearchParam('chatId', conversationId);\n\n          // Update token stats for loaded conversation\n          const tokenStatsManager = this.DependencySystem?.modules?.get('tokenStatsManager');\n          if (tokenStatsManager?.fetchConversationTokenStats) {\n            tokenStatsManager.fetchConversationTokenStats(conversationId);\n          }\n\n          return true;\n        } catch (error) {\n          logger.error(\"[ChatManager][loading conversation]\", error, { context: \"chatManager\" });\n          return false;\n        } finally {\n          this.isLoading = false;\n          chatUIEnh.hideTypingIndicator();\n          this.loadPromise = null;\n        }\n      })();\n\n      return this.loadPromise;\n    }\n\n    async createNewConversation(overrideProjectId) {\n      if (overrideProjectId) {\n        this.projectId = this.isValidProjectId(overrideProjectId) ? overrideProjectId : this.projectId;\n      }\n\n      {\n        // Centralized canonical authentication check\n        const appModule = this.DependencySystem?.modules?.get('appModule');\n        if (!appModule?.state?.isAuthenticated) {\n          throw new Error(\"Not authenticated\");\n        }\n      }\n      if (!this.isValidProjectId(this.projectId)) {\n        const errorMsg = `Invalid or missing project ID (${this.projectId}). Cannot create new conversation.`;\n        logger.error(\"[ChatManager][creating new conversation]\" + errorMsg, new Error(errorMsg), { context: \"chatManager\" });\n        this._showErrorMessage(errorMsg);\n        this.projectDetails?.disableChatUI?.(\"No valid project\");\n        throw new Error(errorMsg);\n      }\n\n      this._clearMessages();\n\n      try {\n        const cfg = this.modelConfigAPI.getConfig();\n        logger.info(`[ChatManager][createNewConversation] Using model config for new conversation. Model Name: ${cfg.modelName}`, { context: \"chatManager\", modelConfig: cfg });\n        const currentUser = this.app?.state?.currentUser || {};\n\n        const payload = {\n          title: `New Chat ${(new DateCtor()).toLocaleString()}`,\n          model_id: cfg.modelName || CHAT_CONFIG.DEFAULT_MODEL\n        };\n        if (currentUser.id) payload.user_id = currentUser.id;\n\n        const convoEndpoint = typeof apiEndpoints.CONVERSATIONS === 'function'\n          ? apiEndpoints.CONVERSATIONS(this.projectId)\n          : String(apiEndpoints.CONVERSATIONS).replace('{id}', this.projectId);\n\n        const response = await this._api(\n          convoEndpoint,\n          { method: \"POST\", body: payload, returnFullResponse: true }\n        );\n\n        // ------------------------------------------------------------------\n        // Robust response-shape normalisation\n        // ------------------------------------------------------------------\n        const headers = response?.headers || {};\n        let conversation =\n          response?.data?.conversation      // { data:{conversation:{…}} }\n          ?? response?.data                 // { data:{…} }\n          ?? response?.conversation         // { conversation:{…} }\n          ?? response                       // { …direct object… }\n          ?? {};\n\n        // If the object still wraps the actual convo in `conversation` key, unwrap it\n        if (conversation?.conversation && typeof conversation.conversation === 'object') {\n          conversation = conversation.conversation;\n        }\n\n        let convId =\n          conversation?.id ??\n          conversation?.conversation_id ??\n          conversation?.uuid ??\n          conversation?.conversationId ??\n          null;\n\n        // NEW ─ look at Location header if we still don’t have it\n        if (!convId && headers.location) {\n          const loc = headers.location;               // e.g. “…/conversations/<uuid>\"\n          convId = loc.split('/').filter(Boolean).pop();\n        }\n\n        // Normalise & fallback (old GET logic stays the same)\n        if (!convId) {\n          // fallback: try GET as before\n          const getResp = await this._api(\n            convoEndpoint,\n            { method: \"GET\", params: { limit: 1, sort: \"desc\" } }\n          );\n          const conversations =\n            getResp?.conversations                     // { conversations: [...] }\n            ?? getResp?.data?.conversations            // { data: { conversations: [...] } }\n            ?? (Array.isArray(getResp?.data)           // { data: [...] }\n              ? getResp.data\n              : Array.isArray(getResp)             // plain array response\n                ? getResp\n                : []);\n\n          if (conversations.length) {\n            const latest = conversations[0];\n            convId =\n              latest?.id ??\n              latest?.conversation_id ??\n              latest?.uuid ??\n              latest?.conversationId ??\n              null;\n\n            if (!conversation) conversation = latest;\n          }\n        }\n\n        if (!('id' in conversation) && convId) conversation = { ...(conversation || {}), id: convId };\n\n        this.currentConversationId = convId;\n        if (this.titleElement) {\n          this.titleElement.textContent = conversation.title || \"New Conversation\";\n        }\n        this.browserService.setSearchParam('chatId', convId);\n\n        const event = new CustomEvent('chat:conversationCreated', {\n          detail: {\n            conversationId: conversation.id,\n            projectId: this.projectId,\n            title: conversation.title\n          }\n        });\n        this.chatBus.dispatchEvent(event);\n\n        return conversation;\n      } catch (error) {\n        logger.error(\"[ChatManager][creating new conversation]\", error, { context: \"chatManager\" });\n        const errorMessage = this._extractErrorMessage(error);\n\n        if (errorMessage.includes(\"project has no knowledge base\".toLowerCase())) {\n          /* KB will be auto-created and ChatManager will be retried by\n             ProjectManager ⇒ do NOT disable the chat UI now. */\n          const msg = \"Project has no knowledge base. Creating one…\";\n          this._showErrorMessage(msg);\n        } else {\n          this._showErrorMessage(\"Failed to create conversation: \" + errorMessage);\n          this.projectDetails?.disableChatUI?.(\"Chat error: \" + errorMessage);\n        }\n        throw error;\n      }\n    }\n\n    async sendMessage(messageText) {\n      if (!messageText?.trim()) {\n        return;\n      }\n\n      return this.messageQueue.add(async (abortSignal) => {\n        {\n          // Centralized canonical authentication check\n          const appModule = this.DependencySystem?.modules?.get('appModule');\n          if (!appModule?.state?.isAuthenticated) {\n            return;\n          }\n        }\n        if (!this.isValidProjectId(this.projectId)) {\n          const errorMsg = `No valid project ID (${this.projectId}). Select a project before sending messages.`;\n          logger.error(\"[ChatManager][sending message]\" + errorMsg, new Error(errorMsg), { context: \"chatManager\" });\n          const chatUIEnh = this.DependencySystem.modules.get('chatUIEnhancements');\n          chatUIEnh.appendMessage(\"system\", errorMsg);\n          this.projectDetails?.disableChatUI?.(\"No valid project\");\n          return;\n        }\n        if (!this.currentConversationId) {\n          try {\n            await this.createNewConversation();\n            if (!this.currentConversationId) {\n              return;\n            }\n          } catch (error) {\n            return;\n          }\n        }\n\n        const chatUIEnh = this.DependencySystem.modules.get('chatUIEnhancements');\n        chatUIEnh.appendMessage(\"user\", messageText);\n        if (this.inputField) {\n          this.inputField.value = \"\";\n          this.inputField.focus();\n        }\n        chatUIEnh.showTypingIndicator();\n\n        try {\n          const response = await this._sendMessageToAPI(messageText, abortSignal);\n          this._processAssistantResponse(response);\n\n          // Update token stats for the conversation after sending a message\n          const tokenStatsManager = this.DependencySystem?.modules?.get('tokenStatsManager');\n          if (tokenStatsManager?.fetchConversationTokenStats && this.currentConversationId) {\n            tokenStatsManager.fetchConversationTokenStats(this.currentConversationId);\n          }\n\n          return response.data;\n        } catch (error) {\n          logger.error(\"[ChatManager][sending message]\", error, { context: \"chatManager\" });\n          chatUIEnh.hideTypingIndicator();\n\n          const msg = this._extractErrorMessage(error);\n          chatUIEnh.appendMessage(\"system\", msg);\n\n          /* Only disable chat UI for unrecoverable conditions */\n          const critical =\n            msg.toLowerCase().includes(\"knowledge base\") ||\n            String(error?.status).startsWith(\"4\");          // auth / permission / missing KB\n\n          if (critical) {\n            this.projectDetails?.disableChatUI?.(\"Chat error: \" + msg);\n          }\n        }\n      });\n    }\n\n    async _sendMessageToAPI(messageText, abortSignal) {\n      const cfg = this.modelConfigAPI.getConfig();\n      const modelId = cfg.modelName || CHAT_CONFIG.DEFAULT_MODEL;   // required by API\n\n      // ---- body expected by backend ----\n      const userMsg = {\n        raw_text: messageText,\n        role: \"user\"\n      };\n\n      const payload = {\n        new_msg: userMsg,                   // dict → OK\n        vision_detail: cfg.visionDetail || \"auto\"\n      };\n\n      if (cfg.reasoningSummary) payload.reasoning_summary = cfg.reasoningSummary;\n      if (this.currentImage) {\n        this._validateImageSize();\n        payload.image_data = this.currentImage;\n        this.currentImage = null;\n      }\n      if (cfg.extendedThinking) {\n        payload.thinking = { type: \"enabled\", budget_tokens: cfg.thinkingBudget };\n      }\n      // Attach enable_web_search if present in config (frontend)\n      if (cfg.enable_web_search !== undefined) {\n        payload.enable_web_search = !!cfg.enable_web_search;\n      }\n\n      // Send model_id as query-parameter, body as JSON\n      return this._api(\n        apiEndpoints.MESSAGES(this.projectId, this.currentConversationId),\n        {\n          method: \"POST\",\n          params: { model_id: modelId },   // <-- added\n          body: payload,\n          signal: abortSignal\n        }\n      );\n    }\n\n    _validateImageSize() {\n      if (\n        typeof this.currentImage === \"string\" &&\n        /^data:image\\/(png|jpeg|webp|gif);base64,/i.test(this.currentImage)\n      ) {\n        const commaIdx = this.currentImage.indexOf(',');\n        const b64 = commaIdx !== -1 ? this.currentImage.slice(commaIdx + 1) : this.currentImage;\n        const sizeBytes = Math.floor((b64.length * 3) / 4);\n        if (sizeBytes > CHAT_CONFIG.MAX_IMAGE_SIZE) {\n          const errorMsg = `Image is too large (${(sizeBytes / (1024 * 1024)).toFixed(1)}MB). Max allowed: ${CHAT_CONFIG.MAX_IMAGE_SIZE / (1024 * 1024)}MB.`;\n          throw new Error(errorMsg);\n        }\n      }\n    }\n\n    _processAssistantResponse(response) {\n      const chatUIEnh = this.DependencySystem.modules.get('chatUIEnhancements');\n      chatUIEnh.hideTypingIndicator();\n      if (response.data?.assistant_message) {\n        const { assistant_message, thinking, redacted_thinking } = response.data;\n        chatUIEnh.appendMessage(\n          \"assistant\",\n          assistant_message.content,\n          null,\n          thinking,\n          redacted_thinking\n        );\n\n        // --- BEGIN: Token stats + truncation UI wiring ---\n        const uiStats = assistant_message.token_stats || response.data.token_stats || {};\n        const trunc = assistant_message.truncation_details || response.data.truncation_details || {};\n\n        // Set token counts if UI elements exist\n        if (this.domAPI.getElementById) {\n          if (uiStats) {\n            if (this.domAPI.getElementById('tokenStatInput')) this.domAPI.getElementById('tokenStatInput').textContent = uiStats.prompt_tokens_for_last_exchange || uiStats.prompt_tokens || \"0\";\n            if (this.domAPI.getElementById('tokenStatCompletion')) this.domAPI.getElementById('tokenStatCompletion').textContent = uiStats.completion_tokens_for_last_exchange || \"0\";\n            if (this.domAPI.getElementById('tokenStatContext')) this.domAPI.getElementById('tokenStatContext').textContent = uiStats.total_context_tokens_in_conversation || uiStats.current_tokens || \"0\";\n            if (this.domAPI.getElementById('tokenStatContextMax')) this.domAPI.getElementById('tokenStatContextMax').textContent = uiStats.max_context_tokens_for_model || \"0\";\n            if (this.domAPI.getElementById('tokenStatContextMessages')) this.domAPI.getElementById('tokenStatContextMessages').textContent = uiStats.message_count_in_context || \"0\";\n          }\n\n          // Handle UI truncation warning\n          const warningEl = this.domAPI.getElementById('truncationWarning');\n          if (warningEl) {\n            if (trunc && trunc.is_truncated) {\n              warningEl.textContent = `Context trimmed: ${trunc.messages_removed_count || 0} older msgs removed.`;\n              this.domAPI.removeClass(warningEl, 'hidden');\n            } else {\n              this.domAPI.addClass(warningEl, 'hidden');\n              warningEl.textContent = \"\";\n            }\n          }\n        }\n        // --- END: Token stats + truncation UI wiring ---\n\n      } else if (response.data?.assistant_error) {\n        const errMsg = this._extractErrorMessage(response.data.assistant_error);\n        throw new Error(errMsg);\n      }\n    }\n\n    async deleteConversation() {\n      if (!this.currentConversationId) {\n        return false;\n      }\n      {\n        // Centralized canonical authentication check\n        const appModule = this.DependencySystem?.modules?.get('appModule');\n        if (!appModule?.state?.isAuthenticated) {\n          return false;\n        }\n      }\n      if (!this.isValidProjectId(this.projectId)) {\n        const errorMsg = `Invalid or missing project ID (${this.projectId}). Cannot delete conversation.`;\n        logger.error(\"[ChatManager][deleting conversation]\" + errorMsg, new Error(errorMsg), { context: \"chatManager\" });\n        this._showErrorMessage(\"Cannot delete conversation: invalid/missing project ID.\");\n        return false;\n      }\n\n      // Confirm via DI modal from chatUIEnhancements\n      try {\n        const chatUIEnh = this.DependencySystem?.modules?.get?.('chatUIEnhancements');\n        let confirmDelete = true;\n        if (chatUIEnh?.confirmDeleteConversationModal) {\n          // Use titleElement for title if present\n          const convoTitle = this.titleElement?.textContent || undefined;\n          confirmDelete = await chatUIEnh.confirmDeleteConversationModal(convoTitle);\n        }\n        if (!confirmDelete) return false;\n\n        await this._api(\n          apiEndpoints.CONVERSATION(this.projectId, this.currentConversationId),\n          { method: \"DELETE\" }\n        );\n        this.currentConversationId = null;\n        this._clearMessages();\n        this.browserService.removeSearchParam('chatId');\n        return true;\n      } catch (error) {\n        logger.error(\"[ChatManager][deleting conversation]\", error, { context: \"chatManager\" });\n        return false;\n      }\n    }\n\n    setImage(base64Image) {\n      this.currentImage = base64Image;\n    }\n\n    updateModelConfig(config) {\n      logger.info(\"[ChatManager][updateModelConfig] Received config to update:\", config, { context: \"chatManager\" });\n      this.modelConfigAPI.updateConfig(config, { skipNotify: true });\n      this.modelConfig = this.modelConfigAPI.getConfig();\n      logger.info(`[ChatManager][updateModelConfig] Model config updated in chatManager. New modelName: ${this.modelConfig.modelName}`, { context: \"chatManager\", newConfig: this.modelConfig });\n    }\n\n    async _loadConversationHistory() {\n      const chatUIEnh = this.DependencySystem.modules.get('chatUIEnhancements');\n      if (!this.projectId) {\n        chatUIEnh.appendMessage(\"system\", \"Please select a project to start chatting.\");\n        return;\n      }\n\n      const urlParams = new URLSearchParams(this.navAPI.getSearch());\n      const urlChatId = urlParams.get('chatId');\n\n      if (urlChatId) {\n        const loadedSuccessfully = await this.loadConversation(urlChatId);\n        if (loadedSuccessfully) {\n          return;\n        }\n          this.browserService.removeSearchParam('chatId');\n      }\n\n      try {\n        const responseData = await this._api(apiEndpoints.CONVERSATIONS(this.projectId), { method: 'GET', params: { limit: 1, sort: 'desc' } });\n        const conversations = responseData?.conversations || (Array.isArray(responseData) ? responseData : []);\n\n        if (conversations && conversations.length > 0) {\n          this.currentConversationId = conversations[0].id;\n          if (this.titleElement) this.titleElement.textContent = conversations[0].title || \"Conversation\";\n          await this._loadMessages(this.currentConversationId);\n          this.browserService.setSearchParam('chatId', this.currentConversationId);\n        } else {\n          await this.createNewConversation();\n        }\n      } catch (error) {\n        logger.error(\"[ChatManager][_loadConversationHistory]\", error, { context: \"chatManager\" });\n        await this.createNewConversation();\n      }\n    }\n\n    async _loadMessages(conversationId) {\n      const chatUIEnh = this.DependencySystem.modules.get('chatUIEnhancements');\n      if (!conversationId) {\n        return;\n      }\n      if (!this.messageContainer) {\n        return;\n      }\n      chatUIEnh.showTypingIndicator();\n\n      try {\n        const response = await this._api(apiEndpoints.MESSAGES(this.projectId, conversationId), { method: 'GET' });\n        const messages = response?.messages || response?.data?.messages || response || [];\n\n        this._renderMessages(messages);\n        if (this.messageContainer) {\n          this.messageContainer.scrollTop = this.messageContainer.scrollHeight;\n        }\n      } catch (error) {\n        logger.error(\"[ChatManager][_loadMessages]\", error, { context: \"chatManager\" });\n        this._showErrorMessage('Failed to load messages. Please try again.');\n      } finally {\n        chatUIEnh.hideTypingIndicator();\n      }\n    }\n\n\n\n\n    _showErrorMessage(message) {\n      if (!this.messageContainer) {\n        return;\n      }\n      const errorEl = this.domAPI.createElement(\"div\");\n      errorEl.className = \"error-message\";\n      this.domAPI.setInnerHTML(errorEl, `\n            <div class=\"error-icon\">\n              <svg viewBox=\"0 0 24 24\">\n                  <path d=\"M12 2C6.48 2 2\n                  6.48 2 12s4.48 10 10 10 10-4.48\n                  10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"></path>\n              </svg>\n            </div>\n            <div class=\"error-content\">\n              <h4>Error</h4>\n              <p>${this.DOMPurify.sanitize(message)}</p>\n            </div>\n      `);\n      this.domAPI.appendChild(this.messageContainer, errorEl);\n      this.messageContainer.scrollTop = this.messageContainer.scrollHeight;\n    }\n\n    _clearMessages() {\n      if (this.messageContainer) {\n        this.domAPI.replaceChildren(this.messageContainer);\n      }\n    }\n\n    _extractErrorMessage(err) {\n      if (typeof err?.data === 'string') return err.data;\n      if (typeof err?.response?.data === 'string') return err.response.data;\n      if (err?.data?.message) return String(err.data.message);\n      if (err?.response?.data?.message) return String(err.response.data.message);\n      if (err?.data?.detail) return String(err.data.detail);\n      if (err?.response?.data?.detail) return String(err.response.data.detail);\n      if (err?.detail) return String(err.detail);\n      if (!err) return \"Unknown error occurred\";\n      if (typeof err === \"string\") return err;\n      if (err.message) return err.message;\n      try {\n        return JSON.stringify(err);\n      } catch (jsonErr) {\n        logger.error(\"[ChatManager][_extractErrorMessage]\", jsonErr, { context: 'chatManager' });\n        return \"Unknown error object\";\n      }\n    }\n\n    _handleError(context, error) {\n      // This method is intentionally left empty but we keep it for external compatibility.\n      // Now all errors are logged via logger.error(...) in catch blocks.\n    }\n\n    _renderMessages(messages) {\n      const chatUIEnh = this.DependencySystem.modules.get('chatUIEnhancements');\n      if (!messages || !Array.isArray(messages) || !this.messageContainer) {\n        return;\n      }\n\n      this._clearMessages();\n      messages.forEach(message => {\n        chatUIEnh.appendMessage(\n          message.role,\n          message.content,\n          message.id,\n          message.thinking,\n          message.redacted_thinking\n        );\n      });\n\n      if (this.messageContainer) {\n        this.messageContainer.scrollTop = this.messageContainer.scrollHeight;\n      }\n    }\n\n    async _setupUIElements() {\n      const requiredSelectors = [\n        this.messageContainerSelector,\n        this.inputSelector,\n        this.sendButtonSelector\n      ];\n      if (this.containerSelector) requiredSelectors.unshift(this.containerSelector);\n\n      await domReadinessService.elementsReady(requiredSelectors, {\n        timeout : this.APP_CONFIG?.TIMEOUTS?.CHAT_UI_READY ?? 8000,\n        context : 'chatManager::_setupUIElements',\n        observeMutations : true            // <-- allow waiting for template HTML that is injected later\n      });\n\n      this.container = this.containerSelector\n        ? this.domAPI.querySelector(this.containerSelector)\n        : null;\n\n      // Fallback: if not found, use the parent of the message container\n      if (!this.container) {\n        const msgEl = this.domAPI.querySelector(this.messageContainerSelector);\n        this.container =\n          msgEl?.closest?.('#chatUIContainer')\n          || msgEl?.parentNode\n          || null;\n      }\n\n      this.messageContainer = this.domAPI.querySelector(this.messageContainerSelector);\n      this.inputField = this.domAPI.querySelector(this.inputSelector);\n      this.sendButton = this.domAPI.querySelector(this.sendButtonSelector);\n      this.titleElement = this.titleSelector\n        ? this.domAPI.querySelector(this.titleSelector)\n        : null;\n      this.minimizeButton = this.minimizeButtonSelector\n        ? this.domAPI.querySelector(this.minimizeButtonSelector)\n        : null;\n\n      if (!this.messageContainer || !this.inputField || !this.sendButton) {\n        throw new Error(\"[ChatManager] Chat UI elements not found. Check selectors/template.\");\n      }\n      if (!this.container) {\n        // Log but do not abort – not critical for functionality\n        logger.warn(\"[ChatManager] Chat container element not found – continuing without it\",\n                    { context: \"chatManager\" });\n      }\n\n      this.domAPI.removeClass(this.container, \"hidden\");\n\n      this._uiAttached = true;   // UI ready\n\n      return true;\n    }\n\n    /**\n     * Refresh the visual KB status indicator and (optionally) append a system\n     * message to the chat when the KB is not available.  Runs asynchronously\n     * and suppresses all errors so that chat functionality never breaks.\n     */\n    async _updateKBStatusIndicator() {\n      try {\n        if (!this.DependencySystem?.modules?.has('kbReadinessService')) return;\n        if (!this.projectId) return;\n\n        const kbReadinessService = this.DependencySystem.modules.get('kbReadinessService');\n        if (typeof kbReadinessService?.checkProjectReadiness !== 'function') return;\n\n        const status = await kbReadinessService.checkProjectReadiness(this.projectId);\n\n        // Prepare unique key so we only notify on change\n        const statusKey = status?.available ? 'available' : `unavailable:${status?.reason}`;\n        if (statusKey === this._lastKBStatusKey) return; // no change since last render\n        this._lastKBStatusKey = statusKey;\n\n        const indicator = this.domAPI.querySelector('#kb-status-indicator');\n        const msgSpan = this.domAPI.querySelector('#kb-status-message');\n\n        if (indicator && msgSpan) {\n          if (status.available) {\n            indicator.classList.add('hidden');\n          } else {\n            msgSpan.textContent = this._formatKBStatusMessage(status);\n            indicator.classList.remove('hidden');\n          }\n        }\n\n        // Emit a one-off system message when KB unavailable\n        if (!status.available) {\n          const chatUIEnh = this.DependencySystem.modules.get('chatUIEnhancements');\n          if (chatUIEnh?.appendMessage) {\n            chatUIEnh.appendMessage('system', this._formatKBStatusMessage(status));\n          }\n        }\n      } catch (err) {\n        logger.debug('[ChatManager] _updateKBStatusIndicator failed', err, { context: 'chatManager' });\n      }\n    }\n\n    _formatKBStatusMessage(status) {\n      if (!status) return 'Knowledge base status unknown';\n      const r = status.reason || 'unavailable';\n      switch (r) {\n        case 'No indexed files found':\n          return 'No knowledge-base files found for this project. Upload files to enable contextual answers.';\n        case 'Knowledge base not configured for project':\n          return 'Knowledge base not configured for this project.';\n        case 'No vector search backend available':\n          return 'Server is missing vector-search backend; KB features are disabled.';\n        case 'Health check timeout':\n          return 'Knowledge base health-check timed out.';\n        default:\n          return `Knowledge base unavailable: ${r}`;\n      }\n    }\n\n  }\n\n  const instance = new ChatManager();\n\n  // --- Live Token Estimation Logic ---\n  // Add debounced event listener to input field after UI setup\n  // (called from initialize or _setupUIElements)\n  instance._estimateCurrentInputTokens = async function () {\n    // Only proceed if inputField, projectId, currentConversationId are set\n    if (!this.inputField || !this.projectId || !this.currentConversationId) return;\n    const currentInputText = this.inputField.value;\n    if (!currentInputText.trim()) {\n      const liveTokenCountEl = this.domAPI.getElementById && this.domAPI.getElementById('liveTokenCount');\n      if (liveTokenCountEl) liveTokenCountEl.textContent = \"0\";\n      // Update token stats manager if available\n      const tokenStatsManager = this.DependencySystem?.modules?.get('tokenStatsManager');\n      if (tokenStatsManager?.setInputTokenCount) {\n        tokenStatsManager.setInputTokenCount(0);\n      }\n      return;\n    }\n    // Debounced call to backend endpoint for token estimation\n    try {\n      const resp = await this.apiRequest(\n        `/api/projects/${this.projectId}/conversations/${this.currentConversationId}/estimate-tokens`,\n        { method: \"POST\", body: { current_input: currentInputText } }\n      );\n      const est = (resp && resp.estimated_tokens_for_input !== undefined)\n        ? resp.estimated_tokens_for_input\n        : (resp && resp.data && resp.data.estimated_tokens_for_input) || null;\n      const liveTokenCountEl = this.domAPI.getElementById && this.domAPI.getElementById('liveTokenCount');\n      if (liveTokenCountEl && est !== null) liveTokenCountEl.textContent = String(est);\n\n      // Update token stats manager if available\n      const tokenStatsManager = this.DependencySystem?.modules?.get('tokenStatsManager');\n      if (tokenStatsManager?.setInputTokenCount && est !== null) {\n        tokenStatsManager.setInputTokenCount(est);\n      }\n    } catch (e) {\n      logger.error(\"[ChatManager][_estimateCurrentInputTokens] Token estimation failed\", e, { context: \"chatManager\" });\n      const liveTokenCountEl = this.domAPI.getElementById && this.domAPI.getElementById('liveTokenCount');\n      if (liveTokenCountEl) liveTokenCountEl.textContent = \"N/A\";\n    }\n  };\n\n  // Attach debounced token estimator to chat input after UI is ready\n  const addLiveTokenEstimationListener = (managerInstance) => {\n    // Only if input field and required fields present\n    if (\n      managerInstance.inputField &&\n      typeof managerInstance.inputField.addEventListener === \"function\" &&\n      typeof managerInstance._estimateCurrentInputTokens === \"function\"\n    ) {\n      // Simple debounce helper, only attach ONCE\n      if (!managerInstance._liveTokenListenerAttached) {\n        let debounceTimeout = null;\n        managerInstance.inputField.addEventListener(\"input\", function () {\n          clearTimeout(debounceTimeout);\n          debounceTimeout = setTimeout(() => {\n            try {\n              managerInstance._estimateCurrentInputTokens();\n            } catch (e) {\n              logger.error(\"[ChatManager][addLiveTokenEstimationListener] Debounced estimation failed\", e, { context: \"chatManager\" });\n            }\n          }, 400);\n        });\n        managerInstance._liveTokenListenerAttached = true;\n      }\n    }\n  };\n\n  // Patch chat manager initialize to add live token estimation wireup\n  const origInit = instance.initialize.bind(instance);\n  instance.initialize = async function (...args) {\n    const out = await origInit(...args);\n    // Try to wire up after UI elements are available\n    if (this.inputField) {\n      addLiveTokenEstimationListener(this);\n    } else {\n      // Fallback: try again after _setupUIElements\n      const origSetup = this._setupUIElements?.bind(this);\n      if (origSetup) {\n        this._setupUIElements = async (...a) => {\n          const z = await origSetup(...a);\n          addLiveTokenEstimationListener(this);\n          return z;\n        };\n      }\n    }\n    return out;\n  };\n\n  return {\n    initialize: instance.initialize.bind(instance),\n    sendMessage: instance.sendMessage.bind(instance),\n    createNewConversation: instance.createNewConversation.bind(instance),\n    loadConversation: instance.loadConversation.bind(instance),\n    deleteConversation: instance.deleteConversation.bind(instance),\n    setImage: instance.setImage.bind(instance),\n    updateModelConfig: instance.updateModelConfig.bind(instance),\n    setProjectDetailsComponent: (comp) => instance.setProjectDetailsComponent(comp),\n    // Ensure eventHandlers.cleanupListeners is called directly in the module API, per .clinerules contract\n    cleanup: () => {\n      if (eventHandlers && eventHandlers.cleanupListeners) {\n        eventHandlers.cleanupListeners({ context: \"chatManager\" });\n      }\n      instance.cleanup();\n    },\n    chatBus: instance.chatBus\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 66769,
          "_transferSize": 67958,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.365Z",
        "time": 264.6820000081789,
        "timings": {
          "blocked": 222.24200000691602,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06499999999999773,
          "wait": 41.33699999910871,
          "receive": 1.0380000021541491,
          "_blocked_queueing": 5.501000006916001,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126316",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 42
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1478,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "50372"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"21b7ed32513c347a6e24a79205698b15\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 08 Jun 2025 14:17:52 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 50372,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 50372,
          "_transferSize": 51561,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.365Z",
        "time": 273.5350000002654,
        "timings": {
          "blocked": 229.3909999913741,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.24399999999999977,
          "wait": 43.07099999745563,
          "receive": 0.8290000114357099,
          "_blocked_queueing": 5.71299999137409,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 43
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1475,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "53316"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"8a045cfc6462d47a3dd0e1794dd58def\""
            },
            {
              "name": "last-modified",
              "value": "Mon, 02 Jun 2025 19:41:25 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 53316,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 53316,
          "_transferSize": 54505,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.366Z",
        "time": 273.538000008557,
        "timings": {
          "blocked": 229.7180000059465,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08199999999999363,
          "wait": 43.18099999594503,
          "receive": 0.5570000066654757,
          "_blocked_queueing": 5.885000005946495,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126339",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/app.js",
          "lineNumber": 45
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/sidebar.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/app.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1462,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "29875"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"aba65dc95697c4179f79bd0c5a301068\""
            },
            {
              "name": "last-modified",
              "value": "Tue, 03 Jun 2025 17:52:52 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 29875,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * sidebar.js – Unified single-factory replacement\n * Merges original sidebar logic, fixes memory leaks, localStorage concurrency,\n * pinned state, and viewport breakpoints.\n */\n\nimport { safeParseJSON, debounce as globalDebounce } from './utils/globalUtils.js';\nimport { createSidebarEnhancements } from './sidebar-enhancements.js';\nimport { createSidebarAuth } from './sidebarAuth.js';\nimport { createSidebarMobileDock } from './sidebarMobileDock.js';\n\nexport function createSidebar({\n  eventHandlers,\n  DependencySystem,\n  domAPI,\n  uiRenderer,\n  storageAPI,\n  projectManager,\n  modelConfig,\n  app,\n  projectDashboard,\n  viewportAPI,\n  accessibilityUtils,\n  sanitizer,\n  domReadinessService,\n  logger,\n  safeHandler,\n  APP_CONFIG,\n  ..._rest\n} = {}) {\n  // ───────────────────────────────────────────────\n  // Validate required dependencies\n  // ───────────────────────────────────────────────\n  if (!eventHandlers) throw new Error('[Sidebar] eventHandlers is required.');\n  if (!DependencySystem) throw new Error('[Sidebar] DependencySystem is required.');\n  if (!domAPI) throw new Error('[Sidebar] domAPI is required.');\n  if (!uiRenderer ||\n    typeof uiRenderer.renderConversations !== 'function' ||\n    typeof uiRenderer.renderStarredConversations !== 'function' ||\n    typeof uiRenderer.renderProjects !== 'function') {\n    throw new Error('[Sidebar] uiRenderer with required methods is required.');\n  }\n  if (!storageAPI) throw new Error('[Sidebar] storageAPI is required.');\n  if (!projectManager) throw new Error('[Sidebar] projectManager is required.');\n  if (!viewportAPI) throw new Error('[Sidebar] viewportAPI is required.');\n  if (!accessibilityUtils?.announce) {\n    throw new Error('[Sidebar] accessibilityUtils is required for accessibility announcements.');\n  }\n  if (!logger) throw new Error('[Sidebar] logger is required.');\n  if (!domReadinessService) throw new Error('[Sidebar] domReadinessService is required.');\n  if (typeof safeHandler !== 'function') throw new Error('[Sidebar] safeHandler is required.');\n  if (!APP_CONFIG) throw new Error('[Sidebar] APP_CONFIG is required.');\n\n  const MODULE = 'Sidebar';\n  const SidebarBus = new EventTarget();\n\n  // Attempt to fill optional dependencies if not passed\n  app = app || tryResolve('app');\n  projectDashboard = projectDashboard || tryResolve('projectDashboard');\n\n  function tryResolve(depName) {\n    if (DependencySystem?.modules?.get) {\n      return DependencySystem.modules.get(depName);\n    }\n    if (DependencySystem?.get) {\n      return DependencySystem.get(depName);\n    }\n    return undefined;\n  }\n\n  // Sub-factories\n  const sidebarEnhancements = createSidebarEnhancements({\n    eventHandlers,\n    DependencySystem,\n    domAPI,\n    modelConfig,\n    logger,\n    safeHandler\n  });\n  const sidebarAuth = createSidebarAuth({\n    domAPI,\n    eventHandlers,\n    DependencySystem,\n    logger,\n    sanitizer,\n    safeHandler,\n    domReadinessService\n  });\n\n  // DOM references\n  let el = null;\n  let btnToggle = null;\n  let btnClose = null;\n  let btnPin = null;\n  let btnSettings = null;\n  let chatSearchInputEl = null;\n  let sidebarProjectSearchInputEl = null;\n  let backdrop = null;\n  let backdropClickRemover = null;\n  let sidebarMobileDock = null;\n\n  let visible = false;\n  let pinned = false;\n\n  //   -- Settings Panel\n  let settingsPanelEl = null;\n  function _ensureSettingsPanel() {\n    if (!el) findDom();\n    if (!settingsPanelEl) {\n      settingsPanelEl = sidebarEnhancements.attachSettingsPanel(el);\n    }\n    return settingsPanelEl;\n  }\n\n  function toggleSettingsPanel(force) {\n    _ensureSettingsPanel();\n    sidebarEnhancements.toggleSettingsPanel(force, maybeRenderModelConfig);\n  }\n\n  //   -- Easy event dispatch\n  function dispatch(name, detail) {\n    if (typeof CustomEvent !== 'undefined') {\n      SidebarBus.dispatchEvent(new CustomEvent(name, { detail }));\n    }\n  }\n\n  // ───────────────────────────────────────────────\n  // Starred Conversations (fixed concurrency)\n  // ───────────────────────────────────────────────\n  const starredStorageKey = 'starredConversations';\n  const lockKey = 'starredConversations_lock';\n  let starred = new Set();\n\n  async function readStarred() {\n    const startTime = Date.now();\n    const lockId = `${Date.now()}_${Math.random()}`;\n    while (storageAPI.getItem(lockKey)) {\n      if (Date.now() - startTime > 1000) {\n        // Force unlock if stuck\n        storageAPI.removeItem(lockKey);\n      }\n      await new Promise((resolve) => setTimeout(resolve, 10));\n    }\n    storageAPI.setItem(lockKey, lockId);\n    try {\n      const json = storageAPI.getItem(starredStorageKey);\n      const setData = (typeof json === 'string') ? safeParseJSON(json) : [];\n      return new Set(setData);\n    } finally {\n      if (storageAPI.getItem(lockKey) === lockId) {\n        storageAPI.removeItem(lockKey);\n      }\n    }\n  }\n\n  async function writeStarred(starredSet) {\n    const startTime = Date.now();\n    const lockId = `${Date.now()}_${Math.random()}`;\n    while (storageAPI.getItem(lockKey)) {\n      if (Date.now() - startTime > 1000) {\n        storageAPI.removeItem(lockKey);\n      }\n      await new Promise((resolve) => setTimeout(resolve, 10));\n    }\n    storageAPI.setItem(lockKey, lockId);\n    try {\n      storageAPI.setItem(starredStorageKey, JSON.stringify(Array.from(starredSet)));\n    } finally {\n      if (storageAPI.getItem(lockKey) === lockId) {\n        storageAPI.removeItem(lockKey);\n      }\n    }\n  }\n\n  async function syncStarredFromStorage() {\n    starred = await readStarred();\n  }\n\n  function isConversationStarred(id) {\n    return starred.has(id);\n  }\n\n  async function toggleStarConversation(id) {\n    try {\n      starred = await readStarred();\n      if (starred.has(id)) {\n        starred.delete(id);\n      } else {\n        starred.add(id);\n      }\n      await writeStarred(starred);\n      const activeTab = storageAPI.getItem('sidebarActiveTab') || 'recent';\n      if (activeTab === 'starred') {\n        maybeRenderStarredConversations();\n      }\n      dispatch('sidebarStarredChanged', { id, starred: starred.has(id) });\n      return starred.has(id);\n    } catch (err) {\n      logger.error('[Sidebar] Failed to toggle star', err, { context: MODULE });\n      return starred.has(id);\n    }\n  }\n\n\n  // ───────────────────────────────────────────────\n  // Model Config\n  // ───────────────────────────────────────────────\n  function maybeRenderModelConfig() {\n    const panel = _ensureSettingsPanel();\n    if (panel.dataset.mcBound === '1') return;\n    panel.dataset.mcBound = '1';\n    try {\n      modelConfig?.renderQuickConfig(panel);\n    } catch (err) {\n      logger.error('[Sidebar] renderQuickConfig failed', err, { context: MODULE });\n      domAPI.setTextContent(panel, 'Unable to load model configuration.');\n    }\n  }\n\n  // ───────────────────────────────────────────────\n  // DOM Lookup\n  // ───────────────────────────────────────────────\n  function findDom() {\n    el = domAPI.getElementById('mainSidebar');\n    btnToggle = domAPI.getElementById('navToggleBtn');\n    btnClose = domAPI.getElementById('closeSidebarBtn');\n    btnPin = domAPI.getElementById('pinSidebarBtn');\n    btnSettings = domAPI.getElementById('sidebarSettingsBtn');\n    chatSearchInputEl = domAPI.getElementById('chatSearchInput');\n    sidebarProjectSearchInputEl = domAPI.getElementById('sidebarProjectSearch');\n\n    if (!el) throw new Error('[Sidebar] #mainSidebar not found');\n  }\n\n  // ───────────────────────────────────────────────\n  // Pin Handling\n  // ───────────────────────────────────────────────\n  function togglePin(force) {\n    pinned = (typeof force === 'boolean') ? force : !pinned;\n    storageAPI.setItem('sidebarPinned', pinned);\n    el.classList.toggle('sidebar-pinned', pinned);\n    updatePinButtonVisual();\n    if (pinned) {\n      showSidebar();\n    }\n    dispatch('sidebarPinChanged', { pinned });\n    if (visible) {\n      dispatch('sidebarVisibilityChanged', { visible });\n    }\n  }\n\n  function updatePinButtonVisual() {\n    if (!btnPin) return;\n    btnPin.setAttribute('aria-pressed', pinned.toString());\n    btnPin.classList.toggle('text-primary', pinned);\n    btnPin.title = pinned ? 'Unpin sidebar' : 'Pin sidebar';\n  }\n\n  // ───────────────────────────────────────────────\n  // Tab Renders\n  // ───────────────────────────────────────────────\n  function maybeRenderRecentConversations(searchTerm = '') {\n    const projectId = projectManager?.getCurrentProject?.()?.id;\n    if (!projectId) {\n      const listEl = domAPI.getElementById('recentChatsSection')?.querySelector('ul');\n      if (listEl) {\n        domAPI.setInnerHTML(listEl, '');\n        const li = domAPI.createElement('li');\n        li.className = 'p-4 text-center text-gray-500';\n        domAPI.setTextContent(li, 'Select a project to view conversations');\n        listEl.appendChild(li);\n      }\n      return;\n    }\n    uiRenderer.renderConversations(projectId, searchTerm, isConversationStarred, toggleStarConversation);\n  }\n\n  function maybeRenderStarredConversations(searchTerm = '') {\n    const projectId = projectManager?.getCurrentProject?.()?.id;\n    if (!projectId) {\n      const listEl = domAPI.getElementById('starredChatsSection')?.querySelector('ul');\n      if (listEl) {\n        domAPI.setInnerHTML(listEl, '');\n        const li = domAPI.createElement('li');\n        li.className = 'p-4 text-center text-gray-500';\n        domAPI.setTextContent(li, 'Select a project to view starred conversations');\n        listEl.appendChild(li);\n      }\n      return;\n    }\n    uiRenderer.renderStarredConversations(projectId, searchTerm, isConversationStarred, toggleStarConversation);\n  }\n\n  async function ensureProjectDashboard() {\n    if (!projectDashboard?.initialize) {\n      logger.warn('[Sidebar] ProjectDashboard not available', { context: MODULE });\n      return;\n    }\n    const section = domAPI.getElementById('projectsSection');\n    if (section && !section.dataset.initialised) {\n      section.dataset.initialised = 'true';\n    }\n    // Also check authentication\n    const appModule = DependencySystem.modules?.get('appModule');\n    if (!appModule?.state?.isAuthenticated) {\n      uiRenderer.renderProjects?.([]);\n      return;\n    }\n    if (!projectManager) {\n      logger.error('[Sidebar] projectManager not available', { context: MODULE });\n      return;\n    }\n    let projects = projectManager.projects || [];\n    if (typeof projectManager.loadProjects === 'function' && projects.length === 0) {\n      try {\n        projects = await projectManager.loadProjects() || [];\n        // Auto-select first if none selected\n        const currentProject = projectManager.getCurrentProject?.();\n        if (!currentProject && projects.length > 0) {\n          const appModule = DependencySystem.modules.get('appModule');\n          appModule?.setCurrentProject(projects[0]);\n        }\n      } catch (err) {\n        logger.error('[Sidebar] Failed to load projects', err, { context: MODULE });\n        const listEl = section?.querySelector('ul');\n        if (listEl) {\n          domAPI.setInnerHTML(listEl, '');\n          const errorLi = domAPI.createElement('li');\n          errorLi.className = 'p-4 text-center text-error';\n          domAPI.setTextContent(errorLi, 'Failed to load projects. Please refresh.');\n          listEl.appendChild(errorLi);\n        }\n        return;\n      }\n    }\n    // Render\n    uiRenderer.renderProjects?.(projects);\n    // Possibly re-render the conversation lists\n    const activeTab = storageAPI.getItem('sidebarActiveTab') || 'recent';\n    if (activeTab === 'recent') maybeRenderRecentConversations();\n    if (activeTab === 'starred') maybeRenderStarredConversations();\n  }\n\n  async function activateTab(name = 'recent') {\n    const map = {\n      recent: { btn: 'recentChatsTab', panel: 'recentChatsSection' },\n      starred: { btn: 'starredChatsTab', panel: 'starredChatsSection' },\n      projects: { btn: 'projectsTab', panel: 'projectsSection' }\n    };\n    if (!map[name]) {\n      name = 'recent';\n    }\n    Object.entries(map).forEach(([key, ids]) => {\n      const btn = domAPI.getElementById(ids.btn);\n      const panel = domAPI.getElementById(ids.panel);\n      const active = (key === name);\n      btn?.classList.toggle('tab-active', active);\n      btn?.setAttribute('aria-selected', String(active));\n      btn && (btn.tabIndex = active ? 0 : -1);\n      if (panel) {\n        panel.classList.toggle('hidden', !active);\n        if (active) panel.classList.add('flex');\n        else panel.classList.remove('flex');\n      }\n    });\n    storageAPI.setItem('sidebarActiveTab', name);\n    dispatch('sidebarTabChanged', { tab: name });\n\n    if (name === 'recent') {\n      maybeRenderRecentConversations(chatSearchInputEl?.value?.trim().toLowerCase() || '');\n    } else if (name === 'starred') {\n      maybeRenderStarredConversations(chatSearchInputEl?.value?.trim().toLowerCase() || '');\n    } else if (name === 'projects') {\n      await ensureProjectDashboard();\n      _handleProjectSearch();\n    }\n  }\n\n  // ───────────────────────────────────────────────\n  // Show/Close Sidebar\n  // ───────────────────────────────────────────────\n  function toggleSidebar(force) {\n    const willShow = (typeof force === 'boolean') ? force : !visible;\n    willShow ? showSidebar() : closeSidebar();\n  }\n\n  function showSidebar() {\n    if (visible) return;\n    visible = true;\n    el.classList.add('open');\n    el.classList.remove('-translate-x-full');\n    el.inert = false;\n    btnToggle?.setAttribute('aria-expanded', 'true');\n    createBackdrop();\n    domAPI.getDocument()?.body?.classList.add('with-sidebar-open');\n    sidebarMobileDock?.updateDockVisibility(true);\n\n    const activeTab = storageAPI.getItem('sidebarActiveTab') || 'recent';\n    if (activeTab === 'projects') {\n      ensureProjectDashboard();\n      domAPI.getElementById('sidebarProjectSearch')?.focus();\n    }\n    dispatch('sidebarVisibilityChanged', { visible });\n  }\n\n  function closeSidebar() {\n    if (!visible || pinned) return;\n    visible = false;\n    el.classList.remove('open');\n    el.classList.add('-translate-x-full');\n    el.inert = true;\n    btnToggle?.setAttribute('aria-expanded', 'false');\n    domAPI.getDocument()?.body?.classList.remove('with-sidebar-open');\n    removeBackdrop();\n    sidebarMobileDock?.updateDockVisibility(false);\n    toggleSettingsPanel(false);\n    dispatch('sidebarVisibilityChanged', { visible });\n  }\n\n  function createBackdrop() {\n    if (!domReadinessService?.documentReady) return;\n    if (backdrop) removeBackdrop();\n    if (viewportAPI.getInnerWidth() >= 1024) return;\n\n    backdrop = domAPI.createElement('div');\n    Object.assign(backdrop.style, {\n      position: 'fixed',\n      inset: '0',\n      zIndex: '40',\n      backgroundColor: 'rgba(0,0,0,0.5)',\n      cursor: 'pointer'\n    });\n    backdropClickRemover = eventHandlers.trackListener(\n      backdrop,\n      'click',\n      safeHandler(closeSidebar, '[Sidebar] backdrop-click'),\n      { context: MODULE }\n    );\n    domAPI.getDocument()?.body?.appendChild(backdrop);\n  }\n\n  function removeBackdrop() {\n    if (backdrop) {\n      if (backdropClickRemover) {\n        backdropClickRemover();\n        backdropClickRemover = null;\n      } else {\n        eventHandlers.cleanupListeners({ target: backdrop });\n      }\n      backdrop.remove();\n      backdrop = null;\n    }\n  }\n\n  function handleResize() {\n    if (viewportAPI.getInnerWidth() >= 1024) {\n      removeBackdrop();\n    }\n    sidebarMobileDock?.updateDockVisibility(visible);\n  }\n\n  // ───────────────────────────────────────────────\n  // Debounced search handling\n  // ───────────────────────────────────────────────\n  const _debouncedChatSearch = globalDebounce(_handleChatSearch, 200);\n  const _debouncedProjectSearch = globalDebounce(_handleProjectSearch, 200);\n\n  function _handleChatSearch() {\n    if (!chatSearchInputEl || !uiRenderer) return;\n    try {\n      const st = chatSearchInputEl.value.trim().toLowerCase();\n      const activeTab = storageAPI.getItem('sidebarActiveTab') || 'recent';\n      const pid = projectManager?.getCurrentProject?.()?.id;\n\n      if (activeTab === 'recent') {\n        uiRenderer.renderConversations(pid, st, isConversationStarred, toggleStarConversation);\n        accessibilityUtils.announce?.(`Recent conversations filtered: \"${st || 'all'}\"`);\n      } else if (activeTab === 'starred') {\n        uiRenderer.renderStarredConversations(pid, st, isConversationStarred, toggleStarConversation);\n        accessibilityUtils.announce?.(`Starred conversations filtered: \"${st || 'all'}\"`);\n      }\n    } catch (err) {\n      logger.error('[Sidebar] ChatSearch failed', err, { context: MODULE });\n    }\n  }\n\n  function _handleProjectSearch() {\n    if (!sidebarProjectSearchInputEl || !projectManager || !uiRenderer) return;\n    try {\n      const searchTerm = sidebarProjectSearchInputEl.value.trim().toLowerCase();\n      const allProjects = projectManager.projects || [];\n      const filtered = !searchTerm\n        ? allProjects\n        : allProjects.filter(p => p.name?.toLowerCase().includes(searchTerm));\n      uiRenderer.renderProjects(filtered);\n      accessibilityUtils.announce?.(\n        `Projects filtered for \"${searchTerm || 'all'}\". Found ${filtered.length}.`\n      );\n    } catch (error) {\n      logger.error('[Sidebar] ProjectSearch failed', error, { context: MODULE });\n    }\n  }\n\n  // ───────────────────────────────────────────────\n  // Main event binding\n  // ───────────────────────────────────────────────\n  function bindDomEvents() {\n    // Cross-tab “starred” sync\n    eventHandlers.trackListener(\n      domAPI.getWindow(),\n      'storage',\n      safeHandler(async (e) => {\n        if (e.key === starredStorageKey) {\n          starred = await readStarred();\n          if ((storageAPI.getItem('sidebarActiveTab') || 'recent') === 'starred') {\n            maybeRenderStarredConversations();\n          }\n        }\n      }, '[Sidebar] storage sync'),\n      { context: MODULE }\n    );\n\n    // Window resize\n    eventHandlers.trackListener(\n      domAPI.getWindow(),\n      'resize',\n      safeHandler(handleResize, '[Sidebar] resize'),\n      { context: MODULE }\n    );\n\n    // Chat search\n    chatSearchInputEl && eventHandlers.trackListener(\n      chatSearchInputEl,\n      'input',\n      safeHandler(_debouncedChatSearch, '[Sidebar] chatSearchInput'),\n      { context: MODULE }\n    );\n\n    // Project search\n    sidebarProjectSearchInputEl && eventHandlers.trackListener(\n      sidebarProjectSearchInputEl,\n      'input',\n      safeHandler(_debouncedProjectSearch, '[Sidebar] projectSearchInput'),\n      { context: MODULE }\n    );\n\n    // Watch new conversation\n    eventHandlers.trackListener(\n      domAPI.getDocument(),\n      'chat:conversationCreated',\n      safeHandler(() => {\n        if ((storageAPI.getItem('sidebarActiveTab') || 'recent') === 'recent') {\n          _handleChatSearch();\n        }\n      }, '[Sidebar] conversationCreated'),\n      { context: MODULE }\n    );\n\n    // Project change (recent or starred re-render)\n    eventHandlers.trackListener(\n      domAPI.getDocument(),\n      'projectChanged',\n      safeHandler(() => {\n        const tab = storageAPI.getItem('sidebarActiveTab') || 'recent';\n        if (tab === 'recent') {\n          maybeRenderRecentConversations();\n        } else if (tab === 'starred') {\n          maybeRenderStarredConversations();\n        }\n      }, '[Sidebar] projectChanged'),\n      { context: MODULE }\n    );\n  }\n\n  // Extra listeners for pinned and tab switching\n  function bindTabButtonsAndPin() {\n    // Pin\n    btnPin && eventHandlers.trackListener(\n      btnPin,\n      'click',\n      safeHandler(togglePin, '[Sidebar] togglePin'),\n      { context: MODULE }\n    );\n\n    // Tabs\n    [\n      { id: 'recentChatsTab', tab: 'recent' },\n      { id: 'starredChatsTab', tab: 'starred' },\n      { id: 'projectsTab', tab: 'projects' }\n    ].forEach(({ id, tab }) => {\n      const elTab = domAPI.getElementById(id);\n      if (elTab) {\n        eventHandlers.trackListener(\n          elTab,\n          'click',\n          safeHandler(async (e) => {\n            e.preventDefault();\n            await activateTab(tab);\n            accessibilityUtils.announce?.(`Switched to ${tab} tab in sidebar`);\n          }, `[Sidebar] activateTab:${tab}`),\n          { context: MODULE }\n        );\n      }\n    });\n\n    // Toggle\n    if (btnToggle) {\n      eventHandlers.trackListener(\n        btnToggle,\n        'click',\n        safeHandler(() => toggleSidebar(), '[Sidebar] toggleSidebar'),\n        { context: MODULE }\n      );\n    }\n\n    // Close\n    if (btnClose) {\n      eventHandlers.trackListener(\n        btnClose,\n        'click',\n        safeHandler(closeSidebar, '[Sidebar] closeSidebar'),\n        { context: MODULE }\n      );\n    }\n\n    // Settings\n    if (btnSettings) {\n      eventHandlers.trackListener(\n        btnSettings,\n        'click',\n        safeHandler(() => toggleSettingsPanel(), '[Sidebar] settingsPanel'),\n        { context: MODULE }\n      );\n    }\n\n    // Auto-close on mobile link click if not pinned\n    eventHandlers.trackListener(\n      el,\n      'click',\n      safeHandler((ev) => {\n        const link = ev.target.closest('a');\n        if (link && el.contains(link) && !pinned && viewportAPI.getInnerWidth() < 768) {\n          closeSidebar();\n        }\n      }, '[Sidebar] auto-close'),\n      { capture: true, context: MODULE }\n    );\n  }\n\n  // ───────────────────────────────────────────────\n  // Persistent State\n  // ───────────────────────────────────────────────\n  function restorePersistentState() {\n    pinned = (storageAPI.getItem('sidebarPinned') === 'true');\n    const isDesktop = (viewportAPI.getInnerWidth() >= 768);\n    if (pinned || isDesktop) {\n      el.classList.add('sidebar-pinned');\n      el.classList.remove('-translate-x-full');\n      el.classList.add('open');\n      visible = true;\n      el.inert = false;\n      btnToggle?.setAttribute('aria-expanded', 'true');\n    }\n    updatePinButtonVisual();\n  }\n\n  // ───────────────────────────────────────────────\n  // Initialization\n  // ───────────────────────────────────────────────\n  async function init() {\n    await syncStarredFromStorage().catch(err =>\n      logger.error('[Sidebar] Could not load starred from storage', err, { context: MODULE })\n    );\n    try {\n      // Wait for critical DOM\n      await domReadinessService.dependenciesAndElements({\n        deps: ['eventHandlers', 'appModule'],\n        domSelectors: [\n          '#mainSidebar',\n          '#recentChatsTab', '#starredChatsTab', '#projectsTab',\n          '#recentChatsSection', '#starredChatsSection', '#projectsSection'\n        ],\n        timeout: 15000,\n        context: `${MODULE}:init`\n      });\n      // Optional DOM\n      await domReadinessService.dependenciesAndElements({\n        domSelectors: [\n          '#navToggleBtn',\n          '#closeSidebarBtn',\n          '#chatSearchInput',\n          '#sidebarProjectSearch',\n          '#sidebarAuthFormContainer'\n        ],\n        optional: true,\n        timeout: 8000,\n        context: `${MODULE}:initOptional`\n      });\n      findDom();\n      // Mobile Dock instance is prepared here; actual init is deferred\n      // Create mobile dock with handlers that ensure the sidebar becomes\n      // visible before performing the requested action so that, on phone\n      // screens, tapping the dock buttons actually navigates somewhere the\n      // user can see.\n      sidebarMobileDock = createSidebarMobileDock({\n        domAPI, eventHandlers, viewportAPI, logger,\n        domReadinessService, safeHandler,\n        // Show sidebar and then activate desired tab\n        onTabActivate: (name) => {\n          showSidebar();\n          activateTab(name);\n        },\n        // Show sidebar and open the settings panel containing the\n        // quick-config UI for model selection / tokens etc.\n        onOpenSettings: () => {\n          showSidebar();\n          toggleSettingsPanel(true);\n        }\n      });\n\n      // Auth forms\n      // Ensure sidebarAuth always initializes itself for state and event listeners\n      sidebarAuth.init();\n      sidebarAuth.setupInlineAuthForm();\n\n      // Listen for authentication state changes and update sidebar UI\n      // Prefer AuthBus if available, otherwise fall back to document\n      let authBus = null;\n      if (DependencySystem?.modules?.get('auth')?.eventBus) {\n        authBus = DependencySystem.modules.get('auth').eventBus;\n      }\n      const authEventTarget = authBus || domAPI.getDocument();\n      eventHandlers.trackListener(\n        authEventTarget,\n        'authStateChanged',\n        safeHandler((event) => {\n          logger.info('[Sidebar] authStateChanged event received', event, { context: MODULE });\n          sidebarAuth.handleGlobalAuthStateChange(event);\n        }, '[Sidebar] authStateChanged'),\n        { context: MODULE }\n      );\n\n      // Restore pinned state\n      restorePersistentState();\n\n      // Ensure the mobile dock visibility matches the initial sidebar state\n      if (sidebarMobileDock?.updateDockVisibility) {\n        try {\n          sidebarMobileDock.updateDockVisibility(visible);\n        } catch (dockErr) {\n          logger.warn('[Sidebar] Failed to sync mobile dock visibility on init', dockErr, { context: MODULE });\n        }\n      }\n\n      // Bind events\n      bindDomEvents();\n      bindTabButtonsAndPin();\n\n      // Activate tab\n      const activeTab = storageAPI.getItem('sidebarActiveTab') || 'recent';\n      await activateTab(activeTab);\n\n      return true;\n    } catch (err) {\n      logger.error('[Sidebar] init failed', err, { context: MODULE });\n      throw err;\n    }\n  }\n\n  // Cleanup\n  function destroy() {\n    if (DependencySystem?.cleanupModuleListeners) {\n      DependencySystem.cleanupModuleListeners(MODULE);\n    }\n    eventHandlers.cleanupListeners({ context: MODULE });\n    removeBackdrop();\n    pinned = false;\n    visible = false;\n    sidebarAuth.cleanup();\n    sidebarMobileDock?.cleanup();\n  }\n  function cleanup() {\n    eventHandlers.cleanupListeners({ context: 'Sidebar' });\n    destroy();\n  }\n\n  // Debug\n  function debugAuthState() {\n    logger.info('[Sidebar] Manual auth state check', { context: MODULE });\n    const appMod = DependencySystem.modules?.get('appModule');\n    const isAuth = appMod?.state?.isAuthenticated ?? false;\n    const user = appMod?.state?.currentUser;\n    const auth = DependencySystem.modules?.get('auth');\n    const modState = auth ? {\n      isAuthenticated: auth.isAuthenticated?.(),\n      currentUser: auth.getCurrentUserObject?.()\n    } : {};\n    const debugInfo = {\n      fromAppModule: { isAuth, user },\n      fromAuthModule: modState\n    };\n    logger.info('[Sidebar] Auth state debug info', debugInfo, { context: MODULE });\n    sidebarAuth.handleGlobalAuthStateChange({\n      detail: { authenticated: isAuth, user, source: 'debugAuthState' }\n    });\n    return debugInfo;\n  }\n\n  function forceAuthStateRefresh() {\n    return debugAuthState();\n  }\n\n  function debugSidebarState() {\n    const debugInfo = {\n      visible,\n      pinned,\n      elementExists: !!el,\n      pinnedClass: el?.classList?.contains('sidebar-pinned'),\n      dockInitialized: !!sidebarMobileDock?.dockElement, // presence ≈ initialised\n      context: `${MODULE}:debug`\n    };\n    logger.info('[Sidebar] Debug sidebar state', debugInfo, { context: MODULE });\n    return debugInfo;\n  }\n\n  return {\n    init,\n    destroy,\n    cleanup,\n    eventBus: SidebarBus,\n    toggleSidebar,\n    closeSidebar,\n    showSidebar,\n    togglePin,\n    activateTab,\n    isConversationStarred,\n    toggleStarConversation,\n    debugAuthState,\n    forceAuthStateRefresh,\n    debugSidebarState,\n    /* new: explicit accessor – orchestrator now owns dock initialisation */\n    getMobileDock: () => sidebarMobileDock,\n    /* new: explicit accessor – orchestrator now owns auth initialisation */\n    getSidebarAuth: () => sidebarAuth\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 29875,
          "_transferSize": 31064,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.366Z",
        "time": 302.53699999593664,
        "timings": {
          "blocked": 254.28299999122788,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.10800000000000409,
          "wait": 47.65500000583472,
          "receive": 0.490999998874031,
          "_blocked_queueing": 5.905999991227873,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126409",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/appConfig.js",
          "lineNumber": 4
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/selectorConstants.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/appConfig.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1484,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "3771"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"5eb9f9c79db7170dba620adbe8090cee\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 19:44:48 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3771,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "\n/**\n * selectorConstants.js\n * Centralized selectors for critical DOM elements used across the application.\n */\nexport const SELECTORS = {\n  // Project List View\n  projectListView: '#projectListView',\n  projectListContainer: '#projectListContainer',\n  projectCardsPanel: '#projectCardsPanel',\n  projectFilterTabs: '#projectFilterTabs',\n  loadingState: '#loadingState',\n\n  // Project Details View\n  projectDetailsView: '#projectDetailsView',\n  projectDetailsContainer: '#projectDetailsContainer',\n  projectTitle: '#projectTitle',\n  backToProjectsBtn: '#backToProjectsBtn',\n\n  // Project Tabs\n  chatTab: '#chatTab',\n  filesTab: '#filesTab',\n  detailsTab: '#detailsTab',\n  knowledgeTab: '#knowledgeTab',\n  settingsTab: '#settingsTab',\n\n  // Chat UI\n  chatUIContainer: '#chatUIContainer',\n  chatMessages: '#chatMessages',\n  chatInput: '#chatInput',\n  chatSendBtn: '#chatSendBtn',\n  chatTitle: '#chatTitle',\n  newConversationBtn: '#newConversationBtn',\n  conversationsList: '#conversationsList',\n\n  // File Upload\n  fileInput: '#fileInput',\n  uploadFileBtn: '#uploadFileBtn',\n  dragDropZone: '#dragDropZone',\n  filesUploadProgress: '#filesUploadProgress',\n  fileProgressBar: '#fileProgressBar',\n  uploadStatus: '#uploadStatus',\n  filesList: '#filesList',\n\n  // Knowledge Base\n  knowledgeStatus: '#knowledgeStatus',\n  knowledgeBaseInactive: '#knowledgeBaseInactive',\n  kbStatusBadge: '#kbStatusBadge',\n  kbToggle: '#kbToggle',\n  kbDocCount: '#kbDocCount',\n  kbChunkCount: '#kbChunkCount',\n  kbModelDisplay: '#kbModelDisplay',\n  knowledgeBaseName: '#knowledgeBaseName',\n  kbVersionDisplay: '#kbVersionDisplay',\n  kbLastUsedDisplay: '#kbLastUsedDisplay',\n  knowledgeFileSize: '#knowledgeFileSize',\n  reprocessButton: '#reprocessButton',\n  setupButton: '#setupButton',\n  settingsButton: '#settingsButton',\n  knowledgeBaseFilesSection: '#knowledgeBaseFilesSection',\n  knowledgeBaseFilesListContainer: '#knowledgeBaseFilesListContainer',\n  knowledgeBaseSettingsModal: '#knowledgeBaseSettingsModal',\n  knowledgeBaseForm: '#knowledgeBaseForm',\n  cancelKnowledgeBaseFormBtn: '#cancelKnowledgeBaseFormBtn',\n  deleteKnowledgeBaseBtn: '#deleteKnowledgeBaseBtn'\n};\n\nexport function createSelectorConstants () {\n  return { SELECTORS, ELEMENT_SELECTORS, cleanup () {} };\n}\n\nexport const ELEMENT_SELECTORS = {\n  // Knowledge Base Component specific selectors\n  KB: {\n    container: 'knowledgeTab',\n    activeSection: 'knowledgeStatus',\n    inactiveSection: 'knowledgeBaseInactive',\n    statusBadge: 'kbStatusBadge',\n    toggle: 'kbToggle',\n    docCount: 'kbDocCount',\n    chunkCount: 'kbChunkCount',\n    modelDisplay: 'kbModelDisplay',\n    modelSelect: 'modelSelect',\n    baseName: 'knowledgeBaseName',\n    versionDisplay: 'kbVersionDisplay',\n    lastUsedDisplay: 'kbLastUsedDisplay',\n    fileSize: 'knowledgeFileSize',\n    reprocessButton: 'reprocessButton',\n    setupButton: 'setupButton',\n    settingsButton: 'settingsButton',\n    filesSection: 'knowledgeBaseFilesSection',\n    filesListContainer: 'knowledgeBaseFilesListContainer',\n    settingsModal: 'knowledgeBaseSettingsModal',\n    settingsForm: 'knowledgeBaseForm',\n    cancelSettingsBtn: 'cancelKnowledgeBaseFormBtn',\n    deleteBtn: 'deleteKnowledgeBaseBtn'\n  },\n\n  // Chat Component specific selectors\n  CHAT: {\n    container: 'chatUIContainer',\n    messages: 'chatMessages',\n    input: 'chatInput',\n    sendBtn: 'chatSendBtn',\n    title: 'chatTitle',\n    newConversationBtn: 'newConversationBtn',\n    conversationsList: 'conversationsList'\n  },\n\n  // File Upload Component specific selectors\n  FILE_UPLOAD: {\n    input: 'fileInput',\n    uploadBtn: 'uploadFileBtn',\n    dragZone: 'dragDropZone',\n    progress: 'filesUploadProgress',\n    progressBar: 'fileProgressBar',\n    status: 'uploadStatus',\n    filesList: 'filesList'\n  }\n};\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 3771,
          "_transferSize": 4959,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.445Z",
        "time": 228.23399999469984,
        "timings": {
          "blocked": 185.2520000048317,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07800000000000296,
          "wait": 42.25400000265054,
          "receive": 0.6499999872175977,
          "_blocked_queueing": 0.7880000048317015,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126344",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
          "lineNumber": 15
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/session.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/utils/browserService.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1485,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "1189"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"c157834b36222479edbd26502aab84cf\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 30 May 2025 20:40:53 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1189,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * session.js - Generate and provide a session UUID for this app/browser tab.\n * Used for correlating frontend logs/errors across notifications.\n */\nlet sessionId = null;\nlet _browserService = null;\nexport function setBrowserService(bs) { _browserService = bs; }\nfunction generateSessionId() {\n  // Generate RFC4122v4 string; crypto randomUUID is required\n  const cryptoObj = _browserService?.getWindow?.()?.crypto;\n  if (cryptoObj?.randomUUID) return cryptoObj.randomUUID();\n  throw new Error('[session.js] crypto.randomUUID is required; fallback UUID generation is forbidden.');\n}\nexport function getSessionId() {\n  if (!sessionId) sessionId = generateSessionId();\n  return sessionId;\n}\nexport function resetSessionId(){ sessionId=null; }\n\nexport function createSessionManager({ browserService, logger } = {}) {\n  if (!browserService) throw new Error('[session] browserService required');\n  setBrowserService(browserService);\n  const log = logger ?? { debug(){}, error(){} };\n  return {\n    getSessionId,\n    resetSessionId,\n    cleanup () {\n      resetSessionId();\n      setBrowserService(null);\n      log.debug('[session] cleaned up', { context: 'session:cleanup' });\n    }\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 1189,
          "_transferSize": 2377,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.445Z",
        "time": 233.23499999241903,
        "timings": {
          "blocked": 184.99999999283162,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.04800000000000182,
          "wait": 47.477999999672164,
          "receive": 0.7089999999152496,
          "_blocked_queueing": 0.9029999928316101,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126320",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/navigationService.js",
          "lineNumber": 0
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/getSafeHandler.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/navigationService.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1489,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "249"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"7532f106fb873a311258b1cbb3bd470d\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 17:50:53 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 249,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "export function getSafeHandler(DependencySystem){\n  const raw = DependencySystem?.modules?.get?.('safeHandler');\n  return (typeof raw === 'function')\n         ? raw\n         : (typeof raw?.safeHandler === 'function' ? raw.safeHandler : (fn)=>fn);\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1187,
          "bodySize": 249,
          "_transferSize": 1436,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.549Z",
        "time": 129.1369999962626,
        "timings": {
          "blocked": 84.88100000549854,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06999999999999318,
          "wait": 43.22300000672415,
          "receive": 0.962999984039925,
          "_blocked_queueing": 0.7040000054985285,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126316",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
          "lineNumber": 8
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/logDeliveryService.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/init/appInitializer.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1489,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "3378"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"d3809e28ca73b8f7b16747419866953a\""
            },
            {
              "name": "last-modified",
              "value": "Thu, 29 May 2025 17:51:37 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3378,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "// static/js/logDeliveryService.js (not in services/ subdirectory)\n\n/**\n * logDeliveryService.js - Handles server-side log delivery\n * Completely separate from logger to avoid circular dependencies\n */\n\nexport function createLogDeliveryService({\n  apiClient,\n  browserService,\n  eventHandlers,\n  enabled = false, // Start disabled until auth ready\n  batchInterval = 5000,\n  maxBatchSize = 100\n}) {\n  if (!apiClient) throw new Error('[LogDelivery] apiClient required');\n  if (!browserService) throw new Error('[LogDelivery] browserService required');\n  if (!eventHandlers) throw new Error('[LogDelivery] eventHandlers required');\n\n  let buffer = [];\n  let batchTimer = null;\n  let isEnabled = enabled;\n  let isDelivering = false;\n  let logListener = null;\n\n  async function deliverBatch(logs) {\n    if (!isEnabled || logs.length === 0 || isDelivering) return;\n\n    isDelivering = true;\n    try {\n      const response = await apiClient.post('/api/logs',\n        { logs },\n        {\n          headers: { 'Content-Type': 'application/json' },\n          credentials: 'include'\n        }\n      );\n\n      // Success - clear delivered logs\n      return true;\n    } catch (error) {\n      // On 4xx errors, drop the batch\n      if (error.status >= 400 && error.status < 500) {\n        return true; // Consider delivered\n      }\n      // On 5xx or network errors, keep for retry\n      return false;\n    } finally {\n      isDelivering = false;\n    }\n  }\n\n  function scheduleBatch() {\n    if (batchTimer || !isEnabled) return;\n\n    batchTimer = browserService.setTimeout(async () => {\n      batchTimer = null;\n      if (buffer.length > 0) {\n        const batch = buffer.splice(0, maxBatchSize);\n        const delivered = await deliverBatch(batch);\n        if (!delivered) {\n          // Put back at front for retry\n          buffer.unshift(...batch);\n        }\n      }\n    }, batchInterval);\n  }\n\n  function handleLogEvent(event) {\n    if (!isEnabled) return;\n\n    const logEntry = event.detail;\n\n    // Only send warn/error/critical to server\n    const level = logEntry.level;\n    if (level === 'debug' || level === 'info') return;\n\n    buffer.push({\n      ...logEntry,\n      // Ensure clean serialization\n      data: logEntry.data ? JSON.parse(JSON.stringify(logEntry.data)) : null,\n      metadata: logEntry.metadata ? JSON.parse(JSON.stringify(logEntry.metadata)) : null\n    });\n\n    // Trim buffer if too large\n    if (buffer.length > maxBatchSize * 2) {\n      buffer = buffer.slice(-maxBatchSize);\n    }\n\n    scheduleBatch();\n  }\n\n  function start() {\n    if (isEnabled) return;\n\n    isEnabled = true;\n\n    // Attach listener\n    logListener = eventHandlers.trackListener(\n      browserService.getWindow(),\n      'app:log',\n      handleLogEvent,\n      { context: 'LogDelivery' }\n    );\n\n    scheduleBatch();\n  }\n\n  function stop() {\n    isEnabled = false;\n\n    if (batchTimer) {\n      browserService.clearTimeout(batchTimer);\n      batchTimer = null;\n    }\n\n    if (logListener) {\n      logListener(); // Call the cleanup function\n      logListener = null;\n    }\n\n    buffer = [];\n  }\n\n  return {\n    start,\n    stop,\n\n    async flush() {\n      if (buffer.length > 0) {\n        const batch = [...buffer];\n        buffer = [];\n        await deliverBatch(batch);\n      }\n    },\n\n    cleanup() {\n      stop();\n      eventHandlers.cleanupListeners({ context: 'LogDelivery' });\n    }\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 3378,
          "_transferSize": 4566,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.551Z",
        "time": 140.20300000265706,
        "timings": {
          "blocked": 88.7639999887487,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.09199999999999875,
          "wait": 50.113000003608875,
          "receive": 1.2340000102994964,
          "_blocked_queueing": 0.718999988748692,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
          "lineNumber": 9
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/domAPI.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/init/appInitializer.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1483,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "13963"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"9f57d1ab23098c9de31c7414184a0de4\""
            },
            {
              "name": "last-modified",
              "value": "Mon, 02 Jun 2025 02:03:27 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13963,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * domAPI.js — Abstracted DOM helpers for strict DI, testability, and browser-independent access.\n * To be injected throughout app modules instead of direct usage of document, window, or related globals.\n *\n * Usage:\n *   import { createDomAPI } from './domAPI.js';\n *   const domAPI = createDomAPI({ documentObject: document, windowObject: window });\n *   domAPI.getElementById('foo'); // etc.\n */\n\n/**\n * domAPI.js — Abstracted DOM helpers for strict DI, testability, and browser-independent access.\n * To be injected throughout app modules instead of direct usage of document, window, or related globals.\n *\n * Usage:\n *   import { createDomAPI } from './domAPI.js';\n *   const domAPI = createDomAPI({ documentObject: document, windowObject: window });\n *   domAPI.getElementById('foo'); // etc.\n */\n\nexport function createDomAPI({\n  documentObject,\n  windowObject,\n  debug = false,\n  sanitizer = null,\n  logger = null\n} = {}) {\n  if (!documentObject || !windowObject) {\n    throw new Error('[domAPI] documentObject & windowObject are required – do not rely on globals.');\n  }\n\n  // Local debug output (disabled when debug === false)\n  const _log = (...m) => {\n    if (!debug) return;\n    // Optionally add debugging output here if desired.\n  };\n\n  // unified warn/error sink (no direct console)\n  let _logger = logger || { warn: () => { }, error: () => { } };\n\n  /* allow late upgrade when real logger is ready */\n  function setLogger(newLogger) { if (newLogger) _logger = newLogger; }\n\n  // Guardrails: expose `cleanup()` in factory return for compliance\n  function cleanup() {\n    // No event listeners or DOM state to clean, but present for guardrail compliance\n  }\n\n  // --- Form helper wrappers for DI-strict modules ---\n  function checkFormValidity(form) {\n    return typeof form?.checkValidity === 'function' ? form.checkValidity() : false;\n  }\n  function reportFormValidity(form) {\n    return typeof form?.reportValidity === 'function' ? form.reportValidity() : false;\n  }\n  function resetForm(form) {\n    if (typeof form?.reset === 'function') form.reset();\n  }\n\n  // --- Additional helpers for DI compliance ---\n  function toggleClass(el, cls, force) {\n    if (!el?.classList || !cls) return;\n    String(cls).split(/\\s+/).filter(Boolean).forEach(c =>\n      typeof force === \"boolean\"\n        ? el.classList.toggle(c, force)\n        : el.classList.toggle(c)\n    );\n  }\n  function setStyle(el, prop, val) {\n    if (el && el.style) {\n      el.style[prop] = val;\n    }\n  }\n  function setProperty(el, prop, value) {\n    if (!el) return;\n    try {\n      if (prop in el) el[prop] = value;\n      else el.setAttribute(prop, value);\n    } catch (err) {\n      logger.warn('[domAPI] setProperty failed', { error: err.message, prop, context: 'domAPI:setProperty' });\n    }\n  }\n  function getParentNode(el) {\n    return el?.parentNode ?? null;\n  }\n  function selectElement(el) {\n    try {\n      el?.select?.();\n    } catch (err) {\n      logger.warn('[domAPI] selectElement failed', { error: err.message, context: 'domAPI:selectElement' });\n    }\n  }\n  function callMethod(obj, method, ...args) {\n    if (!obj) return undefined;\n    const fn = obj[method];\n    if (typeof fn === 'function') return fn.apply(obj, args);\n    return undefined;\n  }\n  function getValue(el) {\n    return el ? (typeof el.value !== 'undefined' ? el.value : '') : '';\n  }\n  function setValue(el, v) {\n    if (el && typeof el.value !== 'undefined') el.value = v;\n  }\n  function getTextContent(el) {\n    return el ? (typeof el.textContent !== 'undefined' ? el.textContent : '') : '';\n  }\n  function closest(el, selector) {\n    return el && typeof el.closest === 'function' ? el.closest(selector) : null;\n  }\n  function getDataAttribute(el, k) {\n    return el && el.dataset ? el.dataset[k] : undefined;\n  }\n\n  return {\n    getElementById(id) {\n      const el = documentObject.getElementById(id);\n      if (!el) _log(`getElementById(\"${id}\") → null`);\n      return el;\n    },\n    querySelector(arg1, arg2) {\n      let base, selector;\n      if (typeof arg1 === 'string') {\n        selector = arg1;\n        base = (arg2 && typeof arg2.querySelector === 'function') ? arg2 : documentObject;\n      } else if (arg1 && typeof arg1.querySelector === 'function' && typeof arg2 === 'string') {\n        base = arg1;\n        selector = arg2;\n      } else {\n        throw new Error('[domAPI.querySelector] Invalid arguments; fallback to String(arg1) is forbidden.');\n      }\n      const el = base.querySelector(selector);\n      if (!el) _log(`querySelector(\"${selector}\") (base=${base?.id || base?.nodeName || 'document'}) → null`);\n      return el;\n    },\n    querySelectorAll(arg1, arg2) {\n      let base, selector;\n      if (typeof arg1 === 'string') {\n        selector = arg1;\n        base = (arg2 && typeof arg2.querySelectorAll === 'function') ? arg2 : documentObject;\n      } else if (arg1 && typeof arg1.querySelectorAll === 'function' && typeof arg2 === 'string') {\n        base = arg1;\n        selector = arg2;\n      } else {\n        selector = String(arg1);\n        base = documentObject;\n      }\n      return base.querySelectorAll(selector);\n    },\n    createElement: (tag) => documentObject.createElement(tag),\n    getBody: () => documentObject.body,\n    getDocumentElement: () => documentObject.documentElement,\n    getScrollingElement: () =>\n      documentObject.scrollingElement ||\n      documentObject.documentElement ||\n      documentObject.body,\n    appendChild: (parent, child) => parent && child && parent.appendChild(child),\n    removeChild: (parent, child) => {\n      if (parent && child && typeof parent.removeChild === 'function') {\n        parent.removeChild(child);\n      }\n    },\n    replaceChildren: (parent, ...nodes) => parent && parent.replaceChildren && parent.replaceChildren(...nodes),\n    setInnerHTML: (el, html) => {\n      if (!el) return;\n      if (sanitizer && typeof sanitizer.sanitize === 'function') {\n        /*\n         * DOMPurify (our default sanitizer) removes non-standard / less common\n         * interactive elements such as <dialog> unless they are explicitly\n         * allowed.  The application injects the complete modals template\n         * (static/html/modals.html) at runtime which relies heavily on\n         * <dialog> elements.  Once stripped, ModalManager cannot locate\n         * `#loginModal`, `#projectModal`, … and any call to\n         *   modalManager.show('login')\n         * quietly fails — the user never sees the Login dialog.\n         *\n         * To fix this we extend the allow-list with the HTML5 <dialog> tag\n         * plus its `open` attribute before delegating to DOMPurify.\n         *\n         * NOTE: This is a global relaxation but still safe because <dialog>\n         * does not execute scripts and keeping it blocked offers no concrete\n         * XSS protection advantage.\n         */\n        const dialogAllowCfg = { ADD_TAGS: ['dialog'], ADD_ATTR: ['open', 'method'] };\n        el.innerHTML = sanitizer.sanitize(html, dialogAllowCfg);\n      } else {\n        _logger.warn('[domAPI] setInnerHTML called without sanitizer (auto-escaped)', { context: 'domAPI:setInnerHTML' });\n        el.textContent = String(html).replace(/<[^>]*>?/gm, '');\n      }\n    },\n    isDocumentHidden: () => documentObject.hidden === true,\n    ownerDocument: documentObject,\n    window: windowObject,\n    getActiveElement: () => documentObject.activeElement,\n    body: documentObject.body,\n    getComputedStyle: (el) => {\n      if (windowObject?.getComputedStyle) {\n        return windowObject.getComputedStyle(el);\n      }\n      logger.error('[domAPI.getComputedStyle] window.getComputedStyle is unavailable; fallback/stub is forbidden.');\n      throw new Error('[domAPI.getComputedStyle] window.getComputedStyle is unavailable; fallback/stub is forbidden.');\n    },\n    preventDefault: (e) => {\n      if (e && typeof e.preventDefault === 'function') {\n        e.preventDefault();\n      }\n    },\n    closest,\n    addClass(el, cls) {\n      if (!el?.classList || !cls) return;\n      el.classList.add(...String(cls).split(/\\s+/).filter(Boolean));\n    },\n    removeClass(el, cls) {\n      if (!el?.classList || !cls) return;\n      el.classList.remove(...String(cls).split(/\\s+/).filter(Boolean));\n    },\n    toggleClass,\n    hasClass: (el, cls) => {\n      return !!(el && el.classList && el.classList.contains(cls));\n    },\n    setAttribute: (el, k, v) => {\n      if (el && typeof el.setAttribute === 'function') {\n        el.setAttribute(k, v);\n      }\n    },\n    getAttribute: (el, k) => {\n      if (el && typeof el.getAttribute === 'function') {\n        return el.getAttribute(k);\n      }\n      return null;\n    },\n    removeAttribute: (el, k) => {\n      if (el && typeof el.removeAttribute === 'function') {\n        el.removeAttribute(k);\n      }\n    },\n    setDataAttribute: (el, k, v) => {\n      if (el && el.dataset) {\n        el.dataset[k] = v;\n      }\n    },\n    getDataAttribute,\n    removeDataAttribute: (el, k) => {\n      if (el && el.dataset) {\n        delete el.dataset[k];\n      }\n    },\n    setStyle,\n    setProperty,\n    getTextContent,\n    setTextContent: (el, text) => {\n      if (el && typeof text === 'string') {\n        el.textContent = text;\n      }\n    },\n    getValue,\n    setValue,\n    isSameNode: (elA, elB) => {\n      if (elA && typeof elA.isSameNode === 'function') {\n        return elA.isSameNode(elB);\n      }\n      return elA === elB;\n    },\n    getId: (el) => {\n      if (el && typeof el.id === 'string') {\n        return el.id;\n      }\n      return null;\n    },\n    addEventListener: (el, ...args) => {\n      (el ?? documentObject).addEventListener(...args);\n    },\n    removeEventListener: (el, ...args) => {\n      (el ?? documentObject).removeEventListener(...args);\n    },\n    dispatchEvent: (target, event) => {\n      if (!target || typeof target.dispatchEvent !== 'function') {\n        throw new Error('dispatchEvent: invalid target');\n      }\n      return target.dispatchEvent(event);\n    },\n    getDocument: () => documentObject,\n    callMethod,\n    getWindow: () => windowObject,\n    createDocumentFragment: () => documentObject.createDocumentFragment(),\n    createTextNode: (txt = '') => documentObject.createTextNode(txt),\n    setElementId: (el, id) => { if (el) el.id = id; },\n    setClassName: (el, cls) => { if (el) el.className = cls; },\n    selectElement,\n    getParentNode,\n    insertBefore: (parent, node, refNode = null) =>\n      parent?.insertBefore?.(node, refNode),\n    createSVGElement: (tag) =>\n      documentObject.createElementNS('http://www.w3.org/2000/svg', tag),\n    getProperty: (el, prop) => el?.[prop],\n\n    /* ── <NEW helpers – added for ThemeManager> ───────────────────── */\n\n    /**\n     * Attach a listener to a MediaQueryList and return an unsubscribe fn.\n     * Works with both modern addEventListener('change', …) and the\n     * older addListener/removeListener APIs.\n     */\n    addMediaListener(mqList, handler) {\n      if (!mqList || typeof handler !== 'function') return () => {};\n      const wrapped = (e) => handler(e);\n      if (typeof mqList.addEventListener === 'function') {\n        mqList.addEventListener('change', wrapped);\n        return () => mqList.removeEventListener('change', wrapped);\n      }\n      if (typeof mqList.addListener === 'function') {\n        mqList.addListener(wrapped);\n        return () => mqList.removeListener(wrapped);\n      }\n      // Fallback: no-op unsubscribe\n      return () => {};\n    },\n\n    /**\n     * Convenience wrapper that creates & starts a MutationObserver.\n     * Returns the observer so callers can disconnect() later.\n     */\n    createMutationObserver(callback, options = {}, target = documentObject) {\n      const Observer = windowObject.MutationObserver;\n      if (typeof Observer !== 'function') {\n        logger.error('[domAPI] MutationObserver unavailable – createMutationObserver noop',\n                      { context: 'domAPI:createMutationObserver' });\n        return { disconnect() {} };\n      }\n      const obs = new Observer(callback);\n      try {\n        const opts = Object.assign({ childList: true, subtree: true }, options);\n        obs.observe(target, opts);\n      } catch (err) {\n        logger.error('[domAPI] MutationObserver.observe failed', err,\n                      { context: 'domAPI:createMutationObserver' });\n      }\n      return obs;\n    },\n\n    /* ── <NEW helpers – event/DI compliance> ───────────────────────── */\n    /* Document-level attributes (ThemeManager & others) */\n    getDocumentAttribute(attr) {\n      const docEl = documentObject.documentElement;\n      return docEl ? docEl.getAttribute(attr) : null;\n    },\n    setDocumentAttribute(attr, value) {\n      const docEl = documentObject.documentElement;\n      if (!docEl) return;\n      if (value === null || value === undefined) docEl.removeAttribute(attr);\n      else docEl.setAttribute(attr, value);\n    },\n\n    /* Local-storage helpers (ThemeManager) */\n    localStorageGet(key) {\n      try { return windowObject.localStorage.getItem(key); }\n      catch { return null; }\n    },\n    localStorageSet(key, value) {\n      try { windowObject.localStorage.setItem(key, value); }\n      catch { /* quota / disabled – silently ignore */ }\n    },\n\n    /* matchMedia shim (ThemeManager) */\n    matchMedia(query) {\n      return (typeof windowObject.matchMedia === 'function')\n        ? windowObject.matchMedia(query)\n        : { matches: false, addListener() {}, removeListener() {},\n            addEventListener() {}, removeEventListener() {} };\n    },\n\n    /* Form-validation wrappers (eventHandlers.setupForm) */\n    checkFormValidity ,\n    reportFormValidity,\n    resetForm         ,\n    /* ── </NEW helpers> ─────────────────────────────────────────────── */\n\n    setLogger,      // ← NEW\n    cleanup\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 13963,
          "_transferSize": 15152,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.551Z",
        "time": 140.29399999708403,
        "timings": {
          "blocked": 88.64300000246708,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07800000000000296,
          "wait": 50.538999993816944,
          "receive": 1.034000000800006,
          "_blocked_queueing": 0.8240000024670735,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126339",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
          "lineNumber": 10
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/init/appInitializer.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1483,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "32348"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"826268bd1c7fe9a1f5c596a3018737d2\""
            },
            {
              "name": "last-modified",
              "value": "Mon, 02 Jun 2025 19:05:11 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 32348,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module eventHandler\n * @description DI-strict, orchestrated UI event utility collection. Manages tracked event listeners\n * and provides common UI setup helpers like forms, modals, and collapsibles.\n * All notifications use the injected `notify` utility. No direct console or global DOM/Window access.\n *\n * @param {Object} deps - Dependencies injected via DI.\n * @param {Object} deps.app - Core application reference (optional, for app-specific logic like redirects).\n * @param {Object} deps.projectManager - Project Manager reference (optional, for project actions).\n * @param {Object} deps.modalManager - Modal Manager reference (optional, for modal actions).\n * @param {Object} deps.DependencySystem - Required. DI registry.\n * @param {Object} deps.domAPI - Required. DOM abstraction layer.\n * @param {Object} deps.browserService - Required. Browser abstraction (URL, storage, etc.).\n * @param {Object} deps.notify - Required. Context-aware notification utility.\n * @param {Object} deps.APP_CONFIG - Required. Application configuration object.\n * @param {Function} [deps.navigate] - Optional navigation function override.\n * @param {Object} [deps.storage] - Optional storage abstraction override (usually from browserService).\n * @param {Object} deps.errorReporter - Required error logging utility.\n * @param {Object} deps.logger - Required logging utility.\n * @param {Object} [deps.domReadinessService] - Readiness service (use setter for DI circularity).\n * @param {Object} [deps.timeAPI] - Optional timing API (defaults to performance.now).\n * @returns {Object} Event handler API { trackListener, cleanupListeners, delegate, etc. }\n */\n\nimport { debounce as globalDebounce, toggleElement as globalToggleElement } from './utils/globalUtils.js';\n\nexport function createEventHandlers({\n  app,\n  projectManager,\n  modalManager,\n  DependencySystem,\n  domAPI,\n  browserService,\n  APP_CONFIG,\n  navigate,\n  storage,\n  logger,           // STRICT: must be provided via DI\n  errorReporter,    // STRICT: must be provided via DI\n  safeHandler,      // NEW – canonical wrapper (required)\n  domReadinessService // Optional, but if provided, must be validated\n} = {}) {\n  // === Dependency validation block (must be at the very top for pattern checker) ===\n  if (!DependencySystem) {\n    throw new Error('[eventHandler] Missing DependencySystem');\n  }\n  if (!domAPI) {\n    throw new Error('[eventHandler] Missing domAPI');\n  }\n  if (!browserService) {\n    throw new Error('[eventHandler] Missing browserService');\n  }\n  if (!APP_CONFIG) {\n    throw new Error('[eventHandler] Missing APP_CONFIG');\n  }\n  if (!logger)\n    throw new Error('[eventHandler] Missing logger dependency');\n  if (!errorReporter) {\n    throw new Error('[eventHandler] Missing errorReporter');\n  }\n  // domReadinessService is optional at factory, but required at init\n  // ================================================================\n  const MODULE = 'EventHandler';\n  let _domReadinessService = domReadinessService || null;\n  function setDomReadinessService(svc) {\n    _domReadinessService = svc;\n    // Break circular dependency: inform domReadinessService about EventHandlers\n    if (svc?.setEventHandlers) {\n      svc.setEventHandlers(eventHandlerAPI);\n    }\n  }\n  function setLogger(newLogger)      { if (newLogger) logger = newLogger; }\n  function setSafeHandler(newSH)     { if (typeof newSH === 'function') SH = newSH; }\n\n  /* allow late upgrade once the real errorReporter exists */\n  function setErrorReporter(newER)   { if (newER) errorReporter = newER; }\n\n  // --- safeHandler canonical dependency check ---\n  let   SH = null;\n  function resolveSafeHandler() {\n    if (SH && typeof SH === 'function') return SH;\n    if (typeof safeHandler === 'function') {\n      SH = safeHandler;\n      return SH;\n    }\n    SH = DependencySystem.modules.get('safeHandler');\n    if (typeof SH !== 'function') {\n      throw new Error('[eventHandler] Missing safeHandler dependency');\n    }\n    return SH;\n  }\n\n  logger.debug('[EventHandler] Factory initialized', {\n    MODULE,\n    version: '1.0',\n    appInjected: !!app,\n    context: MODULE\n  });\n  // We allow dynamic injection/update of projectManager\n  let _projectManager = projectManager;\n\n  // Singleton flags, preventing duplicate setup\n  let authButtonDelegationBound = false;\n\n  // Storage fallback\n  const storageBackend = storage || browserService;\n\n  function redirect(url) {\n    if (typeof navigate === 'function') {\n      navigate(url);\n    } else if (app && typeof app.navigate === 'function') {\n      app.navigate(url);\n    } else if (browserService && typeof browserService.setLocation === 'function') {\n      browserService.setLocation(url);\n    }\n  }\n\n  const trackedListeners = new Map();\n  const PRIORITY = { HIGH: 1, NORMAL: 5, LOW: 10 };\n\n  /**\n   * Central method to attach an event listener with bookkeeping for cleanup.\n   * @param {HTMLElement} element\n   * @param {string} type\n   * @param {Function} handler\n   * @param {Object} options\n   * @returns {Function|undefined} The wrapped handler, or undefined on failure\n   */\n  function trackListener(element, type, handler, options = {}) {\n    if (!element || typeof element.addEventListener !== 'function') return undefined;\n\n    const { capture = false, once = false, signal, passive } = options;\n    const nonPassive = ['click', 'submit', 'wheel', 'touchstart', 'touchmove', 'keydown', 'keypress', 'keyup'];\n    const finalOpts = { capture, once, signal, passive: typeof passive === 'boolean' ? passive : !nonPassive.includes(type) };\n\n    // bookkeeping (prevents duplicates)\n    const elMap = trackedListeners.get(element) || new Map();\n    const typeMap = elMap.get(type) || new Map();\n    if (!trackedListeners.has(element)) trackedListeners.set(element, elMap);\n    if (!elMap.has(type)) elMap.set(type, typeMap);\n    if (typeMap.has(handler))\n      return typeMap.get(handler).remove;        // always hand back the “unsubscribe”\n\n    let wrapped = (evt) => handler.call(element, evt);\n\n    if (finalOpts.once) {\n      // make sure our internal maps don’t leak after the handler fires\n      const _wrappedOnce = wrapped;\n      wrapped = (...a) => {\n        try { _wrappedOnce(...a); } finally {\n          // remove record from bookkeeping maps\n          browserService.setTimeout(() => untrackListener(element, type, handler), 0);\n        }\n      };\n    }\n\n    // domAPI is a required dependency, so domAPI.addEventListener should always be used.\n    domAPI.addEventListener(element, type, wrapped, finalOpts);\n\n    const remove = () => {               // función de des-registro\n      try {\n        untrackListener(element, type, handler);\n      } catch (err) {\n        logger.error(`[${MODULE}][trackListener][remove] Failed to untrackListener`, err, { context: MODULE, element, type });\n      }\n    };\n\n    typeMap.set(handler, {\n      wrappedHandler: wrapped,\n      options: finalOpts,\n      context: options.context,\n      remove: remove          // <- new\n    });\n\n    return remove;                       // ← now returns the “unsubscribe” function\n  }\n\n\n  function toggleVisible(elementSelectorOrElement, show) {\n    const element =\n      typeof elementSelectorOrElement === 'string'\n        ? domAPI.querySelector(elementSelectorOrElement)\n        : elementSelectorOrElement;\n    return globalToggleElement(element, show, domAPI);\n  }\n\n  // ---------------------- HANDLER ANONYMITY REMEDIATION: NAMED FUNCS ----------------------------------\n\n  function togglePanelFactory({ panel, toggleButton, chevron, toggleId, storageBackend, domAPI, onExpand }) {\n    return function togglePanel(expand) {\n      domAPI.toggleClass(panel, 'hidden', !expand);\n      if (chevron) domAPI.setStyle(chevron, 'transform', expand ? 'rotate(180deg)' : 'rotate(0deg)');\n      domAPI.setAttribute(toggleButton, 'aria-expanded', String(expand));\n\n      if (expand && typeof onExpand === 'function') {\n        onExpand();\n      }\n      if (toggleId && storageBackend?.setItem) {\n        storageBackend.setItem(`${toggleId}_expanded`, String(expand));\n      }\n    };\n  }\n\n  function setupCollapsible(toggleId, panelId, chevronId, onExpand) {\n    const toggleButton = domAPI.getElementById(toggleId);\n    const panel = domAPI.getElementById(panelId);\n    const chevron = chevronId ? domAPI.getElementById(chevronId) : null;\n\n    if (!toggleButton || !panel) {\n      return;\n    }\n\n    domAPI.setAttribute(toggleButton, 'role', 'button');\n    domAPI.setAttribute(toggleButton, 'aria-controls', panelId);\n    domAPI.setAttribute(toggleButton, 'aria-expanded', 'false');\n\n    const togglePanel = togglePanelFactory({ panel, toggleButton, chevron, toggleId, storageBackend, domAPI, onExpand });\n\n    let savedState = null;\n    if (toggleId && storageBackend?.getItem) {\n      savedState = storageBackend.getItem(`${toggleId}_expanded`);\n    }\n    togglePanel(savedState === 'true');\n\n    // Named handler for collapsible toggle\n    function handleCollapsibleClick() {\n      const isCurrentlyExpanded = domAPI.getAttribute(toggleButton, 'aria-expanded') === 'true';\n      togglePanel(!isCurrentlyExpanded);\n    }\n\n    trackListener(\n      toggleButton,\n      'click',\n      resolveSafeHandler()(handleCollapsibleClick, `EventHandler:Collapsible:${toggleId}`),\n      { description: `Toggle Collapsible ${toggleId}`, module: MODULE, context: 'collapsible', source: 'setupCollapsible' }\n    );\n  }\n\n  // MODAL HANDLERS: All moved to named functions with safeHandler wrapping\n\n  function makeModalOpenHandler(modal, modalId, onOpen, SH, modalManager, domAPI) {\n    return function open() {\n      if (typeof onOpen === 'function') {\n        SH(onOpen, `EventHandler:setupModal:onOpen`)(modal);\n      }\n      if (modalManager?.show) {\n        modalManager.show(modalId);\n      } else if (typeof modal.showModal === 'function') {\n        modal.showModal();\n      } else {\n        domAPI.removeClass(modal, 'hidden');\n        domAPI.setAttribute(modal, 'open', 'true');\n      }\n    };\n  }\n\n  function makeModalCloseHandler(modal, modalId, onClose, SH, modalManager, domAPI) {\n    return function close() {\n      if (modalManager?.hide) {\n        modalManager.hide(modalId);\n      } else if (typeof modal.close === 'function') {\n        modal.close();\n      } else {\n        domAPI.addClass(modal, 'hidden');\n        domAPI.removeAttribute(modal, 'open');\n      }\n      if (typeof onClose === 'function') {\n        SH(onClose, `EventHandler:setupModal:onClose`)(modal);\n      }\n    };\n  }\n\n  function setupModal(modalId, openBtnId, closeBtnId, onOpen, onClose) {\n    const modal = domAPI.getElementById(modalId);\n    const openBtn = openBtnId ? domAPI.getElementById(openBtnId) : null;\n    const closeBtn = closeBtnId ? domAPI.getElementById(closeBtnId) : null;\n\n    if (!modal) {\n      return { open: () => { }, close: () => { } };\n    }\n\n    const open = makeModalOpenHandler(modal, modalId, onOpen, SH, modalManager, domAPI);\n    const close = makeModalCloseHandler(modal, modalId, onClose, SH, modalManager, domAPI);\n\n    // ESC close named handler\n    function handleModalEscClose(e) {\n      if (e.key === 'Escape') close();\n    }\n    // backdrop click close named handler\n    function handleModalBackdropClick(e) {\n      if (domAPI.isSameNode(e.target, modal)) close();\n    }\n\n    // Handlers for buttons\n    if (openBtn) {\n      trackListener(openBtn, 'click', resolveSafeHandler()(open, `EventHandler:setupModal:open`), {\n        description: `Open Modal ${modalId}`,\n        module: MODULE,\n        context: 'modal',\n        source: 'setupModal'\n      });\n    }\n    if (closeBtn) {\n      trackListener(closeBtn, 'click', resolveSafeHandler()(close, `EventHandler:setupModal:closeBtn`), {\n        description: `Close Modal ${modalId} via Button`,\n        module: MODULE,\n        context: 'modal',\n        source: 'setupModal'\n      });\n    }\n\n    trackListener(\n      modal,\n      'keydown',\n      resolveSafeHandler()(handleModalEscClose, `EventHandler:setupModal:keydown`),\n      { description: `Modal ESC Close ${modalId}`, module: MODULE, context: 'modal', source: 'setupModal' }\n    );\n\n    trackListener(\n      modal,\n      'click',\n      resolveSafeHandler()(handleModalBackdropClick, `EventHandler:setupModal:backdropClick`),\n      { description: `Modal Backdrop Close ${modalId}`, module: MODULE, context: 'modal', source: 'setupModal' }\n    );\n\n    return { open, close };\n  }\n\n  // FORM HANDLERS\n\n  function setupForm(formId, submitHandler, options = {}) {\n    const form = domAPI.getElementById(formId);\n    if (!form) {\n      return;\n    }\n\n    const { validateBeforeSubmit = true, showLoadingState = true, resetOnSuccess = true } = options;\n\n    // Named handler for form submit\n    async function handleSubmit(e) {\n      domAPI.preventDefault(e); // Use domAPI to avoid direct event calls\n      if (domAPI.hasClass(form, 'submitting')) return;\n\n      if (validateBeforeSubmit) {\n        if (!domAPI.checkFormValidity(form)) {\n          domAPI.reportFormValidity(form);\n          return;\n        }\n      }\n\n      const submitBtn = domAPI.querySelector('[type=\"submit\"]', form);\n      if (showLoadingState && submitBtn) {\n        domAPI.addClass(form, 'submitting');\n        domAPI.setProperty(submitBtn, 'disabled', true);\n        domAPI.setDataAttribute(submitBtn, 'originalText', domAPI.getTextContent(submitBtn));\n        domAPI.setTextContent(submitBtn, 'Submitting...');\n      }\n\n      try {\n        if (!browserService?.FormData)\n          throw new Error('[EventHandler][setupForm] browserService.FormData unavailable (strict DI)');\n        const formData = new browserService.FormData(form);\n        await SH(submitHandler, 'EventHandler:setupForm:submitHandler')(formData, form);\n        if (resetOnSuccess) {\n          domAPI.resetForm(form);\n        }\n      } catch (error) {\n        if (options.onError) {\n          try {\n            SH(options.onError, 'EventHandler:setupForm:onError')(error);\n          } catch (err) {\n            logger.error(`[${MODULE}][setupForm][handleSubmit][onError]`, err, {\n              context: 'form-submit',\n              formId: form?.id || formId\n            });\n          }\n        }\n        logger.error(`[${MODULE}][setupForm][handleSubmit]`, error, {\n          context: 'form-submit',\n          formId: form?.id || formId\n        });\n      } finally {\n        if (showLoadingState) {\n          domAPI.removeClass(form, 'submitting');\n          if (submitBtn) {\n            domAPI.setProperty(submitBtn, 'disabled', false);\n            const originalText = domAPI.getDataAttribute(submitBtn, 'originalText');\n            if (originalText) {\n              domAPI.setTextContent(submitBtn, originalText);\n              domAPI.removeDataAttribute(submitBtn, 'originalText');\n            }\n          }\n        }\n      }\n    }\n\n    trackListener(form, 'submit', resolveSafeHandler()(handleSubmit, 'EventHandler:setupForm:handleSubmit'), {\n      passive: false,\n      description: `Form Submit ${formId}`,\n      module: MODULE,\n      context: 'form',\n      source: 'setupForm'\n    });\n  }\n\n  // COMMON ELEMENTS\n\n  function setupCommonElements() {\n    const darkModeToggle = domAPI.getElementById('darkModeToggle');\n    if (darkModeToggle && !domAPI.getDataAttribute(darkModeToggle, 'ehBound')) {\n      function handleDarkModeToggleClick() {\n        domAPI.toggleClass(domAPI.getDocument().documentElement, 'dark');\n        const isDark = domAPI.hasClass(domAPI.getDocument().documentElement, 'dark');\n        storageBackend.setItem('darkMode', isDark ? 'true' : 'false');\n      }\n      trackListener(\n        darkModeToggle,\n        'click',\n        resolveSafeHandler()(handleDarkModeToggleClick, 'EventHandler:setupCommonElements:DarkModeToggleClick'),\n        { description: 'Dark Mode Toggle', module: MODULE, context: 'ui', source: 'setupCommonElements' }\n      );\n      domAPI.setDataAttribute(darkModeToggle, 'ehBound', '1'); // marca como enlazado\n      // Initial dark mode state\n      if (storageBackend.getItem('darkMode') === 'true') {\n        domAPI.addClass(domAPI.getDocument().documentElement, 'dark');\n      }\n    }\n  }\n\n  // NAVIGATION ELEMENTS\n\n  function setupNavigationElements() {\n    const navLinks = domAPI.querySelectorAll('.nav-link');\n    navLinks.forEach((link) => {\n      if (!domAPI.getDataAttribute(link, 'ehBound')) {\n        function handleNavLinkClick(e) {\n          domAPI.preventDefault(e);\n          const href = domAPI.getAttribute(link, 'href');\n          if (href) redirect(href);\n        }\n        trackListener(\n          link,\n          'click',\n          resolveSafeHandler()(handleNavLinkClick, `EventHandler:setupNavigationElements:NavLink:${domAPI.getAttribute(link, 'href') || 'unknown'}`),\n          {\n            description: `Navigation Link: ${domAPI.getAttribute(link, 'href') || 'unknown'}`,\n            module: MODULE,\n            context: 'navigation',\n            source: 'setupNavigationElements'\n          }\n        );\n        domAPI.setDataAttribute(link, 'ehBound', '1');\n      }\n    });\n  }\n\n  // PROJECT MODAL FORM\n\n  function setupProjectModalForm() {\n    const pm = _projectManager || DependencySystem.modules.get('projectManager');\n    if (!pm) {\n      return;\n    }\n    async function handleProjectFormSubmit(formData) {\n      const data = Object.fromEntries(formData.entries());\n      if (data.max_tokens) data.max_tokens = parseInt(data.max_tokens, 10);\n      if (!data.name) {\n        throw new Error('Project name is required.');\n      }\n      await pm.saveProject(data.projectId, data);\n      modalManager?.hide?.('project');\n      pm.loadProjects?.('all');\n    }\n    function handleProjectFormError(err) {\n      logger.error(`[${MODULE}][setupProjectModalForm] Error in project form submit`, err, { context: 'projectModalForm' });\n    }\n    setupForm(\n      'projectModalForm',\n      handleProjectFormSubmit,\n      {\n        resetOnSuccess: true,\n        onError: handleProjectFormError\n      }\n    );\n  }\n\n  // CONTENT ELEMENTS\n\n  function setupContentElements() {\n    const collapsibleToggles = domAPI.querySelectorAll('[data-collapsible-toggle]');\n    collapsibleToggles.forEach((toggle) => {\n      const panelId = domAPI.getDataAttribute(toggle, 'collapsible-toggle');\n      const chevronId = domAPI.getDataAttribute(toggle, 'collapsible-chevron');\n      if (panelId) {\n        setupCollapsible(domAPI.getId(toggle) || `gen-toggle-${panelId}`, panelId, chevronId);\n      }\n    });\n  }\n\n  function untrackListener(el, evt, handler) {\n    const elementMap = trackedListeners.get(el);\n    if (!elementMap) return;\n    const typeMap = elementMap.get(evt);\n    if (!typeMap || !typeMap.has(handler)) return;\n\n    const details = typeMap.get(handler);\n    try {\n      if (details.options.once &&\n        !(el && el.removeEventListener)) {\n        /* already auto-removed by the browser – just delete maps */\n        typeMap.delete(handler);\n        if (typeMap.size === 0) elementMap.delete(evt);\n        if (elementMap.size === 0) trackedListeners.delete(el);\n        return;\n      }\n      // domAPI is a required dependency, so domAPI.removeEventListener should always be used.\n      domAPI.removeEventListener(el, evt, details.wrappedHandler, details.options);\n      typeMap.delete(handler);\n      if (typeMap.size === 0) elementMap.delete(evt);\n      if (elementMap.size === 0) trackedListeners.delete(el);\n    } catch (error) {\n      logger.error(`[${MODULE}][untrackListener] Failed to remove event listener`, error, {\n        element: el,\n        evt,\n        handler,\n        context: details.context\n      });\n      errorReporter.report?.(error, { module: MODULE, evt, fn: 'untrackListener' });\n    }\n  }\n\n  function cleanupListeners(options = {}) {\n    const { context: cleanupContext, target: targetFilter } = options;\n\n    const entriesToRemove = [];\n\n    trackedListeners.forEach((elementMap, element) => {\n      if (targetFilter && element !== targetFilter) return;\n      elementMap.forEach((typeMap, type) => {\n        typeMap.forEach((details, originalHandler) => {\n          if (!cleanupContext || details.context === cleanupContext) {\n            try {\n              // domAPI is a required dependency, so domAPI.removeEventListener should always be used.\n              domAPI.removeEventListener(element, type, details.wrappedHandler, details.options);\n              entriesToRemove.push({ element, type, originalHandler });\n            } catch (error) {\n              logger.error(`[${MODULE}][cleanupListeners] Error removing event listener`, error, {\n                element, type, details, context: cleanupContext\n              });\n              errorReporter.report?.(error, { module: MODULE, evt: type, fn: 'cleanupListeners', context: cleanupContext });\n            }\n          }\n        });\n      });\n    });\n\n    // Remove them from the map\n    entriesToRemove.forEach(({ element, type, originalHandler }) => {\n      const elementMap = trackedListeners.get(element);\n      if (elementMap) {\n        const typeMap = elementMap.get(type);\n        if (typeMap) {\n          typeMap.delete(originalHandler);\n          if (typeMap.size === 0) {\n            elementMap.delete(type);\n          }\n        }\n        if (elementMap.size === 0) {\n          trackedListeners.delete(element);\n        }\n      }\n    });\n  }\n\n  // DELEGATE: make sure delegate handler is always a named const for remediation\n  function delegate(container, eventType, selector, handler, options = {}) {\n    const delegatedHandler = function delegatedEventHandler(event) {\n      const target = domAPI.closest(event.target, selector);\n      if (target) {\n        handler.call(target, event, target);\n      }\n    };\n    return trackListener(container, eventType, SH(delegatedHandler, `EventHandler:delegate:${eventType}:${selector}`), {\n      ...options,\n      description: options.description || `Delegate ${eventType} on ${selector}`,\n      context: options.context || MODULE,\n      module: options.module || MODULE,\n      source: options.source || 'delegate'\n    });\n  }\n\n  // login-modal tab handlers as named functions\n  function setupLoginModalTabs() {\n    const loginModal = domAPI.getElementById('loginModal');\n    if (!loginModal) {\n      return;\n    }\n\n    function handleLoginTabClick(event, tabElement) {\n      const registerTabElement = domAPI.querySelector(loginModal, '#modalRegisterTab');\n      const loginPanel = domAPI.querySelector(loginModal, '#loginPanel');\n      const registerPanel = domAPI.querySelector(loginModal, '#registerPanel');\n      if (!registerTabElement || !loginPanel || !registerPanel) {\n        return;\n      }\n      domAPI.addClass(tabElement, 'tab-active');\n      domAPI.setAttribute(tabElement, 'aria-selected', 'true');\n      domAPI.removeClass(registerTabElement, 'tab-active');\n      domAPI.setAttribute(registerTabElement, 'aria-selected', 'false');\n      domAPI.removeClass(loginPanel, 'hidden');\n      domAPI.addClass(registerPanel, 'hidden');\n    }\n\n    function handleRegisterTabClick(event, tabElement) {\n      const loginTabElement = domAPI.querySelector(loginModal, '#modalLoginTab');\n      const loginPanel = domAPI.querySelector(loginModal, '#loginPanel');\n      const registerPanel = domAPI.querySelector(loginModal, '#registerPanel');\n\n      if (!loginTabElement || !loginPanel || !registerPanel) {\n        return;\n      }\n\n      if (tabElement && tabElement.classList) {\n        domAPI.addClass(tabElement, 'tab-active');\n        domAPI.setAttribute(tabElement, 'aria-selected', 'true');\n      }\n      if (loginTabElement && loginTabElement.classList) {\n        domAPI.removeClass(loginTabElement, 'tab-active');\n        domAPI.setAttribute(loginTabElement, 'aria-selected', 'false');\n      }\n      if (registerPanel && registerPanel.classList) {\n        domAPI.removeClass(registerPanel, 'hidden');\n      }\n      if (loginPanel && loginPanel.classList) {\n        domAPI.addClass(loginPanel, 'hidden');\n      }\n    }\n\n    // Delegated listener for Login Tab\n    delegate(\n      loginModal,\n      'click',\n      '#modalLoginTab',\n      handleLoginTabClick,\n      { description: 'Switch to Login Tab (Delegated)', module: MODULE, context: 'authTabs' }\n    );\n\n    // Delegated listener for Register Tab\n    delegate(\n      loginModal,\n      'click',\n      '#modalRegisterTab',\n      handleRegisterTabClick,\n      { description: 'Switch to Register Tab (Delegated)', module: MODULE, context: 'authTabs' }\n    );\n  }\n\n  /**\n   * Creates a CustomEvent in a DI-compliant way.\n   * @param {string} type - The name of the event.\n   * @param {Object} [options={}] - Options for the CustomEvent (e.g., detail, bubbles, cancelable).\n   * @returns {CustomEvent|null} The created CustomEvent, or null if windowObject or CustomEvent API is not available.\n   */\n  function createCustomEvent(type, options = {}) {\n    const windowObject = browserService?.getWindow?.(); // browserService is in the factory's scope\n    if (!windowObject || typeof windowObject.CustomEvent !== 'function') {\n      throw new Error(`[${MODULE}][createCustomEvent] FATAL: windowObject.CustomEvent is not available. This will break app event dispatching. Please ensure the polyfill is loaded before any app code.`);\n    }\n    return new windowObject.CustomEvent(type, options);\n   }\n\n   /**\n    * Dispatch a custom event in a DI-compliant way.\n    *\n    * @param {string}       type               Event name.\n    * @param {Object}       [detail={}]        Detail payload.\n    * @param {EventTarget}  [target=null]      Dispatch target (defaults to document).\n    * @returns {boolean}                       True if dispatched, otherwise false.\n    */\n   function dispatch(type, detail = {}, target = null) {\n     try {\n       const evt = createCustomEvent(type, { detail, bubbles: true });\n       const tgt =\n         target ||\n         (domAPI?.getDocument\n           ? domAPI.getDocument()\n           : browserService?.getWindow?.()?.document);\n\n       if (!tgt || typeof tgt.dispatchEvent !== 'function') {\n         logger.warn(`[${MODULE}][dispatch] Cannot dispatch \"${type}\" – invalid target`, {\n           context: MODULE\n         });\n         return false;\n       }\n       domAPI.dispatchEvent(tgt, evt);\n       return true;\n     } catch (err) {\n       logger.error(`[${MODULE}][dispatch] Failed to dispatch \"${type}\"`, err, {\n         context: MODULE\n       });\n       return false;\n     }\n   }\n\n  function cleanup() {\n    // centralised cleanup – must reference the public API, not the\n    // constructor-scope variable (rule-2 DI compliance)\n    eventHandlerAPI.cleanupListeners({ context: MODULE });\n    // You could add more explicit cleanup logic here if stateful singletons or intervals are added\n  }\n\n  // ─── Public API object (assembled before init) ────────────────────────────\n  const eventHandlerAPI = {\n    trackListener,\n    cleanupListeners,\n    delegate,\n    dispatch,\n    debounce        : globalDebounce,\n    toggleVisible,\n    setupCollapsible,\n    setupModal,\n    setupForm,\n    PRIORITY,\n    untrackListener,\n    createCustomEvent,\n    dispatchEvent,\n    setProjectManager : (pm) => { _projectManager = pm; },\n    setDomReadinessService,\n    setLogger,\n    setSafeHandler,\n    setErrorReporter,      // ← NEW\n    DependencySystem,\n    cleanup\n  };\n\n  // ――― init becomes a method of the API object ―――\n  let initialized = false;\n  eventHandlerAPI.init = async function () {\n    if (initialized) return eventHandlerAPI;           // ✅ return full API\n\n    if (!_domReadinessService) {\n      throw new Error('[eventHandler.init] domReadinessService must be set via setDomReadinessService before calling init()');\n    }\n\n    const dependencyWaitTimeout = APP_CONFIG?.TIMEOUTS?.DEPENDENCY_WAIT ?? 10000;\n\n    /* --- DOM & dependency readiness --- */\n    await _domReadinessService.documentReady();\n    await _domReadinessService.dependenciesAndElements({\n      deps        : ['app','auth','projectManager','modalManager','domAPI','browserService'],\n      domSelectors: ['body'],\n      timeout     : dependencyWaitTimeout,\n      context     : 'eventHandler.init'\n    });\n\n    /* --- in-DOM setup formerly in the old init() --- */\n    await _domReadinessService.documentReady();\n    setupCommonElements();\n    setupNavigationElements();\n    setupContentElements();\n\n    /* ---- project modal form wait (unchanged) ---- */\n    try {\n      await _domReadinessService.elementsReady('#projectModalForm', {\n        timeout: 3000,\n        context: 'eventHandler.init:modalForm'\n      }).then(() => {\n        setupProjectModalForm();\n        logger.info(`[${MODULE}][init] Project modal form setup completed`,\n                    { context: 'eventHandler.init:modalForm' });\n      }).catch((error) => {\n        logger.warn(`[${MODULE}][init] elementsReady('#projectModalForm') failed`,\n                    error,\n                    { context: 'eventHandler.init:modalForm' });\n      });\n    } catch (error) {\n      logger.error(`[${MODULE}][init] Error during modal form setup`, error,\n                   { context: 'eventHandler.init:modalForm' });\n    }\n\n    /* ---- login-modal delegation (logic kept verbatim) ---- */\n    function bindAuthButtonDelegate() {\n      if (authButtonDelegationBound) return;\n      const parentNode = domAPI.getElementById('header') || domAPI.getDocument();\n\n      logger.info('[EventHandler] bindAuthButtonDelegate', {\n        parentNodeExists: !!parentNode,\n        context: 'eventHandler.bindAuthButtonDelegate'\n      });\n\n      /*\n       * IMPORTANT: The ModalManager may not be registered at the moment this\n       * function is invoked because `modalsLoaded` can fire _before_\n       * createModalManager() finishes wiring itself into the DependencySystem.\n       * We therefore attach the delegated listener unconditionally and resolve\n       * the ModalManager lazily inside the click handler. This guarantees that\n       * the login button starts working as soon as ModalManager becomes\n       * available, without relying on an additional re-bind step.\n       */\n\n      function handleAuthButtonClick(e, _element) {\n        domAPI.preventDefault(e);\n        logger.info('[EventHandler] Auth button clicked', { context: 'eventHandler.authButton' });\n\n        try {\n          const mm = modalManager || DependencySystem.modules.get('modalManager');\n          if (!mm?.show) {\n            logger.warn('[EventHandler] ModalManager not ready – cannot show login modal yet', {\n              context: 'eventHandler.authButton'\n            });\n            return;\n          }\n          mm.show('login');\n          logger.info('[EventHandler] Login modal requested', { context: 'eventHandler.authButton' });\n        } catch (error) {\n          logger.error(`[${MODULE}][bindAuthButtonDelegate] Failed to open login modal`, error, {\n            context: 'auth'\n          });\n        }\n      }\n\n      delegate(\n        parentNode,\n        'click',\n        '#authButton',\n        handleAuthButtonClick,\n        { description: 'Delegated Login Modal Show', context: 'auth', module: MODULE }\n      );\n      authButtonDelegationBound = true;\n    }\n\n    // global requestLogin listener\n    function handleRequestLogin() {\n      const currentModalManager = modalManager || DependencySystem.modules.get('modalManager');\n      currentModalManager?.show?.('login');\n    }\n    trackListener(\n      domAPI.getDocument(),\n      'requestLogin',\n      resolveSafeHandler()(handleRequestLogin, 'EventHandler:requestLogin'),\n      { description: 'Show Login Modal (Global Event)', context: 'auth', module: MODULE, source: 'requestLogin' }\n    );\n\n    function handleModalsLoaded() {\n      bindAuthButtonDelegate();\n      setupLoginModalTabs();\n    }\n    trackListener(\n      domAPI.getDocument(),\n      'modalsLoaded',\n      SH(handleModalsLoaded, 'EventHandler:modalsLoaded'),\n      { once: true, description: 'Rebind login / tabs after modalsLoaded', context: 'auth', module: MODULE, source: 'modalsLoaded' }\n    );\n\n    // fast-path if modals already present\n    if (domAPI.getElementById('modalsContainer')?.childElementCount > 0) {\n      // Ensure the login button delegation is wired up immediately\n      bindAuthButtonDelegate();\n      setupLoginModalTabs();\n    }\n\n    initialized = true;\n    return eventHandlerAPI;                             // ✅\n  };\n\n  return eventHandlerAPI;\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 32348,
          "_transferSize": 33537,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.551Z",
        "time": 160.32100000302307,
        "timings": {
          "blocked": 117.309000003675,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06700000000000728,
          "wait": 42.237000007047314,
          "receive": 0.7079999923007563,
          "_blocked_queueing": 1.0210000036749989,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126409",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
          "lineNumber": 11
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/init/appInitializer.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1482,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "1667"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"55f1b5422960ceb90280974508f6336e\""
            },
            {
              "name": "last-modified",
              "value": "Tue, 27 May 2025 02:56:31 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1667,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "// Canonical SafeHandler implementation for DI\n// Exports createSafeHandler({ logger }) factory ONLY\n// Enforces: strict DI, no direct global/console/window access,\n// required \"cleanup\" method, single source of truth.\n\nexport function createSafeHandler({ logger, eventHandlers } = {}) {\n  if (!logger || typeof logger.error !== 'function') {\n    throw new Error('[SafeHandler] DI logger with .error() required');\n  }\n\n  // Wrap a handler function for safety, context, and traceability.\n  // Usage: safeHandlerFunction(fn, description), or safeHandlerFunction(fn)\n  function safeHandlerFunction(fn, description) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('[SafeHandler] Provided arg is not a function');\n    }\n    // Description is for structured log context; may be omitted.\n    return function (...args) {\n      try {\n        return fn.apply(this, args);\n      } catch (err) {\n        // Always use structured logging (never direct console).\n        logger.error(\n          '[SafeHandler] Unhandled error in handler',\n          err,\n          { context: `SafeHandler:${description || 'unknown'}` }\n        );\n        // Optionally rethrow or swallow; here, swallow to suppress UI breakage.\n        // Uncomment this line to propagate errors if needed:\n        // throw err;\n      }\n    };\n  }\n\n  // Return object with cleanup method as required by factory pattern\n  return {\n    // Main safeHandler function\n    safeHandler: safeHandlerFunction,\n\n    // Required cleanup method\n    cleanup() {\n      if (eventHandlers && eventHandlers.cleanupListeners) {\n        eventHandlers.cleanupListeners({ context: 'SafeHandler' });\n      }\n    }\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 1667,
          "_transferSize": 2855,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.551Z",
        "time": 166.84499999973923,
        "timings": {
          "blocked": 122.4129999994561,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.11899999999999977,
          "wait": 43.65400000274275,
          "receive": 0.6589999975403771,
          "_blocked_queueing": 1.1159999994561076,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126320",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
          "lineNumber": 12
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/domReadinessService.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/init/appInitializer.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1496,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "27412"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"2b14865d497be0c5fdd0437ca0a41576\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 16:59:58 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 27412,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module domReadinessService\n *\n * A unified service to handle DOM readiness within the application, ensuring\n * that document parsing, required dependencies, and dynamic element injections\n * are consistently managed via a single standardized approach.\n *\n * Dependencies:\n *  - DependencySystem: For waiting on module dependencies (auth, eventHandlers, etc.)\n *  - domAPI: Abstracted DOM utilities\n *  - browserService: Abstraction layer for setTimeout, setInterval, MutationObserver\n *  - eventHandlers: For registering and cleaning up event listeners\n *  - APP_CONFIG: Optionally used to set a default or maximum timeout for DOM readiness checks\n *\n * Usage:\n *   const domReadinessService = createDomReadinessService({\n *     DependencySystem,\n *     domAPI,\n *     browserService,\n *     eventHandlers,\n *     APP_CONFIG\n *   });\n *\n *   // Wait for the document to be ready\n *   await domReadinessService.documentReady();\n *\n *   // Wait for dependencies and specific elements\n *   await domReadinessService.dependenciesAndElements({\n *     deps: ['auth', 'eventHandlers'],\n *     domSelectors: ['#myElement'],\n *     timeout: 10000,\n *     context: 'example'\n *   });\n *\n *   // Wait for a custom event\n *   await domReadinessService.waitForEvent('modalsLoaded', { timeout: 8000, context: 'example' });\n */\n\nexport function createDomReadinessService({\n  DependencySystem,\n  domAPI,\n  browserService,\n  eventHandlers = null, // optional to break circular dependency\n  APP_CONFIG,\n  logger: injectedLogger = null        // ← NEW\n} = {}) {\n  // Track selectors that never appeared (for UI diagnostics)\n  const _missingSelectors = new Set();\n  // Store pending readiness promises by selector sets\n  const pendingPromises = new Map();\n  // Store references to active MutationObservers\n  const observers = [];\n  // Track listeners waiting for element appearance\n  const appearanceListeners = new Map();\n  // Cache fired events for replay capability with TTL support\n  const firedEvents = new Map(); // eventName -> { detail, timestamp, ttl }\n\n  // Enhanced replay event config\n  const REPLAY_CONFIG = {\n    enabled: APP_CONFIG?.EVENT_REPLAY_ENABLED ?? true,\n    maxEvents: APP_CONFIG?.MAX_CACHED_EVENTS ?? 50,\n    ttlMs: APP_CONFIG?.EVENT_REPLAY_TTL ?? 300000, // 5 mins default\n    cleanupIntervalMs: APP_CONFIG?.EVENT_CLEANUP_INTERVAL ?? 60000 // 1 min\n  };\n\n  // Default timeout is required from APP_CONFIG, fallback forbidden\n  if (!APP_CONFIG?.TIMEOUTS?.DOM_READY)\n    throw new Error('[domReadinessService] APP_CONFIG.TIMEOUTS.DOM_READY is required; fallback is forbidden.');\n  const DEFAULT_TIMEOUT = APP_CONFIG.TIMEOUTS.DOM_READY;\n\n  // ───── unified logger ─────\n  if (!injectedLogger)\n    throw new Error('[domReadinessService] logger is required');\n  let _logger = injectedLogger;\n  const logger = _logger;          // alias for rule-12 scanner\n\n  function setLogger(newLogger) {\n    if (newLogger) _logger = newLogger;\n  }\n\n  // ---- late binding for eventHandlers to break circular dependency ----\n  let _eventHandlers = eventHandlers || null;\n  function setEventHandlers(newEH) {\n    if (newEH) _eventHandlers = newEH;\n  }\n\n  function _trackListener(target, type, handler, options = {}) {\n    if (_eventHandlers?.trackListener) {\n      return _eventHandlers.trackListener(target, type, handler, options);\n    }\n    if (!target || typeof target.addEventListener !== 'function') return () => {};\n    target.addEventListener(type, handler, options);\n    return () => target.removeEventListener(type, handler, options);\n  }\n\n  function _createCustomEvent(type, opts = {}) {\n    if (_eventHandlers?.createCustomEvent) {\n      return _eventHandlers.createCustomEvent(type, opts);\n    }\n    const win = browserService.getWindow?.();\n    if (win?.CustomEvent) {\n      return new win.CustomEvent(type, opts);\n    }\n    return { type, detail: opts?.detail };\n  }\n\n  function _cleanupListeners(opts = {}) {\n    if (_eventHandlers?.cleanupListeners) {\n      _eventHandlers.cleanupListeners(opts);\n    }\n  }\n\n  // ───── periodic cleanup for expired events ─────\n  let cleanupTimer = null;\n\n  // ───── instrumentation – selector wait times ─────\n  const _SEL_STATS = new Map();                // sel ➜ { total, waits:[{start,end,duration}] }\n  function _nowPerf() {\n    const win = browserService.getWindow?.();\n    return (win?.performance?.now?.()) ?? Date.now();\n  }\n\n  function _markStart(selectors) {\n    const t = _nowPerf();\n    selectors.forEach(sel => {\n      if (!_SEL_STATS.has(sel)) _SEL_STATS.set(sel, { total: 0, waits: [] });\n      _SEL_STATS.get(sel).waits.push({ start: t });\n    });\n  }\n  function _markEnd(selectors) {\n    const t = _nowPerf();\n    selectors.forEach(sel => {\n      const rec = _SEL_STATS.get(sel);\n      if (!rec || !rec.waits.length) return;\n      const last = rec.waits.at(-1);\n      if (last.end) return;                   // already closed\n      last.end = t;\n      last.duration = t - last.start;\n      rec.total += last.duration;\n    });\n  }\n\n  /**\n   * Waits for the document to be in a state beyond \"loading\"\n   * (i.e. DOMContentLoaded or readystatechange complete).\n   * @returns {Promise<Document>}\n   */\n  function documentReady() {\n    const doc = domAPI.getDocument();\n    // If the document is not in \"loading\" state, resolve immediately\n    if (doc.readyState !== 'loading') {\n      return Promise.resolve(doc);\n    }\n    // Otherwise, wait for DOMContentLoaded once\n    return new Promise((resolve) => {\n      eventHandlers.trackListener(\n        doc,\n        'DOMContentLoaded',\n        () => resolve(doc),\n        { once: true, context: 'domReadinessService' }\n      );\n    });\n  }\n\n  /**\n   * Waits for one or more DOM elements matching the provided selectors.\n   * If they exist immediately, it resolves; otherwise it observes for new nodes\n   * until they appear or times out.\n   * @param {string|string[]} selectors - One or more CSS selectors\n   * @param {object} options\n   * @param {number} [options.timeout=DEFAULT_TIMEOUT] - Time in ms before rejecting\n   * @param {boolean} [options.observeMutations=true] - Whether to watch dynamically inserted elements\n   * @param {string} [options.context='unknown'] - Descriptive context for error logs\n   * @returns {Promise<HTMLElement[]>}\n   */\n  function elementsReady(selectors, {\n    timeout = 15000,\n    observeMutations = true,\n    context = 'unknown'\n  } = {}) {\n    const selectorArray = Array.isArray(selectors) ? selectors : [selectors];\n\n    _markStart(selectorArray);\n\n    // Quick check if all elements are already present\n    const alreadyPresent = selectorArray.every((sel) => domAPI.querySelector(sel) !== null);\n    if (alreadyPresent) {\n      return Promise.resolve(selectorArray.map((sel) => domAPI.querySelector(sel)));\n    }\n\n    // Create a unique key based on sorted selectors\n    const key = selectorArray.sort().join('|');\n\n    // If we already have a pending promise for these selectors, return it\n    if (pendingPromises.has(key)) {\n      return pendingPromises.get(key);\n    }\n\n    // Otherwise, create a new promise\n    const promise = new Promise((resolve, reject) => {\n      const startTime = _nowPerf();\n      // Step 1: Ensure the document is ready first\n      documentReady().then(() => {\n        // Check again in case the elements appeared during doc load\n        const nowPresent = selectorArray.map((sel) => domAPI.querySelector(sel));\n        if (nowPresent.every((el) => el !== null)) {\n          _markEnd(selectorArray);\n          _logger.info?.(\n            '[domReadinessService] selectors ready',\n            { selectors: selectorArray, duration: Math.round(_nowPerf() - startTime) }\n          );\n          return resolve(nowPresent);\n        }\n\n        // Setup a timeout for safety\n        const timeoutId = browserService.setTimeout(() => {\n          // Clean up from structures\n          pendingPromises.delete(key);\n          appearanceListeners.delete(key);\n\n          const missing = selectorArray.filter((sel) => domAPI.querySelector(sel) === null);\n          missing.forEach((sel) => _missingSelectors.add(sel));\n          _logger.warn?.(\n            '[domReadinessService] Timeout waiting for selectors',\n            { selectors: missing, context, waitedMs: timeout }\n          );\n          reject(\n            new Error(\n              `[domReadinessService] Timed out after ${timeout}ms for selectors: ${missing.join(', ')\n              } (context: ${context}). Elements missing: [${missing.join(', ')}]`\n            )\n          );\n        }, timeout);\n\n        // If we want to observe DOM changes for newly added elements\n        if (observeMutations) {\n          appearanceListeners.set(key, {\n            selectors: selectorArray,\n            onAppear: () => {\n              try {\n                const newAppear = selectorArray.map((sel) => domAPI.querySelector(sel));\n                if (newAppear.every((el) => el !== null)) {\n                  // Clear the pending state\n                  browserService.clearTimeout(timeoutId);\n                  pendingPromises.delete(key);\n                  appearanceListeners.delete(key);\n                  _markEnd(selectorArray);\n                  _logger.info?.(\n                    '[domReadinessService] selectors ready',\n                    { selectors: selectorArray, duration: Math.round(_nowPerf() - startTime) }\n                  );\n                  resolve(newAppear);\n                }\n              } catch (err) {\n                logger.error('[domReadinessService] elementsReady failed', err,\n                  { context: 'domReadinessService:elementsReady' });\n                throw err;\n              }\n            }\n          });\n          // Ensure at least one global observer is active\n          try {\n            _ensureObserver();\n          } catch (err) {\n            logger.error('[domReadinessService] ensureObserver failed', err,\n              { context: 'domReadinessService:ensureObserver' });\n            throw err;\n          }\n        } else {\n          // Fallback to a quick polling if we don't want to use observers\n          try {\n            _pollForElements({\n              selectors: selectorArray,\n              timeoutId,\n              resolve\n            });\n          } catch (err) {\n            _logger.error('[domReadinessService] elementsReady failed', err,\n              { context: 'domReadinessService:elementsReady' });\n            throw err;\n          }\n        }\n      });\n    });\n\n    pendingPromises.set(key, promise);\n    return promise;\n  }\n\n  /**\n   * Helper to poll for elements (used when observeMutations=false).\n   * Checks from time to time until either we find our elements or the outer\n   * timeout triggers.\n   */\n  function _pollForElements({ selectors, timeoutId, resolve }) {\n    const intervalId = browserService.setInterval(() => {\n      const found = selectors.map((sel) => domAPI.querySelector(sel));\n      if (found.every((el) => el !== null)) {\n        browserService.clearInterval(intervalId);\n        browserService.clearTimeout(timeoutId);\n\n        // Also remove from pendingPromises since we've resolved\n        const key = selectors.sort().join('|');\n        pendingPromises.delete(key);\n        appearanceListeners.delete(key);\n\n        resolve(found);\n      }\n    }, 500);\n  }\n\n  /**\n   * Ensures we have at least one MutationObserver that watches for newly added elements,\n   * so we can process watchers in appearanceListeners.\n   */\n  function _ensureObserver() {\n    // If we've already attached at least one observer, skip\n    if (observers.length > 0) return;\n\n    // Create a MutationObserver to watch the entire body subtree\n    const MutationObserverImpl =\n      browserService.getWindow?.()?.MutationObserver;\n    if (!MutationObserverImpl) {\n      logger.error('[domReadinessService] MutationObserver unavailable via DI', { context: 'domReadinessService' });\n      return;\n    }\n\n    const observer = new MutationObserverImpl((mutations) => {\n      if (appearanceListeners.size === 0) return;\n      // Trigger each appearance listener to see if their elements are now present\n      appearanceListeners.forEach((listener) => {\n        listener.onAppear();\n      });\n    });\n\n    const bodyEl = domAPI.getBody(); // or docAPI.getDocument().body\n    if (!bodyEl)\n      throw new Error('[domReadinessService] Document body not found – MutationObserver attachment failed. Fallback is forbidden.');\n\n    try {\n      observer.observe(bodyEl, {\n        childList: true,\n        subtree: true\n      });\n    } catch (err) {\n      logger.error('[domReadinessService] ensureObserver failed', err,\n        { context: 'domReadinessService:ensureObserver' });\n      throw err;\n    }\n\n    observers.push(observer);\n  }\n\n  /**\n   * Waits for the specified dependencies in DependencySystem and for the specified\n   * DOM selectors, all within an optional timeout.\n   * @param {object} config\n   * @param {string[]} config.deps - Dependencies to wait for in the DI\n   * @param {string[]} config.domSelectors - DOM selectors to wait for\n   * @param {number} config.timeout - Timeout in ms\n   * @param {string} config.context - Debugging context\n   */\n  async function dependenciesAndElements({\n    deps = [],\n    domSelectors = [],\n    timeout = DEFAULT_TIMEOUT,\n    context = 'unknown',\n    optional = false          // ← NEW: allow non-fatal selector misses\n  } = {}) {\n    // First wait for needed dependencies\n    if (deps.length > 0) {\n      if (DependencySystem?.waitForDependencies) {\n        // Preferred injection-based readiness API\n        await DependencySystem.waitForDependencies(deps, { timeout });\n      } else {\n        throw new Error(\n          '[domReadinessService] DependencySystem.waitForDependencies not available – direct waitFor forbidden by frontend guardrails. Please update DependencySystem DI to expose waitForDependencies.'\n        );\n      }\n    }\n\n    // Then wait for any DOM elements\n    if (domSelectors.length > 0) {\n      try {\n        await elementsReady(domSelectors, { timeout, context });\n      } catch (err) {\n        logger.error('[domReadinessService] dependenciesAndElements failed', err,\n          { context: 'domReadinessService:dependenciesAndElements' });\n        logger.error('[domReadinessService] elementsReady failed', err,\n                     { context: 'domReadinessService:dependenciesAndElements' });\n        domSelectors.forEach((sel) => _missingSelectors.add(sel));\n        if (optional) {\n          logger.warn?.(\n            '[domReadinessService] Optional selectors not found – continuing bootstrap',\n            { selectors: domSelectors, context }\n          );\n          return true;        // ← do NOT abort init\n        }\n        throw err;            // original behaviour for required selectors\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Cleanup expired events from cache\n   */\n  function cleanupExpiredEvents() {\n    if (!REPLAY_CONFIG.enabled) return;\n\n    const now = _nowPerf();\n    const initialSize = firedEvents.size;\n\n    for (const [eventName, eventData] of firedEvents.entries()) {\n      if (eventData.ttl && eventData.ttl < now) {\n        firedEvents.delete(eventName);\n        _logger.info?.(`[domReadinessService] Cleaned up expired event: ${eventName}`, {\n          eventName,\n          age: now - eventData.timestamp\n        });\n      }\n    }\n\n    if (firedEvents.size !== initialSize) {\n      _logger.info?.(`[domReadinessService] Cleanup removed ${initialSize - firedEvents.size} expired events`);\n    }\n  }\n\n  /**\n   * Start periodic cleanup if enabled\n   */\n  function startCleanupTimer() {\n    if (!REPLAY_CONFIG.enabled || cleanupTimer) return;\n\n    cleanupTimer = browserService.setInterval(() => {\n      cleanupExpiredEvents();\n    }, REPLAY_CONFIG.cleanupIntervalMs);\n  }\n\n  /**\n   * Emits a replay-able custom event that can be received by late listeners.\n   * Enhanced: TTL, maxEvents, logs, eviction. No fallback to standard allowed.\n   */\n  function emitReplayable(eventName, detail = {}) {\n    // Validate eventName\n    if (!eventName || typeof eventName !== 'string') {\n      _logger.error?.(`[domReadinessService] Invalid event name for emitReplayable`, { eventName, detail });\n      return;\n    }\n\n    if (!REPLAY_CONFIG.enabled) {\n      _logger.info?.(`[domReadinessService] Event replay disabled, emitting standard event: ${eventName}`);\n      const event = eventHandlers.createCustomEvent(eventName, { detail });\n      domAPI.dispatchEvent(domAPI.getDocument(), event);\n      return;\n    }\n\n    _logger.info?.(`[domReadinessService] Emitting replayable event: ${eventName}`, {\n      eventName,\n      detail,\n      currentCacheSize: firedEvents.size\n    });\n\n    // Enforce cache limit\n    if (firedEvents.size >= REPLAY_CONFIG.maxEvents) {\n      const oldestEvent = Array.from(firedEvents.entries())\n        .sort(([, a], [, b]) => a.timestamp - b.timestamp)[0];\n      if (oldestEvent) {\n        firedEvents.delete(oldestEvent[0]);\n        _logger.warn?.(`[domReadinessService] Evicted oldest cached event: ${oldestEvent[0]}`, {\n          evictedEvent: oldestEvent[0],\n          age: _nowPerf() - oldestEvent[1].timestamp\n        });\n      }\n    }\n\n    const now = _nowPerf();\n\n    firedEvents.set(eventName, {\n      detail,\n      timestamp: now,\n      ttl: now + REPLAY_CONFIG.ttlMs\n    });\n\n    // Start cleanup interval timer if not started\n    startCleanupTimer();\n\n    // Dispatch the event normally, with error catch\n    try {\n      const event = eventHandlers.createCustomEvent(eventName, { detail });\n      domAPI.dispatchEvent(domAPI.getDocument(), event);\n\n      /* --- NEW: also notify window listeners --- */\n      try {\n        const winTarget = browserService?.getWindow?.();\n        if (winTarget && typeof winTarget.dispatchEvent === 'function') {\n          // immediate (same-tick) dispatch\n          domAPI.dispatchEvent(\n            winTarget,\n            eventHandlers.createCustomEvent(eventName, { detail })\n          );\n\n          // one more dispatch on next-tick so very-late inline listeners\n          // (e.g. in base.html) still catch the event\n          browserService.setTimeout(() => {\n            try {\n              domAPI.dispatchEvent(\n                winTarget,\n                eventHandlers.createCustomEvent(eventName, { detail, replay: true })\n              );\n            } catch (_) {\n              _logger.warn?.(\n                '[domReadinessService] delayed window dispatch failed',\n                _,\n                { context: 'domReadinessService:emitReplayable:window-delayed' }\n              );\n            }\n          }, 0);\n        }\n      } catch (err) {\n        _logger.warn?.(\n          '[domReadinessService] window dispatch failed',\n          err,\n          { context: 'domReadinessService:emitReplayable:window' }\n        );\n      }\n    } catch (err) {\n      logger.error('[domReadinessService] emitReplayable failed', err,\n        { context: 'domReadinessService:emitReplayable' });\n      logger.error('[domReadinessService] emitReplayable failed', err,\n                   { context: 'domReadinessService:emitReplayable' });\n      logger.error?.(`[domReadinessService] Failed to dispatch event: ${eventName}`, err, {\n        eventName,\n        detail\n      });\n    }\n  }\n\n  /**\n   * Wait for a specified custom event (e.g. \"modalsLoaded\"), with a time limit.\n   * If the event was already fired, returns immediately with cached data,\n   * handling TTL expiry. Synthetic event is created via eventHandlers.\n   * @param {string} eventName - The name of the event (e.g., 'modalsLoaded')\n   * @param {object} options\n   * @param {number} [options.timeout=DEFAULT_TIMEOUT] - Time in ms before rejecting\n   * @param {string} [options.context='unknown'] - Context for debugging\n   * @returns {Promise<Event>}\n   */\n  function waitForEvent(eventName, {\n    timeout = DEFAULT_TIMEOUT,\n    context = 'unknown'\n  } = {}) {\n    // Validate event name\n    if (!eventName || typeof eventName !== 'string') {\n      return Promise.reject(\n        new Error(`[domReadinessService] Invalid event name: ${eventName}`)\n      );\n    }\n\n    // == STICKY STATE PATCH: if \"app:ready\", resolve immediately using sticky readiness flag ==\n    const win = browserService?.getWindow?.();\n    if (eventName === 'app:ready' && win?.app?.state?.ready) {\n      _logger.info?.('[domReadinessService] Sticky readiness flag detected (`window.app.state.ready === true`), resolving waitForEvent(\"app:ready\") immediately', { context });\n      try {\n        const detail = (win?.app?.state) || { ready: true };\n        const syntheticEvt = eventHandlers.createCustomEvent('app:ready', { detail });\n        return Promise.resolve(syntheticEvt);\n      } catch (e) {\n        _logger.warn?.('[domReadinessService] Could not synthesize \"app:ready\" event from sticky readiness. Falling back to regular wait.', { context });\n        // fall through to regular code if event construction fails\n      }\n    }\n    // == END PATCH ==\n\n    // Check if event was already fired (replay capability)\n    if (firedEvents.has(eventName)) {\n      const cachedEvent = firedEvents.get(eventName);\n\n      // Check if cached event has expired via TTL\n      if (cachedEvent.ttl && cachedEvent.ttl < _nowPerf()) {\n        firedEvents.delete(eventName);\n        _logger.warn?.(`[domReadinessService] Cached event \"${eventName}\" expired, waiting for new event`, {\n          eventName,\n          context,\n          expiredTimestamp: cachedEvent.timestamp\n        });\n      } else {\n        const age = _nowPerf() - cachedEvent.timestamp;\n        _logger.info?.(`[domReadinessService] Event \"${eventName}\" replayed from cache`, {\n          eventName,\n          context,\n          cachedDetail: cachedEvent.detail,\n          cachedTimestamp: cachedEvent.timestamp,\n          age\n        });\n\n        // Create a synthetic event with the cached detail, best-effort try/catch\n        try {\n          const syntheticEvent = eventHandlers.createCustomEvent(eventName, {\n            detail: cachedEvent.detail\n          });\n          return Promise.resolve(syntheticEvent);\n        } catch (err) {\n          logger.error('[domReadinessService] waitForEvent synthetic event failed', err,\n                       { context: 'domReadinessService:waitForEvent' });\n          // Fall through to normal event listening\n        }\n      }\n    }\n\n    _logger.info?.(`[domReadinessService] Waiting for event \"${eventName}\" (context: ${context})`);\n\n    return new Promise((resolve, reject) => {\n      let timeoutId = null;\n      let listenerRemover = null;\n\n      // Cleanup function to prevent memory leaks\n      const cleanup = () => {\n        if (timeoutId) {\n          browserService.clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n        if (listenerRemover && typeof listenerRemover === 'function') {\n          try {\n            listenerRemover();\n          } catch (err) {\n            logger.warn?.(`[domReadinessService] Error removing event listener during cleanup`, err, {\n              eventName,\n              context\n            });\n          }\n          listenerRemover = null;\n        }\n      };\n\n      // Start a timeout\n      timeoutId = browserService.setTimeout(() => {\n        cleanup();\n        reject(\n          new Error(\n            `[domReadinessService] Timeout after ${timeout}ms waiting for event \"${eventName}\" (context: ${context})`\n          )\n        );\n      }, timeout);\n\n      // Listen for the event once\n      try {\n        listenerRemover = eventHandlers.trackListener(\n          domAPI.getDocument(),\n          eventName,\n          (evt) => {\n            cleanup();\n            _logger.info?.(`[domReadinessService] Event \"${eventName}\" received by listener`, {\n              eventName,\n              context,\n              detail: evt.detail\n            });\n            resolve(evt);\n          },\n          { once: true, context: 'domReadinessService' }\n        );\n      } catch (err) {\n        logger.error('[domReadinessService] waitForEvent failed', err,\n          { context: 'domReadinessService:waitForEvent' });\n        logger.error('[domReadinessService] waitForEvent listener setup failed', err,\n                     { context: 'domReadinessService:waitForEvent' });\n        cleanup();\n        reject(new Error(`[domReadinessService] Failed to set up event listener for \"${eventName}\": ${err.message}`));\n      }\n    });\n  }\n\n  /**\n   * Get comprehensive event replay statistics\n   */\n  function getEventReplayStats() {\n    const stats = {\n      enabled: REPLAY_CONFIG.enabled,\n      totalCachedEvents: firedEvents.size,\n      maxEvents: REPLAY_CONFIG.maxEvents,\n      ttlMs: REPLAY_CONFIG.ttlMs,\n      events: {},\n      oldestEvent: null,\n      newestEvent: null,\n      expiredCount: 0\n    };\n\n    if (firedEvents.size === 0) return stats;\n\n    let oldest = Infinity;\n    let newest = 0;\n    const now = _nowPerf();\n\n    for (const [eventName, eventData] of firedEvents.entries()) {\n      const age = now - eventData.timestamp;\n      const isExpired = eventData.ttl && eventData.ttl < now;\n\n      if (isExpired) stats.expiredCount++;\n\n      stats.events[eventName] = {\n        timestamp: eventData.timestamp,\n        age,\n        expired: isExpired,\n        ttl: eventData.ttl,\n        hasDetail: !!eventData.detail,\n        detailKeys: eventData.detail ? Object.keys(eventData.detail) : []\n      };\n\n      if (eventData.timestamp < oldest) {\n        oldest = eventData.timestamp;\n        stats.oldestEvent = eventName;\n      }\n      if (eventData.timestamp > newest) {\n        newest = eventData.timestamp;\n        stats.newestEvent = eventName;\n      }\n    }\n\n    return stats;\n  }\n\n  /**\n   * Enhanced cleanup function\n   */\n  function destroy() {\n    // Stop cleanup timer\n    if (cleanupTimer) {\n      browserService.clearInterval(cleanupTimer);\n      cleanupTimer = null;\n    }\n\n    // Stop all mutation observers\n    observers.forEach((obs) => {\n      try {\n        obs.disconnect();\n      } catch (err) {\n        logger.error('[domReadinessService] destroy observer.disconnect failed', err,\n                     { context: 'domReadinessService:destroy' });\n      }\n    });\n    observers.length = 0;\n\n    // Clear pending states\n    pendingPromises.clear();\n    appearanceListeners.clear();\n    firedEvents.clear();\n\n    // Remove any event listeners with the matching context\n    eventHandlers.cleanupListeners({ context: 'domReadinessService' });\n\n    _logger.info?.('[domReadinessService] Destroyed and cleaned up all resources');\n  }\n\n  function getSelectorTimings() {\n    const out = {};\n    _SEL_STATS.forEach((v, k) => { out[k] = v.total; });\n    return out;\n  }\n\n  function getMissingSelectors() {\n    return Array.from(_missingSelectors);\n  }\n\n  function getFiredEvents() {\n    return Array.from(firedEvents.keys());\n  }\n\n  // Additional helpers for replay/diagnostics/feature flagging\n  function isReplayEnabled() {\n    return REPLAY_CONFIG.enabled;\n  }\n\n  return {\n    documentReady,\n    elementsReady,\n    dependenciesAndElements,\n    waitForEvent,\n    emitReplayable,\n    destroy,\n    getSelectorTimings,\n    getMissingSelectors,\n    getFiredEvents,\n    getEventReplayStats,    // NEW: diagnostics\n    cleanupExpiredEvents,   // NEW: manual trigger\n    isReplayEnabled,        // NEW: config check\n    setLogger,              // ← NEW\n    setEventHandlers,       // ← NEW\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 27412,
          "_transferSize": 28601,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.552Z",
        "time": 177.22599999979138,
        "timings": {
          "blocked": 127.23000000759122,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08899999999999864,
          "wait": 49.19000000412855,
          "receive": 0.7169999880716205,
          "_blocked_queueing": 1.2260000075912103,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126344",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
          "lineNumber": 13
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/logger.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/init/appInitializer.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1477,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "3463"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"62f0a5b83499402227bf5479726a5378\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 30 May 2025 07:33:46 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3463,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * logger.js - Pure logging functionality, no delivery concerns\n * Emits events for external handlers to process\n */\n\nexport function createLogger({\n  context = 'App',\n  debug = false,\n  minLevel = 'info',\n  consoleEnabled = true,\n  sessionIdProvider = () => null,\n  traceIdProvider = () => null,\n  domAPI,\n  browserService,\n  eventHandlers\n}) {\n  if (!domAPI) {\n    throw new Error('[logger] Missing domAPI');\n  }\n  if (!browserService) {\n    throw new Error('[logger] Missing browserService');\n  }\n  if (!eventHandlers) {\n    throw new Error('[logger] Missing eventHandlers');\n  }\n  const levels = {\n    debug: 0,\n    info: 1,\n    warn: 2,\n    critical: 4\n  };\n  levels.error = 3;\n\n  let currentMinLevel = levels[minLevel] || levels.info;\n\n  function shouldLog(level) {\n    return levels[level] >= currentMinLevel;\n  }\n\n  function formatLogEntry(level, message, data, metadata) {\n    return {\n      timestamp: new Date().toISOString(),\n      level,\n      message,\n      context: metadata?.context || context,\n      sessionId: sessionIdProvider(),\n      traceId: traceIdProvider(),\n      data: data instanceof Error ? {\n        name: data.name,\n        message: data.message,\n        stack: data.stack\n      } : data,\n      metadata\n    };\n  }\n\n  function log(level, message, ...args) {\n    if (!shouldLog(level)) return;\n\n    // Parse args: [data], {metadata with context}\n    let data = null;\n    let metadata = {};\n\n    if (args.length > 0) {\n      const lastArg = args[args.length - 1];\n      if (lastArg && typeof lastArg === 'object' && 'context' in lastArg) {\n        metadata = lastArg;\n        args = args.slice(0, -1);\n      }\n    }\n\n    if (args.length > 0) {\n      data = args[0];\n    }\n\n    const logEntry = formatLogEntry(level, message, data, metadata);\n\n    // Console output\n    if (consoleEnabled) {\n      const method = console[level] || console.log;\n      const prefix = `[${logEntry.timestamp}] [${level.toUpperCase()}] [${logEntry.context}]`;\n      const consoleArgs = [`${prefix} ${message}`];\n      if (data) consoleArgs.push(data);\n      method.apply(console, consoleArgs);\n    }\n\n    try {\n      const CustomEventCtor = browserService.getWindow?.()?.CustomEvent;\n      if (domAPI && typeof domAPI.dispatchEvent === 'function' && CustomEventCtor) {\n        const event = new CustomEventCtor('app:log', { detail: logEntry, bubbles: false });\n        const target = domAPI.getDocument();\n        if (target) {\n          domAPI.dispatchEvent(target, event);\n        }\n      }\n    } catch (e) {\n      // Silent fail - don't create log loops\n    }\n  }\n\n  return {\n    debug: (message, ...args) => log('debug', message, ...args),\n    info: (message, ...args) => log('info', message, ...args),\n    warn: (message, ...args) => log('warn', message, ...args),\n    critical: (message, ...args) => log('critical', message, ...args),\n    log: (message, ...args) => log('info', message, ...args),\n\n    withContext(newContext) {\n      return createLogger({\n        context: newContext,\n        debug,\n        minLevel,\n        consoleEnabled,\n        sessionIdProvider,\n        traceIdProvider,\n        domAPI,\n        browserService,\n        eventHandlers\n      });\n    },\n\n    setMinLevel(level) {\n      if (levels[level] !== undefined) {\n        currentMinLevel = levels[level];\n      }\n    },\n\n    cleanup() {\n      eventHandlers.cleanupListeners({ context });\n    },\n\n    ['error']: (message, ...args) => log('error', message, ...args)\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 3463,
          "_transferSize": 4651,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.552Z",
        "time": 176.7039999976987,
        "timings": {
          "blocked": 127.33300000420586,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06099999999999284,
          "wait": 48.30600000284892,
          "receive": 1.0039999906439334,
          "_blocked_queueing": 1.2160000042058527,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126316",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
          "lineNumber": 15
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/knowledgeBaseReadinessService.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/init/appInitializer.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1500,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "6707"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"edfff2b568e85692a146a5baf086f92c\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 08 Jun 2025 14:05:42 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 6707,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * knowledgeBaseReadinessService.js\n * ------------------------------------------------------------\n * Lightweight, front-end wrapper around the KB health endpoint\n * (`/api/knowledge-base/health/:projectId`).  It provides a\n * cached, promise-based API that other modules (ChatManager,\n * KnowledgeBaseComponent, etc.) can use to quickly determine\n * whether the Knowledge-Base for a given project is available\n * without triggering heavyweight initialisation on the server.\n *\n * The implementation purposefully keeps its own logic minimal so\n * that it can be loaded early during bootstrap (see\n * appInitializer.js – serviceInit.registerAdvancedServices).\n */\n\n/* eslint-disable consistent-return */\n\nexport function createKnowledgeBaseReadinessService({\n  DependencySystem,\n  apiClient,\n  logger\n}) {\n  // ────────────────────────────────────────────────────────────\n  // Dependency validation (fail fast – this is a factory)\n  // ────────────────────────────────────────────────────────────\n  if (!DependencySystem) throw new Error('[KBReadinessService] Missing DependencySystem');\n  if (typeof apiClient !== 'function') throw new Error('[KBReadinessService] Missing apiClient function');\n  if (!logger) {\n    // Fallback to console to avoid total failure – but make sure callers are aware.\n    // It is still better than throwing because consumers may rely on the service\n    // for *graceful* degradation.\n    // eslint-disable-next-line no-console\n    console.warn('[KBReadinessService] Logger missing – falling back to console');\n    logger = {\n      debug: (...a) => console.debug('[KBReadinessService]', ...a),\n      info: (...a) => console.info('[KBReadinessService]', ...a),\n      warn: (...a) => console.warn('[KBReadinessService]', ...a),\n      error: (...a) => console.error('[KBReadinessService]', ...a)\n    };\n  }\n\n  const MODULE = 'kbReadinessService';\n\n  // ────────────────────────────────────────────────────────────\n  // Internal cache – Map<cacheKey,{ status,timestamp }>\n  // cacheKey = `project_${projectId}` | 'global'\n  // ────────────────────────────────────────────────────────────\n  const CACHE_TTL_MS = 30_000; // 30 seconds\n  const cache = new Map();\n\n  /**\n   * Internal helper – returns cached entry if fresh, otherwise null.\n   * @param {string} key\n   */\n  function _getCached(key) {\n    const entry = cache.get(key);\n    if (!entry) return null;\n    const { status, timestamp } = entry;\n    if (Date.now() - timestamp > CACHE_TTL_MS) {\n      cache.delete(key);\n      return null;\n    }\n    return status;\n  }\n\n  /**\n   * Internal helper – stores status along with timestamp.\n   * @param {string} key\n   * @param {object} status\n   */\n  function _storeCache(key, status) {\n    cache.set(key, { status, timestamp: Date.now() });\n  }\n\n  /**\n   * Perform a fast health-check for the knowledge-base of *projectId*.\n   *\n   * @param {string} projectId – UUID string\n   * @param {object} [options]\n   * @param {boolean} [options.useCache=true]\n   * @param {number} [options.timeout=5000] – soft timeout (ms).\n   * @returns {Promise<object>} – shape mirrors backend response\n   */\n  async function checkProjectReadiness(projectId, options = {}) {\n    const { useCache = true, timeout = 5000 } = options;\n\n    if (!projectId) throw new Error('[KBReadinessService] projectId is required');\n\n    const cacheKey = `project_${projectId}`;\n    if (useCache) {\n      const cached = _getCached(cacheKey);\n      if (cached) return cached;\n    }\n\n    const url = `/api/knowledge-base/health/${projectId}`;\n\n    // Soft timeout using Promise.race (apiClient has its own internal timeout,\n    // but we want a quicker pessimistic answer in the UI).\n    const timeoutPromise = new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({\n          available: false,\n          reason: 'Health check timeout',\n          fallback_available: false,\n          missing_dependencies: []\n        });\n      }, timeout);\n    });\n\n    try {\n      const apiPromise = apiClient(url, { method: 'GET' });\n\n      const status = await Promise.race([apiPromise, timeoutPromise]);\n\n      _storeCache(cacheKey, status);\n      logger.debug(`[${MODULE}] Health check result`, { projectId, status });\n      return status;\n    } catch (err) {\n      logger.warn(`[${MODULE}] Health check failed`, err, { projectId });\n      const fallback = {\n        available: false,\n        reason: 'Health check failed',\n        fallback_available: false,\n        missing_dependencies: []\n      };\n      _storeCache(cacheKey, fallback);\n      return fallback;\n    }\n  }\n\n  /**\n   * Poll the health endpoint until it reports available or attempts are\n   * exhausted.\n   *\n   * @param {string} projectId\n   * @param {object} [options]\n   * @param {number} [options.maxAttempts=5]\n   * @param {number} [options.interval=1000] – ms between attempts\n   * @returns {Promise<object>} final status\n   */\n  async function waitForReadiness(projectId, options = {}) {\n    const { maxAttempts = 5, interval = 1000 } = options;\n    let attempt = 0;\n    while (attempt < maxAttempts) {\n      // Always bypass cache after the first iteration\n      // (first iteration may have returned cached value above)\n      const status = await checkProjectReadiness(projectId, { useCache: attempt === 0 });\n      if (status?.available) return status;\n      attempt += 1;\n      if (attempt < maxAttempts) {\n        // eslint-disable-next-line no-await-in-loop\n        await new Promise((r) => setTimeout(r, interval));\n      }\n    }\n    // Final pessimistic call without cache before giving up\n    return checkProjectReadiness(projectId, { useCache: false });\n  }\n\n  /**\n   * Clear cache for a single project or all projects.\n   * @param {string|null} [projectId]\n   */\n  function invalidateCache(projectId = null) {\n    if (projectId) {\n      cache.delete(`project_${projectId}`);\n    } else {\n      cache.clear();\n    }\n  }\n\n  /** Cleanup method for DependencySystem lifecycle hooks */\n  function cleanup() {\n    cache.clear();\n  }\n\n  // Public API returned by factory\n  return Object.freeze({\n    checkProjectReadiness,\n    waitForReadiness,\n    invalidateCache,\n    cleanup\n  });\n}\n\nexport default createKnowledgeBaseReadinessService;\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 6707,
          "_transferSize": 7895,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.552Z",
        "time": 180.99799999617971,
        "timings": {
          "blocked": 139.4439999999767,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.09399999999999409,
          "wait": 40.807999993756425,
          "receive": 0.6520000024465844,
          "_blocked_queueing": 1.224999999976717,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/knowledgeBaseComponent.js",
          "lineNumber": 5
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/knowledgeBaseSearchHandler.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/knowledgeBaseComponent.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1500,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "10966"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"2c64a78c4cba3ff168e80d87e2554ed9\""
            },
            {
              "name": "last-modified",
              "value": "Tue, 03 Jun 2025 16:31:08 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 10966,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module knowledgeBaseSearchHandler\n * @description Handles search functionality for the KnowledgeBaseComponent.\n */\nconst MODULE = \"KnowledgeBaseSearchHandler\";\n\n/**\n * Factory function to create a search handler for KnowledgeBaseComponent.\n * @param {Object} ctx - The KnowledgeBaseComponent instance (context).\n * @param {Object} ctx.elements - DOM element references.\n * @param {Object} ctx.state - Component's internal state.\n * @param {Object} ctx.config - Component's configuration.\n * @param {Function} ctx.apiRequest - API request function.\n * @param {Object} ctx.eventHandlers - Event handling utility.\n * @param {Object} ctx.uiUtils - UI utility functions.\n * @param {Object} ctx.scheduler - Scheduler for debounce (setTimeout, clearTimeout).\n * @param {Function} ctx._getCurrentProjectId - Function to get current project ID.\n * @param {Function} ctx.validateUUID - UUID validation function.\n * @param {Function} ctx._safeSetInnerHTML - Function to safely set innerHTML.\n * @returns {Object} Search handler instance with public methods.\n */\nexport function createKnowledgeBaseSearchHandler(ctx) {\n  if (!ctx.domReadinessService)\n    throw new Error(`[${MODULE}] domReadinessService missing for readiness check`);\n\n  async function initialize() {\n    await ctx.domReadinessService.dependenciesAndElements({\n      deps     : ['app', 'projectManager', 'eventHandlers', 'domAPI'],\n      context  : MODULE + ':init'\n    });\n  }\n\n\n  /**\n   * Perform a search against the knowledge base\n   * @param {string} query - Search query\n   * @returns {Promise<void>}\n   */\n  async function searchKnowledgeBase(query) {\n    if (ctx.state.isSearching) return;\n    const trimmed = (query || \"\").trim();\n    if (\n      !trimmed ||\n      trimmed.length < ctx.config.minQueryLength ||\n      trimmed.length > ctx.config.maxQueryLength\n    ) {\n      _showNoResults();\n      return;\n    }\n\n    const pid = ctx._getCurrentProjectId();\n    const kbId = ctx.state.knowledgeBase?.id;\n    if (!pid) {\n      return;\n    }\n\n    const cacheKey = `${pid}-${trimmed}-${_getSelectedTopKValue()}`;\n    if (ctx.state.searchCache.has(cacheKey)) {\n      _renderSearchResults(ctx.state.searchCache.get(cacheKey));\n      return;\n    }\n\n    ctx.state.isSearching = true;\n    _showSearchLoading();\n\n    try {\n      const endpoint = kbId\n        ? `/api/projects/${pid}/knowledge-bases/${kbId}/search`\n        : `/api/projects/${pid}/knowledge-bases/search`;\n      const resp = await ctx.apiRequest(\n        endpoint,\n        {\n          method: \"POST\",\n          body: { query: trimmed, top_k: _getSelectedTopKValue() },\n        },\n        false,\n      );\n      const results = Array.isArray(resp?.data?.results)\n        ? resp.data.results\n        : [];\n      if (results.length) {\n        ctx.state.searchCache.set(cacheKey, results);\n        _renderSearchResults(results);\n      } else {\n        _showNoResults();\n      }\n    } catch (err) {\n      ctx.logger.error('[KnowledgeBaseSearchHandler] searchKnowledgeBase failed',\n                       err,\n                       { context: 'knowledgeBaseSearchHandler:search' });\n    } finally {\n      ctx.state.isSearching = false;\n      _hideSearchLoading();\n    }\n  }\n\n  const debouncedSearch = ctx._debounce(\n    searchKnowledgeBase,\n    ctx.config.searchDebounceTime,\n  );\n\n  /**\n   * Trigger search from input field\n   */\n  function triggerSearch() {\n    if (ctx.elements.searchInput) {\n      searchKnowledgeBase(ctx.elements.searchInput.value);\n    }\n  }\n\n  /**\n   * Render search results in the UI\n   * @param {Array<Object>} results\n   */\n  function _renderSearchResults(results) {\n    _clearSearchResults();\n    if (!results?.length) return _showNoResults();\n    _appendSearchResults(results);\n    _toggleResultSections(true);\n  }\n\n  function _clearSearchResults() {\n    const { resultsContainer, resultsSection, noResultsSection } = ctx.elements;\n    if (resultsContainer) resultsContainer.textContent = \"\";\n    resultsSection?.classList.add(\"hidden\");\n    noResultsSection?.classList.add(\"hidden\");\n  }\n\n  function _appendSearchResults(results) {\n    const { resultsContainer } = ctx.elements;\n    if (!resultsContainer) return;\n    results.forEach((res) => {\n      const item = _createResultItem(res);\n      ctx.eventHandlers.trackListener(item, \"click\", () =>\n        _showResultDetail(res),\n      );\n      ctx.eventHandlers.trackListener(item, \"keydown\", (e) => {\n        if ([\"Enter\", \" \"].includes(e.key)) {\n          e.preventDefault();\n          _showResultDetail(res);\n        }\n      });\n      resultsContainer.appendChild(item);\n    });\n  }\n\n  function _toggleResultSections(show) {\n    const { resultsSection, noResultsSection } = ctx.elements;\n    if (resultsSection) resultsSection.classList.toggle(\"hidden\", !show);\n    if (noResultsSection) noResultsSection.classList.toggle(\"hidden\", show);\n  }\n\n  /**\n   * Create a single result card element\n   * @param {Object} result\n   * @returns {HTMLElement}\n   */\n  function _createResultItem(result) {\n    const item = ctx.domAPI.createElement(\"div\");\n    item.className =\n      \"card card-compact bg-base-100 shadow-md hover:shadow-lg transition-shadow mb-3 cursor-pointer border border-base-300\";\n    item.setAttribute(\"role\", \"button\");\n    item.setAttribute(\"tabindex\", \"0\");\n\n    const fileInfo = result.file_info || {};\n    const filename =\n      fileInfo.filename || result.metadata?.file_name || \"Unknown source\";\n    const scorePct = Math.round((result.score || 0) * 100);\n\n    const badgeClass = _getBadgeClass(scorePct);\n\n    ctx._safeSetInnerHTML(item, `\n      <div class=\"card-body p-3\">\n        <div class=\"card-title text-sm justify-between items-center mb-1\">\n          <div class=\"flex items-center gap-2 truncate\">\n            <span class=\"text-lg\">${ctx.uiUtils.fileIcon(fileInfo.file_type)}</span>\n            <span class=\"truncate\" title=\"${filename}\">${filename}</span>\n          </div>\n          <div class=\"badge ${badgeClass} badge-sm\" title=\"Relevance: ${scorePct}%\">\n            ${scorePct}%\n          </div>\n        </div>\n        <p class=\"text-xs text-base-content/80 kb-line-clamp-3 mb-2\">\n          ${result.text || \"No content available.\"}\n        </p>\n      </div>\n    `);\n    return item;\n  }\n\n  function _getBadgeClass(scorePct) {\n    if (scorePct >= 80) return \"badge-success\";\n    if (scorePct >= 60) return \"badge-warning\";\n    return \"badge-ghost\";\n  }\n\n  /**\n   * Show detailed view of a search result\n   * @param {Object} result\n   */\n  function _showResultDetail(result) {\n    const modal = ctx.elements.resultModal;\n    if (!modal || typeof modal.showModal !== \"function\") {\n      return;\n    }\n    _populateResultDetail(result);\n    modal.showModal();\n  }\n\n  function _populateResultDetail(result) {\n    const {\n      resultTitle,\n      resultSource,\n      resultScore,\n      resultContent,\n      useInChatBtn,\n    } = ctx.elements;\n    if (!resultTitle || !resultSource || !resultScore || !resultContent)\n      return;\n\n    const fileInfo = result.file_info || {};\n    const filename =\n      fileInfo.filename || result.metadata?.file_name || \"Unknown Source\";\n    const scorePct = Math.round((result.score || 0) * 100);\n\n    const badgeClass = _getBadgeClass(scorePct);\n\n    resultTitle.textContent = `Detail: ${filename}`;\n    resultSource.textContent = filename;\n    resultScore.className = `badge ${badgeClass}`;\n    resultScore.textContent = `${scorePct}%`;\n    resultContent.textContent = result.text || \"No content available.\";\n    resultContent.style.whiteSpace = \"pre-wrap\";\n\n    if (useInChatBtn) {\n      useInChatBtn.onclick = () => {\n        _useInConversation(result);\n        _hideResultDetailModal();\n      };\n    }\n  }\n\n  /**\n   * Hide the result detail modal\n   */\n  function _hideResultDetailModal() {\n    const modal = ctx.elements.resultModal;\n    if (modal && typeof modal.close === \"function\") {\n      modal.close();\n    }\n  }\n\n  /**\n   * Insert result reference into chat input\n   * @param {Object} result\n   */\n  function _useInConversation(result) {\n    const chatInput =\n      ctx.domAPI.getElementById(\"chatUIInput\") ||\n      ctx.domAPI.getElementById(\"projectChatInput\") ||\n      ctx.domAPI.getElementById(\"chatInput\") ||\n      ctx.domAPI.querySelector('textarea[placeholder*=\"Send a message\"]', undefined);\n\n    if (!chatInput) return;\n    const filename = result.metadata?.file_name || \"the knowledge base\";\n    const refText = `Referring to content from \"${filename}\":\\n\\n> ${result.text.trim()}\\n\\nBased on this, `;\n    const current = chatInput.value.trim();\n\n    try {\n      chatInput.value = current ? `${current}\\n\\n${refText}` : refText;\n      chatInput.focus();\n      const inputEvt = new Event('input', { bubbles: true });\n      const doc = ctx.domAPI.getDocument();\n      ctx.domAPI.dispatchEvent(doc, inputEvt);\n    } catch (err) {\n      ctx.logger.error('[KnowledgeBaseSearchHandler] _useInConversation failed',\n                       err, { context: MODULE });\n    }\n  }\n\n  /**\n   * Show loading indicator for search\n   */\n  function _showSearchLoading() {\n    const { resultsContainer, resultsSection, noResultsSection } =\n      ctx.elements;\n    resultsSection?.classList.remove(\"hidden\");\n    noResultsSection?.classList.add(\"hidden\");\n    if (resultsContainer) {\n      ctx._safeSetInnerHTML(resultsContainer, `\n        <div class=\"flex justify-center items-center p-4 text-base-content/70\">\n          <span class=\"loading loading-dots loading-md mr-2\"></span>\n          <span>Searching knowledge base...</span>\n        </div>\n      `);\n    }\n  }\n\n  /**\n   * Hide search loading indicator\n   */\n  function _hideSearchLoading() {\n    if (!ctx.state.isSearching) {\n      const loadingEl = ctx.elements.resultsContainer?.querySelector(\n        \".flex.justify-center.items-center\",\n      );\n      if (loadingEl && loadingEl.textContent.includes(\"Searching\")) {\n        loadingEl.remove();\n      }\n    }\n  }\n\n  /**\n   * Show \"no results\" UI\n   */\n  function _showNoResults() {\n    const { resultsSection, noResultsSection, resultsContainer } =\n      ctx.elements;\n    if (resultsContainer) resultsContainer.textContent = \"\";\n    resultsSection?.classList.add(\"hidden\");\n    noResultsSection?.classList.remove(\"hidden\");\n  }\n\n  /**\n   * Get selected Top-K value\n   * @returns {number}\n   */\n  function _getSelectedTopKValue() {\n    const val = parseInt(ctx.elements.topKSelect?.value, 10);\n    return isNaN(val) ? 5 : val;\n  }\n\n  function handleResultModalKeydown(e) {\n    if (e.key === \"Escape\") _hideResultDetailModal();\n  }\n\n  return {\n    searchKnowledgeBase,\n    debouncedSearch,\n    triggerSearch,\n    hideResultDetailModal: _hideResultDetailModal, // expose for direct calls if needed\n    handleResultModalKeydown,\n    initialize,\n    cleanup() {\n      const EH = ctx.DependencySystem.modules.get('eventHandlers');\n      if (EH && EH.cleanupListeners) EH.cleanupListeners({ context: 'KnowledgeBaseSearchHandler' });\n    }\n  };\n}\n\nexport default createKnowledgeBaseSearchHandler;\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 10966,
          "_transferSize": 12155,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.590Z",
        "time": 142.8440000017872,
        "timings": {
          "blocked": 101.88999999936111,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08800000000000807,
          "wait": 40.04600000131316,
          "receive": 0.8200000011129305,
          "_blocked_queueing": 1.7389999993611127,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126339",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/knowledgeBaseComponent.js",
          "lineNumber": 6
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/knowledgeBaseManager.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/knowledgeBaseComponent.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1494,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "53043"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"3813b41a324328b011fe6c997525e6a8\""
            },
            {
              "name": "last-modified",
              "value": "Tue, 03 Jun 2025 16:46:20 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 53043,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/*\n// VENDOR-EXEMPT-SIZE: Core module pending refactor in Q3-25\n*/\n/**\n * @module knowledgeBaseManager\n * @description Manages Knowledge Base settings, lifecycle, files, and GitHub integration.\n */\nconst MODULE = \"KnowledgeBaseManager\";\n\n/**\n * Creates a manager for handling Knowledge Base (KB) lifecycle, settings, files, and GitHub integration within a project context.\n *\n * The returned manager provides methods for toggling KB activation, reprocessing files, handling KB settings forms, deleting KBs, managing KB modals, loading KB health and files, attaching/detaching GitHub repositories, validating model compatibility, updating model selection, and cleaning up event listeners.\n *\n * @param {Object} ctx - Context object containing dependencies, state, DOM elements, utilities, and callbacks required for KB management.\n * @returns {Object} An object exposing public methods for managing the Knowledge Base feature within a project.\n *\n * @throws {Error} If required dependencies (`apiRequest`, `eventHandlers`, `domAPI`, or logger) are missing from the context.\n */\nexport function createKnowledgeBaseManager(ctx) {\n  /* ------------------------------------------------------------------\n   * Guardrail #1 – Factory Function Export - Validate dependencies\n   * ------------------------------------------------------------------ */\n  const REQUIRED_DEPS = [\"apiRequest\", \"eventHandlers\", \"domAPI\"];\n  for (const dep of REQUIRED_DEPS) {\n    if (!ctx?.[dep]) {\n      // ------------------------------------------------------------------\n      // Special handling for apiRequest – allow lazy resolution\n      // ------------------------------------------------------------------\n      if (dep === \"apiRequest\") {\n        const fallbackApiRequest =\n          ctx.app?.apiRequest ||                // direct app reference\n          ctx.getDep?.(\"app\")?.apiRequest;      // via DependencySystem\n        if (typeof fallbackApiRequest === \"function\") {\n          ctx.apiRequest = fallbackApiRequest;\n          continue; // dependency satisfied with fallback\n        }\n\n        /* ----------------------------------------------------------------\n         * Lazy placeholder: defer hard-failure until apiRequest is used.\n         * This allows the component to initialize during early bootstrap\n         * phases (when only a proxy or no apiClient is registered yet).\n         * ---------------------------------------------------------------- */\n        ctx.apiRequest = async () => {\n          throw new Error(\n            `[${MODULE}] apiRequest dependency not ready – called before registration.`\n          );\n        };\n        console.warn(\n          `[${MODULE}] apiRequest dependency missing during initialization – using lazy placeholder.`\n        );\n        continue; // treat as satisfied for now\n      }\n\n      // For all other dependencies we must fail fast.\n      throw new Error(`[${MODULE}] Missing required dependency '${dep}'`);\n    }\n  }\n\n  const DependencySystem = ctx.getDep ? ctx.getDep(\"DependencySystem\") : null;\n  const logger = ctx.logger || ctx.getDep(\"logger\"); // Ensure logger is available\n  if (!logger) {\n    throw new Error(`[${MODULE}] Logger dependency is missing from context.`);\n  }\n\n  const domReadinessService = ctx.domReadinessService\n    || ctx.getDep?.('domReadinessService');\n  // Eager appReadyPromise removed; replaced with lazy getter below.\n  let _appReadyPromise = null;\n  async function waitForAppReady() {\n    if (_appReadyPromise) return _appReadyPromise;          // cache\n    _appReadyPromise = domReadinessService\n      ? domReadinessService.dependenciesAndElements({ deps: ['app'] })\n      : Promise.resolve();\n    return _appReadyPromise;\n  }\n\n  /**\n   * Enables or disables the knowledge base for the current project.\n   *\n   * Updates the activation state both on the server and in the UI, synchronizes local storage, and refreshes project details or knowledge base info as needed.\n   *\n   * @param {boolean} enabled - Whether to activate (`true`) or deactivate (`false`) the knowledge base.\n   * @returns {Promise<void>}\n   *\n   * @throws {Error} If the API request to toggle the knowledge base fails.\n   */\n  async function toggleKnowledgeBase(enabled) {\n    logger.info(`[${MODULE}][toggleKnowledgeBase] Called with enabled: ${enabled}`, { context: MODULE });\n    await waitForAppReady();\n    logger.debug(`[${MODULE}][toggleKnowledgeBase] App is ready. Proceeding.`, { context: MODULE });\n\n    const pid = ctx._getCurrentProjectId();\n    if (!pid) {\n      logger.warn(`[${MODULE}][toggleKnowledgeBase] No project ID found. Aborting.`, { context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][toggleKnowledgeBase] Project ID: ${pid}`, { context: MODULE });\n\n    try {\n      const resp = await ctx.apiRequest(\n        `/api/projects/${pid}/knowledge-bases/toggle`,\n        { method: \"POST\", body: { enable: enabled } },\n      );\n      logger.debug(`[${MODULE}][toggleKnowledgeBase] API response:`, { response: resp, context: MODULE });\n\n      if (resp.status === \"success\") {\n        logger.info(`[${MODULE}][toggleKnowledgeBase] Successfully toggled KB to ${enabled} for project ${pid}.`, { context: MODULE });\n        if (ctx.state.knowledgeBase) {\n          ctx.state.knowledgeBase.is_active = enabled;\n        }\n        ctx._updateStatusIndicator(enabled); // UI update\n        const storage = ctx.getDep(\"storage\");\n        if (storage && typeof storage.setItem === \"function\") {\n          storage.setItem(`kb_enabled_${pid}`, String(enabled));\n        }\n\n        if (ctx.projectManager.loadProjectDetails) {\n          logger.debug(`[${MODULE}][toggleKnowledgeBase] Reloading project details for ${pid}.`, { context: MODULE });\n          const project = await ctx.projectManager.loadProjectDetails(pid);\n          ctx.renderKnowledgeBaseInfo(project?.knowledge_base, pid); // UI update\n        } else {\n          logger.debug(`[${MODULE}][toggleKnowledgeBase] projectManager.loadProjectDetails not available. Rendering with current KB state.`, { context: MODULE });\n          ctx.renderKnowledgeBaseInfo(ctx.state.knowledgeBase, pid); // UI update\n        }\n      } else {\n        logger.error(`[${MODULE}][toggleKnowledgeBase] API reported failure.`, { responseMessage: resp.message, context: MODULE });\n        throw new Error(resp.message || \"Failed to toggle knowledge base status.\");\n      }\n    } catch (err) {\n      logger.error(\n        `[${MODULE}][toggleKnowledgeBase] Error toggling knowledge base for project ${pid}. Reverting UI.`,\n        { status: err?.status ?? 500, data: err, message: err?.message ?? String(err) },\n        { context: MODULE }\n      );\n      if (ctx.elements.kbToggle) ctx.elements.kbToggle.checked = !enabled; // Revert UI\n      ctx._updateStatusIndicator(!enabled); // Revert UI\n      // Optionally, show an error to the user via ctx._showStatusAlert or similar\n    }\n  }\n\n  /**\n   * Initiates reprocessing of all knowledge base files for the specified project.\n   *\n   * Triggers a server-side reindexing of all files in the project's knowledge base. Updates UI state and reloads project or knowledge base details upon completion.\n   *\n   * @param {string} projectId - The unique identifier of the project whose knowledge base files will be reprocessed.\n   * @returns {Promise<void>}\n   *\n   * @throws {Error} If the API request to reprocess files fails.\n   */\n  async function reprocessFiles(projectId) {\n    logger.info(`[${MODULE}][reprocessFiles] Called for project ID: ${projectId}`, { context: MODULE });\n    await waitForAppReady();\n    logger.debug(`[${MODULE}][reprocessFiles] App is ready. Proceeding.`, { context: MODULE });\n\n    if (!ctx.validateUUID(projectId)) {\n      logger.warn(`[${MODULE}][reprocessFiles] Invalid project ID: ${projectId}. Aborting.`, { context: MODULE });\n      return;\n    }\n    const btn = ctx.elements.reprocessButton;\n    ctx._setButtonLoading(btn, true, \"Processing...\");\n    logger.debug(`[${MODULE}][reprocessFiles] Reprocess button loading state set.`, { context: MODULE });\n\n    try {\n      const resp = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-base/reindex`,\n        { method: \"POST\", body: { force: true } },\n      );\n      logger.debug(`[${MODULE}][reprocessFiles] API response:`, { response: resp, context: MODULE });\n\n      if (resp.status === \"success\") {\n        logger.info(`[${MODULE}][reprocessFiles] Successfully initiated reprocessing for project ${projectId}.`, { context: MODULE });\n        if (ctx.projectManager.loadProjectDetails) {\n          logger.debug(`[${MODULE}][reprocessFiles] Reloading project details and stats for ${projectId}.`, { context: MODULE });\n          const [project] = await Promise.all([\n            ctx.projectManager.loadProjectDetails(projectId),\n            ctx.projectManager.loadProjectStats?.(projectId), // Optional chaining for loadProjectStats\n          ]);\n          ctx.renderKnowledgeBaseInfo(project?.knowledge_base, projectId); // UI update\n        } else if (ctx.state.knowledgeBase?.id) {\n          logger.debug(`[${MODULE}][reprocessFiles] projectManager.loadProjectDetails not available. Reloading KB health and files directly.`, { kbId: ctx.state.knowledgeBase.id, context: MODULE });\n          await loadKnowledgeBaseHealth(ctx.state.knowledgeBase.id); // Refresh health\n          await loadKnowledgeBaseFiles(projectId, ctx.state.knowledgeBase.id); // Refresh files\n        }\n      } else {\n        logger.error(`[${MODULE}][reprocessFiles] API reported failure.`, { responseMessage: resp.message, context: MODULE });\n        throw new Error(resp.message || \"Reprocessing request failed.\");\n      }\n    } catch (err) {\n      logger.error(\n        `[${MODULE}][reprocessFiles] Error during reprocessing for project ${projectId}.`,\n        { status: err?.status ?? 500, data: err, message: err?.message ?? String(err) },\n        { context: MODULE }\n      );\n      // Optionally, show an error to the user\n    } finally {\n      ctx._setButtonLoading(btn, false);\n      logger.debug(`[${MODULE}][reprocessFiles] Reprocess button loading state reset.`, { context: MODULE });\n    }\n  }\n\n  /**\n   * Handles submission of the Knowledge Base settings form, validating input and initiating creation or update of the Knowledge Base.\n   *\n   * Prevents default form submission, validates required fields, constructs the payload, and triggers the submission process. If creating a new Knowledge Base, includes the option to process existing files.\n   *\n   * @param {Event} e - The form submit event.\n   */\n  function handleKnowledgeBaseFormSubmit(e) {\n    e.preventDefault();\n    logger.info(`[${MODULE}][handleKnowledgeBaseFormSubmit] Form submitted.`, { context: MODULE });\n    const form = e.target;\n    const projectId = form.dataset.projectId || ctx._getCurrentProjectId();\n\n    if (!ctx.validateUUID(projectId)) {\n      logger.warn(`[${MODULE}][handleKnowledgeBaseFormSubmit] Invalid project ID: ${projectId}. Aborting.`, { context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][handleKnowledgeBaseFormSubmit] Project ID: ${projectId}`, { context: MODULE });\n\n    const data = new FormData(form);\n    const payload = {\n      name: data.get(\"name\"),\n      description: data.get(\"description\") || null,\n      embedding_model: data.get(\"embedding_model\"),\n    };\n    logger.debug(`[${MODULE}][handleKnowledgeBaseFormSubmit] Payload created:`, { payload, context: MODULE });\n\n    if (!ctx.state.knowledgeBase?.id) { // Creating new KB\n      payload.process_existing_files = form.elements[\"process_all_files\"]?.checked || false;\n      logger.debug(`[${MODULE}][handleKnowledgeBaseFormSubmit] New KB. process_existing_files: ${payload.process_existing_files}`, { context: MODULE });\n    }\n\n    if (!payload.name?.trim()) {\n      logger.warn(`[${MODULE}][handleKnowledgeBaseFormSubmit] Name is empty. Aborting.`, { context: MODULE });\n      // TODO: Show validation error to user\n      return;\n    }\n    if (!payload.embedding_model) {\n      logger.warn(`[${MODULE}][handleKnowledgeBaseFormSubmit] Embedding model not selected. Aborting.`, { context: MODULE });\n      // TODO: Show validation error to user\n      return;\n    }\n\n    const btn = form.querySelector('button[type=\"submit\"]');\n    ctx._setButtonLoading(btn, true);\n    logger.debug(`[${MODULE}][handleKnowledgeBaseFormSubmit] Submit button loading state set.`, { context: MODULE });\n\n    _submitKnowledgeBaseForm(projectId, payload).finally(() => {\n      ctx._setButtonLoading(btn, false);\n      logger.debug(`[${MODULE}][handleKnowledgeBaseFormSubmit] Submit button loading state reset.`, { context: MODULE });\n    });\n  }\n\n  /**\n   * Submits knowledge base settings to the server for creation or update.\n   *\n   * Determines whether to create a new knowledge base or update an existing one based on the current state, sends the appropriate API request, and updates the UI accordingly. Handles conflict errors by attempting to refresh project details and update the UI.\n   *\n   * @param {string} projectId - The ID of the project to which the knowledge base belongs.\n   * @param {Object} payload - The settings data to submit for the knowledge base.\n   *\n   * @returns {Promise<void>}\n   *\n   * @throws {Error} If the server response indicates failure or returns invalid data.\n   */\n  async function _submitKnowledgeBaseForm(projectId, payload) {\n    logger.info(`[${MODULE}][_submitKnowledgeBaseForm] Submitting for project ID: ${projectId}`, { payload, context: MODULE });\n    await waitForAppReady();\n    logger.debug(`[${MODULE}][_submitKnowledgeBaseForm] App is ready. Proceeding.`, { context: MODULE });\n\n    try {\n      const kbId = ctx.state.knowledgeBase?.id;\n      const isUpdating = !!kbId;\n      logger.debug(`[${MODULE}][_submitKnowledgeBaseForm] KB ID: ${kbId}, Is updating: ${isUpdating}`, { context: MODULE });\n\n      const method = isUpdating ? \"PATCH\" : \"POST\";\n      const url = isUpdating\n        ? `/api/projects/${projectId}/knowledge-bases/${kbId}`\n        : `/api/projects/${projectId}/knowledge-bases`;\n      logger.debug(`[${MODULE}][_submitKnowledgeBaseForm] API URL: ${url}, Method: ${method}`, { context: MODULE });\n\n      const resp = await ctx.apiRequest(url, { method, body: payload });\n      logger.debug(`[${MODULE}][_submitKnowledgeBaseForm] API response:`, { response: resp, context: MODULE });\n\n      const responseData = isUpdating ? resp.data : (resp.data?.knowledge_base || resp.data);\n\n      if (responseData?.id || resp.status === \"success\") {\n        logger.info(`[${MODULE}][_submitKnowledgeBaseForm] Form submission successful for project ${projectId}. KB ID: ${responseData?.id}`, { context: MODULE });\n        hideKnowledgeBaseModal();\n\n        if (ctx.projectManager.loadProjectDetails) {\n          logger.debug(`[${MODULE}][_submitKnowledgeBaseForm] Reloading project details for ${projectId}.`, { context: MODULE });\n          const project = await ctx.projectManager.loadProjectDetails(projectId);\n          ctx.renderKnowledgeBaseInfo(project?.knowledge_base, projectId); // UI update\n        } else {\n          logger.debug(`[${MODULE}][_submitKnowledgeBaseForm] projectManager.loadProjectDetails not available. Rendering with combined KB state.`, { context: MODULE });\n          ctx.renderKnowledgeBaseInfo({\n            ...ctx.state.knowledgeBase,\n            ...responseData,\n          }, projectId); // UI update\n        }\n      } else {\n        logger.error(`[${MODULE}][_submitKnowledgeBaseForm] API reported failure or invalid data.`, { responseMessage: resp.message, responseData, context: MODULE });\n        throw new Error(resp.message || \"Invalid response from server\");\n      }\n    } catch (err) {\n      logger.error(\n        `[${MODULE}][_submitKnowledgeBaseForm] Error submitting form for project ${projectId}.`,\n        { status: err?.status ?? 500, data: err, message: err?.message ?? String(err) },\n        { context: MODULE }\n      );\n      if (err.status === 409) {\n        logger.warn(\n          `[${MODULE}][_submitKnowledgeBaseForm] Conflict (409) detected. Attempting to refresh project details.`,\n          { status: err?.status ?? 400, data: err, message: err?.message ?? String(err) },\n          { context: MODULE }\n        );\n        if (ctx.projectManager.loadProjectDetails) {\n          try {\n            const project = await ctx.projectManager.loadProjectDetails(projectId);\n            ctx.renderKnowledgeBaseInfo(project?.knowledge_base, projectId); // Refresh UI\n            hideKnowledgeBaseModal();\n          } catch (refreshError) {\n            logger.error(\n              `[${MODULE}][_submitKnowledgeBaseForm] Error refreshing project details after 409.`,\n              { status: refreshError?.status ?? 500, data: refreshError, message: refreshError?.message ?? String(refreshError) },\n              { context: MODULE }\n            );\n          }\n        }\n      } else {\n        // Handle other errors, potentially show user message via ctx._showStatusAlert\n        ctx._showStatusAlert(`Error saving settings: ${err.message || 'Unknown server error'}`, \"error\");\n      }\n    }\n  }\n\n  /**\n   * Deletes the current knowledge base after user confirmation.\n   *\n   * Prompts the user to confirm deletion, then sends a request to remove the knowledge base for the current project. On success, closes the modal, updates the UI to reflect the inactive state, and reloads project details. If deletion fails, displays an error alert.\n   *\n   * @remark If the project ID or knowledge base ID is missing, the function aborts without performing any action.\n   */\n  async function handleDeleteKnowledgeBase() {\n    logger.info(`[${MODULE}][handleDeleteKnowledgeBase] Initiating delete.`, { context: MODULE });\n    await waitForAppReady();\n    logger.debug(`[${MODULE}][handleDeleteKnowledgeBase] App is ready. Proceeding.`, { context: MODULE });\n\n    const projectId = ctx._getCurrentProjectId();\n    const kbId = ctx.state.knowledgeBase?.id;\n\n    if (!projectId || !kbId) {\n      logger.warn(`[${MODULE}][handleDeleteKnowledgeBase] Project ID or KB ID missing. Aborting.`, { projectId, kbId, context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][handleDeleteKnowledgeBase] Project ID: ${projectId}, KB ID: ${kbId}`, { context: MODULE });\n\n    const confirmed = await ctx.modalManager.confirmAction({ // Pass as object\n      title: \"Delete Knowledge Base?\",\n      message: \"Are you sure you want to permanently delete this knowledge base? This action cannot be undone.\",\n      confirmText: \"Delete\",\n      confirmClass: \"btn-error\"\n    });\n\n\n    if (!confirmed) {\n      logger.info(`[${MODULE}][handleDeleteKnowledgeBase] Deletion cancelled by user.`, { context: MODULE });\n      return;\n    }\n\n    const deleteButton = ctx.elements.deleteKnowledgeBaseBtn;\n    ctx._setButtonLoading(deleteButton, true, \"Deleting...\");\n    logger.debug(`[${MODULE}][handleDeleteKnowledgeBase] Delete button loading state set.`, { context: MODULE });\n\n    try {\n      const resp = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-bases/${kbId}`,\n        { method: \"DELETE\" }\n      );\n      logger.debug(`[${MODULE}][handleDeleteKnowledgeBase] API response:`, { response: resp, context: MODULE });\n\n      if (resp.status === \"success\" || resp.data?.deleted_id) {\n        logger.info(`[${MODULE}][handleDeleteKnowledgeBase] Successfully deleted KB ${kbId} for project ${projectId}.`, { context: MODULE });\n        hideKnowledgeBaseModal();\n        ctx._showInactiveState();\n        if (ctx.projectManager.loadProjectDetails) {\n          logger.debug(`[${MODULE}][handleDeleteKnowledgeBase] Reloading project details for ${projectId}.`, { context: MODULE });\n          await ctx.projectManager.loadProjectDetails(projectId);\n        }\n      } else {\n        logger.error(`[${MODULE}][handleDeleteKnowledgeBase] API reported failure.`, { responseMessage: resp.message, context: MODULE });\n        throw new Error(resp.message || \"Failed to delete knowledge base.\");\n      }\n    } catch (err) {\n      logger.error(\n        `[${MODULE}][handleDeleteKnowledgeBase] Error deleting KB ${kbId} for project ${projectId}.`,\n        { status: err?.status ?? 500, data: err, message: err?.message ?? String(err) },\n        { context: MODULE }\n      );\n      ctx._showStatusAlert(`Error deleting Knowledge Base: ${err.message || 'Unknown server error'}`, \"error\");\n    } finally {\n      ctx._setButtonLoading(deleteButton, false);\n      logger.debug(`[${MODULE}][handleDeleteKnowledgeBase] Delete button loading state reset.`, { context: MODULE });\n    }\n  }\n\n  /**\n   * Displays the Knowledge Base settings modal dialog, populating the form with current or default KB data and updating related UI elements.\n   *\n   * If a Knowledge Base exists for the current project, its details are loaded and shown in the form; otherwise, the form is prepared for creating a new KB. The modal also manages the visibility and content of GitHub repository attachment fields based on KB state, and validates model selection compatibility.\n   */\n  async function showKnowledgeBaseModal() {\n    logger.info(`[${MODULE}][showKnowledgeBaseModal] Showing KB settings modal.`, { context: MODULE });\n    await waitForAppReady();\n    logger.debug(`[${MODULE}][showKnowledgeBaseModal] App is ready. Proceeding.`, { context: MODULE });\n\n    if (!ctx.elements.settingsModal) {\n      ctx.elements.settingsModal =\n        ctx.domAPI.getElementById?.('knowledgeBaseSettingsModal');\n    }\n    let modal = ctx.elements.settingsModal;\n    if (!modal || typeof modal.showModal !== \"function\") {\n      logger.warn(`[${MODULE}][showKnowledgeBaseModal] Settings modal element not found or not a dialog. Aborting.`, { context: MODULE });\n      return;\n    }\n\n    const projectId = ctx._getCurrentProjectId();\n    if (!projectId) {\n      logger.warn(`[${MODULE}][showKnowledgeBaseModal] No project ID found. Aborting modal show.`, { context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][showKnowledgeBaseModal] Project ID: ${projectId}`, { context: MODULE });\n\n    // Refresh KB state before populating the form\n    try {\n      if (ctx.projectManager.loadProjectDetails) {\n        logger.debug(`[${MODULE}][showKnowledgeBaseModal] Refreshing project details for ${projectId} to get latest KB state.`, { context: MODULE });\n        const projectDetails = await ctx.projectManager.loadProjectDetails(projectId);\n        if (projectDetails && typeof projectDetails.knowledge_base !== 'undefined') {\n          ctx.state.knowledgeBase = projectDetails.knowledge_base;\n          logger.debug(`[${MODULE}][showKnowledgeBaseModal] KB state updated from project details. KB ID: ${ctx.state.knowledgeBase?.id}`, { context: MODULE });\n        } else if (projectDetails === null) {\n          logger.warn(`[${MODULE}][showKnowledgeBaseModal] Project details load failed for ${projectId}. Modal might show stale KB data.`, { context: MODULE });\n        } else {\n          logger.debug(`[${MODULE}][showKnowledgeBaseModal] Project details loaded but no 'knowledge_base' field found.`, { projectDetails, context: MODULE });\n        }\n      }\n    } catch (err) {\n      logger.error(\n        `[${MODULE}][showKnowledgeBaseModal] Error refreshing project details. Modal might show stale KB data.`,\n        { status: err?.status ?? 500, data: err, message: err?.message ?? String(err) },\n        { context: MODULE }\n      );\n    }\n\n    const form = ctx.elements.settingsForm;\n    if (form) {\n      form.reset();\n      logger.debug(`[${MODULE}][showKnowledgeBaseModal] Settings form reset.`, { context: MODULE });\n      const kbIdInput = form.elements[\"knowledge_base_id\"];\n      if (kbIdInput) {\n        kbIdInput.value = ctx.state.knowledgeBase?.id || \"\";\n      }\n    }\n\n    _updateModelSelection(ctx.state.knowledgeBase?.embedding_model || null);\n    logger.debug(`[${MODULE}][showKnowledgeBaseModal] Model selection updated. Current model: ${ctx.state.knowledgeBase?.embedding_model}`, { context: MODULE });\n\n    const deleteBtn = ctx.elements.deleteKnowledgeBaseBtn;\n    const { kbGitHubAttachedRepoInfo, kbAttachedRepoUrlDisplay, kbAttachedRepoBranchDisplay, kbGitHubAttachForm, kbGitHubRepoUrlInput, kbGitHubBranchInput, kbGitHubFilePathsTextarea } = ctx.elements;\n\n    if (ctx.state.knowledgeBase && ctx.state.knowledgeBase.id) {\n      logger.debug(`[${MODULE}][showKnowledgeBaseModal] Populating form for existing KB. ID: ${ctx.state.knowledgeBase.id}`, { context: MODULE });\n      const kb = ctx.state.knowledgeBase;\n      if (form) {\n        form.elements[\"name\"].value = kb.name || \"\";\n        form.elements[\"description\"].value = kb.description || \"\";\n        const processAllFilesCheckbox = form.elements[\"process_all_files\"];\n        if (processAllFilesCheckbox) processAllFilesCheckbox.checked = false;\n\n        const autoEnableCheckbox = form.elements[\"auto_enable\"];\n        if (autoEnableCheckbox) autoEnableCheckbox.checked = kb.is_active !== false;\n      }\n      deleteBtn?.classList.remove(\"hidden\");\n\n      if (kb.repo_url) {\n        kbGitHubAttachedRepoInfo?.classList.remove(\"hidden\");\n        if (kbAttachedRepoUrlDisplay) kbAttachedRepoUrlDisplay.textContent = kb.repo_url;\n        if (kbAttachedRepoBranchDisplay) kbAttachedRepoBranchDisplay.textContent = kb.branch || 'main';\n        kbGitHubAttachForm?.classList.add(\"hidden\");\n      } else {\n        kbGitHubAttachedRepoInfo?.classList.add(\"hidden\");\n        kbGitHubAttachForm?.classList.remove(\"hidden\");\n        if (kbGitHubRepoUrlInput) kbGitHubRepoUrlInput.value = \"\";\n        if (kbGitHubBranchInput) kbGitHubBranchInput.value = \"main\";\n        if (kbGitHubFilePathsTextarea) kbGitHubFilePathsTextarea.value = \"\";\n      }\n    } else {\n      logger.debug(`[${MODULE}][showKnowledgeBaseModal] Populating form for new KB.`, { context: MODULE });\n      if (form) {\n        const processAllFilesCheckbox = form.elements[\"process_all_files\"];\n        if (processAllFilesCheckbox) processAllFilesCheckbox.checked = true;\n\n        const autoEnableCheckbox = form.elements[\"auto_enable\"];\n        if (autoEnableCheckbox) autoEnableCheckbox.checked = true;\n      }\n      deleteBtn?.classList.add(\"hidden\");\n      kbGitHubAttachedRepoInfo?.classList.add(\"hidden\");\n      kbGitHubAttachForm?.classList.remove(\"hidden\");\n      if (kbGitHubRepoUrlInput) kbGitHubRepoUrlInput.value = \"\";\n      if (kbGitHubBranchInput) kbGitHubBranchInput.value = \"main\";\n      if (kbGitHubFilePathsTextarea) kbGitHubFilePathsTextarea.value = \"\";\n    }\n\n    if (form) form.dataset.projectId = projectId; // Set projectId on form\n\n    if (ctx.modalManager?.show) {\n      /* preferred: let central ModalManager handle scroll-lock, backdrop, etc. */\n      ctx.modalManager.show('knowledge');           // alias maps to #knowledgeBaseSettingsModal\n    } else if (typeof modal.showModal === 'function') {\n      /* native <dialog> support */\n      modal.showModal();\n    } else {\n      /* last-resort fallback for browsers without <dialog> */\n      ctx.domAPI.removeClass(modal, 'hidden');\n    }\n    validateSelectedModelDimensions();\n    logger.debug(`[${MODULE}][showKnowledgeBaseModal] Modal shown.`, { context: MODULE });\n  }\n\n  /**\n   * Closes the Knowledge Base settings modal dialog if it is present and supports closing.\n   */\n  function hideKnowledgeBaseModal() {\n    logger.info(`[${MODULE}][hideKnowledgeBaseModal] Hiding KB settings modal.`, { context: MODULE });\n    const modal = ctx.elements.settingsModal;\n    if (ctx.modalManager?.hide) {\n      ctx.modalManager.hide('knowledge');\n    } else if (modal && typeof modal.close === \"function\") {\n      modal.close();\n    } else if (modal) {\n      ctx.domAPI.addClass(modal, 'hidden');\n    }\n  }\n\n  /**\n   * Loads and updates health metrics for a specific Knowledge Base by ID.\n   *\n   * Retrieves detailed health information for the given Knowledge Base, updates relevant UI elements and internal state, and returns the health data object if found.\n   *\n   * @param {string} kbId - The Knowledge Base ID to load health metrics for.\n   * @returns {Promise<Object|null>} The health data object for the Knowledge Base, or null if not found or on error.\n   */\n  async function loadKnowledgeBaseHealth(kbId) {\n    logger.info(`[${MODULE}][loadKnowledgeBaseHealth] Called for KB ID: ${kbId}`, { context: MODULE });\n    await waitForAppReady();\n    logger.debug(`[${MODULE}][loadKnowledgeBaseHealth] App is ready. Proceeding.`, { context: MODULE });\n\n    if (!kbId || !ctx.validateUUID(kbId)) {\n      logger.warn(`[${MODULE}][loadKnowledgeBaseHealth] Invalid KB ID: ${kbId}. Aborting.`, { context: MODULE });\n      return null;\n    }\n    try {\n      const projectId = ctx._getCurrentProjectId();\n      if (!projectId) {\n        logger.warn(`[${MODULE}][loadKnowledgeBaseHealth] No project ID found for KB ${kbId}. Aborting.`, { context: MODULE });\n        return null;\n      }\n      logger.debug(`[${MODULE}][loadKnowledgeBaseHealth] Project ID: ${projectId}`, { context: MODULE });\n\n      const healthResp = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-bases/${kbId}/status?detailed=true`,\n        { method: \"GET\" }\n      );\n      logger.debug(`[${MODULE}][loadKnowledgeBaseHealth] API response for KB ${kbId}:`, { response: healthResp, context: MODULE });\n\n      // Assuming healthResp.data contains an array of KBs or a single KB object for the project\n      // And we need to find the specific KB by kbId if multiple are returned, or it's the main object.\n      let kbHealthData = null;\n      if (Array.isArray(healthResp?.data)) {\n        kbHealthData = healthResp.data.find(kb => kb.id === kbId);\n      } else if (healthResp?.data?.id === kbId || (healthResp?.data && !Array.isArray(healthResp?.data) && Object.keys(healthResp.data).length > 0 && !kbId)) {\n        // If kbId was not initially passed, but we got a single KB object, assume it's the one.\n        // Or if a single object is returned and its ID matches.\n        kbHealthData = healthResp.data;\n      }\n\n\n      if (kbHealthData) {\n        logger.info(`[${MODULE}][loadKnowledgeBaseHealth] Health data found for KB ${kbId}.`, { data: kbHealthData, context: MODULE });\n        const { kbNameDisplay, kbModelDisplay, knowledgeFileCount, knowledgeChunkCount, knowledgeFileSize } = ctx.elements;\n\n        if (kbNameDisplay && kbHealthData.name) kbNameDisplay.textContent = kbHealthData.name;\n        if (kbModelDisplay && kbHealthData.embedding_model) kbModelDisplay.textContent = kbHealthData.embedding_model;\n\n        if (knowledgeFileCount && kbHealthData.files?.total_files !== undefined) {\n          knowledgeFileCount.textContent = kbHealthData.files.total_files;\n        }\n        if (knowledgeChunkCount && kbHealthData.vector_stats?.total_vectors !== undefined) {\n          knowledgeChunkCount.textContent = kbHealthData.vector_stats.total_vectors;\n        }\n\n        let totalSize = 0;\n        if (kbHealthData.files?.files_details) {\n          kbHealthData.files.files_details.forEach(file => totalSize += (file.file_size || 0));\n        } else if (ctx.state.knowledgeBase?.stats?.total_size_bytes && ctx.state.knowledgeBase.id === kbId) {\n          // Fallback to potentially stale component state if API doesn't provide detailed sizes\n          totalSize = ctx.state.knowledgeBase.stats.total_size_bytes;\n        }\n        if (knowledgeFileSize) {\n          knowledgeFileSize.textContent = ctx.uiUtils.formatBytes(totalSize);\n        }\n\n        if (ctx.state.knowledgeBase && ctx.state.knowledgeBase.id === kbId) {\n          logger.debug(`[${MODULE}][loadKnowledgeBaseHealth] Updating component state for KB ${kbId}.`, { context: MODULE });\n          ctx.state.knowledgeBase.name = kbHealthData.name || ctx.state.knowledgeBase.name;\n          ctx.state.knowledgeBase.embedding_model = kbHealthData.embedding_model || ctx.state.knowledgeBase.embedding_model;\n          if (kbHealthData.files) {\n            ctx.state.knowledgeBase.stats = {\n              ...ctx.state.knowledgeBase.stats,\n              file_count: kbHealthData.files.total_files || 0,\n              unprocessed_files: kbHealthData.files.pending_files || 0,\n            };\n          }\n          if (kbHealthData.vector_stats) {\n            ctx.state.knowledgeBase.stats.chunk_count = kbHealthData.vector_stats.total_vectors || 0;\n          }\n          ctx._updateStatusAlerts(ctx.state.knowledgeBase);\n        }\n      } else {\n        logger.warn(`[${MODULE}][loadKnowledgeBaseHealth] No specific health data found for KB ${kbId} in response.`, { response: healthResp, context: MODULE });\n      }\n      return kbHealthData;\n    } catch (err) {\n      logger.error(\n        `[${MODULE}][loadKnowledgeBaseHealth] Error loading health for KB ${kbId}.`,\n        { status: err?.status ?? 500, data: err, message: err?.message ?? String(err) },\n        { context: MODULE }\n      );\n      ctx._showStatusAlert(`Could not load Knowledge Base status: ${err.message}`, \"error\");\n      return null;\n    }\n  }\n\n  /**\n   * Loads and displays the list of files for a project's knowledge base.\n   *\n   * Retrieves the files associated with the specified project and knowledge base, updating the UI to show the files or a placeholder if none are found. If the project or KB ID is missing, or if an error occurs, the files list is cleared and the files section is hidden.\n   *\n   * @param {string} projectId - The project identifier.\n   * @param {string} kbId - The knowledge base identifier.\n   */\n  async function loadKnowledgeBaseFiles(projectId, kbId) {\n    logger.info(`[${MODULE}][loadKnowledgeBaseFiles] Called for project: ${projectId}, KB ID: ${kbId}`, { context: MODULE });\n    await waitForAppReady();\n    logger.debug(`[${MODULE}][loadKnowledgeBaseFiles] App is ready. Proceeding.`, { context: MODULE });\n\n    if (!projectId || !kbId) {\n      logger.warn(`[${MODULE}][loadKnowledgeBaseFiles] Project ID or KB ID missing. Clearing files list.`, { projectId, kbId, context: MODULE });\n      _renderKnowledgeBaseFiles({ files: [], pagination: { total: 0 } }); // Clear UI\n      ctx.elements.knowledgeBaseFilesSection?.classList.add(\"hidden\");\n      return;\n    }\n\n    try {\n      const response = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-bases/${kbId}/files`,\n        { method: \"GET\" }\n      );\n      logger.debug(`[${MODULE}][loadKnowledgeBaseFiles] API response for files list:`, { response: response, context: MODULE });\n\n      if (response.status === \"success\" && response.data) {\n        logger.info(`[${MODULE}][loadKnowledgeBaseFiles] Successfully loaded ${response.data.files?.length || 0} files for KB ${kbId}.`, { context: MODULE });\n        _renderKnowledgeBaseFiles(response.data); // UI update\n        ctx.elements.knowledgeBaseFilesSection?.classList.toggle(\"hidden\", response.data.files.length === 0);\n      } else {\n        logger.warn(`[${MODULE}][loadKnowledgeBaseFiles] API reported no success or no data for KB ${kbId}. Clearing files list.`, { response, context: MODULE });\n        _renderKnowledgeBaseFiles({ files: [], pagination: { total: 0 } }); // Clear UI\n        ctx.elements.knowledgeBaseFilesSection?.classList.add(\"hidden\");\n      }\n    } catch (error) {\n      logger.error(\n        `[${MODULE}][loadKnowledgeBaseFiles] Error loading files for KB ${kbId}.`,\n        { status: error?.status ?? 500, data: error, message: error?.message ?? String(error) },\n        { context: MODULE }\n      );\n      _renderKnowledgeBaseFiles({ files: [], pagination: { total: 0 } }); // Clear UI on error\n      ctx.elements.knowledgeBaseFilesSection?.classList.add(\"hidden\");\n      ctx._showStatusAlert(`Could not load files for Knowledge Base: ${error.message}`, \"error\");\n    }\n  }\n\n  /**\n   * Render the list of knowledge base files in the UI.\n   * @param {Object} filesData - Data containing the list of files and pagination info.\n   */\n  function _renderKnowledgeBaseFiles(filesData) {\n    const container = ctx.elements.knowledgeBaseFilesListContainer;\n    if (!container) return;\n\n    ctx._safeSetInnerHTML(container, \"\"); // Clear previous content\n\n    if (!filesData || !filesData.files || filesData.files.length === 0) {\n      ctx._safeSetInnerHTML(container, '<p class=\"text-base-content/60 text-center py-4\">No files currently in the Knowledge Base.</p>');\n      return;\n    }\n\n    const ul = ctx.domAPI.createElement(\"ul\");\n    ul.className = \"space-y-2\";\n\n    filesData.files.forEach(file => {\n      const li = ctx.domAPI.createElement(\"li\");\n      li.className = \"flex items-center justify-between p-2 bg-base-200 rounded-md hover:bg-base-300 transition-colors\";\n\n      const processingStatus = file.config?.search_processing?.status || 'unknown';\n      let statusBadgeClass = 'badge-ghost';\n      if (processingStatus === 'success') statusBadgeClass = 'badge-success';\n      else if (processingStatus === 'error') statusBadgeClass = 'badge-error';\n      else if (processingStatus === 'pending') statusBadgeClass = 'badge-warning';\n\n      ctx._safeSetInnerHTML(li, `\n        <div class=\"flex items-center gap-3 truncate\">\n          <span class=\"text-xl\">${ctx.uiUtils.fileIcon(file.file_type)}</span>\n          <div class=\"truncate\">\n            <span class=\"font-medium text-sm block truncate\" title=\"${file.filename}\">${file.filename}</span>\n            <span class=\"text-xs text-base-content/70\">${ctx.uiUtils.formatBytes(file.file_size)}</span>\n          </div>\n        </div>\n        <div class=\"flex items-center gap-2\">\n          <span class=\"badge ${statusBadgeClass} badge-sm capitalize\">${processingStatus}</span>\n          <button data-file-id=\"${file.id}\" class=\"btn btn-xs btn-error btn-outline kb-delete-file-btn\" title=\"Delete file from KB\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3 w-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" /></svg>\n          </button>\n        </div>\n      `);\n\n      const deleteBtn = li.querySelector(\".kb-delete-file-btn\");\n      if (deleteBtn) {\n        ctx.eventHandlers.trackListener(deleteBtn, \"click\", (e) => {\n          e.stopPropagation(); // Prevent li click if any\n          const fileId = deleteBtn.dataset.fileId;\n          const projectId = ctx._getCurrentProjectId();\n          if (projectId && fileId) {\n            _handleDeleteKnowledgeBaseFile(projectId, fileId, file.filename);\n          }\n        }, { context: \"file-deletion\" });\n      }\n      ul.appendChild(li);\n    });\n    container.appendChild(ul);\n  }\n\n  /**\n   * Deletes a file from the knowledge base after user confirmation.\n   *\n   * Prompts the user to confirm deletion of the specified file from the knowledge base. If confirmed, sends a request to remove the file and updates the file list, knowledge base health, and project statistics upon success. Displays an error alert if the deletion fails.\n   *\n   * @param {string} projectId - The ID of the project containing the knowledge base.\n   * @param {string} fileId - The ID of the file to delete.\n   * @param {string} filename - The name of the file to display in confirmation dialogs and alerts.\n   *\n   * @throws {Error} If the API request to delete the file fails.\n   */\n  async function _handleDeleteKnowledgeBaseFile(projectId, fileId, filename) {\n    logger.info(`[${MODULE}][_handleDeleteKnowledgeBaseFile] Initiating delete for file: ${filename} (ID: ${fileId}) in project ${projectId}.`, { context: MODULE });\n    await waitForAppReady();\n    logger.debug(`[${MODULE}][_handleDeleteKnowledgeBaseFile] App is ready. Proceeding.`, { context: MODULE });\n\n    const confirmed = await ctx.modalManager.confirmAction({ // Pass as object\n      title: `Delete \"${filename}\"?`,\n      message: \"Are you sure you want to remove this file from the Knowledge Base? This will delete its indexed data.\",\n      confirmText: \"Delete\",\n      confirmClass: \"btn-error\"\n    });\n\n    if (!confirmed) {\n      logger.info(`[${MODULE}][_handleDeleteKnowledgeBaseFile] Deletion of file ${fileId} cancelled by user.`, { context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][_handleDeleteKnowledgeBaseFile] User confirmed deletion for file ${fileId}.`, { context: MODULE });\n\n    const kbId = ctx.state.knowledgeBase?.id;\n    try {\n      const response = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-bases/${kbId}/files/${fileId}`,\n        { method: \"DELETE\" }\n      );\n      logger.debug(`[${MODULE}][_handleDeleteKnowledgeBaseFile] API response for delete file ${fileId}:`, { response, context: MODULE });\n\n      if (response.status === \"success\") {\n        logger.info(`[${MODULE}][_handleDeleteKnowledgeBaseFile] Successfully deleted file ${fileId} from KB for project ${projectId}.`, { context: MODULE });\n        const kbId = ctx.state.knowledgeBase?.id;\n        if (kbId) {\n          logger.debug(`[${MODULE}][_handleDeleteKnowledgeBaseFile] Refreshing file list and health for KB ${kbId}.`, { context: MODULE });\n          loadKnowledgeBaseFiles(projectId, kbId);\n          loadKnowledgeBaseHealth(kbId);\n        }\n        if (ctx.projectManager.loadProjectStats) {\n          logger.debug(`[${MODULE}][_handleDeleteKnowledgeBaseFile] Refreshing project stats for ${projectId}.`, { context: MODULE });\n          ctx.projectManager.loadProjectStats(projectId);\n        }\n      } else {\n        logger.error(`[${MODULE}][_handleDeleteKnowledgeBaseFile] API reported failure for deleting file ${fileId}.`, { responseMessage: response.message, context: MODULE });\n        throw new Error(response.message || \"Failed to delete file from KB.\");\n      }\n    } catch (error) {\n      logger.error(\n        `[${MODULE}][_handleDeleteKnowledgeBaseFile] Error deleting file ${fileId}.`,\n        { status: error?.status ?? 500, data: error, message: error?.message ?? String(error) },\n        { context: MODULE }\n      );\n      ctx._showStatusAlert(`Error deleting file \"${filename}\": ${error.message || 'Unknown server error'}`, \"error\");\n    }\n  }\n\n  /**\n   * Attaches a GitHub repository to the current knowledge base using form input values.\n   *\n   * Validates the repository URL and gathers branch and file path information from the UI. On success, updates the knowledge base state with the attached repository details and refreshes the modal, files list, and health metrics.\n   *\n   * @remark If the repository URL is invalid or missing, the operation is aborted without user feedback. Errors during the API request are shown as status alerts.\n   */\n  async function handleAttachGitHubRepo() {\n    logger.info(`[${MODULE}][handleAttachGitHubRepo] Attempting to attach GitHub repo.`, { context: MODULE });\n    await waitForAppReady();\n    logger.debug(`[${MODULE}][handleAttachGitHubRepo] App is ready. Proceeding.`, { context: MODULE });\n\n    const projectId = ctx._getCurrentProjectId();\n    const kbId = ctx.state.knowledgeBase?.id;\n\n    if (!projectId || !kbId) {\n      logger.warn(`[${MODULE}][handleAttachGitHubRepo] Project ID or KB ID missing. Aborting.`, { projectId, kbId, context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][handleAttachGitHubRepo] Project ID: ${projectId}, KB ID: ${kbId}`, { context: MODULE });\n\n    const repoUrl = ctx.elements.kbGitHubRepoUrlInput?.value.trim();\n    const branch = ctx.elements.kbGitHubBranchInput?.value.trim() || \"main\";\n    const filePathsRaw = ctx.elements.kbGitHubFilePathsTextarea?.value.trim();\n    const filePaths = filePathsRaw ? filePathsRaw.split('\\n').map(p => p.trim()).filter(p => p) : null;\n    logger.debug(`[${MODULE}][handleAttachGitHubRepo] Form data:`, { repoUrl, branch, filePathsRaw, context: MODULE });\n\n    if (!repoUrl) {\n      logger.warn(`[${MODULE}][handleAttachGitHubRepo] Repository URL is empty. Aborting.`, { context: MODULE });\n      // TODO: Show user validation error\n      return;\n    }\n    try {\n      new URL(repoUrl);\n    } catch (_) {\n      logger.warn(`[${MODULE}][handleAttachGitHubRepo] Invalid repository URL: ${repoUrl}. Aborting.`, { context: MODULE });\n      // TODO: Show user validation error\n      return;\n    }\n\n    const attachButton = ctx.elements.kbAttachRepoBtn;\n    ctx._setButtonLoading(attachButton, true, \"Attaching...\");\n    logger.debug(`[${MODULE}][handleAttachGitHubRepo] Attach button loading state set.`, { context: MODULE });\n\n    try {\n      const payload = { repo_url: repoUrl, branch };\n      if (filePaths && filePaths.length > 0) {\n        payload.file_paths = filePaths;\n      }\n      logger.debug(`[${MODULE}][handleAttachGitHubRepo] API payload:`, { payload, context: MODULE });\n\n      const response = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-bases/${kbId}/github/attach`,\n        { method: \"POST\", body: payload }\n      );\n      logger.debug(`[${MODULE}][handleAttachGitHubRepo] API response:`, { response, context: MODULE });\n\n      if (response.success && response.data) {\n        logger.info(`[${MODULE}][handleAttachGitHubRepo] Successfully attached GitHub repo ${repoUrl} to KB ${kbId}.`, { context: MODULE });\n        if (ctx.state.knowledgeBase) {\n          ctx.state.knowledgeBase.repo_url = response.data.repo_url; // Assuming API returns the canonical URL\n          ctx.state.knowledgeBase.branch = response.data.branch || branch; // Assuming API returns branch\n          ctx.state.knowledgeBase.file_paths = response.data.file_paths || filePaths; // Assuming API returns paths\n        }\n        showKnowledgeBaseModal();\n        loadKnowledgeBaseFiles(projectId, kbId);\n        loadKnowledgeBaseHealth(kbId);\n      } else {\n        logger.error(`[${MODULE}][handleAttachGitHubRepo] API reported failure.`, { responseMessage: response.message, context: MODULE });\n        throw new Error(response.message || \"Failed to attach GitHub repository.\");\n      }\n    } catch (error) {\n      logger.error(\n        `[${MODULE}][handleAttachGitHubRepo] Error attaching GitHub repo.`,\n        { status: error?.status ?? 500, data: error, message: error?.message ?? String(error) },\n        { context: MODULE }\n      );\n      ctx._showStatusAlert(`Error attaching repository: ${error.message || 'Unknown server error'}`, \"error\");\n    } finally {\n      ctx._setButtonLoading(attachButton, false);\n      logger.debug(`[${MODULE}][handleAttachGitHubRepo] Attach button loading state reset.`, { context: MODULE });\n    }\n  }\n\n  /**\n   * Detaches a GitHub repository from the current knowledge base after user confirmation.\n   *\n   * Prompts the user to confirm detachment, then sends a request to remove the repository and its files from the knowledge base. Updates the UI and internal state on success, or displays an error alert on failure.\n   */\n  async function handleDetachGitHubRepo() {\n    logger.info(`[${MODULE}][handleDetachGitHubRepo] Attempting to detach GitHub repo.`, { context: MODULE });\n    await waitForAppReady();\n    logger.debug(`[${MODULE}][handleDetachGitHubRepo] App is ready. Proceeding.`, { context: MODULE });\n\n    const projectId = ctx._getCurrentProjectId();\n    const kbId = ctx.state.knowledgeBase?.id;\n    const repoUrl = ctx.state.knowledgeBase?.repo_url;\n\n    if (!projectId || !kbId || !repoUrl) {\n      logger.warn(`[${MODULE}][handleDetachGitHubRepo] Project ID, KB ID, or Repo URL missing. Aborting.`, { projectId, kbId, repoUrl, context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][handleDetachGitHubRepo] Project ID: ${projectId}, KB ID: ${kbId}, Repo URL: ${repoUrl}`, { context: MODULE });\n\n    const confirmed = await ctx.modalManager.confirmAction({ // Pass as object\n      title: `Detach \"${repoUrl}\"?`,\n      message: \"Are you sure you want to detach this repository? Files from this repository will be removed from the Knowledge Base.\",\n      confirmText: \"Detach\",\n      confirmClass: \"btn-error\"\n    });\n\n    if (!confirmed) {\n      logger.info(`[${MODULE}][handleDetachGitHubRepo] Detachment of repo ${repoUrl} cancelled by user.`, { context: MODULE });\n      return;\n    }\n    logger.debug(`[${MODULE}][handleDetachGitHubRepo] User confirmed detachment for repo ${repoUrl}.`, { context: MODULE });\n\n    const detachButton = ctx.elements.kbDetachRepoBtn;\n    ctx._setButtonLoading(detachButton, true, \"Detaching...\");\n    logger.debug(`[${MODULE}][handleDetachGitHubRepo] Detach button loading state set.`, { context: MODULE });\n\n    try {\n      const response = await ctx.apiRequest(\n        `/api/projects/${projectId}/knowledge-bases/${kbId}/github/detach`,\n        { method: \"POST\", body: { repo_url: repoUrl } }\n      );\n      logger.debug(`[${MODULE}][handleDetachGitHubRepo] API response:`, { response, context: MODULE });\n\n      if (response.status === \"success\" && response.data) { // Assuming response.data might contain status or confirmation\n        logger.info(`[${MODULE}][handleDetachGitHubRepo] Successfully detached GitHub repo ${repoUrl} from KB ${kbId}.`, { context: MODULE });\n        if (ctx.state.knowledgeBase) {\n          delete ctx.state.knowledgeBase.repo_url;\n          delete ctx.state.knowledgeBase.branch;\n          delete ctx.state.knowledgeBase.file_paths;\n        }\n        showKnowledgeBaseModal();\n        loadKnowledgeBaseFiles(projectId, kbId);\n        loadKnowledgeBaseHealth(kbId);\n      } else {\n        logger.error(`[${MODULE}][handleDetachGitHubRepo] API reported failure.`, { responseMessage: response.message, context: MODULE });\n        throw new Error(response.message || \"Failed to detach GitHub repository.\");\n      }\n    } catch (error) {\n      logger.error(\n        `[${MODULE}][handleDetachGitHubRepo] Error detaching GitHub repo.`,\n        { status: error?.status ?? 500, data: error, message: error?.message ?? String(error) },\n        { context: MODULE }\n      );\n      ctx._showStatusAlert(`Error detaching repository: ${error.message || 'Unknown server error'}`, \"error\");\n    } finally {\n      ctx._setButtonLoading(detachButton, false);\n      logger.debug(`[${MODULE}][handleDetachGitHubRepo] Detach button loading state reset.`, { context: MODULE });\n    }\n  }\n\n  /**\n   * Validate dimension compatibility on model change\n   */\n  function validateSelectedModelDimensions() {\n    const sel = ctx.elements.modelSelect;\n    if (!sel) return;\n    const parent = sel.closest(\".form-control\");\n    if (!parent) return;\n    let warning = parent.querySelector(\".model-error\");\n    const opt = sel.options[sel.selectedIndex];\n    if (opt.disabled) { // Assuming disabled options are due to dimension mismatch\n      if (!warning) {\n        const labelDiv = parent.querySelector(\".label:last-of-type\") || parent.querySelector(\"p.text-xs.text-base-content\\\\/70.mt-1\")?.previousElementSibling;\n        if (labelDiv) {\n          warning = ctx.domAPI.createElement(\"span\");\n          warning.className = \"label-text-alt text-error model-error\";\n          labelDiv.appendChild(warning);\n        } else { // Fallback if specific label structure not found\n          warning = ctx.domAPI.createElement(\"div\");\n          warning.className = \"text-error text-xs mt-1 model-error\";\n          sel.insertAdjacentElement(\"afterend\", warning);\n        }\n      }\n      warning.textContent = \"Changing dimensions requires reprocessing all files!\";\n      warning.classList.remove(\"hidden\");\n    } else if (warning) {\n      warning.classList.add(\"hidden\");\n      warning.textContent = \"\";\n    }\n  }\n\n  /**\n   * Update model selection dropdown\n   * @param {string|null} currentModel\n   */\n  function _updateModelSelection(currentModel) {\n    const selectEl = ctx.elements.modelSelect || ctx.domAPI.getElementById(\"embeddingModelSelect\"); // Fallback ID\n    if (!selectEl) return;\n\n    if (currentModel) {\n      let modelFound = false;\n      for (let i = 0; i < selectEl.options.length; i++) {\n        if (selectEl.options[i].value === currentModel) {\n          selectEl.selectedIndex = i;\n          modelFound = true;\n          break;\n        }\n      }\n      // If the current model isn't in the list, add it (e.g., if it's custom or from an older config)\n      if (!modelFound) {\n        const newOption = new Option(`${currentModel} (Current)`, currentModel, false, true); // text, value, defaultSelected, selected\n        selectEl.add(newOption);\n        selectEl.value = currentModel; // Ensure it's selected\n      }\n    } else {\n      selectEl.selectedIndex = 0; // Default to the first option if no current model\n    }\n    validateSelectedModelDimensions(); // Check for warnings after updating\n  }\n\n  // Module/component cleanup function\n  function cleanup() {\n    // Clean up any event listeners, intervals, etc.\n    ctx.eventHandlers.cleanupListeners({ context: \"file-deletion\" });\n\n  }\n\n  return {\n    toggleKnowledgeBase,\n    reprocessFiles,\n    handleKnowledgeBaseFormSubmit,\n    handleDeleteKnowledgeBase,\n    showKnowledgeBaseModal,\n    hideKnowledgeBaseModal,\n    loadKnowledgeBaseHealth,\n    loadKnowledgeBaseFiles,\n    handleAttachGitHubRepo,\n    handleDetachGitHubRepo,\n    validateSelectedModelDimensions,\n    _updateModelSelection, // Expose for direct use if needed by main component\n    cleanup, // Expose cleanup to allow proper resource release\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 53043,
          "_transferSize": 54232,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.591Z",
        "time": 164.11899999366142,
        "timings": {
          "blocked": 121.25699998886138,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.10899999999999466,
          "wait": 42.15599999914505,
          "receive": 0.5970000056549907,
          "_blocked_queueing": 1.664999988861382,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126409",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/project-details-enhancements.js",
          "lineNumber": 7
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/pullToRefresh.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/project-details-enhancements.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1499,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "2979"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"d2a52bb399e35f8d1a1fff191b534350\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 17:50:53 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2979,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "export function createPullToRefresh({\n  element, onRefresh,\n  eventHandlers, domAPI, browserService,\n  threshold = 70, ctx = 'pull-to-refresh'\n}) {\n  if (!element || element.dataset.ptrBound === '1') return;\n  element.dataset.ptrBound = '1';\n\n  let startY = 0;\n  let currentY = 0;\n  let isPulling = false;\n  let refreshTriggered = false;\n\n  // Create pull indicator element if not present\n  let pullIndicator = domAPI.getElementById?.('pullToRefreshIndicator_' + (element.id || ''));\n  if (!pullIndicator) {\n    pullIndicator = domAPI.createElement('div');\n    pullIndicator.id = 'pullToRefreshIndicator_' + (element.id || Math.random().toString(36).slice(2));\n    pullIndicator.className = 'pull-indicator';\n    domAPI.setInnerHTML(pullIndicator, `\n      <div class=\"mobile-loading-indicator\"></div>\n      <span class=\"ml-2\">Pull to refresh</span>\n    `);\n    if (element.parentElement) {\n      domAPI.insertBefore(element.parentElement, pullIndicator, element.parentElement.firstChild);\n    } else {\n      domAPI.appendChild(element, pullIndicator);\n    }\n  }\n\n  function reset() {\n    domAPI.setStyle(pullIndicator, 'transform', 'translateY(-50px)');\n    domAPI.removeClass(pullIndicator, 'visible');\n    isPulling = false;\n    refreshTriggered = false;\n  }\n\n  // Touch start handler\n  const handleTouchStart = (e) => {\n    if (element.scrollTop <= 0) {\n      startY = e.touches[0].clientY;\n      isPulling = true;\n    }\n  };\n\n  // Touch move handler\n  const handleTouchMove = (e) => {\n    if (!isPulling) return;\n\n    currentY = e.touches[0].clientY;\n    const pullDistance = currentY - startY;\n\n    if (pullDistance > 0) {\n      const pullPercent = Math.min(pullDistance / 100, 1);\n      domAPI.setStyle(pullIndicator, 'transform', `translateY(${pullDistance / 2}px)`);\n      if (pullDistance > 20) {\n        domAPI.addClass(pullIndicator, 'visible');\n      }\n      if (pullDistance > threshold && !refreshTriggered) {\n        domAPI.setInnerHTML(pullIndicator, `\n          <div class=\"mobile-loading-indicator\"></div>\n          <span class=\"ml-2\">Release to refresh</span>\n        `);\n      }\n      e.preventDefault();\n    }\n  };\n\n  // Touch end handler\n  const handleTouchEnd = (e) => {\n    if (!isPulling) return;\n\n    const pullDistance = currentY - startY;\n\n    if (pullDistance > threshold) {\n      refreshTriggered = true;\n      domAPI.setInnerHTML(pullIndicator, `\n        <div class=\"mobile-loading-indicator animate-spin\"></div>\n        <span class=\"ml-2\">Refreshing...</span>\n      `);\n      Promise.resolve(onRefresh?.()).finally(() => {\n        browserService.setTimeout(reset, 1000);\n      });\n    } else {\n      reset();\n    }\n  };\n\n  eventHandlers.trackListener(\n    element,\n    'touchstart',\n    handleTouchStart,\n    { context: ctx }\n  );\n  eventHandlers.trackListener(\n    element,\n    'touchmove',\n    handleTouchMove,\n    { context: ctx }\n  );\n  eventHandlers.trackListener(\n    element,\n    'touchend',\n    handleTouchEnd,\n    { context: ctx }\n  );\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 2979,
          "_transferSize": 4167,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.592Z",
        "time": 171.96799999510404,
        "timings": {
          "blocked": 127.13699999658111,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.13700000000000045,
          "wait": 44.1960000045551,
          "receive": 0.4979999939678237,
          "_blocked_queueing": 1.1289999965811148,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126344",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/utils/globalUtils.js",
          "lineNumber": 26
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/storageService.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/utils/globalUtils.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1489,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "1363"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"4dfda73c55bd8b4c8524a128f0c2163f\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 30 May 2025 20:44:10 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1363,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * storageService.js — DI-safe localStorage wrapper (from globalUtils).\n * Uses browserService for access.\n *\n * Usage:\n *   import { createStorageService } from './storageService.js';\n *   const storage = createStorageService({ browserService, APP_CONFIG });\n */\n\nexport function createStorageService({ browserService, APP_CONFIG, logger, DependencySystem }) {\n  if (!browserService) throw new Error('[storageService] browserService required');\n  if (!logger) throw new Error('[storageService] logger required');\n  function safe(fn, _fallback, ctx) {\n    try {\n      return fn();\n    } catch (err) {\n      logger.error(`[storageService] ${ctx} failed`, err,\n                   { context: `storageService:${ctx}` });\n      throw new Error(`[storageService] ${ctx} failed and fallback is forbidden: ${err?.message || err}`);\n    }\n  }\n\n  return {\n    getItem: (k) => safe(() => browserService.getItem(k), null, \"getItem\"),\n    setItem: (k, v) => safe(() => browserService.setItem(k, v), undefined, \"setItem\"),\n    removeItem: (k) => safe(() => browserService.removeItem(k), undefined, \"removeItem\"),\n    clear: () => safe(() => browserService.clear?.(), undefined, \"clear\"),\n    key: (n) => safe(() => browserService.key?.(n), null, \"key\"),\n    get length() {\n      return safe(() => browserService.length ?? 0, 0, \"length\");\n    },\n    cleanup () {}\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 1363,
          "_transferSize": 2551,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.593Z",
        "time": 182.83599999267608,
        "timings": {
          "blocked": 136.03599999539367,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08299999999999841,
          "wait": 46.06099999348169,
          "receive": 0.6560000038007274,
          "_blocked_queueing": 1.1039999953936785,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126320",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/auth.js",
          "lineNumber": 0
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/authFormListenerFactory.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/auth.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1479,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "5182"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"066da03eeced7e1d7ba5afdb4b699efe\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 09:35:01 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 5182,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * Factory for standardized auth modal form listener setup/cleanup.\n * All dependencies must be injected for guardrail compliance.\n * Handles both immediate and dynamic modal form listener attachment, with single-source cleanup.\n *\n * Remediation per event-listener leak/duplication guardrails:\n * - No anonymous handlers (all named/const).\n * - Module-level setup guard (isSetup).\n * - All listeners use context: \"AuthFormListenerFactory\".\n * - No local attachedListeners array: rely solely on context-based cleanup.\n */\n\nexport default function createAuthFormListenerFactory(deps) {\n  if (!deps || typeof deps !== \"object\") throw new Error(\"[AuthFormListenerFactory] DI object required.\");\n  const requiredDeps = [\n    \"eventHandlers\", \"domAPI\", \"domReadinessService\", \"browserService\",\n    \"safeHandler\", \"logger\", \"DependencySystem\"\n  ];\n  for (const key of requiredDeps) {\n    if (!deps[key]) throw new Error(`[AuthFormListenerFactory] Missing DI: ${key}`);\n  }\n  const {\n    eventHandlers,\n    domAPI,\n    domReadinessService: _domReadinessService,  // aliased → not used\n    browserService,                             // used later → keep\n    safeHandler,\n    logger,\n    DependencySystem: _DependencySystem         // aliased → not used\n  } = deps;\n\n  // Module-level guard to prevent duplicate registrations\n  let isSetup = false;\n\n  // ---- NAMED HANDLERS ----\n  let loginHandlerRef = null;\n  let registerHandlerRef = null;\n  let modalsLoadedHandlerRef = null;\n\n  function handleLoginFormSubmit(e) {\n    // formHandlers.loginHandler WILL be rebound below\n    if (loginHandlerRef) {\n      return loginHandlerRef(e);\n    }\n  }\n\n  function handleRegisterFormSubmit(e) {\n    if (registerHandlerRef) {\n      return registerHandlerRef(e);\n    }\n  }\n\n  function handleModalsLoadedEvent() {\n    cleanupListenersOnly();\n    isSetup = false;\n    setup(currentFormHandlers);\n    // Patch up late-initialized forms after modal dynamic load\n    if (browserService?.setTimeout) {\n      browserService.setTimeout(() => {\n        cleanupListenersOnly();\n        isSetup = false;\n        setup(currentFormHandlers);\n      }, 400);\n    }\n  }\n\n  // Reference to most recent handlers for re-setup\n  let currentFormHandlers = null;\n\n  function setup(formHandlers) {\n    if (isSetup) {\n      logger.debug(\"[AuthFormListenerFactory] Setup called but listeners are already attached.\", { context: \"AuthFormListenerFactory\" });\n      return;\n    }\n    isSetup = true;\n    currentFormHandlers = formHandlers;\n\n    // Rebind so they're always up to date for event handler invocation\n    loginHandlerRef = safeHandler(formHandlers.loginHandler, \"AuthFormListenerFactory\", logger);\n    registerHandlerRef = safeHandler(formHandlers.registerHandler, \"AuthFormListenerFactory\", logger);\n\n    // Always use module-level handler identity for event removal correctness\n    modalsLoadedHandlerRef = safeHandler(handleModalsLoadedEvent, \"AuthFormListenerFactory\", logger);\n\n    // Attach listeners to login and register forms by ID\n    const loginForm = domAPI.getElementById(\"loginModalForm\");\n    if (loginForm) {\n      domAPI.setAttribute(loginForm, 'novalidate', 'novalidate');\n      domAPI.removeAttribute(loginForm, 'action');\n      domAPI.removeAttribute(loginForm, 'method');\n      eventHandlers.trackListener(\n        loginForm,\n        \"submit\",\n        safeHandler(handleLoginFormSubmit, \"AuthFormListenerFactory:loginSubmit\"),\n        {\n          passive: false,\n          context: \"AuthFormListenerFactory\",\n          description: \"Login Form Submit\"\n        }\n      );\n    }\n    const registerForm = domAPI.getElementById(\"registerModalForm\");\n    if (registerForm) {\n      domAPI.setAttribute(registerForm, 'novalidate', 'novalidate');\n      domAPI.removeAttribute(registerForm, 'action');\n      domAPI.removeAttribute(registerForm, 'method');\n      eventHandlers.trackListener(\n        registerForm,\n        \"submit\",\n        safeHandler(handleRegisterFormSubmit, \"AuthFormListenerFactory:registerSubmit\"),\n        {\n          passive: false,\n          context: \"AuthFormListenerFactory\",\n          description: \"Register Form Submit\"\n        }\n      );\n    }\n    // Attach modalsLoaded dynamic re-setup (for late-loaded modals)\n    const doc = domAPI.getDocument?.();\n    if (doc && typeof eventHandlers.trackListener === \"function\") {\n      eventHandlers.trackListener(\n        doc,\n        \"modalsLoaded\",\n        safeHandler(modalsLoadedHandlerRef, \"AuthFormListenerFactory:modalsLoaded\"),\n        {\n          passive: false,\n          context: \"AuthFormListenerFactory\",\n          description: \"modalsLoaded Listener\"\n        }\n      );\n    }\n    logger.info(\"[AuthFormListenerFactory] Listener setup completed\", { context: \"AuthFormListenerFactory\" });\n  }\n\n  function cleanupListenersOnly() {\n    if (eventHandlers && typeof eventHandlers.cleanupListeners === \"function\") {\n      eventHandlers.cleanupListeners({ context: \"AuthFormListenerFactory\" });\n    }\n    isSetup = false;\n    loginHandlerRef = null;\n    registerHandlerRef = null;\n    modalsLoadedHandlerRef = null;\n  }\n\n  function cleanup() {\n    cleanupListenersOnly();\n  }\n\n  return {\n    setup,\n    cleanup\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 5182,
          "_transferSize": 6370,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.622Z",
        "time": 153.65000000747386,
        "timings": {
          "blocked": 107.26700000058207,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06199999999999761,
          "wait": 45.222999998977414,
          "receive": 1.0980000079143792,
          "_blocked_queueing": 0.6250000005820766,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/chat.js",
          "lineNumber": 1
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/chatUIEnhancements.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/chat.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1474,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "31098"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"f7e3ff6928a3d5ac52852edb882adfc8\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 01 Jun 2025 18:00:29 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 31098,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * chatUIEnhancements.js\n *\n * Guardrails-compliant factory export exclusively. No top-level logic or direct DOM/global access.\n * All dependencies (including domReadinessService, logger) injected via DI; no side effects at import time.\n *\n * Provides comprehensive UI management for chat interface:\n * - Message rendering and display\n * - Input handling and submission\n * - Typing indicators\n * - UI state management (empty states, loading)\n * - Mobile-specific enhancements\n * - Project-specific chat integration\n */\n\nimport { createDomWaitHelper } from './utils/initHelpers.js';\nimport { createElement } from './utils/globalUtils.js';\nimport { createPullToRefresh } from './utils/pullToRefresh.js';\nimport { getSafeHandler } from './utils/getSafeHandler.js';\n\nexport function createChatUIEnhancements(deps = {}) {\n  // Validate required dependencies\n  const required = ['domAPI', 'eventHandlers', 'browserService', 'domReadinessService', 'logger', 'sanitizer', 'DependencySystem', 'chatManager', 'modalManager'];\n  required.forEach(dep => { if (!deps[dep]) throw new Error(`Missing ${dep}`); });\n\n  const { domAPI, eventHandlers, browserService, domReadinessService, logger, sanitizer, chatManager, modalManager, DependencySystem } = deps;\n  const MODULE_CONTEXT = 'chatUIEnhancements';\n\n  if (!chatManager)  throw new Error('Missing chatManager');\n  if (!modalManager) throw new Error('Missing modalManager');\n\n  const state = {\n    typingIndicatorVisible: false,\n    messageContainer: null,\n    activeTab: null,\n    projectId: null,\n    isMobile: browserService?.isMobile || false\n  };\n\n  const safeHandler = getSafeHandler(DependencySystem);\n  const chatUIBus = new EventTarget();\n  DependencySystem.modules.register('chatUIBus', chatUIBus);\n\n  // Use utility helper for DOM waiting\n  const waitForElements = createDomWaitHelper(domReadinessService, logger);\n\n  /**\n   * Initialize chat UI enhancements. Waits for required DOM elements.\n   * Attaches event listeners to the default chat UI selectors if found.\n   *\n   * @param {Object} options - Initialization options\n   * @param {string} [options.projectId] - Optional project ID for project-specific chat\n   * @returns {Promise<void>} A promise that resolves when initialization is complete or fails.\n   */\n  async function initialize(options = {}) {\n    // Store project ID if provided\n    if (options.projectId) {\n      state.projectId = options.projectId;\n    }\n\n    // Project-only selectors for chat UI\n    const CHAT_SELECTORS = [\n      '#chatInput',\n      '#chatMessages',\n      '#chatSendBtn'\n    ];\n    const context = `${MODULE_CONTEXT}::initialize`;\n\n    try {\n      await waitForElements({\n        domSelectors: CHAT_SELECTORS,\n        timeout: 8000,\n        context\n      });\n    } catch (err) {\n      logger.error('[chatUIEnhancements] Error during chat UI initialization', err, { context });\n      logger.warn('[chatUIEnhancements] Chat UI not yet in DOM – will retry later', err, { context });\n      return;\n    }\n\n    const chatInput = domAPI.getElementById('chatInput');\n    const sendBtn = domAPI.getElementById('chatSendBtn');\n    const chatContainer = domAPI.getElementById('chatMessages');\n    const doc = domAPI.getDocument();\n\n    // Cache default container\n    state.messageContainer = chatContainer;\n\n    // Only add event listener for new message event (no input/send listeners here)\n    if (doc) {\n      eventHandlers.trackListener(doc, 'chatNewMessage', safeHandler(handleNewMessage, 'chatNewMessage'), { context: MODULE_CONTEXT, description: 'New message handler' });\n    }\n\n    // Setup chat header collapse functionality\n    setupChatHeaderCollapse();\n\n    // Setup mobile-specific enhancements\n    if (state.isMobile) {\n      setupMobileEnhancements();\n    }\n\n    // Setup project-specific enhancements if in project context\n    if (state.projectId) {\n      setupProjectChatEnhancements();\n    }\n\n    logger.info(`[${MODULE_CONTEXT}] Chat UI enhancements initialized`, {\n      context,\n      projectId: state.projectId || 'global'\n    });\n\n    return;\n  }\n\n  /**\n   * Setup collapsible chat header functionality\n   */\n  function setupChatHeaderCollapse() {\n    const chatHeader = domAPI.getElementById('chatHeader');\n    const chatMetadata = domAPI.getElementById('chatMetadata');\n\n    if (!chatHeader || !chatMetadata) return;\n\n    eventHandlers.trackListener(\n      chatHeader,\n      'click',\n      safeHandler(() => {\n        const isExpanded = chatHeader.getAttribute('aria-expanded') === 'true';\n        const newState = !isExpanded;\n\n        chatHeader.setAttribute('aria-expanded', newState ? 'true' : 'false');\n        chatMetadata.style.display = newState ? 'flex' : 'none';\n\n        // Rotate chevron\n        const indicator = chatHeader.querySelector('.expandable-indicator');\n        if (indicator) {\n          indicator.style.transform = newState ? 'rotate(0deg)' : 'rotate(-90deg)';\n        }\n      }, 'chatHeaderToggle'),\n      {\n        context: MODULE_CONTEXT,\n        description: 'Chat header collapse toggle'\n      }\n    );\n  }\n\n  /**\n   * Setup mobile-specific enhancements for chat UI\n   */\n  function setupMobileEnhancements() {\n    // Improve touch targets\n    domAPI.querySelectorAll('#chatHeader button, #chatInput, #chatSendBtn').forEach(el => {\n      if (el.tagName === 'BUTTON' && !el.classList.contains('btn-lg')) {\n        el.style.minHeight = '44px'; // Ensure minimum touch target size\n      }\n    });\n\n    // Improve keyboard experience for input\n    const chatInput = domAPI.getElementById('chatInput');\n    if (chatInput) {\n      // Prevent iOS zoom by ensuring font size is at least 16px\n      chatInput.style.fontSize = '16px';\n\n      // Add proper mobile keyboard support\n      chatInput.setAttribute('inputmode', 'text');\n      chatInput.setAttribute('enterkeyhint', 'send');\n    }\n\n    // Setup pull-to-refresh for chat messages\n    createPullToRefresh({\n      element        : domAPI.getElementById('chatMessages'),\n      onRefresh      : ()=> chatManager.loadConversation(chatManager.currentConversationId),\n      eventHandlers, domAPI, browserService,\n      ctx            : MODULE_CONTEXT\n    });\n  }\n\n\n  /**\n   * Setup project-specific chat enhancements\n   */\n  function setupProjectChatEnhancements() {\n    // Setup \"New Conversation\" button if available\n    const newConversationBtn = domAPI.getElementById('newConversationBtn');\n    if (newConversationBtn && !newConversationBtn.dataset.bound) {\n      eventHandlers.trackListener(\n        newConversationBtn,\n        'click',\n        safeHandler(() => {\n          if (chatManager && typeof chatManager.createNewConversation === 'function') {\n            chatManager.createNewConversation()\n              .catch(err => {\n                logger.error('[chatUIEnhancements] Error creating new conversation', err, {\n                  context: MODULE_CONTEXT\n                });\n              });\n          }\n        }, 'newConversationClick'),\n        {\n          context: MODULE_CONTEXT,\n          description: 'New conversation button click'\n        }\n      );\n      newConversationBtn.dataset.bound = '1';\n    }\n\n    // Setup conversation list item clicks\n    setupConversationListItemClicks();\n  }\n\n  /**\n   * Setup click handlers for conversation list items\n   */\n  function setupConversationListItemClicks() {\n    const conversationsList = domAPI.getElementById('conversationsList');\n    if (!conversationsList) return;\n\n    // Use event delegation for conversation items\n    eventHandlers.trackListener(\n      conversationsList,\n      'click',\n      safeHandler((event) => {\n        // Find closest conversation item\n        const conversationItem = domAPI.closest(event.target, '.conversation-item');\n        if (!conversationItem) return;\n\n        // Get conversation ID\n        const conversationId = domAPI.getDataAttribute(conversationItem, 'conversationId');\n        if (!conversationId) return;\n\n        // Load conversation if chatManager is available\n        if (chatManager && typeof chatManager.loadConversation === 'function') {\n          // Highlight active conversation\n          domAPI.querySelectorAll('.conversation-item.active').forEach(item => {\n            domAPI.removeClass(item, 'active');\n          });\n          domAPI.addClass(conversationItem, 'active');\n\n          // Load conversation\n          chatManager.loadConversation(conversationId)\n            .catch(err => {\n              logger.error('[chatUIEnhancements] Error loading conversation', err, {\n                context: MODULE_CONTEXT,\n                conversationId\n              });\n            });\n        }\n      }, 'conversationItemClick'),\n      {\n        context: MODULE_CONTEXT,\n        description: 'Conversation item click'\n      }\n    );\n  }\n\n  // Handle new message event\n  function handleNewMessage(event) {\n    if (!event.detail) {\n      logger.warn(`[${MODULE_CONTEXT}] Received chatNewMessage event without detail`, { context: MODULE_CONTEXT });\n      return;\n    }\n\n    const { message, sender, timestamp, messageId } = event.detail;\n    const messageEl = createMessageElement(message, sender, timestamp, messageId);\n    const chatContainer = state.messageContainer || domAPI.getElementById('chatMessages');\n\n    if (chatContainer && messageEl) {\n      domAPI.appendChild(chatContainer, messageEl);\n      scrollToBottom(chatContainer);\n    } else {\n      logger.error(`[${MODULE_CONTEXT}] Failed to find chat container or create message element`, { context: MODULE_CONTEXT });\n    }\n  }\n\n  /**\n   * Transforms [[cite:XYZ]] markers in AI message content into clickable superscript elements.\n   * Builds DOM nodes using domAPI to avoid innerHTML for complex content.\n   *\n   * @param {string} content - The message content potentially containing citation markers.\n   * @returns {DocumentFragment} A document fragment containing the processed message DOM structure.\n   */\n  function renderCitationsAsDOM(content) {\n    const fragment = domAPI.createDocumentFragment();\n    if (typeof content !== \"string\") {\n      domAPI.appendChild(fragment, domAPI.createTextNode(String(content)));\n      return fragment;\n    }\n\n    const citeRegex = /\\[\\[cite:(\\w+)\\]\\]/g;\n    let lastIndex = 0;\n    let match;\n    let idx = 1;\n\n    while ((match = citeRegex.exec(content)) !== null) {\n      // Add text before the citation\n      if (match.index > lastIndex) {\n        const textBefore = content.substring(lastIndex, match.index);\n        domAPI.appendChild(fragment, domAPI.createTextNode(textBefore));\n      }\n\n      // Create citation element\n      const citeId = match[1];\n      const citeEl = domAPI.createElement('sup');\n      citeEl.className = 'citation';\n      citeEl.dataset.citeId = citeId;\n\n      // Create clickable link inside sup\n      const citeLink = domAPI.createElement('a');\n      citeLink.href = '#';\n      citeLink.className = 'citation-link';\n      citeLink.textContent = `[${idx}]`;\n\n      // Add click handler to citation\n      eventHandlers.trackListener(\n        citeLink,\n        'click',\n        safeHandler((e) => {\n          e.preventDefault();\n          // Dispatch citation click event on dedicated bus\n          const event = new CustomEvent('citationClick', { detail: { citeId } });\n          chatUIBus.dispatchEvent(event);\n        }, 'citationClick'),\n        { context: MODULE_CONTEXT }\n      );\n\n      domAPI.appendChild(citeEl, citeLink);\n      domAPI.appendChild(fragment, citeEl);\n\n      lastIndex = match.index + match[0].length;\n      idx++;\n    }\n\n    // Add remaining text after last citation\n    if (lastIndex < content.length) {\n      const textAfter = content.substring(lastIndex);\n      domAPI.appendChild(fragment, domAPI.createTextNode(textAfter));\n    }\n\n    return fragment;\n  }\n\n  /**\n   * Creates a message element for display in the chat UI.\n   * @param {string} message - The message content.\n   * @param {string} sender - The message sender ('user' or 'ai').\n   * @param {number} [timestamp] - Optional timestamp for the message.\n   * @param {string|number} [messageId] - Optional message ID.\n   * @returns {HTMLElement} The created message element.\n   */\n  function createMessageElement(message, sender, timestamp = Date.now(), messageId = null) {\n    const context = `${MODULE_CONTEXT}::createMessageElement`;\n    try {\n      const isUser = sender === 'user';\n\n      // Create message container\n      const messageEl = domAPI.createElement('div');\n      messageEl.className = `message ${isUser ? 'user-message' : 'ai-message'}`;\n      if (messageId) {\n        messageEl.dataset.messageId = messageId;\n      }\n\n      // Create avatar\n      const avatarEl = domAPI.createElement('div');\n      avatarEl.className = 'message-avatar';\n\n      // Set avatar content based on sender\n      const avatarSvg = isUser\n        ? '<svg class=\"w-8 h-8 text-primary\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clip-rule=\"evenodd\"></path></svg>'\n        : '<svg class=\"w-8 h-8 text-secondary\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z\"></path><path d=\"M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z\"></path></svg>';\n      domAPI.setInnerHTML(avatarEl, sanitizer.sanitize(avatarSvg));\n\n      // Create message content container\n      const contentEl = domAPI.createElement('div');\n      contentEl.className = 'message-content';\n\n      // Create message bubble\n      const bubbleEl = domAPI.createElement('div');\n      bubbleEl.className = 'message-bubble';\n\n      // Process and set message content\n      if (!isUser && typeof message === \"string\") {\n        // Use DOM building function for AI content with citations\n        const processedContentFragment = renderCitationsAsDOM(message);\n        domAPI.appendChild(bubbleEl, processedContentFragment);\n      } else {\n        // For user messages or non-string content, sanitize and set as text\n        const safeText = sanitizer.sanitize(String(message));\n        domAPI.setInnerHTML(bubbleEl, safeText);\n      }\n\n      // Create message footer with timestamp\n      const footerEl = domAPI.createElement('div');\n      footerEl.className = 'message-footer text-xs opacity-70';\n\n      // Format timestamp\n      const date = new Date(timestamp);\n      const timeStr = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n      domAPI.setTextContent(footerEl, timeStr);\n\n      // Add copy button for AI messages\n      if (!isUser) {\n        const actionsEl = domAPI.createElement('div');\n        actionsEl.className = 'message-actions';\n\n        const copyBtn = domAPI.createElement('button');\n        copyBtn.className = 'btn btn-ghost btn-xs';\n        copyBtn.setAttribute('aria-label', 'Copy message');\n        const copySvg = '<svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"></path></svg>';\n        domAPI.setInnerHTML(copyBtn, sanitizer.sanitize(copySvg));\n\n        // Add click handler to copy button\n        eventHandlers.trackListener(\n          copyBtn,\n          'click',\n          safeHandler(() => {\n            copyMessageToClipboard(message);\n          }, 'copyMessage'),\n          { context: MODULE_CONTEXT }\n        );\n\n        domAPI.appendChild(actionsEl, copyBtn);\n        domAPI.appendChild(contentEl, actionsEl);\n      }\n\n      // Assemble message element\n      domAPI.appendChild(contentEl, bubbleEl);\n      domAPI.appendChild(contentEl, footerEl);\n      domAPI.appendChild(messageEl, avatarEl);\n      domAPI.appendChild(messageEl, contentEl);\n\n      return messageEl;\n    } catch (err) {\n      logger.error(`[${MODULE_CONTEXT}] Error creating message element`, err, {\n        context,\n        sender,\n        messageId: messageId || 'N/A'\n      });\n      return null;\n    }\n  }\n\n  /**\n   * Copy message content to clipboard. Strips HTML from AI messages before copying.\n   * @param {string} message - The message content to copy.\n   */\n  function copyMessageToClipboard(message) {\n    const context = `${MODULE_CONTEXT}::copyMessageToClipboard`;\n    // Strip HTML tags for plain text copy, using sanitizer for safety first\n    const sanitizedMessage = sanitizer.sanitize(String(message));\n    const tempEl = domAPI.createElement('div');\n    // Set sanitized HTML, then get textContent which is plain text\n    domAPI.setInnerHTML(tempEl, sanitizedMessage); // Use domAPI wrapper for innerHTML\n    const textContent = domAPI.getTextContent(tempEl); // Use domAPI wrapper for textContent\n\n    const doc = domAPI.getDocument();\n\n    // Use clipboard API if available (DI-safe via browserService)\n    const clip = browserService.getWindow()?.navigator?.clipboard;\n    if (clip?.writeText) {\n      clip.writeText(textContent)\n        .then(() => {\n          logger.info(`[${MODULE_CONTEXT}] Text copied via clipboard API`, {\n            context\n          });\n          showCopyFeedback(true);\n        })\n        .catch(err => {\n          logger.error(`[${MODULE_CONTEXT}] Failed to copy text via clipboard API`, err, {\n            context\n          });\n          showCopyFeedback(false);\n        });\n    } else {\n      // Fallback method using textarea\n      logger.warn(`[${MODULE_CONTEXT}] Clipboard API not available, using fallback copy method`, {\n        context\n      });\n\n      const textarea = domAPI.createElement('textarea');\n      const textareaStyles = {\n        position: 'fixed', top: '0', left: '0', width: '2em', height: '2em',\n        padding: '0', border: 'none', outline: 'none', boxShadow: 'none', background: 'transparent'\n      };\n      Object.entries(textareaStyles).forEach(([prop, value]) => domAPI.setStyle(textarea, prop, value));\n      domAPI.setValue(textarea, textContent);\n\n      domAPI.appendChild(doc.body, textarea);\n\n      try {\n        domAPI.selectElement(textarea); // Use domAPI wrapper for select\n        const successful = domAPI.callMethod(doc, 'execCommand', 'copy');\n        if (!successful) {\n          logger.error(`[${MODULE_CONTEXT}] doc.execCommand('copy') failed`, {\n            context\n          });\n        } else {\n          logger.info(`[${MODULE_CONTEXT}] Text copied via fallback execCommand`, {\n            context\n          });\n        }\n        showCopyFeedback(successful);\n      } catch (err) {\n        logger.error(`[${MODULE_CONTEXT}] Fallback copy method error`, err, {\n          context\n        });\n        showCopyFeedback(false);\n      } finally {\n        if (textarea.parentNode) {\n          domAPI.removeChild(textarea.parentNode, textarea); // Use domAPI wrapper for removeChild\n        }\n      }\n    }\n  }\n\n  /**\n   * Show feedback toast for copy operation\n   * @param {boolean} success - Whether the copy operation was successful\n   */\n  function showCopyFeedback(success) {\n    const context = `${MODULE_CONTEXT}::showCopyFeedback`;\n    try {\n      // Create toast element\n      const toast = domAPI.createElement('div');\n      toast.className = `copy-toast ${success ? 'success' : 'error'}`;\n      toast.textContent = success ? 'Copied to clipboard!' : 'Failed to copy';\n\n      // Style the toast\n      const toastStyles = {\n        position: 'fixed', bottom: '20px', left: '50%', transform: 'translateX(-50%)',\n        padding: '8px 16px', background: success ? 'var(--color-success)' : 'var(--color-error)',\n        color: 'white', 'border-radius': '4px', 'z-index': '9999', opacity: '0', transition: 'opacity 0.3s ease'\n      };\n      Object.entries(toastStyles).forEach(([prop, value]) => domAPI.setStyle(toast, prop, value));\n\n      // Add to DOM\n      const doc = domAPI.getDocument();\n      domAPI.appendChild(doc.body, toast);\n\n      // Animate in\n      browserService.setTimeout(() => {\n        domAPI.setStyle(toast, 'opacity', '1');\n      }, 10);\n\n      // Remove after delay\n      browserService.setTimeout(() => {\n        domAPI.setStyle(toast, 'opacity', '0');\n        browserService.setTimeout(() => {\n          if (toast.parentNode) {\n            domAPI.removeChild(toast.parentNode, toast);\n          }\n        }, 300);\n      }, 2000);\n    } catch (err) {\n      logger.error(`[${MODULE_CONTEXT}] Error showing copy feedback`, err, {\n        context,\n        success\n      });\n    }\n  }\n\n\n  /**\n   * Scroll a container to the bottom.\n   * @param {HTMLElement} container - The container to scroll.\n   */\n  function scrollToBottom(container) {\n    if (!container) return;\n\n    // Use requestAnimationFrame for smooth scrolling after DOM updates\n    browserService.requestAnimationFrame(() => {\n      container.scrollTop = container.scrollHeight;\n    });\n  }\n\n  /**\n   * Show typing indicator in the chat UI.\n   */\n  function showTypingIndicator() {\n    const context = `${MODULE_CONTEXT}::showTypingIndicator`;\n    if (state.typingIndicatorVisible) {\n      logger.debug(`[${MODULE_CONTEXT}] Typing indicator already visible, skipping`, {\n        context\n      });\n      return;\n    }\n\n    const container = state.messageContainer || domAPI.getElementById('chatMessages');\n    if (!container) {\n      logger.warn(`[${MODULE_CONTEXT}] Cannot show typing indicator, container not found`, {\n        context\n      });\n      return;\n    }\n\n    // Create typing indicator element\n    const indicatorEl = domAPI.createElement('div');\n    indicatorEl.id = 'typingIndicator';\n    indicatorEl.className = 'typing-indicator';\n\n    // Create dots\n    const dotsContainer = domAPI.createElement('div');\n    dotsContainer.className = 'typing-dots';\n\n    for (let i = 0; i < 3; i++) {\n      const dot = domAPI.createElement('div');\n      dot.className = 'typing-dot';\n      domAPI.appendChild(dotsContainer, dot);\n    }\n\n    domAPI.appendChild(indicatorEl, dotsContainer);\n    domAPI.appendChild(container, indicatorEl);\n\n    scrollToBottom(container);\n    state.typingIndicatorVisible = true;\n\n    logger.debug(`[${MODULE_CONTEXT}] Typing indicator shown`, {\n      context\n    });\n  }\n\n  /**\n   * Hide typing indicator in the chat UI.\n   */\n  function hideTypingIndicator() {\n    const context = `${MODULE_CONTEXT}::hideTypingIndicator`;\n    if (!state.typingIndicatorVisible) {\n      logger.debug(`[${MODULE_CONTEXT}] No typing indicator visible, skipping`, {\n        context\n      });\n      return;\n    }\n\n    const indicator = domAPI.getElementById('typingIndicator');\n    if (indicator && indicator.parentNode) {\n      domAPI.removeChild(indicator.parentNode, indicator);\n      state.typingIndicatorVisible = false;\n      logger.debug(`[${MODULE_CONTEXT}] Typing indicator removed`, {\n        context\n      });\n    } else {\n      logger.warn(`[${MODULE_CONTEXT}] Cannot hide typing indicator, element not found`, {\n        context\n      });\n      // Reset state anyway to avoid getting stuck\n      state.typingIndicatorVisible = false;\n    }\n  }\n\n  /**\n   * Set the active message container for the chat UI.\n   * This allows the module to work with different chat containers.\n   * @param {HTMLElement} messageContainer - The container element for chat messages.\n   */\n  function setMessageContainer(messageContainer) {\n    const context = `${MODULE_CONTEXT}::setMessageContainer`;\n\n    hideTypingIndicator(); // remove orphan indicator from old pane if any\n\n    /* remember the active container so showTypingIndicator/… work for both\n       the global chat and the per-project chat inside Project Details */\n    state.messageContainer = messageContainer || null; // Cache the provided container\n    state.typingIndicatorVisible = false; // reset state for new pane\n\n    logger.debug(`[${MODULE_CONTEXT}] Message container set`, {\n      context,\n      containerId: messageContainer?.id || 'null'\n    });\n  }\n\n  /**\n   * Attach event handlers to chat UI elements.\n   * @param {Object} options - Options for attaching event handlers.\n   * @param {HTMLElement} options.inputField - The input field element.\n   * @param {HTMLElement} options.sendButton - The send button element.\n   * @param {HTMLElement} options.messageContainer - The container for messages.\n   * @param {Function} options.onSend - Callback function when a message is sent.\n   */\n  function attachEventHandlers({\n    inputField,\n    sendButton,\n    messageContainer,\n    onSend\n  }) {\n    const context = `${MODULE_CONTEXT}::attachEventHandlers`;\n\n    if (!inputField || !sendButton || !messageContainer) {\n      logger.error(`[${MODULE_CONTEXT}] Missing required elements for attaching event handlers`, {\n        context,\n        hasInputField: !!inputField,\n        hasSendButton: !!sendButton,\n        hasMessageContainer: !!messageContainer\n      });\n      return;\n    }\n\n    // Set the active message container\n    setMessageContainer(messageContainer);\n\n    // Enhanced submit on Enter (no Shift)\n    if (inputField && typeof onSend === 'function') {\n      eventHandlers.trackListener(\n        inputField,\n        'keydown',\n        safeHandler((event) => {\n          if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            onSend(domAPI.getValue(inputField)); // Use domAPI wrapper for value\n          }\n        }, 'inputKeydownAttach'),\n        {\n          context: MODULE_CONTEXT,\n          description: 'Enhanced chat input handler on keydown'\n        }\n      );\n    }\n\n    // Send button click handler\n    if (sendButton && typeof onSend === 'function') {\n      eventHandlers.trackListener(\n        sendButton,\n        'click',\n        safeHandler(() => {\n          onSend(inputField ? domAPI.getValue(inputField) : ''); // Use domAPI wrapper for value\n        }, 'sendButtonClickAttach'),\n        {\n          context: MODULE_CONTEXT,\n          description: 'Send button click handler'\n        }\n      );\n    }\n\n    logger.info(`[${MODULE_CONTEXT}] Event handlers attached to chat UI elements`, {\n      context\n    });\n  }\n\n  /**\n   * Show a DI-guarded confirmation modal before deleting a conversation.\n   * Requires `modalManager` dependency.\n   * @param {string} conversationTitle - The title of the conversation to show in the modal.\n   * @returns {Promise<boolean>} Resolves true if user confirms, false otherwise.\n   */\n  async function confirmDeleteConversationModal(conversationTitle) {\n    const context = `${MODULE_CONTEXT}::confirmDeleteConversationModal`;\n\n    // Preferred path: use ModalManager.confirmDelete if available (wire to deleteConfirmModal)\n    if (typeof modalManager?.confirmDelete === 'function') {\n      return new Promise((resolve) => {\n        modalManager.confirmDelete({\n          title: 'Delete Conversation',\n          message: `Are you sure you want to delete \"${sanitizer.sanitize(conversationTitle || 'this conversation')}\"? This action cannot be undone.`,\n          confirmText: 'Delete',\n          confirmClass: 'btn-error',\n          onConfirm: () => resolve(true),\n          onCancel: () => resolve(false)\n        });\n      });\n    }\n\n    if (!modalManager?.showModal || !modalManager?.closeModal) {\n      logger.error(`[${MODULE_CONTEXT}] modalManager dependency missing or incomplete`, { context });\n      return false;\n    }\n\n    return new Promise((resolve) => {\n      const modalContext = `${MODULE_CONTEXT}:deleteConversationModal`;\n      const confirmBtnId = 'confirmDeleteConversation';\n      const cancelBtnId = 'cancelDeleteConversation';\n\n      // Sanitize conversation title for display\n      const safeTitle = sanitizer.sanitize(conversationTitle || 'this conversation');\n\n      const modalContent = `\n        <div class=\"modal-content p-6\">\n          <h3 class=\"text-lg font-bold mb-4\">Delete Conversation</h3>\n          <p class=\"mb-6\">Are you sure you want to delete \"${safeTitle}\"? This action cannot be undone.</p>\n          <div class=\"modal-actions flex justify-end gap-2\">\n            <button id=\"${cancelBtnId}\" class=\"btn btn-ghost\">Cancel</button>\n            <button id=\"${confirmBtnId}\" class=\"btn btn-error\">Delete</button>\n          </div>\n        </div>\n      `;\n\n      // Function to handle modal close with result\n      const handleClose = (confirmed) => {\n        modalManager.closeModal();\n        resolve(confirmed);\n      };\n\n      // Show the modal\n      modalManager.showModal({\n        content: modalContent,\n        onClose: () => handleClose(false)\n      });\n\n      // Get buttons and attach event listeners\n      const confirmBtn = domAPI.getElementById(confirmBtnId);\n      if (confirmBtn) {\n        eventHandlers.trackListener(\n          confirmBtn,\n          \"click\",\n          safeHandler(() => handleClose(true), 'confirmDeleteClick'), // Wrap handler\n          {\n            context: modalContext,\n            description: \"Confirm Delete Conversation Button\"\n          }\n        );\n        logger.debug(`[${MODULE_CONTEXT}] Confirm button listener attached`, {\n          context: modalContext\n        });\n      } else {\n        logger.error(`[${MODULE_CONTEXT}] Confirm button with ID ${confirmBtnId} not found in modal`, {\n          context: modalContext\n        });\n      }\n\n      const cancelBtn = domAPI.getElementById(cancelBtnId);\n      if (cancelBtn) {\n        eventHandlers.trackListener(\n          cancelBtn,\n          \"click\",\n          safeHandler(() => handleClose(false), 'cancelDeleteClick'), // Wrap handler\n          {\n            context: modalContext,\n            description: \"Cancel Delete Conversation Button\"\n          }\n        );\n        logger.debug(`[${MODULE_CONTEXT}] Cancel button listener attached`, {\n          context: modalContext\n        });\n      } else {\n        logger.error(`[${MODULE_CONTEXT}] Cancel button with ID ${cancelBtnId} not found in modal`, {\n          context: modalContext\n        });\n      }\n    });\n  }\n\n  /**\n   * Clean up all event listeners and resources.\n   */\n  function cleanup() {\n    const context = `${MODULE_CONTEXT}::cleanup`;\n    logger.info(`[${MODULE_CONTEXT}] Cleaning up chat UI enhancements`, {\n      context\n    });\n\n    // Clean up all event listeners\n    eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n\n    // Reset state\n    state.typingIndicatorVisible = false;\n    state.messageContainer = null;\n\n    logger.info(`[${MODULE_CONTEXT}] Chat UI enhancements cleaned up`, {\n      context\n    });\n  }\n\n  // Central message-append helper for ChatManager\n  function appendMessage(role, content, id = null, thinking = null, redacted = false) {\n    const msgEl = createMessageElement(content, role === 'user' ? 'user' : 'ai', Date.now(), id);\n    if (state.messageContainer) domAPI.appendChild(state.messageContainer, msgEl);\n    if (role !== 'user' && (thinking || redacted)) showTypingIndicator();\n  }\n\n  // Public API\n  const apiObject = {\n    initialize,\n    showTypingIndicator,\n    hideTypingIndicator,\n    cleanup,\n    createMessageElement,\n    attachEventHandlers,\n    confirmDeleteConversationModal,\n    renderCitationsAsDOM,\n    setMessageContainer,\n    setupMobileEnhancements,\n    setupProjectChatEnhancements,\n    appendMessage\n  };\n\n  DependencySystem.modules.register('chatUIEnhancements', apiObject);\n\n  return apiObject;\n}\n\nexport default createChatUIEnhancements;\n"
          },
          "redirectURL": "",
          "headersSize": 1189,
          "bodySize": 31098,
          "_transferSize": 32287,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.633Z",
        "time": 160.60600000491831,
        "timings": {
          "blocked": 100.85899999821744,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.11599999999999966,
          "wait": 59.0389999954626,
          "receive": 0.5920000112382695,
          "_blocked_queueing": 0.6609999982174486,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126316",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/sidebar.js",
          "lineNumber": 7
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/sidebar-enhancements.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/sidebar.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1479,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "5308"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"0c56fc13871a749ab87b147beed03919\""
            },
            {
              "name": "last-modified",
              "value": "Mon, 26 May 2025 07:59:41 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 5308,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * sidebar-enhancements.js\n *\n * Strict DI/Modularity checklist-compliant edition.\n *\n * Provides API for sidebar UI enhancements:\n *   - Migrates legacy chevron toggles to new checkbox-collapse panels.\n *   - Wires \"Manage Projects\" to the sidebar tab logic.\n *\n * **No use of window, document, or global scope.**\n * All dependencies (eventHandlers, DependencySystem, domAPI, notify) must be provided by DI/explicit parameter.\n *\n * Usage:\n *   import { createSidebarEnhancements } from './sidebar-enhancements.js';\n *   const se = createSidebarEnhancements({ eventHandlers, DependencySystem, domAPI, notify });\n *   se.initSidebarEnhancements();\n *\n * No globals are attached by this module.\n */\n\nexport function createSidebarEnhancements({\n  eventHandlers,\n  DependencySystem,\n  domAPI,\n  _modelConfig, // for injecting model config UI if needed (unused for now)\n  logger,\n  _safeHandler // unused for now, but kept for future use\n}) {\n  if (!eventHandlers) throw new Error('eventHandlers required for sidebar-enhancements');\n  if (!domAPI) throw new Error('domAPI required for sidebar-enhancements');\n  const EH = eventHandlers;\n  const MODULE_NAME = 'sidebar-enhancements'; // For consistent logging\n\n  // --- Settings Panel DOM and logic ---\n  let settingsPanelEl = null;\n  function attachSettingsPanel(sidebarEl) {\n    if (!sidebarEl) throw new Error('Sidebar element required to attach settings panel');\n    if (!settingsPanelEl) {\n      settingsPanelEl = domAPI.getElementById('sidebarSettingsPanel');\n      if (!settingsPanelEl) {\n        settingsPanelEl = domAPI.createElement('div');\n        settingsPanelEl.id = 'sidebarSettingsPanel';\n        settingsPanelEl.className =\n          'hidden flex flex-col gap-2 p-3 overflow-y-auto border-t border-base-300';\n        // Insert at end of sidebar\n        domAPI.appendChild(sidebarEl, settingsPanelEl);\n      }\n    }\n    return settingsPanelEl;\n  }\n\n  function toggleSettingsPanel(force, modelConfigCb) {\n    if (!settingsPanelEl) return;\n    const show = force !== undefined ? !!force : settingsPanelEl.classList.contains('hidden');\n    domAPI.toggleClass(settingsPanelEl, 'hidden', !show);\n    if (show && modelConfigCb && typeof modelConfigCb === \"function\") {\n      modelConfigCb(settingsPanelEl);\n    }\n  }\n\n  // --- Legacy features ---\n\n  function migrateLegacyToggle({ oldToggleId, newCheckboxId, chevronId }) {\n    try {\n      const oldToggle = domAPI.getElementById(oldToggleId);\n      const newCheckbox = domAPI.getElementById(newCheckboxId);\n      const chevron = domAPI.getElementById(chevronId);\n      if (oldToggle && newCheckbox) {\n        EH.trackListener(\n          oldToggle,\n          'click',\n          () => {\n            domAPI.setProperty(newCheckbox, 'checked', !newCheckbox.checked);\n            updateChevronRotation(chevron, newCheckbox.checked);\n          },\n          {\n            description: `Migrate legacy toggle ${oldToggleId}`,\n            context: MODULE_NAME,\n            source: 'migrateLegacyToggle'\n          }\n        );\n      }\n      if (newCheckbox) {\n        EH.trackListener(\n          newCheckbox,\n          'change',\n          () => {\n            updateChevronRotation(chevron, newCheckbox.checked);\n          },\n          {\n            description: `Checkbox change ${newCheckboxId}`,\n            context: MODULE_NAME,\n            source: 'migrateLegacyToggle'\n          }\n        );\n      }\n    } catch (err) {\n      if (logger && typeof logger.error === 'function') {\n        logger.error(`[${MODULE_NAME}][migrateLegacyToggle] Failed to migrate legacy toggle`, err, {\n          context: MODULE_NAME,\n          oldToggleId,\n          newCheckboxId,\n          chevronId\n        });\n      }\n    }\n  }\n\n  function initCollapseControls() {\n    migrateLegacyToggle({\n      oldToggleId: 'toggleModelConfig',\n      newCheckboxId: 'modelConfigToggle',\n      chevronId: 'modelConfigChevron'\n    });\n    migrateLegacyToggle({\n      oldToggleId: 'toggleCustomInstructions',\n      newCheckboxId: 'customInstructionsToggle',\n      chevronId: 'customInstructionsChevron'\n    });\n  }\n\n  function updateChevronRotation(el, expanded) {\n    if (!el) return;\n    el.style.transform = expanded ? 'rotate(180deg)' : 'rotate(0)';\n  }\n\n  function initManageProjectsLink() {\n    try {\n      const btn = domAPI.getElementById('manageProjectsLink');\n      if (!btn) return;\n      EH.trackListener(\n        btn,\n        'click',\n        e => {\n          e.preventDefault();\n          const sidebar = DependencySystem?.modules?.get('sidebar');\n          sidebar?.activateTab('projects');\n        },\n        {\n          description: 'Manage projects link click',\n          context: MODULE_NAME,\n          source: 'initManageProjectsLink'\n        }\n      );\n    } catch (err) {\n      if (logger && typeof logger.error === 'function') {\n        logger.error(`[${MODULE_NAME}][initManageProjectsLink] Failed to initialize manage projects link`, err, {\n          context: MODULE_NAME\n        });\n      }\n    }\n  }\n\n  function initSidebarEnhancements() {\n    initCollapseControls();\n    initManageProjectsLink();\n  }\n\n  // Public API\n  return {\n    initSidebarEnhancements,\n    attachSettingsPanel,\n    toggleSettingsPanel,\n    cleanup() {\n      eventHandlers.cleanupListeners({ context: 'sidebar-enhancements' });\n    }\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 5308,
          "_transferSize": 6496,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.670Z",
        "time": 122.42300000798423,
        "timings": {
          "blocked": 63.23700000329036,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07900000000000063,
          "wait": 58.277999993258156,
          "receive": 0.8290000114357099,
          "_blocked_queueing": 0.6330000032903627,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126339",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/sidebar.js",
          "lineNumber": 8
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/sidebarAuth.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/sidebar.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1470,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "9982"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"df3c8a5ec045d0a82cec692871fb5d6d\""
            },
            {
              "name": "last-modified",
              "value": "Tue, 03 Jun 2025 04:15:21 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 9982,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module sidebarAuth\n * @description Canonical DI-only factory for sidebar auth logic (strict .clinerules compliance).\n * Exports a single createSidebarAuth({ ...deps }) factory. No top-level logic/side effects.\n * All logger/event/context usage is canonicalized.\n */\n\nconst MODULE = 'SidebarAuth';\n\nexport function createSidebarAuth({\n  domAPI,\n  eventHandlers,\n  DependencySystem,\n  logger,\n  sanitizer,\n  safeHandler,\n  domReadinessService\n}) {\n  if (!domAPI) throw new Error(`[${MODULE}] domAPI is required`);\n  if (!eventHandlers) throw new Error(`[${MODULE}] eventHandlers is required`);\n  if (!DependencySystem) throw new Error(`[${MODULE}] DependencySystem is required`);\n  if (!logger) throw new Error(`[${MODULE}] logger is required`);\n  if (typeof safeHandler !== 'function') throw new Error(`[${MODULE}] safeHandler required`);\n\n  let isRegisterMode = false;\n\n  let sidebarAuthFormContainerEl = null,\n      sidebarAuthFormTitleEl = null,\n      sidebarAuthFormEl = null,\n      sidebarUsernameContainerEl = null,\n      sidebarUsernameInputEl = null,\n      sidebarEmailInputEl = null,\n      sidebarPasswordInputEl = null,\n      sidebarConfirmPasswordContainerEl = null,\n      sidebarConfirmPasswordInputEl = null,\n      sidebarAuthBtnEl = null,\n      sidebarAuthErrorEl = null,\n      sidebarAuthToggleEl = null;\n\n  function initAuthDom() {\n    sidebarAuthFormContainerEl = domAPI.getElementById('sidebarAuthFormContainer');\n    sidebarAuthFormTitleEl = domAPI.getElementById('sidebarAuthFormTitle');\n    sidebarAuthFormEl = domAPI.getElementById('sidebarAuthForm');\n    sidebarUsernameContainerEl = domAPI.getElementById('sidebarUsernameContainer');\n    sidebarUsernameInputEl = domAPI.getElementById('sidebarUsername');\n    sidebarEmailInputEl = domAPI.getElementById('sidebarUsernameLogin');\n    sidebarPasswordInputEl = domAPI.getElementById('sidebarPassword');\n    sidebarConfirmPasswordContainerEl = domAPI.getElementById('sidebarConfirmPasswordContainer');\n    sidebarConfirmPasswordInputEl = domAPI.getElementById('sidebarConfirmPassword');\n    sidebarAuthBtnEl = domAPI.getElementById('sidebarAuthBtn');\n    sidebarAuthErrorEl = domAPI.getElementById('sidebarAuthError');\n    sidebarAuthToggleEl = domAPI.getElementById('sidebarAuthToggle');\n  }\n\n  function clearAuthForm() {\n    sidebarAuthFormEl?.reset();\n    if (sidebarAuthErrorEl) {\n      domAPI.setTextContent(sidebarAuthErrorEl, '');\n    }\n  }\n\n  function updateAuthFormUI(registerMode) {\n    isRegisterMode = registerMode;\n    if (!sidebarAuthFormTitleEl || !sidebarAuthBtnEl || !sidebarConfirmPasswordContainerEl) return;\n\n    domAPI.setTextContent(sidebarAuthFormTitleEl, registerMode ? 'Register' : 'Login');\n    domAPI.setTextContent(sidebarAuthBtnEl, registerMode ? 'Create account' : 'Sign in');\n    domAPI.toggleClass(sidebarConfirmPasswordContainerEl, 'hidden', !registerMode);\n    domAPI.toggleClass(sidebarUsernameContainerEl, 'hidden', !registerMode);\n  }\n\n  async function handleAuthSubmit(authModule) {\n    if (!authModule) return;\n    let username = sidebarUsernameInputEl.value.trim();\n    let email = sidebarEmailInputEl.value.trim();\n    const password = sidebarPasswordInputEl.value;\n\n    // sanitize\n    username = sanitizer?.sanitize(username) || username;\n    email = sanitizer?.sanitize(email) || email;\n\n    if (sidebarAuthBtnEl) {\n      domAPI.setProperty(sidebarAuthBtnEl, 'disabled', true);\n    }\n\n    try {\n      if (isRegisterMode) {\n        const confirm = sidebarConfirmPasswordInputEl.value;\n        if (password !== confirm) {\n          throw new Error('Passwords do not match.');\n        }\n        await authModule.register({ username, email, password });\n        updateAuthFormUI(false);\n        domAPI.setTextContent(sidebarAuthErrorEl, 'Registration successful. Please sign in.');\n        try {\n          // hide form immediately; handleGlobalAuthStateChange will also run\n          domAPI.addClass(sidebarAuthFormContainerEl, 'hidden');\n        } catch (hideErr) {\n          logger.warn('[SidebarAuth] Failed to hide sidebarAuthFormContainerEl after register', hideErr, { context: MODULE });\n        }\n      } else {\n        const loginUsername = email;\n        if (!loginUsername || !password) {\n          throw new Error('Username and password are required.');\n        }\n        await authModule.login(loginUsername, password);\n        try {\n          // hide form immediately; handleGlobalAuthStateChange will also run\n          domAPI.addClass(sidebarAuthFormContainerEl, 'hidden');\n        } catch (hideErr) {\n          logger.warn('[SidebarAuth] Failed to hide sidebarAuthFormContainerEl after login', hideErr, { context: MODULE });\n        }\n      }\n    } catch (err) {\n      logger.error('[SidebarAuth][authSubmit]', err, { context: MODULE });\n      const errMsg = sanitizer?.sanitize(err?.message) ||\n                     (isRegisterMode ? 'Registration failed' : 'Login failed');\n      domAPI.setTextContent(sidebarAuthErrorEl, errMsg);\n    } finally {\n      domAPI.setProperty(sidebarAuthBtnEl, 'disabled', false);\n    }\n  }\n\n  function setupInlineAuthForm() {\n    const authModule = DependencySystem.modules?.get('auth') || DependencySystem.get?.('auth');\n    if (!authModule) return;\n    if (!sidebarAuthFormEl || !sidebarAuthToggleEl) return;\n\n    // Toggle\n    eventHandlers.trackListener(\n      sidebarAuthToggleEl,\n      'click',\n      safeHandler(() => {\n        updateAuthFormUI(!isRegisterMode);\n        clearAuthForm();\n      }, '[SidebarAuth] toggle mode'),\n      { context: MODULE }\n    );\n\n    // Submit\n    eventHandlers.trackListener(\n      sidebarAuthFormEl,\n      'submit',\n      safeHandler((e) => {\n        domAPI.preventDefault(e);\n        handleAuthSubmit(authModule);\n      }, '[SidebarAuth] form submit'),\n      { context: MODULE }\n    );\n  }\n\n  async function handleGlobalAuthStateChange(event) {\n    logger.debug(`[${MODULE}] handleGlobalAuthStateChange called with event`, event, { context: MODULE });\n    // Wait for DOM readiness if available\n    if (domReadinessService?.elementsReady) {\n      try {\n        await domReadinessService.elementsReady(\n          ['#sidebarAuthFormContainer', '#mainSidebar'],\n          { timeout: 5000, context: `${MODULE}:handleAuthStateChange` }\n        );\n      } catch (err) {\n        logger.error(`[${MODULE}] DOM not ready for auth update`, err, { context: MODULE });\n        return;\n      }\n    }\n    if (!sidebarAuthFormContainerEl) {\n      initAuthDom();\n    }\n\n    let authenticated = event?.detail?.authenticated ?? false;\n    let currentUser = event?.detail?.user ?? null;\n\n    if (event?.detail?.authenticated === undefined) {\n      const appModule = DependencySystem.modules?.get('appModule');\n      if (appModule?.state) {\n        authenticated = appModule.state.isAuthenticated;\n        currentUser = appModule.state.currentUser;\n      }\n    }\n\n    if (sidebarAuthFormContainerEl) {\n      const hidden = !!authenticated;\n      domAPI.toggleClass(sidebarAuthFormContainerEl, 'hidden', hidden);\n      domAPI.setStyle(sidebarAuthFormContainerEl, 'display', hidden ? 'none' : '');\n      if (hidden) sidebarAuthFormContainerEl.setAttribute('hidden', 'hidden');\n      else sidebarAuthFormContainerEl.removeAttribute('hidden');\n    }\n\n    // Always ensure #mainSidebar is visible\n    const mainSidebarEl = domAPI.getElementById('mainSidebar');\n    if (mainSidebarEl) {\n      domAPI.toggleClass(mainSidebarEl, 'hidden', false);\n      domAPI.setStyle(mainSidebarEl, 'display', '');\n      mainSidebarEl.removeAttribute('hidden');\n    }\n\n    if (!authenticated) {\n      // reset\n      if (isRegisterMode) updateAuthFormUI(false);\n      clearAuthForm();\n    }\n  }\n\n  function forceAuthStateSync() {\n    logger.debug('[SidebarAuth] Forcing auth state sync from appModule', { context: MODULE });\n    const appModule = DependencySystem.modules?.get('appModule');\n    if (appModule?.state) {\n      handleGlobalAuthStateChange({\n        detail: {\n          authenticated: appModule.state.isAuthenticated,\n          user: appModule.state.currentUser,\n          source: 'forceSync'\n        }\n      });\n    }\n  }\n\n  function _bindAuthStateListeners() {\n    const doc = domAPI.getDocument?.();\n    const auth = DependencySystem.modules?.get?.('auth');\n\n    const EH = eventHandlers;\n    const SH = safeHandler;\n\n    // Listen on AuthBus (preferred)…\n    if (auth?.AuthBus) {\n      EH.trackListener(\n        auth.AuthBus,\n        'authStateChanged',\n        SH(handleGlobalAuthStateChange, '[SidebarAuth] AuthBus authStateChanged'),\n        { context: MODULE }\n      );\n      EH.trackListener(\n        auth.AuthBus,\n        'authReady',\n        SH(handleGlobalAuthStateChange, '[SidebarAuth] AuthBus authReady'),\n        { context: MODULE, once: true }\n      );\n    }\n\n    // …and fall back to document-level events\n    if (doc) {\n      ['authStateChanged', 'auth:stateChanged', 'authReady', 'auth:ready']\n        .forEach(evt =>\n          EH.trackListener(\n            doc,\n            evt,\n            SH(handleGlobalAuthStateChange, `[SidebarAuth] doc ${evt}`),\n            { context: MODULE }\n          )\n        );\n    }\n  }\n\n  function init() {\n    initAuthDom();\n    _bindAuthStateListeners();   // <-- NEW\n    forceAuthStateSync();        // <-- ensure UI matches current app state\n  }\n\n  function cleanup() {\n    eventHandlers.cleanupListeners({ context: MODULE });\n    isRegisterMode = false;\n    sidebarAuthFormContainerEl = null;\n    sidebarAuthFormTitleEl = null;\n    sidebarAuthFormEl = null;\n    sidebarUsernameContainerEl = null;\n    sidebarUsernameInputEl = null;\n    sidebarEmailInputEl = null;\n    sidebarPasswordInputEl = null;\n    sidebarConfirmPasswordContainerEl = null;\n    sidebarConfirmPasswordInputEl = null;\n    sidebarAuthBtnEl = null;\n    sidebarAuthErrorEl = null;\n    sidebarAuthToggleEl = null;\n  }\n\n  return {\n    init,\n    setupInlineAuthForm,\n    handleGlobalAuthStateChange,\n    forceAuthStateSync,\n    cleanup,\n    updateAuthFormUI,\n    clearAuthForm\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 9982,
          "_transferSize": 11170,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.671Z",
        "time": 126.21700001182035,
        "timings": {
          "blocked": 84.17600001310278,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.06399999999999295,
          "wait": 41.565000004759995,
          "receive": 0.41199999395757914,
          "_blocked_queueing": 0.6190000131027773,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126409",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/sidebar.js",
          "lineNumber": 9
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/sidebarMobileDock.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/sidebar.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1476,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "6588"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"ac53d433781b35304f400ed5595b8e3c\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 01 Jun 2025 14:41:47 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 6588,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 6588,
          "_transferSize": 7776,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.671Z",
        "time": 135.44399999955203,
        "timings": {
          "blocked": 92.71899999280087,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.0799999999999983,
          "wait": 42.02900000193995,
          "receive": 0.6160000048112124,
          "_blocked_queueing": 0.6449999928008765,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "url": "http://127.0.0.1:8000/static/js/chatUIEnhancements.js",
          "lineNumber": 15
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/js/utils/initHelpers.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/static/js/chatUIEnhancements.js"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1487,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "4397"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"446f4f26c29d4801774ccda5c1b7bf06\""
            },
            {
              "name": "last-modified",
              "value": "Fri, 30 May 2025 20:44:10 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            },
            {
              "name": "vary",
              "value": "Origin"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4397,
            "mimeType": "text/javascript",
            "compression": 0,
            "text": "/**\n * @module InitHelpers\n * Shared initialization utilities to eliminate duplication across init modules\n */\n\n/**\n * Safely invokes an asynchronous initialization method on a given instance, logging warnings or errors as needed.\n *\n * Attempts to call the specified method on the provided instance. Logs a warning if the instance or method is missing, and logs and rethrows any errors encountered during execution.\n *\n * @param {object} instance - The object containing the initialization method.\n * @param {string} name - The name of the instance, used for logging context.\n * @param {string} methodName - The name of the method to invoke.\n * @param {object} logger - Logger instance for logging\n * @returns {Promise<boolean>} Resolves to `true` if initialization succeeds or the method returns `undefined`; otherwise, resolves to the boolean value of the method's result. Returns `false` if the instance or method is missing.\n *\n * @throws {Error} If the initialization method throws an error during execution.\n */\nexport async function safeInit(instance, name, methodName, logger) {\n  if (!logger || typeof logger.error !== 'function')\n    throw new Error('[safeInit] logger is required');\n  if (!instance) {\n    logger?.warn(`[safeInit] Instance ${name} is null/undefined. Cannot call ${methodName}.`, { context: `initHelpers:safeInit:${name}` });\n    return false;\n  }\n  if (typeof instance[methodName] !== 'function') {\n    logger?.warn(`[safeInit] Method ${methodName} not found on ${name}.`, { context: `initHelpers:safeInit:${name}` });\n    return false;\n  }\n  try {\n    const result = await instance[methodName]();\n    return result === undefined ? true : !!result;\n  } catch (err) {\n    logger.error(`[safeInit] Error during ${name}.${methodName}()`, err, { context: `initHelpers:safeInit:${name}:${methodName}` });\n    throw err;\n  }\n}\n\n/**\n * Creates a standardized DOM readiness helper with common patterns\n * @param {object} domReadinessService - The DOM readiness service\n * @param {object} logger - Logger instance\n * @returns {function} Helper function for waiting on dependencies and elements\n */\nexport function createDomWaitHelper(domReadinessService, logger) {\n  return async function waitForDependenciesAndElements({\n    deps = [],\n    domSelectors = [],\n    timeout = 10000,\n    context = 'unknown'\n  } = {}) {\n    try {\n      await domReadinessService.dependenciesAndElements({\n        deps,\n        domSelectors,\n        timeout,\n        context\n      });\n      return true;\n    } catch (err) {\n      logger.error('[domWaitHelper] Failed to wait for dependencies/elements', err, { \n        context, \n        deps, \n        domSelectors, \n        timeout \n      });\n      throw err;\n    }\n  };\n}\n\n/**\n * Creates a standardized timeout wrapper for async operations\n * @param {object} browserService - Browser service for setTimeout\n * @param {object} logger - Logger instance\n * @returns {function} Helper function for wrapping operations with timeout\n */\nexport function createTimeoutWrapper(browserService, logger) {\n  return function withTimeout(operation, timeoutMs, operationName = 'operation') {\n    return Promise.race([\n      operation,\n      new Promise((_, reject) =>\n        browserService.getWindow().setTimeout(\n          () => reject(new Error(`Timeout in ${operationName} after ${timeoutMs}ms`)),\n          timeoutMs\n        )\n      )\n    ]);\n  };\n}\n\n/**\n * Factory function to create init helpers with injected dependencies\n * @param {object} dependencies - Required dependencies\n * @param {object} dependencies.domReadinessService - DOM readiness service\n * @param {object} dependencies.browserService - Browser service\n * @param {object} dependencies.logger - Logger instance\n * @returns {object} Collection of helper functions\n */\nexport function createInitHelpers({ domReadinessService, browserService, logger }) {\n  if (!domReadinessService || !browserService || !logger) {\n    throw new Error('[initHelpers] Missing required dependencies: domReadinessService, browserService, logger');\n  }\n\n  const domWaitHelper = createDomWaitHelper(domReadinessService, logger);\n  const timeoutWrapper = createTimeoutWrapper(browserService, logger);\n\n  return {\n    safeInit: (instance, name, methodName) => safeInit(instance, name, methodName, logger),\n    waitForDependenciesAndElements: domWaitHelper,\n    withTimeout: timeoutWrapper,\n    cleanup () {}\n  };\n}\n"
          },
          "redirectURL": "",
          "headersSize": 1188,
          "bodySize": 4397,
          "_transferSize": 5585,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.795Z",
        "time": 47.11600000155158,
        "timings": {
          "blocked": 1.0230000005820767,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.064,
          "wait": 45.3579999993667,
          "receive": 0.6710000016028062,
          "_blocked_queueing": 0.6250000005820766,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "loadTemplate",
                "scriptId": "384",
                "url": "http://127.0.0.1:8000/static/js/utils/htmlTemplateLoader.js",
                "lineNumber": 157,
                "columnNumber": 21
              },
              {
                "functionName": "init",
                "scriptId": "396",
                "url": "http://127.0.0.1:8000/static/js/modalManager.js",
                "lineNumber": 318,
                "columnNumber": 13
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "initializeCoreSystems",
                  "scriptId": "390",
                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                  "lineNumber": 1237,
                  "columnNumber": 39
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "",
                    "scriptId": "390",
                    "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                    "lineNumber": 2090,
                    "columnNumber": 49
                  },
                  {
                    "functionName": "phaseRunner",
                    "scriptId": "390",
                    "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                    "lineNumber": 2065,
                    "columnNumber": 37
                  },
                  {
                    "functionName": "initializeApp",
                    "scriptId": "390",
                    "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                    "lineNumber": 2090,
                    "columnNumber": 14
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "",
                      "scriptId": "370",
                      "url": "http://127.0.0.1:8000/static/js/app.js",
                      "lineNumber": 97,
                      "columnNumber": 8
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/html/modals.html",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=4e902f87811d480589a44823f8c14468,sentry-sample_rate=0.1,sentry-sampled=false"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "4e902f87811d480589a44823f8c14468-a8dd0812fab9386f-0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1714,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "39442"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"b4964b62a834e9c3994205ef49b0c0e4\""
            },
            {
              "name": "last-modified",
              "value": "Sat, 31 May 2025 23:13:55 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 39442,
            "mimeType": "text/html",
            "compression": 0,
            "text": "<!--\n  modals.html\n  Revised with suggested improvements for consistency, accessibility, and best practices.\n\n  Key Changes:\n  1. Converted instructionsModal and contentViewModal from <div> to <dialog>.\n  2. Removed redundant role=\"dialog\" and aria-modal=\"true\" from native <dialog> elements.\n  3. Removed or updated autocomplete=\"off\" where appropriate.\n  4. Removed onsubmit=\"return false;\" in favor of JS-based form handling (if used in app.js).\n  5. Cleaned up aria-selected on login/register tabs (JavaScript should update it dynamically).\n  6. Left the skip-to-content link in place, but ideally it should be in base.html's top.\n-->\n\n\n<!-- Project Creation/Edit Modal -->\n<dialog id=\"projectModal\" class=\"modal modal-bottom sm:modal-middle\">\n    <div class=\"modal-box max-w-2xl w-full\">\n        <div class=\"flex justify-between items-center mb-6\">\n            <h3 id=\"projectModalTitle\" class=\"text-2xl font-bold\">Create New Project</h3>\n            <button id=\"projectModalCloseBtn\" type=\"button\"\n                class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\" aria-label=\"Close dialog\">\n                <span class=\"sr-only\">Close</span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                          d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n        <!-- Removed role=\"dialog\" and aria-modal=\"true\" (native <dialog> behavior) -->\n        <form id=\"projectModalForm\">\n            <input type=\"hidden\" id=\"projectModalIdInput\" name=\"projectId\" value=\"\" />\n            <div class=\"form-control-enhanced\">\n                <label for=\"projectModalNameInput\" class=\"label\">\n                    <span class=\"label-text font-medium\">Project Name <span class=\"text-error\">*</span></span>\n                </label>\n                <!-- Removed autocomplete=\"off\" to allow helpful browser suggestions -->\n                <input id=\"projectModalNameInput\" name=\"name\" type=\"text\" required aria-required=\"true\"\n                       class=\"input input-bordered w-full validator\"\n                       aria-describedby=\"projectModalNameInput-hint\" />\n                <p id=\"projectModalNameInput-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n            </div>\n\n            <div class=\"form-control-enhanced\">\n                <label for=\"projectModalDescInput\" class=\"block text-sm font-medium text-base-content\">\n                    Description\n                </label>\n                <textarea id=\"projectModalDescInput\" name=\"description\" rows=\"3\"\n                          placeholder=\"Description helps organize and understand project purpose\"\n                          class=\"textarea textarea-bordered w-full\"></textarea>\n            </div>\n\n            <div class=\"form-control-enhanced\">\n                <label for=\"projectModalGoalsInput\" class=\"block text-sm font-medium text-base-content\">\n                    Goals\n                </label>\n                <textarea id=\"projectModalGoalsInput\" name=\"goals\" rows=\"3\"\n                          placeholder=\"What are the main objectives of this project?\"\n                          class=\"textarea textarea-bordered w-full\"></textarea>\n            </div>\n\n            <div class=\"form-control-enhanced\">\n                <label for=\"projectModalMaxTokensInput\" class=\"block text-sm font-medium text-base-content\">\n                    Maximum Tokens\n                </label>\n                <!-- Removed autocomplete=\"off\" to allow numeric suggestions -->\n                <input id=\"projectModalMaxTokensInput\" name=\"maxTokens\" type=\"number\" value=\"200000\"\n                       min=\"50000\" max=\"500000\"\n                       class=\"input input-bordered w-full validator\" />\n                <p class=\"text-base-content/60 text-xs mt-1\">\n                    Maximum token limit for this project (50,000 - 500,000)\n                </p>\n            </div>\n\n            <!-- Loading indicator -->\n            <div id=\"projectModalLoading\" class=\"loading-container hidden my-4\">\n                <div class=\"loading loading-spinner loading-md text-primary\"></div>\n                <span class=\"ml-2\">Processing request...</span>\n            </div>\n\n            <div class=\"modal-action\">\n                <kbd class=\"kbd-shortcut hidden md:inline-flex mr-auto\">\n                    <kbd class=\"kbd kbd-sm\">Esc</kbd> <span class=\"mx-1\">to cancel</span>\n                </kbd>\n                <button type=\"button\" id=\"projectCancelBtn\" class=\"btn btn-ghost\" aria-label=\"Cancel and close dialog\">\n                    Cancel\n                </button>\n                <button type=\"submit\" id=\"projectSaveBtn\" class=\"btn btn-primary\" aria-label=\"Save project\">\n                    Save Project\n                </button>\n            </div>\n        </form>\n    </div>\n    <!-- Click-off backdrop -->\n    <form method=\"dialog\" class=\"modal-backdrop\">\n        <button aria-label=\"Close\"></button>\n    </form>\n</dialog>\n\n<!-- Converted instructionsModal from <div> to <dialog> -->\n<dialog id=\"instructionsModal\" class=\"modal\"\n        aria-labelledby=\"instructionsModalTitle\">\n    <div class=\"modal-box max-w-lg w-full max-h-[90vh] overflow-y-auto\">\n        <div class=\"flex justify-between items-center mb-4\">\n            <!-- Added an ID to reference from aria-labelledby -->\n            <h3 id=\"instructionsModalTitle\" class=\"text-xl font-semibold\">Custom Instructions</h3>\n            <button id=\"closeInstructionsBtn\" type=\"button\"\n                class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\" aria-label=\"Close dialog\">\n                <span class=\"sr-only\">Close</span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\"\n                     class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          stroke-width=\"2\"\n                          d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n        <div class=\"mb-4\">\n            <p class=\"text-sm text-base-content/80 mb-2\">\n                Custom instructions are sent at the beginning of every conversation in this project.\n            </p>\n            <textarea id=\"customInstructionsInput\" rows=\"8\"\n                      class=\"w-full px-3 py-2 border border-base-300 rounded-lg shadow-xs focus:outline-hidden focus:ring-primary focus:border-primary h-20\"\n                      placeholder=\"Enter instructions for the AI to follow in this project...\"></textarea>\n        </div>\n        <div class=\"flex justify-end gap-2\">\n            <button id=\"cancelInstructionsBtn\" type=\"button\" class=\"btn btn-outline\">\n                Cancel\n            </button>\n            <button id=\"saveInstructionsBtn\" type=\"button\" class=\"btn btn-primary\">\n                Save Instructions\n            </button>\n        </div>\n    </div>\n    <!-- Click-off backdrop -->\n    <form method=\"dialog\" class=\"modal-backdrop\">\n        <button aria-label=\"Close\"></button>\n    </form>\n</dialog>\n\n<!-- Delete Confirmation Modal -->\n<dialog id=\"deleteConfirmModal\" class=\"modal\">\n    <div class=\"modal-box max-w-md w-full\">\n        <!-- Removed redundant role=\"dialog\" and aria-modal=\"true\" -->\n        <h3 class=\"text-xl font-semibold mb-4\">Confirm Delete</h3>\n        <p id=\"deleteConfirmText\" class=\"mb-6\">Are you sure you want to delete this item?</p>\n        <div class=\"flex justify-end gap-2\">\n            <button id=\"cancelDeleteBtn\" type=\"button\" class=\"btn btn-outline\">\n                Cancel\n            </button>\n            <button id=\"confirmDeleteBtn\" type=\"button\" class=\"btn btn-error\">\n                Delete\n            </button>\n        </div>\n    </div>\n    <form method=\"dialog\" class=\"modal-backdrop\">\n        <button aria-label=\"Close\"></button>\n    </form>\n</dialog>\n\n<!-- Generic Confirmation Modal -->\n<dialog id=\"confirmActionModal\" class=\"modal\" aria-labelledby=\"confirmActionTitle\">\n    <div class=\"modal-box max-w-md w-full\">\n        <form method=\"dialog\">\n            <!-- Close button top right -->\n            <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2 min-w-[44px] min-h-[44px]\"\n                    aria-label=\"Close dialog\">\n                <span class=\"sr-only\">Close</span>✕\n            </button>\n        </form>\n        <h3 id=\"confirmActionTitle\" class=\"font-bold text-lg\">Confirm Action</h3>\n        <p class=\"py-4\">Are you sure you want to proceed?</p>\n        <div class=\"modal-action\">\n            <button id=\"cancelActionBtn\" type=\"button\" class=\"btn btn-outline\">Cancel</button>\n            <button id=\"confirmActionBtn\" type=\"button\" class=\"btn btn-primary\">Confirm</button>\n        </div>\n    </div>\n    <form method=\"dialog\" class=\"modal-backdrop\">\n        <button aria-label=\"Close\"></button>\n    </form>\n</dialog>\n\n<!-- Error Modal -->\n<dialog id=\"errorModal\" class=\"modal\" aria-labelledby=\"errorModalTitle\">\n    <div class=\"modal-box max-w-md w-full\">\n        <form method=\"dialog\">\n            <!-- Close button top right -->\n            <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2 min-w-[44px] min-h-[44px]\"\n                    aria-label=\"Close dialog\">\n                <span class=\"sr-only\">Close</span>✕\n            </button>\n        </form>\n        <div class=\"flex items-center gap-3 mb-4\">\n            <div class=\"text-error\">\n                <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          stroke-width=\"2\"\n                          d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 \n                             1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.268 \n                             19.5c-.77.833.192 2.5 1.732 2.5z\" />\n                </svg>\n            </div>\n            <h3 id=\"errorModalTitle\" class=\"font-bold text-lg text-error\">Error</h3>\n        </div>\n        <div class=\"mb-4\">\n            <p id=\"errorModalMessage\" class=\"text-base-content\">An error has occurred.</p>\n            <div id=\"errorModalDetails\" class=\"mt-2 text-sm text-base-content/70 hidden\">\n                <details class=\"collapse collapse-arrow\">\n                    <summary class=\"collapse-title text-xs font-medium\">Technical Details</summary>\n                    <div class=\"collapse-content\">\n                        <pre id=\"errorModalDetailsContent\"\n                             class=\"text-xs bg-base-200 p-2 rounded whitespace-pre-wrap overflow-auto max-h-32\"></pre>\n                    </div>\n                </details>\n            </div>\n        </div>\n        <div class=\"modal-action\">\n            <button id=\"errorModalOkBtn\" type=\"button\" class=\"btn btn-primary\">OK</button>\n        </div>\n    </div>\n    <form method=\"dialog\" class=\"modal-backdrop\">\n        <button aria-label=\"Close\"></button>\n    </form>\n</dialog>\n\n<!-- Converted contentViewModal from <div> to <dialog> -->\n<dialog id=\"contentViewModal\" class=\"modal\"\n        aria-labelledby=\"contentViewModalTitle\">\n    <div class=\"modal-box max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        <div class=\"flex justify-between items-center mb-4\">\n            <!-- Added an ID to reference from aria-labelledby -->\n            <h3 id=\"contentViewModalTitle\" class=\"text-xl font-semibold\">File Content</h3>\n            <button id=\"closeContentViewModalBtn\" type=\"button\"\n                    class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\" aria-label=\"Close dialog\">\n                <span class=\"sr-only\">Close</span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\"\n                     class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                     stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\" \n                          stroke-width=\"2\"\n                          d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n        <div id=\"contentViewModalContent\"></div>\n    </div>\n    <!-- Click-off backdrop -->\n    <form method=\"dialog\" class=\"modal-backdrop\">\n        <button aria-label=\"Close\"></button>\n    </form>\n</dialog>\n\n<!-- Knowledge Base Settings Modal -->\n<dialog id=\"knowledgeBaseSettingsModal\" class=\"modal\" data-kb-debug=\"true\">\n    <div class=\"modal-box max-w-lg w-full\">\n        <div class=\"flex justify-between items-center mb-4\">\n            <h3 id=\"knowledgeBaseSettingsTitle\" class=\"text-xl font-semibold\">Knowledge Base Settings</h3>\n            <button id=\"closeKnowledgeSettingsBtn\" type=\"button\"\n                class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\" aria-label=\"Close dialog\">\n                <span class=\"sr-only\">Close</span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\"\n                     class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                     stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          stroke-width=\"2\"\n                          d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n        <form id=\"knowledgeBaseForm\">\n            <input type=\"hidden\" id=\"knowledgeBaseIdInput\" name=\"knowledge_base_id\" value=\"\" />\n\n            <div class=\"form-control-enhanced\">\n                <label for=\"knowledgeBaseNameInput\" class=\"block text-sm font-medium text-base-content\">\n                    Knowledge Base Name <span class=\"text-error\">*</span>\n                </label>\n                <!-- Removed autocomplete=\"off\" to allow normal browser suggestions -->\n                <input id=\"knowledgeBaseNameInput\" name=\"name\" type=\"text\" required aria-required=\"true\"\n                       placeholder=\"Enter a descriptive name for this knowledge base\"\n                       class=\"input input-bordered w-full validator\"\n                       aria-describedby=\"knowledgeBaseNameInput-hint\" />\n                <p id=\"knowledgeBaseNameInput-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n            </div>\n\n            <div class=\"form-control-enhanced\">\n                <label for=\"knowledgeBaseDescInput\" class=\"block text-sm font-medium text-base-content\">\n                    Description\n                </label>\n                <textarea id=\"knowledgeBaseDescInput\" name=\"description\" rows=\"3\"\n                          placeholder=\"Describe the purpose and content of this knowledge base\"\n                          class=\"textarea textarea-bordered w-full\"></textarea>\n            </div>\n\n            <div class=\"form-control-enhanced\">\n                <label for=\"embeddingModelSelect\" class=\"block text-sm font-medium text-base-content\">\n                    Embedding Model\n                </label>\n                <select id=\"embeddingModelSelect\" name=\"embedding_model\" class=\"select select-bordered w-full\">\n                    <option value=\"all-MiniLM-L6-v2\" selected>all-MiniLM-L6-v2 (384d • Fast • Default)</option>\n                    <option value=\"text-embedding-3-small\">OpenAI: text-embedding-3-small (1536d • Recommended)</option>\n                    <option value=\"text-embedding-3-large\">OpenAI: text-embedding-3-large (3072d • Largest)</option>\n                    <option value=\"embed-english-v3.0\">Cohere: embed-english-v3.0 (1024d • English Only)</option>\n                </select>\n                <div class=\"model-error text-error text-xs mt-1 hidden\"></div>\n                <p class=\"text-xs text-base-content/70 mt-1\">\n                    The embedding model determines how text is converted to vector representations for semantic search.\n                </p>\n            </div>\n\n            <fieldset class=\"border border-base-300 rounded-box p-3 mt-4\">\n                <legend class=\"text-sm font-medium px-1\">Processing Options</legend>\n\n                <div class=\"form-control mb-2\">\n                    <label class=\"flex items-center space-x-2 cursor-pointer\">\n                        <input type=\"checkbox\" id=\"processAllFilesCheckbox\" name=\"process_all_files\"\n                               class=\"checkbox checkbox-primary checkbox-sm\" />\n                        <span class=\"label-text\">Process all project files for knowledge search</span>\n                    </label>\n                    <p class=\"text-xs text-base-content/70 mt-1 ml-7\">\n                        This will process all existing files in the project for knowledge search.\n                        New files will be automatically processed when added.\n                    </p>\n                </div>\n\n                <div class=\"form-control\">\n                    <label class=\"flex items-center space-x-2 cursor-pointer\">\n                        <input type=\"checkbox\" id=\"autoEnableCheckbox\" name=\"auto_enable\"\n                               class=\"checkbox checkbox-primary checkbox-sm\" checked />\n                        <span class=\"label-text\">Automatically use knowledge in conversations</span>\n                    </label>\n                    <p class=\"text-xs text-base-content/70 mt-1 ml-7\">\n                        When enabled, the AI will automatically search project files for relevant information\n                        when answering questions.\n                    </p>\n                </div>\n            </fieldset>\n\n            <!-- GitHub Repository Integration Section -->\n            <fieldset class=\"border border-base-300 rounded-box p-3 mt-6\">\n                <legend class=\"text-sm font-medium px-1\">GitHub Repository Integration</legend>\n                <div id=\"kbGitHubAttachedRepoInfo\" class=\"mb-3 hidden\">\n                    <p class=\"text-sm\">Currently attached: <strong id=\"kbAttachedRepoUrlDisplay\"></strong> (<span\n                            id=\"kbAttachedRepoBranchDisplay\"></span>)</p>\n                    <button type=\"button\" id=\"kbDetachRepoBtn\" class=\"btn btn-xs btn-outline btn-warning mt-1\">\n                        Detach Repository\n                    </button>\n                </div>\n                <div id=\"kbGitHubAttachForm\">\n                    <div class=\"form-control-enhanced mb-2\">\n                        <label for=\"kbGitHubRepoUrlInput\" class=\"block text-xs font-medium text-base-content\">\n                            Repository URL\n                        </label>\n                        <input id=\"kbGitHubRepoUrlInput\" name=\"github_repo_url\" type=\"url\"\n                               placeholder=\"https://github.com/owner/repo\"\n                               class=\"input input-sm input-bordered w-full\" />\n                    </div>\n                    <div class=\"form-control-enhanced mb-2\">\n                        <label for=\"kbGitHubBranchInput\"\n                               class=\"block text-xs font-medium text-base-content\">Branch</label>\n                        <input id=\"kbGitHubBranchInput\" name=\"github_branch\" type=\"text\" value=\"main\"\n                               class=\"input input-sm input-bordered w-full\" />\n                    </div>\n                    <div class=\"form-control-enhanced mb-3\">\n                        <label for=\"kbGitHubFilePathsTextarea\" class=\"block text-xs font-medium text-base-content\">\n                            Specific File Paths (Optional, one per line)\n                        </label>\n                        <textarea id=\"kbGitHubFilePathsTextarea\" name=\"github_file_paths\" rows=\"2\"\n                                  placeholder=\"e.g., src/main.js&#10;docs/README.md\"\n                                  class=\"textarea textarea-sm textarea-bordered w-full\"></textarea>\n                    </div>\n                    <button type=\"button\" id=\"kbAttachRepoBtn\" class=\"btn btn-sm btn-primary\">\n                        Attach Repository\n                    </button>\n                </div>\n            </fieldset>\n\n            <!-- Processing status indicator -->\n            <div id=\"kbProcessingStatus\" class=\"alert alert-info shadow-xs mt-4 hidden\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\"\n                     fill=\"none\" viewBox=\"0 0 24 24\"\n                     class=\"stroke-info shrink-0 w-5 h-5\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          stroke-width=\"2\"\n                          d=\"M13 16h-1v-4h-1m1-4h.01M21 \n                             12a9 9 0 11-18 0 9 9 0 0118 \n                             0z\" />\n                </svg>\n                <div>\n                    <h3 class=\"font-bold text-sm\">Processing</h3>\n                    <div class=\"text-xs\">Files will be processed in the background after saving.</div>\n                </div>\n            </div>\n\n            <!-- Loading indicator -->\n            <div id=\"kbSettingsLoading\" class=\"loading-container hidden my-4\">\n                <div class=\"loading loading-spinner loading-md text-primary\"></div>\n                <span class=\"ml-2\">Saving settings...</span>\n            </div>\n\n            <div class=\"flex justify-between items-center mt-6\">\n                <div>\n                    <button type=\"button\" id=\"deleteKnowledgeBaseBtn\" class=\"btn btn-error hidden\">\n                        Delete Knowledge Base\n                    </button>\n                </div>\n                <div class=\"flex gap-2\">\n                    <kbd class=\"kbd-shortcut hidden md:inline-flex\">\n                        <kbd class=\"kbd kbd-sm\">Esc</kbd> <span class=\"mx-1\">to cancel</span>\n                    </kbd>\n                    <button type=\"button\" id=\"cancelKnowledgeBaseFormBtn\" class=\"btn btn-outline\">\n                        Cancel\n                    </button>\n                    <button type=\"submit\" id=\"submitKnowledgeBaseFormBtn\" class=\"btn btn-primary\">\n                        Save Settings\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n    <form method=\"dialog\" class=\"modal-backdrop\">\n        <button aria-label=\"Close\"></button>\n    </form>\n</dialog>\n\n<!-- Token Stats Modal -->\n<dialog id=\"tokenStatsModal\" class=\"modal\">\n    <div class=\"modal-box max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        <div class=\"flex justify-between items-center mb-6\">\n            <h3 id=\"tokenStatsModalTitle\" class=\"text-2xl font-bold\">Token Usage Statistics</h3>\n            <button id=\"closeTokenStatsBtn\" type=\"button\"\n                class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\" aria-label=\"Close dialog\">\n                <span class=\"sr-only\">Close</span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\"\n                     class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                     stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          stroke-width=\"2\"\n                          d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n\n        <!-- Project Token Usage -->\n        <div class=\"card bg-base-200 shadow-xs mb-6\">\n            <div class=\"card-body p-4\">\n                <h4 class=\"card-title text-lg mb-4\">Project Token Usage</h4>\n                <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">Current Usage</div>\n                        <div id=\"tokenStatsCurrentUsage\" class=\"stat-value text-2xl text-warning\">0</div>\n                        <div class=\"stat-desc\">tokens used</div>\n                    </div>\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">Project Limit</div>\n                        <div id=\"tokenStatsProjectLimit\" class=\"stat-value text-2xl text-info\">200,000</div>\n                        <div class=\"stat-desc\">total available</div>\n                    </div>\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">Usage Percentage</div>\n                        <div id=\"tokenStatsPercentage\" class=\"stat-value text-2xl text-success\">0%</div>\n                        <div class=\"stat-desc\">of limit used</div>\n                    </div>\n                </div>\n                <div class=\"w-full\">\n                    <div class=\"text-sm font-medium mb-2\">Usage Progress</div>\n                    <progress id=\"tokenStatsProgressBar\" class=\"progress progress-warning w-full\"\n                              value=\"0\" max=\"100\"></progress>\n                </div>\n            </div>\n        </div>\n\n        <!-- Conversation Token Usage -->\n        <div class=\"card bg-base-200 shadow-xs mb-6\">\n            <div class=\"card-body p-4\">\n                <h4 class=\"card-title text-lg mb-4\">Current Conversation</h4>\n                <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">Context Usage</div>\n                        <div id=\"tokenStatsContextUsage\" class=\"stat-value text-2xl text-primary\">0</div>\n                        <div class=\"stat-desc\">context tokens</div>\n                    </div>\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">Message Count</div>\n                        <div id=\"tokenStatsMessageCount\" class=\"stat-value text-2xl text-secondary\">0</div>\n                        <div class=\"stat-desc\">total messages</div>\n                    </div>\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">Avg per Message</div>\n                        <div id=\"tokenStatsAvgPerMessage\" class=\"stat-value text-2xl text-accent\">0</div>\n                        <div class=\"stat-desc\">tokens/message</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Token Breakdown -->\n        <div class=\"card bg-base-200 shadow-xs\">\n            <div class=\"card-body p-4\">\n                <h4 class=\"card-title text-lg mb-4\">Token Breakdown</h4>\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">User Messages</div>\n                        <div id=\"tokenStatsUserMsgTokens\" class=\"stat-value text-lg text-info\">0</div>\n                        <div id=\"tokenStatsUserMsgPercent\" class=\"stat-desc\">0%</div>\n                    </div>\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">AI Messages</div>\n                        <div id=\"tokenStatsAIMsgTokens\" class=\"stat-value text-lg text-success\">0</div>\n                        <div id=\"tokenStatsAIMsgPercent\" class=\"stat-desc\">0%</div>\n                    </div>\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">System Messages</div>\n                        <div id=\"tokenStatsSystemMsgTokens\" class=\"stat-value text-lg text-warning\">0</div>\n                        <div id=\"tokenStatsSystemMsgPercent\" class=\"stat-desc\">0%</div>\n                    </div>\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">Knowledge Base</div>\n                        <div id=\"tokenStatsKnowledgeTokens\" class=\"stat-value text-lg text-secondary\">0</div>\n                        <div id=\"tokenStatsKnowledgePercent\" class=\"stat-desc\">0%</div>\n                    </div>\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">Total</div>\n                        <div id=\"tokenStatsTotalTokens\" class=\"stat-value text-lg text-primary\">0</div>\n                        <div class=\"stat-desc\">all tokens</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"modal-action mt-6\">\n            <kbd class=\"kbd-shortcut hidden md:inline-flex mr-auto\">\n                <kbd class=\"kbd kbd-sm\">Esc</kbd> <span class=\"mx-1\">to close</span>\n            </kbd>\n            <button id=\"refreshTokenStatsBtn\" type=\"button\" class=\"btn btn-outline btn-sm\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\"\n                     class=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\"\n                     stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          stroke-width=\"2\"\n                          d=\"M4 4v5h.582m15.356 \n                             2A8.001 8.001 0 004.582 \n                             9m0 0H9m11 11v-5h-.581m0 \n                             0a8.003 8.003 0 01-15.357\n                             -2m15.357 2H15\" />\n                </svg>\n                Refresh\n            </button>\n            <button type=\"button\" class=\"btn btn-primary\" onclick=\"this.closest('dialog').close()\">\n                Close\n            </button>\n        </div>\n    </div>\n    <form method=\"dialog\" class=\"modal-backdrop\">\n        <button aria-label=\"Close\"></button>\n    </form>\n</dialog>\n\n<!-- Login/Register Modal -->\n<dialog id=\"loginModal\" class=\"modal\" aria-labelledby=\"loginRegisterModalTitle\">\n    <div class=\"modal-box max-w-sm w-full\">\n        <button id=\"loginModalCloseBtn\" class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\"\n                aria-label=\"Close dialog\" type=\"button\">\n            <span class=\"sr-only\">Close</span>✕\n        </button>\n        <h3 id=\"loginRegisterModalTitle\" class=\"font-bold text-xl mb-3 mt-2 text-center\">Welcome</h3>\n        <div class=\"flex border-b border-base-200 mb-3\">\n            <!-- Removed static aria-selected; recommended to set via JS -->\n            <button id=\"modalLoginTab\" type=\"button\"\n                    class=\"tab tab-bordered flex-1 tab-active rounded-t-lg\">\n                Login\n            </button>\n            <button id=\"modalRegisterTab\" type=\"button\"\n                    class=\"tab tab-bordered flex-1 rounded-t-lg\">\n                Register\n            </button>\n        </div>\n        <div id=\"loginPanel\" class=\"tab-panel\" role=\"tabpanel\" aria-labelledby=\"loginTab\">\n            <!-- Removed onsubmit=\"return false;\" -- handle in JS if needed -->\n            <form id=\"loginModalForm\" class=\"space-y-3\" autocomplete=\"on\">\n                <div class=\"form-control-enhanced\">\n                    <label for=\"loginModalUsername\" class=\"label font-medium\">Username</label>\n                    <!-- Use autocomplete=\"username\" for better user experience -->\n                    <input type=\"text\" id=\"loginModalUsername\" name=\"username\" required aria-required=\"true\"\n                           class=\"input input-bordered w-full validator\"\n                           autocomplete=\"username\" />\n                    <p id=\"loginModalUsername-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n                </div>\n                <div class=\"form-control-enhanced\">\n                    <label for=\"loginModalPassword\" class=\"label font-medium\">Password</label>\n                    <!-- Use autocomplete=\"current-password\" for better user experience -->\n                    <input type=\"password\" id=\"loginModalPassword\" name=\"password\" required aria-required=\"true\"\n                           class=\"input input-bordered w-full validator\"\n                           autocomplete=\"current-password\" />\n                    <p id=\"loginModalPassword-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n                </div>\n                <div id=\"loginModalError\" class=\"hidden text-error text-sm\" role=\"alert\"></div>\n                <div class=\"modal-action flex-col sm:flex-row justify-end gap-2 pt-2\">\n                    <button id=\"loginModalSubmitBtn\" type=\"submit\"\n                            class=\"btn btn-primary w-full sm:w-auto\">Login</button>\n                </div>\n            </form>\n        </div>\n        <div id=\"registerPanel\" class=\"tab-panel hidden\" role=\"tabpanel\" aria-labelledby=\"registerTab\">\n            <form id=\"registerModalForm\" class=\"space-y-3\" autocomplete=\"on\">\n                <div class=\"form-control-enhanced\">\n                    <label for=\"registerModalUsername\" class=\"label font-medium\">Username</label>\n                    <input type=\"text\" id=\"registerModalUsername\" name=\"username\" required aria-required=\"true\"\n                           class=\"input input-bordered w-full validator\"\n                           autocomplete=\"username\" />\n                    <p id=\"registerModalUsername-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n                </div>\n                <div class=\"form-control-enhanced\">\n                    <label for=\"registerModalPassword\" class=\"label font-medium\">Password</label>\n                    <!-- Use autocomplete=\"new-password\" when creating a new password -->\n                    <input type=\"password\" id=\"registerModalPassword\" name=\"password\" required aria-required=\"true\"\n                           minlength=\"8\" class=\"input input-bordered w-full validator\"\n                           autocomplete=\"new-password\" />\n                    <p id=\"registerModalPassword-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n                </div>\n                <div class=\"form-control-enhanced\">\n                    <label for=\"registerModalPasswordConfirm\" class=\"label font-medium\">Confirm Password</label>\n                    <input type=\"password\" id=\"registerModalPasswordConfirm\" name=\"passwordConfirm\" required\n                           aria-required=\"true\" minlength=\"8\"\n                           class=\"input input-bordered w-full validator\"\n                           autocomplete=\"new-password\" />\n                    <p id=\"registerModalPasswordConfirm-hint\" class=\"validator-hint hidden\" role=\"alert\"></p>\n                </div>\n                <div id=\"registerModalError\" class=\"hidden text-error text-sm\" role=\"alert\"></div>\n                <div class=\"modal-action flex-col sm:flex-row justify-end gap-2 pt-2\">\n                    <button id=\"registerModalSubmitBtn\" type=\"submit\"\n                            class=\"btn btn-primary w-full sm:w-auto\">Register</button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <form method=\"dialog\" class=\"modal-backdrop\" tabindex=\"-1\">\n        <button aria-label=\"Close\"></button>\n    </form>\n</dialog>\n\n<dialog id=\"knowledgeResultModal\" class=\"modal\" aria-labelledby=\"knowledgeResultTitle\">\n    <div class=\"modal-box max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        <div class=\"flex justify-between items-center mb-4\">\n            <h3 id=\"knowledgeResultTitle\" class=\"text-xl font-semibold\">Knowledge Result</h3>\n            <button id=\"closeKnowledgeResultBtn\" type=\"button\"\n                    class=\"btn btn-ghost btn-sm btn-square min-w-[44px] min-h-[44px]\" aria-label=\"Close dialog\">\n                <span class=\"sr-only\">Close</span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\"\n                     class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                     stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          stroke-width=\"2\"\n                          d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n\n        <div class=\"card card-compact bg-base-200 shadow-xs mb-4\">\n            <div class=\"card-body p-3\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                    <div class=\"flex items-center gap-2\">\n                        <div class=\"badge badge-neutral\">Source</div>\n                        <div id=\"knowledgeResultSource\" class=\"text-sm font-medium truncate\">Filename</div>\n                    </div>\n                    <div class=\"flex items-center gap-2\">\n                        <div class=\"badge badge-neutral\">Relevance</div>\n                        <div id=\"knowledgeResultScore\" class=\"badge badge-lg kb-result-relevance-high\">92%</div>\n                    </div>\n\n                    <div id=\"knowledgeResultMetadata\"\n                         class=\"col-span-1 md:col-span-2 flex flex-wrap gap-2 text-xs text-base-content/70 border-t border-base-300 pt-2 mt-1\">\n                        <span class=\"badge badge-ghost badge-sm\">Type:\n                            <span id=\"knowledgeResultType\">text</span>\n                        </span>\n                        <span class=\"badge badge-ghost badge-sm\">Last Modified:\n                            <span id=\"knowledgeResultDate\">2024-04-12</span>\n                        </span>\n                        <span class=\"badge badge-ghost badge-sm\">Size:\n                            <span id=\"knowledgeResultSize\">2.4 KB</span>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"bg-base-100 border border-base-300 p-4 rounded-box overflow-x-auto mb-4\">\n            <pre id=\"knowledgeResultContent\" class=\"whitespace-pre-wrap text-sm\" data-sanitize=\"true\"></pre>\n        </div>\n\n        <div class=\"modal-action\">\n            <kbd class=\"kbd-shortcut hidden md:inline-flex mr-auto\">\n                <kbd class=\"kbd kbd-sm\">Ctrl</kbd> + <kbd class=\"kbd kbd-sm\">C</kbd>\n                <span class=\"mx-1\">to copy</span>\n            </kbd>\n            <button id=\"copyContentBtn\" type=\"button\" class=\"btn btn-outline btn-sm\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\"\n                     class=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\"\n                     stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          stroke-width=\"2\"\n                          d=\"M8 7v8a2 2 0 002 2h6M8 \n                             7V5a2 2 0 012-2h4.586a1 \n                             1 0 01.707.293l4.414 \n                             4.414a1 1 0 01.293.707V15\n                             a2 2 0 01-2 2h-2M8 7H6a2 \n                             2 0 00-2 2v10a2 2 0 002 2\n                             h8a2 2 0 002-2v-2\" />\n                </svg>\n                Copy\n            </button>\n            <button id=\"useInChatBtn\" type=\"button\" class=\"btn btn-primary btn-sm\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\"\n                     class=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\"\n                     stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          stroke-width=\"2\"\n                          d=\"M17 8l4 4m0 0l-4 \n                             4m4-4H7\" />\n                </svg>\n                Use in Chat\n            </button>\n            <button type=\"button\"\n                    class=\"btn btn-outline btn-sm\"\n                    onclick=\"this.closest('dialog').close()\">\n                Close\n            </button>\n        </div> <!-- /.modal-action -->\n    </div> <!-- /.modal-box -->\n\n    <!-- click-off backdrop -->\n    <form method=\"dialog\" class=\"modal-backdrop\" tabindex=\"-1\">\n        <button aria-label=\"Close\"></button>\n    </form>\n</dialog>"
          },
          "redirectURL": "",
          "headersSize": 1077,
          "bodySize": 39442,
          "_transferSize": 40519,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:32.878Z",
        "time": 55.20200000319164,
        "timings": {
          "blocked": 0.9970000005923212,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.129,
          "wait": 53.30699999692384,
          "receive": 0.7690000056754798,
          "_blocked_queueing": 0.7110000005923212,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "other",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/favicon.ico",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "image"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1522,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "0"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "image/vnd.microsoft.icon"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"d24d588668ef1aeab5d2552429ab7688\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "image/vnd.microsoft.icon",
            "compression": 0,
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 1048,
          "bodySize": 0,
          "_transferSize": 1048,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:33.008Z",
        "time": 39.01700000278652,
        "timings": {
          "blocked": 1.833000001007691,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.09199999999999997,
          "wait": 36.62699999715481,
          "receive": 0.4650000046240166,
          "_blocked_queueing": 1.357000001007691,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "fetchImpl",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 125,
                "columnNumber": 34
              },
              {
                "functionName": "",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 186,
                "columnNumber": 36
              },
              {
                "functionName": "apiRequest",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 300,
                "columnNumber": 6
              },
              {
                "functionName": "fetchCSRFToken",
                "scriptId": "397",
                "url": "http://127.0.0.1:8000/static/js/auth.js",
                "lineNumber": 168,
                "columnNumber": 23
              },
              {
                "functionName": "",
                "scriptId": "397",
                "url": "http://127.0.0.1:8000/static/js/auth.js",
                "lineNumber": 198,
                "columnNumber": 28
              },
              {
                "functionName": "getCSRFTokenAsync",
                "scriptId": "397",
                "url": "http://127.0.0.1:8000/static/js/auth.js",
                "lineNumber": 204,
                "columnNumber": 6
              },
              {
                "functionName": "init",
                "scriptId": "397",
                "url": "http://127.0.0.1:8000/static/js/auth.js",
                "lineNumber": 898,
                "columnNumber": 16
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "initializeAuthSystem",
                  "scriptId": "390",
                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                  "lineNumber": 1358,
                  "columnNumber": 27
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "",
                    "scriptId": "390",
                    "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                    "lineNumber": 2091,
                    "columnNumber": 49
                  },
                  {
                    "functionName": "phaseRunner",
                    "scriptId": "390",
                    "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                    "lineNumber": 2065,
                    "columnNumber": 37
                  },
                  {
                    "functionName": "initializeApp",
                    "scriptId": "390",
                    "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                    "lineNumber": 2091,
                    "columnNumber": 14
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "",
                      "scriptId": "370",
                      "url": "http://127.0.0.1:8000/static/js/app.js",
                      "lineNumber": 97,
                      "columnNumber": 8
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/api/auth/csrf?ts=1749394173062",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=4e902f87811d480589a44823f8c14468,sentry-sample_rate=0.1,sentry-sampled=false"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "4e902f87811d480589a44823f8c14468-91f1bbd124bee737-0"
            }
          ],
          "queryString": [
            {
              "name": "ts",
              "value": "1749394173062"
            }
          ],
          "cookies": [],
          "headersSize": 1759,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "55"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 55,
            "mimeType": "application/json",
            "compression": 0,
            "text": "{\"token\":\"vnvqOMvK4NLLRNGxlRCO_uT0Yfw6EMAli8RI5EDu0oo\"}"
          },
          "redirectURL": "",
          "headersSize": 1021,
          "bodySize": 55,
          "_transferSize": 1076,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:33.064Z",
        "time": 69.8569999949541,
        "timings": {
          "blocked": 1.4890000011539086,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.177,
          "wait": 35.65200000126101,
          "receive": 32.538999992539175,
          "_blocked_queueing": 1.1640000011539087,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "fetchImpl",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 125,
                "columnNumber": 34
              },
              {
                "functionName": "",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 186,
                "columnNumber": 36
              },
              {
                "functionName": "apiRequest",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 300,
                "columnNumber": 6
              },
              {
                "functionName": "authRequest",
                "scriptId": "397",
                "url": "http://127.0.0.1:8000/static/js/auth.js",
                "lineNumber": 251,
                "columnNumber": 25
              },
              {
                "functionName": "verifyAuthState",
                "scriptId": "397",
                "url": "http://127.0.0.1:8000/static/js/auth.js",
                "lineNumber": 429,
                "columnNumber": 27
              },
              {
                "functionName": "init",
                "scriptId": "397",
                "url": "http://127.0.0.1:8000/static/js/auth.js",
                "lineNumber": 918,
                "columnNumber": 25
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "initializeAuthSystem",
                  "scriptId": "390",
                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                  "lineNumber": 1358,
                  "columnNumber": 27
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "",
                    "scriptId": "390",
                    "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                    "lineNumber": 2091,
                    "columnNumber": 49
                  },
                  {
                    "functionName": "phaseRunner",
                    "scriptId": "390",
                    "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                    "lineNumber": 2065,
                    "columnNumber": 37
                  },
                  {
                    "functionName": "initializeApp",
                    "scriptId": "390",
                    "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                    "lineNumber": 2091,
                    "columnNumber": 14
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "",
                      "scriptId": "370",
                      "url": "http://127.0.0.1:8000/static/js/app.js",
                      "lineNumber": 97,
                      "columnNumber": 8
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/api/auth/verify",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=4e902f87811d480589a44823f8c14468,sentry-sample_rate=0.1,sentry-sampled=false"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "4e902f87811d480589a44823f8c14468-b509a9ce9d6efb65-0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1719,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "973"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 973,
            "mimeType": "application/json",
            "compression": 0,
            "text": "{\"authenticated\":true,\"user\":{\"id\":1,\"username\":\"hperkins\",\"token_version\":7,\"project_ids\":[\"f304c5f9-fd3d-4a21-9073-ce455971943b\"],\"conversation_ids\":[\"c8b7f7aa-ae5d-4d9b-b50c-2d5b83066840\",\"44537c46-82e0-4589-b09d-0d84b2565552\",\"113d2eec-3626-4152-8b2b-90ef5903020a\",\"2fdd55b9-bac5-49f3-99e5-914903d2cb95\",\"fccfee97-aa2b-4d9c-a46a-83b6d2d8d70a\",\"aa92e1d1-8504-41a5-b662-1a5ac4115a08\",\"3a77cb59-0db9-466b-b955-60ef3fa75155\",\"15a4fac0-e9b1-4936-9e98-ac748eb1e8de\",\"6000f962-2933-4382-a9e0-fcb5364f6799\",\"39f36b9b-91b6-486e-92c6-f3aaa3c93fa4\",\"8b5eb2b0-6db2-41c3-8f8c-c34f405ecbf1\",\"112470ca-15ec-4f31-926f-496f59fe753c\",\"99b7a23e-5ff2-4196-a590-e78c87e8068e\",\"941537d1-2ed4-4497-a3a1-1338c7559ddd\",\"d626a2ae-d4cc-4ac7-bb1f-f773e081f621\",\"a4cc7330-35c8-4ad1-a6ed-5ae0d2e0bd57\",\"9b5f3f0f-a0c6-45d4-8171-3ecc9dc48db1\",\"042932fb-4714-484c-9304-35c590c5016e\",\"f751acac-b2f5-43f5-92ed-119421384116\",\"63ccf1e5-b1a2-4c30-9d1b-5e7c1bc5b346\",\"70dde08a-0f04-41c0-9783-333c8265f9cd\"]}}"
          },
          "redirectURL": "",
          "headersSize": 932,
          "bodySize": 973,
          "_transferSize": 1905,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:33.216Z",
        "time": 91.28999999666121,
        "timings": {
          "blocked": 3.3779999994840475,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.14800000000000002,
          "wait": 86.5689999928046,
          "receive": 1.1950000043725595,
          "_blocked_queueing": 2.7709999994840473,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "loadTemplate",
                "scriptId": "384",
                "url": "http://127.0.0.1:8000/static/js/utils/htmlTemplateLoader.js",
                "lineNumber": 157,
                "columnNumber": 21
              },
              {
                "functionName": "loadProjectTemplates",
                "scriptId": "390",
                "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                "lineNumber": 1595,
                "columnNumber": 33
              },
              {
                "functionName": "initializeUIComponents",
                "scriptId": "390",
                "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                "lineNumber": 1914,
                "columnNumber": 22
              },
              {
                "functionName": "",
                "scriptId": "390",
                "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                "lineNumber": 2092,
                "columnNumber": 45
              },
              {
                "functionName": "phaseRunner",
                "scriptId": "390",
                "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                "lineNumber": 2065,
                "columnNumber": 37
              },
              {
                "functionName": "initializeApp",
                "scriptId": "390",
                "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                "lineNumber": 2092,
                "columnNumber": 14
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "370",
                  "url": "http://127.0.0.1:8000/static/js/app.js",
                  "lineNumber": 97,
                  "columnNumber": 8
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/html/project_list.html",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=e1a924a69f4d4cf58130bd565ced09ac,sentry-sample_rate=0.1,sentry-sampled=false"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "e1a924a69f4d4cf58130bd565ced09ac-8092ff200aa9070f-0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1723,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "7878"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:29 GMT"
            },
            {
              "name": "etag",
              "value": "\"92547a3b127ba8d75a3e026e18ae1eb4\""
            },
            {
              "name": "last-modified",
              "value": "Mon, 02 Jun 2025 20:04:56 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 7878,
            "mimeType": "text/html",
            "compression": 0,
            "text": "<!-- Enhanced Mobile-First Project List -->\n<div id=\"projectListContainer\" class=\"project-list-container w-full max-w-7xl mx-auto px-2 md:px-8\">\n\n  <!-- Header -->\n  <div class=\"flex items-center justify-between mb-6 mobile-p-safe\">\n    <h1 class=\"text-responsive-2xl font-bold\">Projects</h1>\n    <button id=\"createProjectBtn\" class=\"btn btn-primary\" aria-label=\"Create new project\">\n      <svg class=\"icon-sm\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n      </svg>\n      <span class=\"hidden sm:inline\">New Project</span>\n      <span class=\"sm:hidden\">New</span>\n    </button>\n  </div>\n\n  <!-- Enhanced Filters with Scroll Indication -->\n  <div class=\"relative mb-6\">\n    <div id=\"projectFilterTabs\" class=\"project-tabs flex gap-2 overflow-x-auto scrollbar-none\" role=\"tablist\"\n      aria-label=\"Project filters\">\n      <button class=\"tab project-tab active flex-1\" data-filter=\"all\" id=\"filterTabAll\" role=\"tab\" aria-selected=\"true\"\n        tabindex=\"0\">\n        All\n      </button>\n      <button class=\"tab project-tab flex-1\" data-filter=\"recent\" id=\"filterTabRecent\" role=\"tab\" aria-selected=\"false\"\n        tabindex=\"-1\">\n        Recent\n      </button>\n      <button class=\"tab project-tab flex-1\" data-filter=\"pinned\" id=\"filterTabPinned\" role=\"tab\" aria-selected=\"false\"\n        tabindex=\"-1\">\n        Pinned\n      </button>\n      <button class=\"tab project-tab flex-1\" data-filter=\"archived\" id=\"filterTabArchived\" role=\"tab\" aria-selected=\"false\"\n        tabindex=\"-1\">\n        Archived\n      </button>\n    </div>\n  </div>\n\n  <!-- Enhanced Search -->\n  <div class=\"relative mb-6 mobile-p-safe\">\n    <div class=\"relative w-full\">\n      <!-- Left: Magnifier, fixed width padded -->\n      <span class=\"absolute left-0 inset-y-0 flex items-center pl-3 pointer-events-none\">\n        <svg class=\"w-5 h-5 text-base-content/50\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n        </svg>\n      </span>\n      <input id=\"projectSearchInput\"\n        type=\"search\"\n        class=\"input w-full pl-12 pr-12 placeholder:text-base-content/60 focus:outline-none focus:ring-2 focus:ring-primary\"\n        placeholder=\"Search projects...\"\n        inputmode=\"search\"\n        enterkeyhint=\"search\"\n        aria-label=\"Search projects\">\n      <!-- Right: Clear button, fixed width padded -->\n      <span class=\"absolute right-0 inset-y-0 flex items-center pr-3\">\n        <button\n          id=\"clearSearchBtn\"\n          type=\"button\"\n          class=\"btn btn-ghost btn-xs btn-circle\"\n          aria-label=\"Clear search\"\n          tabindex=\"-1\"\n          title=\"Clear the project search input\"\n        >\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </span>\n    </div>\n  </div>\n\n  <!-- Project Grid (DO NOT REMOVE or wrap in <template>—must always be present) -->\n  <div id=\"projectCardsPanel\" class=\"mobile-grid mobile-p-safe w-full\" role=\"tabpanel\" aria-labelledby=\"filterTabAll\"\n    tabindex=\"0\">\n    <!-- Projects will be inserted here -->\n  </div>\n\n  <!-- (empty state will be rendered dynamically by the ProjectListComponent JS) -->\n\n  <!-- Project Card Template (for reference) -->\n  <template id=\"projectCardTemplate\">\n    <div class=\"project-card group\">\n      <!-- Primary content -->\n      <div class=\"project-card-header\">\n        <div class=\"project-card-title\">\n          <h3 class=\"project-name truncate mb-1\">Project Name</h3>\n          <p class=\"project-card-description\">\n            Project description that provides context...\n          </p>\n        </div>\n        <!-- Single action menu instead of multiple buttons -->\n        <div class=\"project-card-actions pt-1\">\n          <div class=\"project-card-menu\">\n            <button class=\"project-card-menu-btn focus:outline-none focus:ring-2 focus:ring-primary\" aria-label=\"Project actions\">\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n              </svg>\n            </button>\n            <ul class=\"dropdown-content menu bg-base-100 rounded-xl z-50 w-48 p-2 shadow-xl border border-base-300\">\n              <li><a href=\"#\" data-action=\"view\">\n                  <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                      d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                  </svg>\n                  View\n                </a></li>\n              <li><a href=\"#\" data-action=\"edit\">\n                  <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                      d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                  </svg>\n                  Edit\n                </a></li>\n              <li><a href=\"#\" data-action=\"delete\" class=\"text-error\">\n                  <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                      d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                  </svg>\n                  Delete\n                </a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <!-- Metadata footer -->\n      <div class=\"project-card-footer\">\n        <div class=\"project-card-meta\">\n          <span class=\"project-card-meta-item\">\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            Updated 2h ago\n          </span>\n          <span class=\"project-card-meta-item\">\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n            </svg>\n            12 conversations\n          </span>\n        </div>\n        <div class=\"project-card-badges\">\n          <span class=\"badge badge-ghost\">Active</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Status indicator -->\n    <div class=\"project-card-status\" data-status=\"active\">\n      <span class=\"sr-only\">Active project</span>\n    </div>\n</div>\n</template>\n\n<!-- Loading State -->\n<div id=\"loadingState\" class=\"loading-grid grid grid-cols-2 gap-4 hidden\">\n  <div class=\"loading-card\"></div>\n  <div class=\"loading-card\"></div>\n  <div class=\"loading-card\"></div>\n  <div class=\"loading-card\"></div>\n  <div class=\"loading-card\"></div>\n  <div class=\"loading-card\"></div>\n</div>\n</div>\n"
          },
          "redirectURL": "",
          "headersSize": 1076,
          "bodySize": 7878,
          "_transferSize": 8954,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:33.331Z",
        "time": 71.35899999411777,
        "timings": {
          "blocked": 6.78900000009127,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.122,
          "wait": 36.40200000185333,
          "receive": 28.045999992173165,
          "_blocked_queueing": 6.44800000009127,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "other",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/favicon.ico",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "etag",
              "value": "\"d24d588668ef1aeab5d2552429ab7688\""
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "0"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "content-type",
              "value": "image/vnd.microsoft.icon"
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "image/vnd.microsoft.icon",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false,
          "_fulfilledBy": "(disk cache)"
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:33.344Z",
        "time": 8.678000012878329,
        "timings": {
          "blocked": 8.050000010588207,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.34799999481160193,
          "receive": 0.2800000074785203,
          "_blocked_queueing": 7.919000010588206,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "loadTemplate",
                "scriptId": "384",
                "url": "http://127.0.0.1:8000/static/js/utils/htmlTemplateLoader.js",
                "lineNumber": 157,
                "columnNumber": 21
              },
              {
                "functionName": "loadProjectTemplates",
                "scriptId": "390",
                "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                "lineNumber": 1600,
                "columnNumber": 33
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "initializeUIComponents",
                  "scriptId": "390",
                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                  "lineNumber": 1914,
                  "columnNumber": 22
                },
                {
                  "functionName": "",
                  "scriptId": "390",
                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                  "lineNumber": 2092,
                  "columnNumber": 45
                },
                {
                  "functionName": "phaseRunner",
                  "scriptId": "390",
                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                  "lineNumber": 2065,
                  "columnNumber": 37
                },
                {
                  "functionName": "initializeApp",
                  "scriptId": "390",
                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                  "lineNumber": 2092,
                  "columnNumber": 14
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "",
                    "scriptId": "370",
                    "url": "http://127.0.0.1:8000/static/js/app.js",
                    "lineNumber": 97,
                    "columnNumber": 8
                  }
                ]
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/html/project_details.html",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=e1a924a69f4d4cf58130bd565ced09ac,sentry-sample_rate=0.1,sentry-sampled=false"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "e1a924a69f4d4cf58130bd565ced09ac-90d01730f6d71d06-0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1726,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "28086"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:29 GMT"
            },
            {
              "name": "etag",
              "value": "\"4ee2badf2e422f918a81f65bc35a0215\""
            },
            {
              "name": "last-modified",
              "value": "Mon, 02 Jun 2025 22:26:37 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 28086,
            "mimeType": "text/html",
            "compression": 0,
            "text": "<!-- Mobile-First Project Details Template (Complete) -->\n<div id=\"projectDetailsPageShell\" class=\"min-h-[calc(100vh_-_var(--header-height)_-_32px)] flex flex-col items-center w-full px-2 md:px-0 pt-4 pb-8\">\n  <div id=\"projectDetailsContainer\"\n       class=\"project-details-container w-full max-w-3xl mx-auto bg-base-100 rounded-2xl shadow-md border border-base-200\">\n    <div class=\"project-details\">\n\n    <!-- HEADER & STATS -->\n    <header class=\"project-header p-4 border-b border-base-200\">\n      <div class=\"flex items-center gap-3 mb-4\">\n        <!-- Back Button (Mobile Only) -->\n        <button id=\"backToProjectsBtn\" class=\"btn btn-ghost btn-square lg:hidden min-w-[44px] min-h-[44px] focus:outline-none focus:ring-2 focus:ring-primary\" aria-label=\"Back to projects\">\n          <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n          </svg>\n        </button>\n\n        <!-- Project Title & Chats Badge -->\n        <div class=\"flex-1 min-w-0\">\n          <h1 id=\"projectTitle\" class=\"text-xl lg:text-2xl font-bold truncate\">Project Title</h1>\n          <div class=\"flex items-center gap-2 mt-1\">\n            <span class=\"badge badge-outline badge-sm\">\n              <span id=\"conversationCount\">0</span> chats\n            </span>\n          </div>\n        </div>\n\n        <!-- Top-Right Buttons (Edit & Menu) -->\n        <div class=\"flex gap-2\">\n          <button id=\"editProjectBtn\" class=\"btn btn-ghost btn-square min-w-[44px] min-h-[44px] focus:outline-none focus:ring-2 focus:ring-primary\" aria-label=\"Edit project\">\n            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5\n                       m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n            </svg>\n          </button>\n          <button id=\"projectMenuBtn\" class=\"btn btn-ghost btn-square min-w-[44px] min-h-[44px] focus:outline-none focus:ring-2 focus:ring-primary\" aria-label=\"Project menu\">\n            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M12 5v.01M12 12v.01M12 19v.01\n                       M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2\n                       1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <!-- Token / File / Artifact Stats -->\n      <div class=\"grid grid-cols-3 gap-2\">\n        <!-- Example: Tokens -->\n        <div id=\"tokenUsageStat\" class=\"project-stat text-center p-2 bg-base-100 rounded-md shadow-sm\">\n          <div id=\"tokenStatsCurrentUsage\" class=\"text-2xl font-bold text-warning\">0</div>\n          <div class=\"text-sm text-base-content/70\">Tokens</div>\n          <button id=\"tokenStatsBtn\" class=\"btn btn-ghost btn-xs min-w-[36px] min-h-[36px] focus:outline-none focus:ring-2 focus:ring-primary\" aria-label=\"Token stats\">⋯</button>\n        </div>\n        <!-- Example: Files -->\n        <div class=\"project-stat text-center p-2 bg-base-100 rounded-md shadow-sm\">\n          <div id=\"fileCount\" class=\"text-2xl font-bold text-success\">0</div>\n          <div class=\"text-sm text-base-content/70\">Files</div>\n        </div>\n        <!-- Example: Artifacts -->\n        <div class=\"project-stat text-center p-2 bg-base-100 rounded-md shadow-sm\">\n          <div id=\"artifactCount\" class=\"text-2xl font-bold text-info\">0</div>\n          <div class=\"text-sm text-base-content/70\">Artifacts</div>\n        </div>\n      </div>\n    </header>\n\n    <!-- ENHANCED TAB NAVIGATION -->\n    <div class=\"project-tabs border-b border-base-200 flex overflow-x-auto\"\n         role=\"tablist\" aria-label=\"Project sections\">\n      <button class=\"tab project-tab active flex-1\" data-tab=\"details\"\n              role=\"tab\" aria-selected=\"true\" aria-controls=\"detailsTab\"\n              tabindex=\"0\">\n        <svg class=\"icon-sm\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                d=\"M13 16h-1v-4h-1m1-4h.01\n                   M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        <span>Details</span>\n      </button>\n      <button class=\"tab project-tab flex-1\" data-tab=\"files\"\n              role=\"tab\" aria-selected=\"false\" aria-controls=\"filesTab\"\n              tabindex=\"-1\">\n        <svg class=\"icon-sm\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5\n                   a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414\n                   a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n        </svg>\n        <span>Files</span>\n      </button>\n      <button class=\"tab project-tab flex-1\" data-tab=\"chat\"\n              role=\"tab\" aria-selected=\"false\" aria-controls=\"chatTab\"\n              tabindex=\"-1\">\n        <svg class=\"icon-sm\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                d=\"M8 12h.01M12 12h.01M16 12h.01\n                   M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20\n                   l1.395-3.72C3.512 15.042 3 13.574 3 12\n                   c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n        </svg>\n        <span>Chat</span>\n      </button>\n      <button class=\"tab project-tab flex-1\" data-tab=\"knowledge\"\n              role=\"tab\" aria-selected=\"false\" aria-controls=\"knowledgeTab\"\n              tabindex=\"-1\">\n        <svg class=\"icon-sm\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                d=\"M21 21l-6-6m2-5\n                   a7 7 0 11-14 0 7 7 0 0114 0z\" />\n        </svg>\n        <span>Knowledge</span>\n      </button>\n      <button class=\"tab project-tab flex-1\" data-tab=\"settings\"\n              role=\"tab\" aria-selected=\"false\" aria-controls=\"settingsTab\"\n              tabindex=\"-1\">\n        <svg class=\"icon-sm\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0\n                   a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37\n                   a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35\n                   a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37\n                   a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0\n                   a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37\n                   a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35\n                   a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37\n                   .996.608 2.296.07 2.572-1.065z\" />\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n        </svg>\n        <span>Settings</span>\n      </button>\n    </div>\n\n    <!-- TAB CONTENT PANELS -->\n    <div class=\"project-tab-content p-4\">\n\n      <!-- DETAILS TAB -->\n      <div id=\"detailsTab\" class=\"tab-pane\" role=\"tabpanel\" aria-labelledby=\"tab-details\">\n        <div class=\"space-y-4\">\n          <!-- Expandable Section -->\n          <div class=\"expandable-section\" aria-expanded=\"false\">\n            <button class=\"expandable-header flex items-center justify-between w-full p-3 bg-base-100 rounded\"\n                    onclick=\"this.parentElement.setAttribute('aria-expanded',\n                      this.parentElement.getAttribute('aria-expanded') === 'true' ? 'false' : 'true')\">\n              <h3 class=\"font-semibold\">Project Information</h3>\n              <svg class=\"icon-sm expandable-indicator\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                      d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </button>\n            <div class=\"expandable-content p-3 space-y-4 hidden\">\n              <div>\n                <label class=\"block text-sm font-medium mb-1\">Project Name</label>\n                <div id=\"projectNameDisplay\"\n                     class=\"p-3 bg-base-200 rounded-lg text-base-content\">\n                  Loading...\n                </div>\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium mb-1\">Description</label>\n                <div id=\"projectDescriptionDisplay\"\n                     class=\"p-3 bg-base-200 rounded-lg text-base-content min-h-[80px]\">\n                  Loading...\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Statistics with Visual Enhancements -->\n          <div class=\"card p-3 bg-base-100 rounded shadow\">\n            <h3 class=\"font-semibold mb-3\">Project Statistics</h3>\n            <div class=\"grid grid-cols-2 sm:grid-cols-4 gap-4\">\n              <!-- Files -->\n              <div class=\"stat bg-base-200 rounded-lg p-4 text-center\">\n                <svg class=\"icon-md mx-auto mb-2 text-primary\"\n                     fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                        d=\"M9 12h6m-6 4h6m2 5H7\n                           a2 2 0 01-2-2V5a2 2 0 012-2h5.586\n                           a1 1 0 01.707.293l5.414 5.414\n                           a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>\n                <div class=\"stat-title text-sm\">Files</div>\n                <div id=\"fileCountDetail\" class=\"stat-value text-2xl font-bold\">0</div>\n              </div>\n              <!-- Conversations -->\n              <div class=\"stat bg-base-200 rounded-lg p-4 text-center\">\n                <svg class=\"icon-md mx-auto mb-2 text-secondary\"\n                     fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                        d=\"M8 12h.01M12 12h.01M16 12h.01\n                           M21 12c0 4.418-4.03 8-9 8\n                           a9.863 9.863 0 01-4.255-.949L3 20\n                           l1.395-3.72C3.512 15.042 3 13.574 3 12\n                           c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                </svg>\n                <div class=\"stat-title text-sm\">Conversations</div>\n                <div id=\"conversationCountDetail\" class=\"stat-value text-2xl font-bold\">0</div>\n              </div>\n              <!-- Artifacts -->\n              <div class=\"stat bg-base-200 rounded-lg p-4 text-center\">\n                <svg class=\"icon-md mx-auto mb-2 text-accent\"\n                     fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                        d=\"M19.428 15.428a2 2 0 00-1.022-.547\n                           l-2.387-.477a6 6 0 00-3.86.517l-.318.158\n                           a6 6 0 01-3.86.517L6.05 15.21\n                           a2 2 0 00-1.806.547M8 4h8l-1 1v5.172\n                           a2 2 0 00.586 1.414l5 5\n                           c1.26 1.26.367 3.414-1.415 3.414H4.828\n                           c-1.782 0-2.674-2.154-1.414-3.414l5-5\n                           A2 2 0 009 10.172V5L8 4z\" />\n                </svg>\n                <div class=\"stat-title text-sm\">Artifacts</div>\n                <div id=\"artifactCountDetail\" class=\"stat-value text-2xl font-bold\">0</div>\n              </div>\n              <!-- Created -->\n              <div class=\"stat bg-base-200 rounded-lg p-4 text-center\">\n                <svg class=\"icon-md mx-auto mb-2 text-success\"\n                     fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                        d=\"M8 7V3m8 4V3m-9 8h10\n                           M5 21h14a2 2 0 002-2V7\n                           a2 2 0 00-2-2H5a2 2 0 00-2 2v12\n                           a2 2 0 002 2z\" />\n                </svg>\n                <div class=\"stat-title text-sm\">Created</div>\n                <div id=\"projectCreatedDate\" class=\"stat-value text-lg font-bold\">-</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- FILES TAB -->\n      <div id=\"filesTab\" class=\"tab-pane hidden\" role=\"tabpanel\" aria-labelledby=\"tab-files\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"font-semibold\">Project Files</h3>\n          <button id=\"uploadFileBtn\" class=\"btn btn-primary btn-sm min-w-[44px] min-h-[44px] focus:outline-none focus:ring-2 focus:ring-primary\" aria-label=\"Upload file\">\n            <svg class=\"w-5 h-5 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6\n                       a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n            </svg>\n            Upload\n          </button>\n        </div>\n\n        <!-- File Upload Component -->\n        <div id=\"dragDropZone\" class=\"file-upload-container border border-dashed border-base-300 rounded p-4\"\n             tabindex=\"0\"\n             aria-labelledby=\"file-upload-title\"\n             aria-describedby=\"file-upload-instructions\">\n\n          <!-- Upload area -->\n          <div class=\"text-center\">\n            <div class=\"file-upload-icon mb-3\">\n              <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"w-10 h-10 mx-auto text-base-content/50\" aria-hidden=\"true\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                      d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6\n                         L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3\n                         m3-3v12\" />\n              </svg>\n            </div>\n            <h3 id=\"file-upload-title\" class=\"file-upload-title text-lg font-medium\">Upload Files</h3>\n            <p id=\"file-upload-instructions\" class=\"file-upload-instructions text-sm text-base-content/60\">\n              Drag and drop files here, or\n              <label for=\"fileInput\" class=\"file-upload-browse-btn text-primary underline cursor-pointer\">\n                browse\n              </label>\n            </p>\n            <div class=\"text-xs text-base-content/60 mt-1\">\n              Supports: TXT, MD, CSV, JSON, PDF, DOC, DOCX, PY, JS, HTML, CSS\n            </div>\n          </div>\n\n          <!-- Hidden file input -->\n          <input id=\"fileInput\"\n                 type=\"file\"\n                 class=\"file-upload-input hidden\"\n                 multiple\n                 aria-label=\"File upload\"\n                 accept=\".txt,.md,.csv,.json,.pdf,.doc,.docx,.py,.js,.html,.css\" />\n\n          <!-- Progress area (hidden by default) -->\n          <div id=\"filesUploadProgress\" class=\"file-upload-progress hidden mt-4\">\n            <div class=\"file-upload-progress-label text-sm mb-2\" aria-live=\"polite\">\n              Uploading files... <span id=\"file-upload-progress-percent\">0%</span>\n            </div>\n            <div class=\"file-upload-progress-bar mb-1\">\n              <progress id=\"fileProgressBar\" value=\"0\" max=\"100\"\n                        class=\"progress progress-primary w-full\"></progress>\n            </div>\n            <p id=\"uploadStatus\" class=\"text-xs text-base-content/60\">Uploading...</p>\n          </div>\n\n          <!-- Error message (hidden by default) -->\n          <div id=\"file-upload-error\" class=\"file-upload-error hidden text-error mt-4\" role=\"alert\" aria-live=\"assertive\"></div>\n\n          <!-- File preview list (hidden by default) -->\n          <ul id=\"file-preview-list\" class=\"file-preview-list hidden mt-4 space-y-2\" aria-label=\"Selected files\"></ul>\n        </div>\n\n        <!-- File preview item template -->\n        <template id=\"file-preview-template\">\n          <li class=\"file-preview-item flex items-center gap-2 p-2 bg-base-200 rounded\">\n            <div class=\"file-preview-icon text-base-content/50\">\n              <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"h-5 w-5\" aria-hidden=\"true\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                      d=\"M9 12h6m-6 4h6m2 5H7\n                         a2 2 0 01-2-2V5a2 2 0 012-2h5.586\n                         a1 1 0 01.707.293l5.414 5.414\n                         a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n              </svg>\n            </div>\n            <div class=\"file-preview-details flex-1\">\n              <div class=\"file-preview-name truncate font-medium\" title=\"${filename}\">${filename}</div>\n              <div class=\"file-preview-info text-xs text-base-content/60\">\n                <span class=\"file-preview-type\">${filetype}</span>\n                <span class=\"file-preview-size\">• ${filesize}</span>\n              </div>\n            </div>\n            <div class=\"file-preview-actions\">\n              <button type=\"button\" class=\"file-preview-delete btn btn-ghost btn-square btn-xs\" aria-label=\"Remove file\">\n                <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"h-4 w-4\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                        d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n          </li>\n        </template>\n\n        <!-- Status icons template -->\n        <template id=\"upload-status-icons\">\n          <!-- Various icons for success, error, PDF, etc. -->\n        </template>\n\n        <!-- Files list (loaded from server) -->\n        <div id=\"filesList\" class=\"grid gap-3 mt-6\">\n          <!-- Display existing files here -->\n        </div>\n      </div>\n\n      <!-- CHAT TAB -->\n      <div id=\"chatTab\" class=\"tab-pane\" role=\"tabpanel\" aria-labelledby=\"tab-chat\">\n        <!-- Chat UI Container - Will be populated by chatManager -->\n        <div id=\"chatUIContainer\">\n          <!-- chat_ui.html will be injected here -->\n        </div>\n\n        <!-- Recent Conversations section -->\n        <div class=\"mt-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"font-semibold\">Recent Conversations</h3>\n            <button id=\"newConversationBtn\" class=\"btn btn-primary btn-sm min-w-[44px] min-h-[44px] focus:outline-none focus:ring-2 focus:ring-primary\" aria-label=\"Start new conversation\">\n              <svg class=\"w-5 h-5 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                      d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              New\n            </button>\n          </div>\n          <div id=\"conversationsList\" class=\"space-y-2 p-2 bg-base-200 rounded\">\n            <!-- Conversation list items go here -->\n          </div>\n        </div>\n      </div>\n\n      <!-- KNOWLEDGE TAB -->\n      <div id=\"knowledgeTab\" class=\"tab-pane hidden\" role=\"tabpanel\" aria-labelledby=\"tab-knowledge\">\n        <!-- Knowledge Base Active Section -->\n        <div id=\"knowledgeStatus\" class=\"space-y-4\">\n          <!-- KB Status Header -->\n          <div class=\"flex items-center justify-between p-4 bg-base-100 rounded-lg border\">\n            <div class=\"flex items-center gap-3\">\n              <h3 class=\"font-semibold\">Knowledge Base</h3>\n              <span id=\"kbStatusBadge\" class=\"badge badge-success badge-sm\">Active</span>\n            </div>\n            <div class=\"flex items-center gap-2\">\n              <label class=\"flex items-center gap-2 cursor-pointer\">\n                <input id=\"kbToggle\" type=\"checkbox\" class=\"toggle toggle-success\" checked />\n                <span class=\"text-sm\">Enable</span>\n              </label>\n              <button id=\"settingsButton\" class=\"btn btn-ghost btn-sm btn-square\" aria-label=\"KB Settings\">\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"></path>\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          <!-- KB Info Cards -->\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div class=\"stat bg-base-100 rounded-lg p-4 text-center\">\n              <div class=\"stat-title text-sm\">Documents</div>\n              <div id=\"kbDocCount\" class=\"stat-value text-2xl font-bold text-info\">0</div>\n            </div>\n            <div class=\"stat bg-base-100 rounded-lg p-4 text-center\">\n              <div class=\"stat-title text-sm\">Chunks</div>\n              <div id=\"kbChunkCount\" class=\"stat-value text-2xl font-bold text-success\">0</div>\n            </div>\n            <div class=\"stat bg-base-100 rounded-lg p-4 text-center\">\n              <div class=\"stat-title text-sm\">Model</div>\n              <div id=\"kbModelDisplay\" class=\"stat-value text-lg font-bold text-accent\">text-embedding-3-small</div>\n            </div>\n          </div>\n\n          <!-- KB Details -->\n          <div class=\"bg-base-100 rounded-lg p-4 space-y-3\">\n            <h4 class=\"font-medium\">Details</h4>\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span class=\"text-base-content/60\">Name:</span>\n                <span id=\"knowledgeBaseName\" class=\"ml-2\">Project Knowledge Base</span>\n              </div>\n              <div>\n                <span class=\"text-base-content/60\">Version:</span>\n                <span id=\"kbVersionDisplay\" class=\"ml-2\">v1</span>\n              </div>\n              <div>\n                <span class=\"text-base-content/60\">Last Used:</span>\n                <span id=\"kbLastUsedDisplay\" class=\"ml-2\">Never</span>\n              </div>\n              <div>\n                <span class=\"text-base-content/60\">Size:</span>\n                <span id=\"knowledgeFileSize\" class=\"ml-2\">0 B</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Actions -->\n          <div class=\"flex gap-2\">\n            <button id=\"reprocessButton\" class=\"btn btn-outline btn-sm\">\n              <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\n              </svg>\n              Reprocess Files\n            </button>\n          </div>\n\n          <!-- Knowledge Base Files Section -->\n          <div id=\"knowledgeBaseFilesSection\" class=\"space-y-4\">\n            <h4 class=\"font-medium\">Knowledge Base Files</h4>\n            <div id=\"knowledgeBaseFilesListContainer\" class=\"bg-base-200 rounded-lg p-4\">\n              <p class=\"text-center text-base-content/60\">Loading files...</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Knowledge Base Inactive Section -->\n        <div id=\"knowledgeBaseInactive\" class=\"hidden p-6 text-center\">\n          <div class=\"space-y-4\">\n            <svg class=\"w-16 h-16 mx-auto text-base-content/30\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"></path>\n            </svg>\n            <h3 class=\"text-lg font-medium\">Knowledge Base Not Active</h3>\n            <p class=\"text-base-content/60\">Set up a knowledge base to enable AI-powered search and chat features.</p>\n            <button id=\"setupButton\" class=\"btn btn-primary\">\n              <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\n              </svg>\n              Setup Knowledge Base\n            </button>\n          </div>\n        </div>\n\n      </div>\n\n      <!-- SETTINGS TAB -->\n      <div id=\"settingsTab\" class=\"tab-pane hidden\" role=\"tabpanel\" aria-labelledby=\"tab-settings\">\n        <div class=\"space-y-6\">\n\n          <!-- Project Settings Card -->\n          <div class=\"card p-3 bg-base-100 rounded shadow\">\n            <h3 class=\"font-semibold mb-3\">Project Settings</h3>\n            <div class=\"space-y-4\">\n              <div>\n                <label class=\"block text-sm font-medium mb-1\">Project Name</label>\n                <input id=\"projectNameInput\" type=\"text\" class=\"input w-full\" placeholder=\"Enter project name...\">\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium mb-1\">Description</label>\n                <textarea id=\"projectDescriptionInput\" class=\"textarea textarea-bordered w-full\" rows=\"3\"\n                          placeholder=\"Project description\"></textarea>\n              </div>\n            </div>\n          </div>\n\n          <!-- Danger Zone Card -->\n          <div class=\"card p-3 bg-base-100 border border-error/20 rounded shadow\">\n            <h3 class=\"font-semibold text-error mb-3\">Danger Zone</h3>\n            <div class=\"space-y-3\">\n              <!-- Archive Button -->\n              <button id=\"archiveProjectBtn\" class=\"btn btn-warning w-full\">\n                <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                        d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4\n                           M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8\n                           m-9 4h4\" />\n                </svg>\n                Archive Project\n              </button>\n              <!-- Delete Button -->\n              <button id=\"deleteProjectBtn\" class=\"btn btn-error w-full\">\n                <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862\n                           a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6\n                           m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                </svg>\n                Delete Project\n              </button>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n    </div>\n  <!-- Enhanced FAB with Context-Aware Icons (Mobile Only) -->\n<button id=\"projectFab\"\n  class=\"fixed bottom-20 right-4 w-14 h-14 bg-primary text-primary-content rounded-full shadow-lg lg:hidden\"\n  aria-label=\"Quick action\">\n  <svg class=\"icon-md\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n  </svg>\n</button>\n"
          },
          "redirectURL": "",
          "headersSize": 1077,
          "bodySize": 28086,
          "_transferSize": 29163,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:33.416Z",
        "time": 43.62599999876693,
        "timings": {
          "blocked": 1.6859999966118484,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.14100000000000001,
          "wait": 36.238000004030766,
          "receive": 5.560999998124316,
          "_blocked_queueing": 1.3869999966118485,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126370",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 203349
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55796
              },
              {
                "functionName": "add",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17847
              },
              {
                "functionName": "s",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55787
              },
              {
                "functionName": "In",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201641
              },
              {
                "functionName": "sendSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 198325
              },
              {
                "functionName": "captureSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 196510
              },
              {
                "functionName": "Ve",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29333
              },
              {
                "functionName": "Ye",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29198
              },
              {
                "functionName": "Ge",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29083
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 217760
              },
              {
                "functionName": "st",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 7533
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 12798
              },
              {
                "functionName": "pushState",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 226,
                "columnNumber": 27
              },
              {
                "functionName": "updateUrlParams",
                "scriptId": "389",
                "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                "lineNumber": 101,
                "columnNumber": 25
              },
              {
                "functionName": "navigateTo",
                "scriptId": "389",
                "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                "lineNumber": 223,
                "columnNumber": 8
              },
              {
                "functionName": "navigateToProjectList",
                "scriptId": "389",
                "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                "lineNumber": 284,
                "columnNumber": 11
              },
              {
                "functionName": "proceed",
                "scriptId": "390",
                "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                "lineNumber": 1386,
                "columnNumber": 31
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "handleAuthStateChange",
                  "scriptId": "390",
                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                  "lineNumber": 1420,
                  "columnNumber": 23
                },
                {
                  "functionName": "",
                  "scriptId": "390",
                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                  "lineNumber": 1339,
                  "columnNumber": 24
                },
                {
                  "functionName": "",
                  "scriptId": "410",
                  "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                  "lineNumber": 19,
                  "columnNumber": 18
                },
                {
                  "functionName": "wrapped",
                  "scriptId": "409",
                  "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                  "lineNumber": 142,
                  "columnNumber": 35
                },
                {
                  "functionName": "sentryWrapped",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 192306
                },
                {
                  "functionName": "broadcastAuth",
                  "scriptId": "397",
                  "url": "http://127.0.0.1:8000/static/js/auth.js",
                  "lineNumber": 359,
                  "columnNumber": 16
                },
                {
                  "functionName": "verifyAuthState",
                  "scriptId": "397",
                  "url": "http://127.0.0.1:8000/static/js/auth.js",
                  "lineNumber": 481,
                  "columnNumber": 8
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "init",
                    "scriptId": "397",
                    "url": "http://127.0.0.1:8000/static/js/auth.js",
                    "lineNumber": 918,
                    "columnNumber": 25
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "initializeAuthSystem",
                      "scriptId": "390",
                      "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                      "lineNumber": 1358,
                      "columnNumber": 27
                    }
                  ],
                  "parent": {
                    "description": "await",
                    "callFrames": [
                      {
                        "functionName": "",
                        "scriptId": "390",
                        "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                        "lineNumber": 2091,
                        "columnNumber": 49
                      },
                      {
                        "functionName": "phaseRunner",
                        "scriptId": "390",
                        "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                        "lineNumber": 2065,
                        "columnNumber": 37
                      },
                      {
                        "functionName": "initializeApp",
                        "scriptId": "390",
                        "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                        "lineNumber": 2091,
                        "columnNumber": 14
                      }
                    ],
                    "parent": {
                      "description": "await",
                      "callFrames": [
                        {
                          "functionName": "",
                          "scriptId": "370",
                          "url": "http://127.0.0.1:8000/static/js/app.js",
                          "lineNumber": 97,
                          "columnNumber": 8
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://o4508070823395328.ingest.us.sentry.io/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": "o4508070823395328.ingest.us.sentry.io"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "495"
            },
            {
              "name": "content-type",
              "value": "text/plain;charset=UTF-8"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [
            {
              "name": "sentry_key",
              "value": "b03711f63d1160f48dcaeda3edae14ac"
            },
            {
              "name": "sentry_version",
              "value": "7"
            },
            {
              "name": "sentry_client",
              "value": "sentry.javascript.browser%2F7.100.0"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 495,
          "postData": {
            "mimeType": "text/plain;charset=UTF-8",
            "text": "{\"sent_at\":\"2025-06-08T14:49:33.489Z\",\"sdk\":{\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\"}}\n{\"type\":\"session\"}\n{\"sid\":\"cff963c480b345f6b97e1679fd68d374\",\"init\":false,\"started\":\"2025-06-08T14:49:32.337Z\",\"timestamp\":\"2025-06-08T14:49:33.489Z\",\"status\":\"exited\",\"errors\":0,\"attrs\":{\"release\":\"azure_chatapp@1.0.0+dev\",\"environment\":\"production\",\"user_agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\"}}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "x-sentry-error,x-sentry-rate-limits,retry-after"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:30 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "vary",
              "value": "origin, access-control-request-method, access-control-request-headers"
            },
            {
              "name": "via",
              "value": "1.1 google"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "application/json",
            "text": "{}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 20,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "34.120.195.249",
        "startedDateTime": "2025-06-08T14:49:33.489Z",
        "time": 58.40399999578949,
        "timings": {
          "blocked": 1.1200000008102506,
          "dns": 0,
          "ssl": -1,
          "connect": 0,
          "send": 0.563,
          "wait": 55.80799999876227,
          "receive": 0.9129999962169677,
          "_blocked_queueing": 1.1200000008102506,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126370",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 203349
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55796
              },
              {
                "functionName": "add",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17847
              },
              {
                "functionName": "s",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55787
              },
              {
                "functionName": "In",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201641
              },
              {
                "functionName": "sendSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 198325
              },
              {
                "functionName": "captureSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 196510
              },
              {
                "functionName": "Ve",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29333
              },
              {
                "functionName": "Qe",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29376
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 217784
              },
              {
                "functionName": "st",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 7533
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 12798
              },
              {
                "functionName": "pushState",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 226,
                "columnNumber": 27
              },
              {
                "functionName": "updateUrlParams",
                "scriptId": "389",
                "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                "lineNumber": 101,
                "columnNumber": 25
              },
              {
                "functionName": "navigateTo",
                "scriptId": "389",
                "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                "lineNumber": 223,
                "columnNumber": 8
              },
              {
                "functionName": "navigateToProjectList",
                "scriptId": "389",
                "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                "lineNumber": 284,
                "columnNumber": 11
              },
              {
                "functionName": "proceed",
                "scriptId": "390",
                "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                "lineNumber": 1386,
                "columnNumber": 31
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "handleAuthStateChange",
                  "scriptId": "390",
                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                  "lineNumber": 1420,
                  "columnNumber": 23
                },
                {
                  "functionName": "",
                  "scriptId": "390",
                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                  "lineNumber": 1339,
                  "columnNumber": 24
                },
                {
                  "functionName": "",
                  "scriptId": "410",
                  "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                  "lineNumber": 19,
                  "columnNumber": 18
                },
                {
                  "functionName": "wrapped",
                  "scriptId": "409",
                  "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                  "lineNumber": 142,
                  "columnNumber": 35
                },
                {
                  "functionName": "sentryWrapped",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 192306
                },
                {
                  "functionName": "broadcastAuth",
                  "scriptId": "397",
                  "url": "http://127.0.0.1:8000/static/js/auth.js",
                  "lineNumber": 359,
                  "columnNumber": 16
                },
                {
                  "functionName": "verifyAuthState",
                  "scriptId": "397",
                  "url": "http://127.0.0.1:8000/static/js/auth.js",
                  "lineNumber": 481,
                  "columnNumber": 8
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "init",
                    "scriptId": "397",
                    "url": "http://127.0.0.1:8000/static/js/auth.js",
                    "lineNumber": 918,
                    "columnNumber": 25
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "initializeAuthSystem",
                      "scriptId": "390",
                      "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                      "lineNumber": 1358,
                      "columnNumber": 27
                    }
                  ],
                  "parent": {
                    "description": "await",
                    "callFrames": [
                      {
                        "functionName": "",
                        "scriptId": "390",
                        "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                        "lineNumber": 2091,
                        "columnNumber": 49
                      },
                      {
                        "functionName": "phaseRunner",
                        "scriptId": "390",
                        "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                        "lineNumber": 2065,
                        "columnNumber": 37
                      },
                      {
                        "functionName": "initializeApp",
                        "scriptId": "390",
                        "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                        "lineNumber": 2091,
                        "columnNumber": 14
                      }
                    ],
                    "parent": {
                      "description": "await",
                      "callFrames": [
                        {
                          "functionName": "",
                          "scriptId": "370",
                          "url": "http://127.0.0.1:8000/static/js/app.js",
                          "lineNumber": 97,
                          "columnNumber": 8
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://o4508070823395328.ingest.us.sentry.io/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": "o4508070823395328.ingest.us.sentry.io"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "490"
            },
            {
              "name": "content-type",
              "value": "text/plain;charset=UTF-8"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [
            {
              "name": "sentry_key",
              "value": "b03711f63d1160f48dcaeda3edae14ac"
            },
            {
              "name": "sentry_version",
              "value": "7"
            },
            {
              "name": "sentry_client",
              "value": "sentry.javascript.browser%2F7.100.0"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 490,
          "postData": {
            "mimeType": "text/plain;charset=UTF-8",
            "text": "{\"sent_at\":\"2025-06-08T14:49:33.490Z\",\"sdk\":{\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\"}}\n{\"type\":\"session\"}\n{\"sid\":\"47087bb2bc3f4c94bbaad82e5b475c49\",\"init\":true,\"started\":\"2025-06-08T14:49:33.489Z\",\"timestamp\":\"2025-06-08T14:49:33.489Z\",\"status\":\"ok\",\"errors\":0,\"attrs\":{\"release\":\"azure_chatapp@1.0.0+dev\",\"environment\":\"production\",\"user_agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\"}}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "x-sentry-error,x-sentry-rate-limits,retry-after"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:30 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "vary",
              "value": "origin, access-control-request-method, access-control-request-headers"
            },
            {
              "name": "via",
              "value": "1.1 google"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "application/json",
            "text": "{}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 20,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "34.120.195.249",
        "startedDateTime": "2025-06-08T14:49:33.490Z",
        "time": 58.00200000521727,
        "timings": {
          "blocked": 1.437000002341345,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.15300000000000002,
          "wait": 55.53399999667983,
          "receive": 0.8780000061960891,
          "_blocked_queueing": 1.189000002341345,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126370",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 203349
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55796
              },
              {
                "functionName": "add",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17847
              },
              {
                "functionName": "s",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55787
              },
              {
                "functionName": "In",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201641
              },
              {
                "functionName": "sendSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 198325
              },
              {
                "functionName": "captureSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 196510
              },
              {
                "functionName": "Ve",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29333
              },
              {
                "functionName": "Ye",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29198
              },
              {
                "functionName": "Ge",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29083
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 217760
              },
              {
                "functionName": "st",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 7533
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 12798
              },
              {
                "functionName": "removeSearchParam",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 162,
                "columnNumber": 51
              },
              {
                "functionName": "showProjectList",
                "scriptId": "400",
                "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                "lineNumber": 324,
                "columnNumber": 47
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "runInitialize",
                  "scriptId": "400",
                  "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                  "lineNumber": 224,
                  "columnNumber": 25
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "initialize",
                    "scriptId": "400",
                    "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                    "lineNumber": 271,
                    "columnNumber": 12
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "createAndRegisterUIComponents",
                      "scriptId": "390",
                      "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                      "lineNumber": 1785,
                      "columnNumber": 30
                    }
                  ],
                  "parent": {
                    "description": "await",
                    "callFrames": [
                      {
                        "functionName": "initializeUIComponents",
                        "scriptId": "390",
                        "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                        "lineNumber": 1961,
                        "columnNumber": 22
                      }
                    ],
                    "parent": {
                      "description": "await",
                      "callFrames": [
                        {
                          "functionName": "",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 2092,
                          "columnNumber": 45
                        },
                        {
                          "functionName": "phaseRunner",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 2065,
                          "columnNumber": 37
                        },
                        {
                          "functionName": "initializeApp",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 2092,
                          "columnNumber": 14
                        }
                      ],
                      "parent": {
                        "description": "await",
                        "callFrames": [
                          {
                            "functionName": "",
                            "scriptId": "370",
                            "url": "http://127.0.0.1:8000/static/js/app.js",
                            "lineNumber": 97,
                            "columnNumber": 8
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://o4508070823395328.ingest.us.sentry.io/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": "o4508070823395328.ingest.us.sentry.io"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "495"
            },
            {
              "name": "content-type",
              "value": "text/plain;charset=UTF-8"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [
            {
              "name": "sentry_key",
              "value": "b03711f63d1160f48dcaeda3edae14ac"
            },
            {
              "name": "sentry_version",
              "value": "7"
            },
            {
              "name": "sentry_client",
              "value": "sentry.javascript.browser%2F7.100.0"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 495,
          "postData": {
            "mimeType": "text/plain;charset=UTF-8",
            "text": "{\"sent_at\":\"2025-06-08T14:49:33.519Z\",\"sdk\":{\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\"}}\n{\"type\":\"session\"}\n{\"sid\":\"47087bb2bc3f4c94bbaad82e5b475c49\",\"init\":false,\"started\":\"2025-06-08T14:49:33.489Z\",\"timestamp\":\"2025-06-08T14:49:33.519Z\",\"status\":\"exited\",\"errors\":0,\"attrs\":{\"release\":\"azure_chatapp@1.0.0+dev\",\"environment\":\"production\",\"user_agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\"}}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "x-sentry-error,x-sentry-rate-limits,retry-after"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:30 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "vary",
              "value": "origin, access-control-request-method, access-control-request-headers"
            },
            {
              "name": "via",
              "value": "1.1 google"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "application/json",
            "text": "{}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 20,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "34.120.195.249",
        "startedDateTime": "2025-06-08T14:49:33.520Z",
        "time": 75.48600000154693,
        "timings": {
          "blocked": 23.569000008516014,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.16500000000000004,
          "wait": 51.25399999906309,
          "receive": 0.4979999939678237,
          "_blocked_queueing": 23.194000008516014,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126370",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 203349
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55796
              },
              {
                "functionName": "add",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17847
              },
              {
                "functionName": "s",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55787
              },
              {
                "functionName": "In",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201641
              },
              {
                "functionName": "sendSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 198325
              },
              {
                "functionName": "captureSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 196510
              },
              {
                "functionName": "Ve",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29333
              },
              {
                "functionName": "Qe",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29376
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 217784
              },
              {
                "functionName": "st",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 7533
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 12798
              },
              {
                "functionName": "removeSearchParam",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 162,
                "columnNumber": 51
              },
              {
                "functionName": "showProjectList",
                "scriptId": "400",
                "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                "lineNumber": 324,
                "columnNumber": 47
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "runInitialize",
                  "scriptId": "400",
                  "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                  "lineNumber": 224,
                  "columnNumber": 25
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "initialize",
                    "scriptId": "400",
                    "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                    "lineNumber": 271,
                    "columnNumber": 12
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "createAndRegisterUIComponents",
                      "scriptId": "390",
                      "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                      "lineNumber": 1785,
                      "columnNumber": 30
                    }
                  ],
                  "parent": {
                    "description": "await",
                    "callFrames": [
                      {
                        "functionName": "initializeUIComponents",
                        "scriptId": "390",
                        "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                        "lineNumber": 1961,
                        "columnNumber": 22
                      }
                    ],
                    "parent": {
                      "description": "await",
                      "callFrames": [
                        {
                          "functionName": "",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 2092,
                          "columnNumber": 45
                        },
                        {
                          "functionName": "phaseRunner",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 2065,
                          "columnNumber": 37
                        },
                        {
                          "functionName": "initializeApp",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 2092,
                          "columnNumber": 14
                        }
                      ],
                      "parent": {
                        "description": "await",
                        "callFrames": [
                          {
                            "functionName": "",
                            "scriptId": "370",
                            "url": "http://127.0.0.1:8000/static/js/app.js",
                            "lineNumber": 97,
                            "columnNumber": 8
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://o4508070823395328.ingest.us.sentry.io/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": "o4508070823395328.ingest.us.sentry.io"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "490"
            },
            {
              "name": "content-type",
              "value": "text/plain;charset=UTF-8"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [
            {
              "name": "sentry_key",
              "value": "b03711f63d1160f48dcaeda3edae14ac"
            },
            {
              "name": "sentry_version",
              "value": "7"
            },
            {
              "name": "sentry_client",
              "value": "sentry.javascript.browser%2F7.100.0"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 490,
          "postData": {
            "mimeType": "text/plain;charset=UTF-8",
            "text": "{\"sent_at\":\"2025-06-08T14:49:33.520Z\",\"sdk\":{\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\"}}\n{\"type\":\"session\"}\n{\"sid\":\"c3e4dce1ac154d57832b1d170ea01c98\",\"init\":true,\"started\":\"2025-06-08T14:49:33.519Z\",\"timestamp\":\"2025-06-08T14:49:33.519Z\",\"status\":\"ok\",\"errors\":0,\"attrs\":{\"release\":\"azure_chatapp@1.0.0+dev\",\"environment\":\"production\",\"user_agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\"}}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "x-sentry-error,x-sentry-rate-limits,retry-after"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:30 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "vary",
              "value": "origin, access-control-request-method, access-control-request-headers"
            },
            {
              "name": "via",
              "value": "1.1 google"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "application/json",
            "text": "{}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 20,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "34.120.195.249",
        "startedDateTime": "2025-06-08T14:49:33.520Z",
        "time": 90.55500000249594,
        "timings": {
          "blocked": 40.770000003814694,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.144,
          "wait": 49.12200000488013,
          "receive": 0.5189999938011169,
          "_blocked_queueing": 40.5460000038147,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126370",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 203349
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55796
              },
              {
                "functionName": "add",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17847
              },
              {
                "functionName": "s",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55787
              },
              {
                "functionName": "In",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201641
              },
              {
                "functionName": "sendSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 198325
              },
              {
                "functionName": "captureSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 196510
              },
              {
                "functionName": "Ve",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29333
              },
              {
                "functionName": "Ye",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29198
              },
              {
                "functionName": "Ge",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29083
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 217760
              },
              {
                "functionName": "st",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 7533
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 12798
              },
              {
                "functionName": "removeSearchParam",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 162,
                "columnNumber": 51
              },
              {
                "functionName": "showProjectList",
                "scriptId": "400",
                "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                "lineNumber": 325,
                "columnNumber": 47
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "runInitialize",
                  "scriptId": "400",
                  "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                  "lineNumber": 224,
                  "columnNumber": 25
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "initialize",
                    "scriptId": "400",
                    "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                    "lineNumber": 271,
                    "columnNumber": 12
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "createAndRegisterUIComponents",
                      "scriptId": "390",
                      "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                      "lineNumber": 1785,
                      "columnNumber": 30
                    }
                  ],
                  "parent": {
                    "description": "await",
                    "callFrames": [
                      {
                        "functionName": "initializeUIComponents",
                        "scriptId": "390",
                        "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                        "lineNumber": 1961,
                        "columnNumber": 22
                      }
                    ],
                    "parent": {
                      "description": "await",
                      "callFrames": [
                        {
                          "functionName": "",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 2092,
                          "columnNumber": 45
                        },
                        {
                          "functionName": "phaseRunner",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 2065,
                          "columnNumber": 37
                        },
                        {
                          "functionName": "initializeApp",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 2092,
                          "columnNumber": 14
                        }
                      ],
                      "parent": {
                        "description": "await",
                        "callFrames": [
                          {
                            "functionName": "",
                            "scriptId": "370",
                            "url": "http://127.0.0.1:8000/static/js/app.js",
                            "lineNumber": 97,
                            "columnNumber": 8
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://o4508070823395328.ingest.us.sentry.io/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": "o4508070823395328.ingest.us.sentry.io"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "495"
            },
            {
              "name": "content-type",
              "value": "text/plain;charset=UTF-8"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [
            {
              "name": "sentry_key",
              "value": "b03711f63d1160f48dcaeda3edae14ac"
            },
            {
              "name": "sentry_version",
              "value": "7"
            },
            {
              "name": "sentry_client",
              "value": "sentry.javascript.browser%2F7.100.0"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 495,
          "postData": {
            "mimeType": "text/plain;charset=UTF-8",
            "text": "{\"sent_at\":\"2025-06-08T14:49:33.523Z\",\"sdk\":{\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\"}}\n{\"type\":\"session\"}\n{\"sid\":\"c3e4dce1ac154d57832b1d170ea01c98\",\"init\":false,\"started\":\"2025-06-08T14:49:33.519Z\",\"timestamp\":\"2025-06-08T14:49:33.523Z\",\"status\":\"exited\",\"errors\":0,\"attrs\":{\"release\":\"azure_chatapp@1.0.0+dev\",\"environment\":\"production\",\"user_agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\"}}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "x-sentry-error,x-sentry-rate-limits,retry-after"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:30 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "vary",
              "value": "origin, access-control-request-method, access-control-request-headers"
            },
            {
              "name": "via",
              "value": "1.1 google"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "application/json",
            "text": "{}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 20,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "34.120.195.249",
        "startedDateTime": "2025-06-08T14:49:33.523Z",
        "time": 93.95100000256207,
        "timings": {
          "blocked": 45.41000000012852,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.24800000000000005,
          "wait": 47.9119999971427,
          "receive": 0.38100000529084355,
          "_blocked_queueing": 45.11300000012852,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126370",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 203349
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55796
              },
              {
                "functionName": "add",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17847
              },
              {
                "functionName": "s",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55787
              },
              {
                "functionName": "In",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201641
              },
              {
                "functionName": "sendSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 198325
              },
              {
                "functionName": "captureSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 196510
              },
              {
                "functionName": "Ve",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29333
              },
              {
                "functionName": "Qe",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29376
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 217784
              },
              {
                "functionName": "st",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 7533
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 12798
              },
              {
                "functionName": "removeSearchParam",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 162,
                "columnNumber": 51
              },
              {
                "functionName": "showProjectList",
                "scriptId": "400",
                "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                "lineNumber": 325,
                "columnNumber": 47
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "runInitialize",
                  "scriptId": "400",
                  "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                  "lineNumber": 224,
                  "columnNumber": 25
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "initialize",
                    "scriptId": "400",
                    "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                    "lineNumber": 271,
                    "columnNumber": 12
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "createAndRegisterUIComponents",
                      "scriptId": "390",
                      "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                      "lineNumber": 1785,
                      "columnNumber": 30
                    }
                  ],
                  "parent": {
                    "description": "await",
                    "callFrames": [
                      {
                        "functionName": "initializeUIComponents",
                        "scriptId": "390",
                        "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                        "lineNumber": 1961,
                        "columnNumber": 22
                      }
                    ],
                    "parent": {
                      "description": "await",
                      "callFrames": [
                        {
                          "functionName": "",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 2092,
                          "columnNumber": 45
                        },
                        {
                          "functionName": "phaseRunner",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 2065,
                          "columnNumber": 37
                        },
                        {
                          "functionName": "initializeApp",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 2092,
                          "columnNumber": 14
                        }
                      ],
                      "parent": {
                        "description": "await",
                        "callFrames": [
                          {
                            "functionName": "",
                            "scriptId": "370",
                            "url": "http://127.0.0.1:8000/static/js/app.js",
                            "lineNumber": 97,
                            "columnNumber": 8
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://o4508070823395328.ingest.us.sentry.io/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": "o4508070823395328.ingest.us.sentry.io"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "490"
            },
            {
              "name": "content-type",
              "value": "text/plain;charset=UTF-8"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [
            {
              "name": "sentry_key",
              "value": "b03711f63d1160f48dcaeda3edae14ac"
            },
            {
              "name": "sentry_version",
              "value": "7"
            },
            {
              "name": "sentry_client",
              "value": "sentry.javascript.browser%2F7.100.0"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 490,
          "postData": {
            "mimeType": "text/plain;charset=UTF-8",
            "text": "{\"sent_at\":\"2025-06-08T14:49:33.524Z\",\"sdk\":{\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\"}}\n{\"type\":\"session\"}\n{\"sid\":\"1b087924801b4cb7bc24f74a431b58d4\",\"init\":true,\"started\":\"2025-06-08T14:49:33.523Z\",\"timestamp\":\"2025-06-08T14:49:33.523Z\",\"status\":\"ok\",\"errors\":0,\"attrs\":{\"release\":\"azure_chatapp@1.0.0+dev\",\"environment\":\"production\",\"user_agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\"}}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "x-sentry-error,x-sentry-rate-limits,retry-after"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:30 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "vary",
              "value": "origin, access-control-request-method, access-control-request-headers"
            },
            {
              "name": "via",
              "value": "1.1 google"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "application/json",
            "text": "{}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 20,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "34.120.195.249",
        "startedDateTime": "2025-06-08T14:49:33.524Z",
        "time": 96.63200000068173,
        "timings": {
          "blocked": 45.20999999791011,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.174,
          "wait": 50.79799999594968,
          "receive": 0.45000000682193786,
          "_blocked_queueing": 44.95599999791011,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "other",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/favicon.ico",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "etag",
              "value": "\"d24d588668ef1aeab5d2552429ab7688\""
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "0"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "content-type",
              "value": "image/vnd.microsoft.icon"
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "image/vnd.microsoft.icon",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false,
          "_fulfilledBy": "(disk cache)"
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:33.533Z",
        "time": 25.219999995897524,
        "timings": {
          "blocked": 24.546999999524093,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.30999999717622995,
          "receive": 0.36299999919719994,
          "_blocked_queueing": 24.413999999524094,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "other",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/favicon.ico",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "etag",
              "value": "\"d24d588668ef1aeab5d2552429ab7688\""
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "0"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "content-type",
              "value": "image/vnd.microsoft.icon"
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "image/vnd.microsoft.icon",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false,
          "_fulfilledBy": "(disk cache)"
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:33.583Z",
        "time": 13.154000000213273,
        "timings": {
          "blocked": 11.63799999883119,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 1.1599999972786754,
          "receive": 0.35600000410340726,
          "_blocked_queueing": 11.49499999883119,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "fetchImpl",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 125,
                "columnNumber": 34
              },
              {
                "functionName": "",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 186,
                "columnNumber": 36
              },
              {
                "functionName": "apiRequest",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 300,
                "columnNumber": 6
              },
              {
                "functionName": "_req",
                "scriptId": "381",
                "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                "lineNumber": 328,
                "columnNumber": 36
              },
              {
                "functionName": "",
                "scriptId": "381",
                "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                "lineNumber": 492,
                "columnNumber": 35
              },
              {
                "functionName": "sentryWrapped",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 192306
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 212752
                },
                {
                  "functionName": "",
                  "scriptId": "381",
                  "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                  "lineNumber": 459,
                  "columnNumber": 53
                },
                {
                  "functionName": "loadProjects",
                  "scriptId": "381",
                  "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                  "lineNumber": 458,
                  "columnNumber": 13
                },
                {
                  "functionName": "_executeProjectLoad",
                  "scriptId": "400",
                  "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                  "lineNumber": 496,
                  "columnNumber": 9
                },
                {
                  "functionName": "",
                  "scriptId": "400",
                  "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                  "lineNumber": 485,
                  "columnNumber": 48
                },
                {
                  "functionName": "sentryWrapped",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 192306
                }
              ],
              "parent": {
                "description": "setTimeout",
                "callFrames": [
                  {
                    "functionName": "",
                    "scriptId": "373",
                    "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                    "lineNumber": 1,
                    "columnNumber": 212752
                  },
                  {
                    "functionName": "setTimeout",
                    "scriptId": "380",
                    "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                    "lineNumber": 178,
                    "columnNumber": 26
                  },
                  {
                    "functionName": "_loadProjects",
                    "scriptId": "400",
                    "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                    "lineNumber": 485,
                    "columnNumber": 26
                  },
                  {
                    "functionName": "showProjectList",
                    "scriptId": "400",
                    "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                    "lineNumber": 344,
                    "columnNumber": 13
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "runInitialize",
                      "scriptId": "400",
                      "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                      "lineNumber": 224,
                      "columnNumber": 25
                    }
                  ],
                  "parent": {
                    "description": "await",
                    "callFrames": [
                      {
                        "functionName": "initialize",
                        "scriptId": "400",
                        "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                        "lineNumber": 271,
                        "columnNumber": 12
                      }
                    ],
                    "parent": {
                      "description": "await",
                      "callFrames": [
                        {
                          "functionName": "createAndRegisterUIComponents",
                          "scriptId": "390",
                          "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                          "lineNumber": 1785,
                          "columnNumber": 30
                        }
                      ],
                      "parent": {
                        "description": "await",
                        "callFrames": [
                          {
                            "functionName": "initializeUIComponents",
                            "scriptId": "390",
                            "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                            "lineNumber": 1961,
                            "columnNumber": 22
                          }
                        ],
                        "parent": {
                          "description": "await",
                          "callFrames": [
                            {
                              "functionName": "",
                              "scriptId": "390",
                              "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                              "lineNumber": 2092,
                              "columnNumber": 45
                            },
                            {
                              "functionName": "phaseRunner",
                              "scriptId": "390",
                              "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                              "lineNumber": 2065,
                              "columnNumber": 37
                            },
                            {
                              "functionName": "initializeApp",
                              "scriptId": "390",
                              "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                              "lineNumber": 2092,
                              "columnNumber": 14
                            }
                          ],
                          "parent": {
                            "description": "await",
                            "callFrames": [
                              {
                                "functionName": "",
                                "scriptId": "370",
                                "url": "http://127.0.0.1:8000/static/js/app.js",
                                "lineNumber": 97,
                                "columnNumber": 8
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/api/user/projects",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=51d198f08c7744fa9f827fb7456cff1c,sentry-sample_rate=0.1,sentry-sampled=true"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "51d198f08c7744fa9f827fb7456cff1c-898d85c33245096b-1"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1732,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "223"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:29 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 223,
            "mimeType": "application/json",
            "compression": 0,
            "text": "{\"projects\":[{\"id\":\"f304c5f9-fd3d-4a21-9073-ce455971943b\",\"title\":\"Project One\",\"created_at\":\"2025-05-17T06:23:39.363153\",\"updated_at\":\"2025-06-02T00:34:09.527602\"}],\"last_project_id\":\"f304c5f9-fd3d-4a21-9073-ce455971943b\"}"
          },
          "redirectURL": "",
          "headersSize": 932,
          "bodySize": 223,
          "_transferSize": 1155,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:33.951Z",
        "time": 54.531000001588836,
        "timings": {
          "blocked": 1.2790000066859648,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.11399999999999999,
          "wait": 52.56899999872688,
          "receive": 0.5689999961759895,
          "_blocked_queueing": 0.7290000066859648,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126370",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 203349
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55796
              },
              {
                "functionName": "add",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17847
              },
              {
                "functionName": "s",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55787
              },
              {
                "functionName": "In",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201641
              },
              {
                "functionName": "sendEvent",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 198015
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201231
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 16990
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17577
              },
              {
                "functionName": "p",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17531
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17074
              },
              {
                "functionName": "Xt",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 16889
              },
              {
                "functionName": "then",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 16943
              },
              {
                "functionName": "On",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 200923
              },
              {
                "functionName": "Tn",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 199862
              },
              {
                "functionName": "captureEvent",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 196425
              },
              {
                "functionName": "captureEvent",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 35614
              },
              {
                "functionName": "captureEvent",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 37263
              },
              {
                "functionName": "end",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 46838
              },
              {
                "functionName": "end",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 49421
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 50106
              },
              {
                "functionName": "sentryWrapped",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 192306
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 212752
                },
                {
                  "functionName": "Rt",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 50019
                },
                {
                  "functionName": "bt",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 50379
                },
                {
                  "functionName": "n",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 49572
                },
                {
                  "functionName": "t.end",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 48359
                },
                {
                  "functionName": "vs",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 68708
                },
                {
                  "functionName": "",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 70207
                },
                {
                  "functionName": "st",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 7533
                },
                {
                  "functionName": "",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 11580
                }
              ],
              "parent": {
                "description": "Promise.then",
                "callFrames": [
                  {
                    "functionName": "",
                    "scriptId": "373",
                    "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                    "lineNumber": 1,
                    "columnNumber": 11570
                  },
                  {
                    "functionName": "fetchImpl",
                    "scriptId": "380",
                    "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                    "lineNumber": 125,
                    "columnNumber": 34
                  },
                  {
                    "functionName": "",
                    "scriptId": "383",
                    "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                    "lineNumber": 186,
                    "columnNumber": 36
                  },
                  {
                    "functionName": "apiRequest",
                    "scriptId": "383",
                    "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                    "lineNumber": 300,
                    "columnNumber": 6
                  },
                  {
                    "functionName": "_req",
                    "scriptId": "381",
                    "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                    "lineNumber": 328,
                    "columnNumber": 36
                  },
                  {
                    "functionName": "",
                    "scriptId": "381",
                    "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                    "lineNumber": 492,
                    "columnNumber": 35
                  },
                  {
                    "functionName": "sentryWrapped",
                    "scriptId": "373",
                    "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                    "lineNumber": 1,
                    "columnNumber": 192306
                  }
                ],
                "parent": {
                  "description": "setTimeout",
                  "callFrames": [
                    {
                      "functionName": "",
                      "scriptId": "373",
                      "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                      "lineNumber": 1,
                      "columnNumber": 212752
                    },
                    {
                      "functionName": "",
                      "scriptId": "381",
                      "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                      "lineNumber": 459,
                      "columnNumber": 53
                    },
                    {
                      "functionName": "loadProjects",
                      "scriptId": "381",
                      "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                      "lineNumber": 458,
                      "columnNumber": 13
                    },
                    {
                      "functionName": "_executeProjectLoad",
                      "scriptId": "400",
                      "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                      "lineNumber": 496,
                      "columnNumber": 9
                    },
                    {
                      "functionName": "",
                      "scriptId": "400",
                      "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                      "lineNumber": 485,
                      "columnNumber": 48
                    },
                    {
                      "functionName": "sentryWrapped",
                      "scriptId": "373",
                      "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                      "lineNumber": 1,
                      "columnNumber": 192306
                    }
                  ],
                  "parent": {
                    "description": "setTimeout",
                    "callFrames": [
                      {
                        "functionName": "",
                        "scriptId": "373",
                        "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                        "lineNumber": 1,
                        "columnNumber": 212752
                      },
                      {
                        "functionName": "setTimeout",
                        "scriptId": "380",
                        "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                        "lineNumber": 178,
                        "columnNumber": 26
                      },
                      {
                        "functionName": "_loadProjects",
                        "scriptId": "400",
                        "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                        "lineNumber": 485,
                        "columnNumber": 26
                      },
                      {
                        "functionName": "showProjectList",
                        "scriptId": "400",
                        "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                        "lineNumber": 344,
                        "columnNumber": 13
                      }
                    ],
                    "parent": {
                      "description": "await",
                      "callFrames": [
                        {
                          "functionName": "runInitialize",
                          "scriptId": "400",
                          "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                          "lineNumber": 224,
                          "columnNumber": 25
                        }
                      ],
                      "parent": {
                        "description": "await",
                        "callFrames": [
                          {
                            "functionName": "initialize",
                            "scriptId": "400",
                            "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                            "lineNumber": 271,
                            "columnNumber": 12
                          }
                        ],
                        "parent": {
                          "description": "await",
                          "callFrames": [
                            {
                              "functionName": "createAndRegisterUIComponents",
                              "scriptId": "390",
                              "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                              "lineNumber": 1785,
                              "columnNumber": 30
                            }
                          ],
                          "parent": {
                            "description": "await",
                            "callFrames": [
                              {
                                "functionName": "initializeUIComponents",
                                "scriptId": "390",
                                "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                                "lineNumber": 1961,
                                "columnNumber": 22
                              }
                            ],
                            "parent": {
                              "description": "await",
                              "callFrames": [
                                {
                                  "functionName": "",
                                  "scriptId": "390",
                                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                                  "lineNumber": 2092,
                                  "columnNumber": 45
                                },
                                {
                                  "functionName": "phaseRunner",
                                  "scriptId": "390",
                                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                                  "lineNumber": 2065,
                                  "columnNumber": 37
                                },
                                {
                                  "functionName": "initializeApp",
                                  "scriptId": "390",
                                  "url": "http://127.0.0.1:8000/static/js/init/appInitializer.js",
                                  "lineNumber": 2092,
                                  "columnNumber": 14
                                }
                              ],
                              "parent": {
                                "description": "await",
                                "callFrames": [
                                  {
                                    "functionName": "",
                                    "scriptId": "370",
                                    "url": "http://127.0.0.1:8000/static/js/app.js",
                                    "lineNumber": 97,
                                    "columnNumber": 8
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://o4508070823395328.ingest.us.sentry.io/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": "o4508070823395328.ingest.us.sentry.io"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "40515"
            },
            {
              "name": "content-type",
              "value": "text/plain;charset=UTF-8"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [
            {
              "name": "sentry_key",
              "value": "b03711f63d1160f48dcaeda3edae14ac"
            },
            {
              "name": "sentry_version",
              "value": "7"
            },
            {
              "name": "sentry_client",
              "value": "sentry.javascript.browser%2F7.100.0"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 40515,
          "postData": {
            "mimeType": "text/plain;charset=UTF-8",
            "text": "{\"event_id\":\"1681d5e10c36430cb1b08aee42cc1aa8\",\"sent_at\":\"2025-06-08T14:49:35.012Z\",\"sdk\":{\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\"},\"trace\":{\"environment\":\"production\",\"release\":\"azure_chatapp@1.0.0+dev\",\"public_key\":\"b03711f63d1160f48dcaeda3edae14ac\",\"trace_id\":\"51d198f08c7744fa9f827fb7456cff1c\",\"sample_rate\":\"0.1\",\"sampled\":\"true\"}}\n{\"type\":\"transaction\"}\n{\"contexts\":{\"trace\":{\"data\":{\"sentry.origin\":\"auto.navigation.browser\",\"sentry.op\":\"navigation\",\"sentry.sample_rate\":0.1},\"op\":\"navigation\",\"span_id\":\"9b6b90bd72f3a389\",\"tags\":{\"effectiveConnectionType\":\"4g\",\"deviceMemory\":\"8 GB\",\"hardwareConcurrency\":\"12\"},\"trace_id\":\"51d198f08c7744fa9f827fb7456cff1c\",\"origin\":\"auto.navigation.browser\"}},\"spans\":[{\"data\":{\"http.response.status_code\":200,\"sentry.origin\":\"auto.http.browser\",\"sentry.op\":\"http.client\",\"url\":\"/api/user/projects\",\"type\":\"fetch\",\"http.method\":\"GET\",\"http.response_content_length\":223,\"network.protocol.version\":\"1.1\",\"network.protocol.name\":\"http\",\"http.request.redirect_start\":1749394171.643,\"http.request.fetch_start\":1749394173.9507,\"http.request.domain_lookup_start\":1749394173.9507,\"http.request.domain_lookup_end\":1749394173.9507,\"http.request.connect_start\":1749394173.9507,\"http.request.secure_connection_start\":1749394171.643,\"http.request.connection_end\":1749394173.9507,\"http.request.request_start\":1749394173.9519,\"http.request.response_start\":1749394174.0042,\"http.request.response_end\":1749394174.0052},\"description\":\"GET /api/user/projects\",\"op\":\"http.client\",\"parent_span_id\":\"9b6b90bd72f3a389\",\"span_id\":\"898d85c33245096b\",\"start_timestamp\":1749394173.9507,\"status\":\"ok\",\"tags\":{\"http.status_code\":\"200\"},\"timestamp\":1749394174.007,\"trace_id\":\"51d198f08c7744fa9f827fb7456cff1c\",\"origin\":\"auto.http.browser\"},{\"data\":{\"http.response_transfer_size\":0,\"http.response_content_length\":0,\"http.decoded_response_content_length\":0,\"resource.render_blocking_status\":\"non-blocking\",\"url.scheme\":\"http\",\"server.address\":\"127.0.0.1:8000\",\"url.same_origin\":true,\"sentry.origin\":\"auto.resource.browser.metrics\",\"sentry.op\":\"resource.other\"},\"description\":\"/static/favicon.ico\",\"op\":\"resource.other\",\"parent_span_id\":\"9b6b90bd72f3a389\",\"span_id\":\"aadd20f9e1f5b995\",\"start_timestamp\":1749394173.5333,\"timestamp\":1749394173.5584998,\"trace_id\":\"51d198f08c7744fa9f827fb7456cff1c\",\"origin\":\"auto.resource.browser.metrics\"},{\"data\":{\"http.response_transfer_size\":0,\"http.response_content_length\":0,\"http.decoded_response_content_length\":0,\"resource.render_blocking_status\":\"non-blocking\",\"url.scheme\":\"http\",\"server.address\":\"127.0.0.1:8000\",\"url.same_origin\":true,\"sentry.origin\":\"auto.resource.browser.metrics\",\"sentry.op\":\"resource.other\"},\"description\":\"/static/favicon.ico\",\"op\":\"resource.other\",\"parent_span_id\":\"9b6b90bd72f3a389\",\"span_id\":\"92af2eacc64c1fa3\",\"start_timestamp\":1749394173.583,\"timestamp\":1749394173.5962,\"trace_id\":\"51d198f08c7744fa9f827fb7456cff1c\",\"origin\":\"auto.resource.browser.metrics\"}],\"start_timestamp\":1749394173.5227997,\"tags\":{\"effectiveConnectionType\":\"4g\",\"deviceMemory\":\"8 GB\",\"hardwareConcurrency\":\"12\"},\"timestamp\":1749394174.007,\"transaction\":\"/\",\"type\":\"transaction\",\"transaction_info\":{\"source\":\"url\"},\"platform\":\"javascript\",\"request\":{\"url\":\"http://127.0.0.1:8000/??%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\",\"headers\":{\"User-Agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\"}},\"event_id\":\"1681d5e10c36430cb1b08aee42cc1aa8\",\"environment\":\"production\",\"release\":\"azure_chatapp@1.0.0+dev\",\"sdk\":{\"integrations\":[\"InboundFilters\",\"FunctionToString\",\"TryCatch\",\"Breadcrumbs\",\"GlobalHandlers\",\"LinkedErrors\",\"Dedupe\",\"HttpContext\",\"BrowserTracing\",\"Replay\"],\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\",\"packages\":[{\"name\":\"npm:@sentry/browser\",\"version\":\"7.100.0\"}]},\"breadcrumbs\":[{\"timestamp\":1749394173.31,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/api/auth/verify\",\"__span\":\"b509a9ce9d6efb65\",\"status_code\":200,\"response_body_size\":973},\"type\":\"http\"},{\"timestamp\":1749394173.312,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.312Z] [INFO] [authRequest] [DIAGNOSTIC][auth.js][authRequest][RESPONSE]\",\"/api/auth/verify\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.312Z] [INFO] [authRequest] [DIAGNOSTIC][auth.js][authRequest][RESPONSE] /api/auth/verify\"},{\"timestamp\":1749394173.312,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.312Z] [INFO] [verifyAuthState:successWithUserObject] [AuthModule][verifyAuthState] Verification successful: Valid user object with ID found.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.312Z] [INFO] [verifyAuthState:successWithUserObject] [AuthModule][verifyAuthState] Verification successful: Valid user object with ID found.\"},{\"timestamp\":1749394173.313,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.313Z] [INFO] [broadcastAuth] [DIAGNOSTIC][auth.js][broadcastAuth] called.\",{\"authenticated\":true,\"userObject\":\"[Object]\",\"source\":\"verify_success_with_user_id\",\"previousAuth\":false,\"previousUserObject\":null}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.313Z] [INFO] [broadcastAuth] [DIAGNOSTIC][auth.js][broadcastAuth] called. [object Object]\"},{\"timestamp\":1749394173.313,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.313Z] [INFO] [broadcastAuth:appModuleUpdate] [AuthModule][broadcastAuth] Updating canonical app state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.313Z] [INFO] [broadcastAuth:appModuleUpdate] [AuthModule][broadcastAuth] Updating canonical app state.\"},{\"timestamp\":1749394173.313,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.313Z] [INFO] [appState:setAuthState] [appState][setAuthState] Updating auth state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.313Z] [INFO] [appState:setAuthState] [appState][setAuthState] Updating auth state.\"},{\"timestamp\":1749394173.314,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.314Z] [INFO] [broadcastAuth:dispatchEvents] [DIAGNOSTIC][auth.js][broadcastAuth] Broadcasting authStateChanged event\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.314Z] [INFO] [broadcastAuth:dispatchEvents] [DIAGNOSTIC][auth.js][broadcastAuth] Broadcasting authStateChanged event\"},{\"timestamp\":1749394173.314,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.314Z] [INFO] [authInit:authStateChanged] [authInit][AuthBus] Received authStateChanged\",{\"authenticated\":true,\"user\":\"[Object]\",\"timestamp\":1749394173314,\"source\":\"verify_success_with_user_id\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.314Z] [INFO] [authInit:authStateChanged] [authInit][AuthBus] Received authStateChanged [object Object]\"},{\"timestamp\":1749394173.315,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.315Z] [INFO] [authInit:handleAuthStateChange] [authInit][handleAuthStateChange]\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.315Z] [INFO] [authInit:handleAuthStateChange] [authInit][handleAuthStateChange]\"},{\"timestamp\":1749394173.315,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.315Z] [INFO] [App] [domReadinessService] Waiting for event \\\"app:ready\\\" (context: authInit:handleAuthStateChange)\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.315Z] [INFO] [App] [domReadinessService] Waiting for event \\\"app:ready\\\" (context: authInit:handleAuthStateChange)\"},{\"timestamp\":1749394173.316,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.316Z] [INFO] [App] [domReadinessService] Emitting replayable event: authStateChanged\",{\"eventName\":\"authStateChanged\",\"detail\":\"[Object]\",\"currentCacheSize\":1}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.316Z] [INFO] [App] [domReadinessService] Emitting replayable event: authStateChanged [object Object]\"},{\"timestamp\":1749394173.317,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.317Z] [INFO] [App] [domReadinessService] Emitting replayable event: auth:stateChanged\",{\"eventName\":\"auth:stateChanged\",\"detail\":\"[Object]\",\"currentCacheSize\":2}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.317Z] [INFO] [App] [domReadinessService] Emitting replayable event: auth:stateChanged [object Object]\"},{\"timestamp\":1749394173.318,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.318Z] [INFO] [ProjectManager] [ProjectManager] Auth module is ready. Current appModule auth state: true\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.318Z] [INFO] [ProjectManager] [ProjectManager] Auth module is ready. Current appModule auth state: true\"},{\"timestamp\":1749394173.318,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.318Z] [INFO] [ProjectManager] [ProjectManager] No initial project found from canonical app state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.318Z] [INFO] [ProjectManager] [ProjectManager] No initial project found from canonical app state.\"},{\"timestamp\":1749394173.318,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.318Z] [INFO] [ProjectManager] [ProjectManager] Initialization complete.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.318Z] [INFO] [ProjectManager] [ProjectManager] Initialization complete.\"},{\"timestamp\":1749394173.319,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.319Z] [INFO] [init] [AuthModule][init] Periodic auth verification scheduled.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.319Z] [INFO] [init] [AuthModule][init] Periodic auth verification scheduled.\"},{\"timestamp\":1749394173.32,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.320Z] [INFO] [appState:setAppLifecycleState] [appState][setAppLifecycleState] Updating app lifecycle state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.320Z] [INFO] [appState:setAppLifecycleState] [appState][setAppLifecycleState] Updating app lifecycle state.\"},{\"timestamp\":1749394173.32,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.320Z] [INFO] [init] [AuthModule][init] Auth module is now ready\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.320Z] [INFO] [init] [AuthModule][init] Auth module is now ready\"},{\"timestamp\":1749394173.32,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.320Z] [INFO] [ProjectManager] [ProjectManager] Received authReady event.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.320Z] [INFO] [ProjectManager] [ProjectManager] Received authReady event.\"},{\"timestamp\":1749394173.321,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.321Z] [INFO] [authInit:authReady] [authInit][AuthBus] Received authReady\",{\"authenticated\":true,\"user\":\"[Object]\",\"username\":\"hperkins\",\"errorDetail\":null,\"timestamp\":1749394173320,\"source\":\"init_auth_module_ready\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.321Z] [INFO] [authInit:authReady] [authInit][AuthBus] Received authReady [object Object]\"},{\"timestamp\":1749394173.321,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.321Z] [INFO] [authInit:handleAuthStateChange] [authInit][handleAuthStateChange]\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.321Z] [INFO] [authInit:handleAuthStateChange] [authInit][handleAuthStateChange]\"},{\"timestamp\":1749394173.322,\"category\":\"navigation\",\"data\":{\"from\":\"/??project=f304c5f9-fd3d-4a21-9073-ce455971943b\",\"to\":\"/??%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\"}},{\"timestamp\":1749394173.324,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.324Z] [INFO] [App] [domReadinessService] Emitting replayable event: modalHidden\",{\"eventName\":\"modalHidden\",\"detail\":\"[Object]\",\"currentCacheSize\":3}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.324Z] [INFO] [App] [domReadinessService] Emitting replayable event: modalHidden [object Object]\"},{\"timestamp\":1749394173.325,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.325Z] [INFO] [App] [domReadinessService] Emitting replayable event: modalHidden\",{\"eventName\":\"modalHidden\",\"detail\":\"[Object]\",\"currentCacheSize\":4}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.325Z] [INFO] [App] [domReadinessService] Emitting replayable event: modalHidden [object Object]\"},{\"timestamp\":1749394173.325,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.325Z] [INFO] [init:dispatchAuthReady] [AuthModule] emitReplayable authReady\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.325Z] [INFO] [init:dispatchAuthReady] [AuthModule] emitReplayable authReady\"},{\"timestamp\":1749394173.326,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.326Z] [INFO] [App] [domReadinessService] Emitting replayable event: authReady\",{\"eventName\":\"authReady\",\"detail\":\"[Object]\",\"currentCacheSize\":4}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.326Z] [INFO] [App] [domReadinessService] Emitting replayable event: authReady [object Object]\"},{\"timestamp\":1749394173.326,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.326Z] [INFO] [broadcastAuth] [DIAGNOSTIC][auth.js][broadcastAuth] called.\",{\"authenticated\":true,\"userObject\":\"[Object]\",\"source\":\"init_final_broadcast\",\"previousAuth\":true,\"previousUserObject\":\"[Object]\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.326Z] [INFO] [broadcastAuth] [DIAGNOSTIC][auth.js][broadcastAuth] called. [object Object]\"},{\"timestamp\":1749394173.326,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.326Z] [INFO] [broadcastAuth] [DIAGNOSTIC][auth.js][broadcastAuth] No auth/user change; not broadcasting\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.326Z] [INFO] [broadcastAuth] [DIAGNOSTIC][auth.js][broadcastAuth] No auth/user change; not broadcasting\"},{\"timestamp\":1749394173.328,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.328Z] [INFO] [App] [appInitializer] ✔ Phase complete: auth (269 ms)\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.328Z] [INFO] [App] [appInitializer] ✔ Phase complete: auth (269 ms)\"},{\"timestamp\":1749394173.328,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.328Z] [INFO] [App] [appInitializer] ▶ Phase start: ui\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.328Z] [INFO] [App] [appInitializer] ▶ Phase start: ui\"},{\"timestamp\":1749394173.329,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.329Z] [INFO] [uiInit] [uiInit] Starting UI initialization...\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.329Z] [INFO] [uiInit] [uiInit] Starting UI initialization...\"},{\"timestamp\":1749394173.329,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.329Z] [INFO] [uiInit:ensureBaseProjectContainers] [uiInit] ensureBaseProjectContainers ENTER\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.329Z] [INFO] [uiInit:ensureBaseProjectContainers] [uiInit] ensureBaseProjectContainers ENTER\"},{\"timestamp\":1749394173.33,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.330Z] [INFO] [uiInit:ensureBaseProjectContainers] [uiInit] Both #projectListView and #projectDetailsView already present\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.330Z] [INFO] [uiInit:ensureBaseProjectContainers] [uiInit] Both #projectListView and #projectDetailsView already present\"},{\"timestamp\":1749394173.33,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.330Z] [INFO] [uiInit:ensureBaseProjectContainers] [uiInit] Verified presence of both #projectListView and #projectDetailsView after ensureBaseProjectContainers\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.330Z] [INFO] [uiInit:ensureBaseProjectContainers] [uiInit] Verified presence of both #projectListView and #projectDetailsView after ensureBaseProjectContainers\"},{\"timestamp\":1749394173.33,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.330Z] [INFO] [uiInit:ensureBaseProjectContainers] [uiInit] ensureBaseProjectContainers EXIT\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.330Z] [INFO] [uiInit:ensureBaseProjectContainers] [uiInit] ensureBaseProjectContainers EXIT\"},{\"timestamp\":1749394173.33,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.330Z] [INFO] [uiInit:loadTemplates] [UIInit] Loading project templates\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.330Z] [INFO] [uiInit:loadTemplates] [UIInit] Loading project templates\"},{\"timestamp\":1749394173.331,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.331Z] [INFO] [App] [HtmlTemplateLoader] Attempting to load template: /static/html/project_list.html into #projectListView\",{\"url\":\"/static/html/project_list.html\",\"containerSelector\":\"#projectListView\",\"eventName\":\"projectListHtmlLoaded\",\"isModalsHtml\":false}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.331Z] [INFO] [App] [HtmlTemplateLoader] Attempting to load template: /static/html/project_list.html into #projectListView [object Object]\"},{\"timestamp\":1749394173.331,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.331Z] [INFO] [App] [HtmlTemplateLoader] Fetching template: /static/html/project_list.html\",{\"url\":\"/static/html/project_list.html\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.331Z] [INFO] [App] [HtmlTemplateLoader] Fetching template: /static/html/project_list.html [object Object]\"},{\"timestamp\":1749394173.376,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/static/html/project_list.html\",\"__span\":\"8092ff200aa9070f\",\"status_code\":200,\"response_body_size\":7878},\"type\":\"http\"},{\"timestamp\":1749394173.404,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.404Z] [INFO] [App] [HtmlTemplateLoader] Successfully fetched template: /static/html/project_list.html, preparing to inject. Length: 7876\",{\"url\":\"/static/html/project_list.html\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.404Z] [INFO] [App] [HtmlTemplateLoader] Successfully fetched template: /static/html/project_list.html, preparing to inject. Length: 7876 [object Object]\"},{\"timestamp\":1749394173.407,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.407Z] [INFO] [App] [HtmlTemplateLoader] Successfully injected template: /static/html/project_list.html into #projectListView\",{\"url\":\"/static/html/project_list.html\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.407Z] [INFO] [App] [HtmlTemplateLoader] Successfully injected template: /static/html/project_list.html into #projectListView [object Object]\"},{\"timestamp\":1749394173.408,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.408Z] [INFO] [App] [HtmlTemplateLoader] Emitting replayable event: projectListHtmlLoaded\",{\"eventName\":\"projectListHtmlLoaded\",\"detail\":\"[Object]\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.408Z] [INFO] [App] [HtmlTemplateLoader] Emitting replayable event: projectListHtmlLoaded [object Object]\"},{\"timestamp\":1749394173.408,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.408Z] [INFO] [App] [domReadinessService] Emitting replayable event: projectListHtmlLoaded\",{\"eventName\":\"projectListHtmlLoaded\",\"detail\":\"[Object]\",\"currentCacheSize\":5}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.408Z] [INFO] [App] [domReadinessService] Emitting replayable event: projectListHtmlLoaded [object Object]\"},{\"timestamp\":1749394173.415,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.415Z] [INFO] [App] [HtmlTemplateLoader] Attempting to load template: /static/html/project_details.html into #projectDetailsView\",{\"url\":\"/static/html/project_details.html\",\"containerSelector\":\"#projectDetailsView\",\"eventName\":\"projectDetailsHtmlLoaded\",\"isModalsHtml\":false}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.415Z] [INFO] [App] [HtmlTemplateLoader] Attempting to load template: /static/html/project_details.html into #projectDetailsView [object Object]\"},{\"timestamp\":1749394173.415,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.415Z] [INFO] [App] [HtmlTemplateLoader] Fetching template: /static/html/project_details.html\",{\"url\":\"/static/html/project_details.html\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.415Z] [INFO] [App] [HtmlTemplateLoader] Fetching template: /static/html/project_details.html [object Object]\"},{\"timestamp\":1749394173.458,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/static/html/project_details.html\",\"__span\":\"90d01730f6d71d06\",\"status_code\":200,\"response_body_size\":28086},\"type\":\"http\"},{\"timestamp\":1749394173.46,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.460Z] [INFO] [App] [HtmlTemplateLoader] Successfully fetched template: /static/html/project_details.html, preparing to inject. Length: 28082\",{\"url\":\"/static/html/project_details.html\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.460Z] [INFO] [App] [HtmlTemplateLoader] Successfully fetched template: /static/html/project_details.html, preparing to inject. Length: 28082 [object Object]\"},{\"timestamp\":1749394173.467,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.467Z] [INFO] [App] [HtmlTemplateLoader] Successfully injected template: /static/html/project_details.html into #projectDetailsView\",{\"url\":\"/static/html/project_details.html\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.467Z] [INFO] [App] [HtmlTemplateLoader] Successfully injected template: /static/html/project_details.html into #projectDetailsView [object Object]\"},{\"timestamp\":1749394173.467,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.467Z] [INFO] [App] [HtmlTemplateLoader] Emitting replayable event: projectDetailsHtmlLoaded\",{\"eventName\":\"projectDetailsHtmlLoaded\",\"detail\":\"[Object]\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.467Z] [INFO] [App] [HtmlTemplateLoader] Emitting replayable event: projectDetailsHtmlLoaded [object Object]\"},{\"timestamp\":1749394173.467,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.467Z] [INFO] [App] [domReadinessService] Emitting replayable event: projectDetailsHtmlLoaded\",{\"eventName\":\"projectDetailsHtmlLoaded\",\"detail\":\"[Object]\",\"currentCacheSize\":6}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.467Z] [INFO] [App] [domReadinessService] Emitting replayable event: projectDetailsHtmlLoaded [object Object]\"},{\"timestamp\":1749394173.478,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.478Z] [INFO] [App] [HtmlTemplateLoader] Attempting to load template: /static/html/modals.html into #modalsContainer\",{\"url\":\"/static/html/modals.html\",\"containerSelector\":\"#modalsContainer\",\"eventName\":\"modalsHtmlLoaded\",\"isModalsHtml\":true}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.478Z] [INFO] [App] [HtmlTemplateLoader] Attempting to load template: /static/html/modals.html into #modalsContainer [object Object]\"},{\"timestamp\":1749394173.479,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.479Z] [INFO] [App] [HtmlTemplateLoader] Template already present in #modalsContainer, skipping fetch for /static/html/modals.html\",{\"url\":\"/static/html/modals.html\",\"containerSelector\":\"#modalsContainer\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.479Z] [INFO] [App] [HtmlTemplateLoader] Template already present in #modalsContainer, skipping fetch for /static/html/modals.html [object Object]\"},{\"timestamp\":1749394173.479,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.479Z] [INFO] [App] [HtmlTemplateLoader] Emitting replayable event: modalsHtmlLoaded\",{\"eventName\":\"modalsHtmlLoaded\",\"detail\":\"[Object]\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.479Z] [INFO] [App] [HtmlTemplateLoader] Emitting replayable event: modalsHtmlLoaded [object Object]\"},{\"timestamp\":1749394173.479,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.479Z] [INFO] [App] [domReadinessService] Emitting replayable event: modalsHtmlLoaded\",{\"eventName\":\"modalsHtmlLoaded\",\"detail\":\"[Object]\",\"currentCacheSize\":7}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.479Z] [INFO] [App] [domReadinessService] Emitting replayable event: modalsHtmlLoaded [object Object]\"},{\"timestamp\":1749394173.48,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.480Z] [INFO] [App] [HtmlTemplateLoader] Emitting replayable event: modalsLoaded\",{\"eventName\":\"modalsLoaded\",\"detail\":\"[Object]\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.480Z] [INFO] [App] [HtmlTemplateLoader] Emitting replayable event: modalsLoaded [object Object]\"},{\"timestamp\":1749394173.48,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.480Z] [INFO] [App] [domReadinessService] Emitting replayable event: modalsLoaded\",{\"eventName\":\"modalsLoaded\",\"detail\":\"[Object]\",\"currentCacheSize\":8}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.480Z] [INFO] [App] [domReadinessService] Emitting replayable event: modalsLoaded [object Object]\"},{\"timestamp\":1749394173.481,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.481Z] [INFO] [AuthFormListenerFactory] [AuthFormListenerFactory] Listener setup completed\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.481Z] [INFO] [AuthFormListenerFactory] [AuthFormListenerFactory] Listener setup completed\"},{\"timestamp\":1749394173.482,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.482Z] [INFO] [uiInit:loadTemplates] [UIInit] Project templates loaded\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.482Z] [INFO] [uiInit:loadTemplates] [UIInit] Project templates loaded\"},{\"timestamp\":1749394173.482,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.482Z] [INFO] [uiInit:setupSidebarControls] [UIInit] setupSidebarControls: no-op (handled by Sidebar module)\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.482Z] [INFO] [uiInit:setupSidebarControls] [UIInit] setupSidebarControls: no-op (handled by Sidebar module)\"},{\"timestamp\":1749394173.484,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.484Z] [INFO] [eventHandler.init:modalForm] [EventHandler][init] Project modal form setup completed\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.484Z] [INFO] [eventHandler.init:modalForm] [EventHandler][init] Project modal form setup completed\"},{\"timestamp\":1749394173.485,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.485Z] [INFO] [eventHandler.bindAuthButtonDelegate] [EventHandler] bindAuthButtonDelegate\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.485Z] [INFO] [eventHandler.bindAuthButtonDelegate] [EventHandler] bindAuthButtonDelegate\"},{\"timestamp\":1749394173.485,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.485Z] [INFO] [uiInit] [uiInit] eventHandlers init complete\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.485Z] [INFO] [uiInit] [uiInit] eventHandlers init complete\"},{\"timestamp\":1749394173.486,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.486Z] [INFO] [App] [domReadinessService] Emitting replayable event: app:ready\",{\"eventName\":\"app:ready\",\"detail\":\"[Object]\",\"currentCacheSize\":8}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.486Z] [INFO] [App] [domReadinessService] Emitting replayable event: app:ready [object Object]\"},{\"timestamp\":1749394173.486,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.486Z] [INFO] [authInit:handleAuthStateChange] [domReadinessService] Event \\\"app:ready\\\" received by listener\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.486Z] [INFO] [authInit:handleAuthStateChange] [domReadinessService] Event \\\"app:ready\\\" received by listener\"},{\"timestamp\":1749394173.487,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.487Z] [INFO] [appState:setAppLifecycleState] [appState][setAppLifecycleState] Updating app lifecycle state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.487Z] [INFO] [appState:setAppLifecycleState] [appState][setAppLifecycleState] Updating app lifecycle state.\"},{\"timestamp\":1749394173.487,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.487Z] [INFO] [App] [domReadinessService] Emitting replayable event: ui:templates:ready\",{\"eventName\":\"ui:templates:ready\",\"detail\":\"[Object]\",\"currentCacheSize\":9}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.487Z] [INFO] [App] [domReadinessService] Emitting replayable event: ui:templates:ready [object Object]\"},{\"timestamp\":1749394173.487,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.487Z] [INFO] [uiInit:createAndRegisterUIComponents] [UIInit] Creating late-stage UI components\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.487Z] [INFO] [uiInit:createAndRegisterUIComponents] [UIInit] Creating late-stage UI components\"},{\"timestamp\":1749394173.488,\"category\":\"navigation\",\"data\":{\"from\":\"/??%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\",\"to\":\"/??%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\"}},{\"timestamp\":1749394173.492,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.492Z] [INFO] [App] [domReadinessService] Emitting replayable event: modalHidden\",{\"eventName\":\"modalHidden\",\"detail\":\"[Object]\",\"currentCacheSize\":10}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.492Z] [INFO] [App] [domReadinessService] Emitting replayable event: modalHidden [object Object]\"},{\"timestamp\":1749394173.493,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.493Z] [INFO] [App] [domReadinessService] Emitting replayable event: modalHidden\",{\"eventName\":\"modalHidden\",\"detail\":\"[Object]\",\"currentCacheSize\":10}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.493Z] [INFO] [App] [domReadinessService] Emitting replayable event: modalHidden [object Object]\"},{\"timestamp\":1749394173.494,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.494Z] [INFO] [projectEnhancements] [initializeProjectList] Project list enhancements initialized\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.494Z] [INFO] [projectEnhancements] [initializeProjectList] Project list enhancements initialized\"},{\"timestamp\":1749394173.494,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.494Z] [INFO] [tokenStatsManager] [domReadinessService] Event \\\"ui:templates:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.494Z] [INFO] [tokenStatsManager] [domReadinessService] Event \\\"ui:templates:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.495,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.495Z] [INFO] [tokenStatsManager] [tokenStatsManager] Initializing token stats manager\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.495Z] [INFO] [tokenStatsManager] [tokenStatsManager] Initializing token stats manager\"},{\"timestamp\":1749394173.495,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.495Z] [INFO] [tokenStatsManager] [tokenStatsManager] Token stats manager initialized\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.495Z] [INFO] [tokenStatsManager] [tokenStatsManager] Token stats manager initialized\"},{\"timestamp\":1749394173.496,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.496Z] [INFO] [unknown] [domReadinessService] Event \\\"authReady\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.496Z] [INFO] [unknown] [domReadinessService] Event \\\"authReady\\\" replayed from cache\"},{\"timestamp\":1749394173.496,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.496Z] [INFO] [projectDashboard] [domReadinessService] Event \\\"ui:templates:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.496Z] [INFO] [projectDashboard] [domReadinessService] Event \\\"ui:templates:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.497,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.497Z] [INFO] [ProjectListComponent_template] [domReadinessService] Event \\\"projectListHtmlLoaded\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.497Z] [INFO] [ProjectListComponent_template] [domReadinessService] Event \\\"projectListHtmlLoaded\\\" replayed from cache\"},{\"timestamp\":1749394173.51,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.509Z] [INFO] [ProjectListComponent:bindCreateProjectBtn] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.509Z] [INFO] [ProjectListComponent:bindCreateProjectBtn] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.517,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.517Z] [INFO] [unknown] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.517Z] [INFO] [unknown] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.517,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.517Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Initializing...\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.517Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Initializing...\"},{\"timestamp\":1749394173.518,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.518Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Initialized successfully.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.518Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Initialized successfully.\"},{\"timestamp\":1749394173.519,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.519Z] [INFO] [appState:setCurrentProject:clear] [appState][setCurrentProject] Clearing current project.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.519Z] [INFO] [appState:setCurrentProject:clear] [appState][setCurrentProject] Clearing current project.\"},{\"timestamp\":1749394173.519,\"category\":\"navigation\",\"data\":{\"from\":\"/??%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\",\"to\":\"/??%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\"}},{\"timestamp\":1749394173.522,\"category\":\"navigation\",\"data\":{\"from\":\"/??%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\",\"to\":\"/??%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\"}},{\"timestamp\":1749394173.526,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.526Z] [INFO] [ProjectListComponent_template] [domReadinessService] Event \\\"projectListHtmlLoaded\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.526Z] [INFO] [ProjectListComponent_template] [domReadinessService] Event \\\"projectListHtmlLoaded\\\" replayed from cache\"},{\"timestamp\":1749394173.545,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.545Z] [INFO] [ProjectListComponent:bindCreateProjectBtn] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.545Z] [INFO] [ProjectListComponent:bindCreateProjectBtn] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.547,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.547Z] [INFO] [uiInit:createAndRegisterUIComponents] [UIInit] Late-stage UI components registered\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.547Z] [INFO] [uiInit:createAndRegisterUIComponents] [UIInit] Late-stage UI components registered\"},{\"timestamp\":1749394173.548,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.548Z] [INFO] [uiInit:navigation] [UIInit] Navigation views registered\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.548Z] [INFO] [uiInit:navigation] [UIInit] Navigation views registered\"},{\"timestamp\":1749394173.549,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.549Z] [INFO] [uiInit:initializeUIComponents] [uiInit] UI initialization complete\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.549Z] [INFO] [uiInit:initializeUIComponents] [uiInit] UI initialization complete\"},{\"timestamp\":1749394173.549,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.549Z] [INFO] [ProjectListComponent_template] [domReadinessService] Event \\\"projectListHtmlLoaded\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.549Z] [INFO] [ProjectListComponent_template] [domReadinessService] Event \\\"projectListHtmlLoaded\\\" replayed from cache\"},{\"timestamp\":1749394173.557,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.557Z] [INFO] [ProjectListComponent:bindCreateProjectBtn] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.557Z] [INFO] [ProjectListComponent:bindCreateProjectBtn] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.562,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.562Z] [INFO] [uiInit] [uiInit] sidebar.init completed\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.562Z] [INFO] [uiInit] [uiInit] sidebar.init completed\"},{\"timestamp\":1749394173.562,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.562Z] [INFO] [SidebarMobileDock] [SidebarMobileDock] Initialized\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.562Z] [INFO] [SidebarMobileDock] [SidebarMobileDock] Initialized\"},{\"timestamp\":1749394173.563,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.563Z] [INFO] [unknown] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.563Z] [INFO] [unknown] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.564,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.564Z] [INFO] [App] [appInitializer] ✔ Phase complete: ui (235 ms)\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.564Z] [INFO] [App] [appInitializer] ✔ Phase complete: ui (235 ms)\"},{\"timestamp\":1749394173.564,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.564Z] [INFO] [appState:setAppLifecycleState] [appState][setAppLifecycleState] Updating app lifecycle state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.564Z] [INFO] [appState:setAppLifecycleState] [appState][setAppLifecycleState] Updating app lifecycle state.\"},{\"timestamp\":1749394173.564,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.564Z] [INFO] [appState:setAppLifecycleState] [appState][setAppLifecycleState] Updating app lifecycle state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.564Z] [INFO] [appState:setAppLifecycleState] [appState][setAppLifecycleState] Updating app lifecycle state.\"},{\"timestamp\":1749394173.565,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.565Z] [INFO] [App] [appInitializer] Boot sequence complete – app is READY\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.565Z] [INFO] [App] [appInitializer] Boot sequence complete – app is READY\"},{\"timestamp\":1749394173.891,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.891Z] [INFO] [AuthFormListenerFactory] [AuthFormListenerFactory] Listener setup completed\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.891Z] [INFO] [AuthFormListenerFactory] [AuthFormListenerFactory] Listener setup completed\"},{\"timestamp\":1749394174.006,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/api/user/projects\",\"__span\":\"898d85c33245096b\",\"status_code\":200,\"response_body_size\":223},\"type\":\"http\"}]}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "x-sentry-error,x-sentry-rate-limits,retry-after"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "content-length",
              "value": "41"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:31 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "vary",
              "value": "origin, access-control-request-method, access-control-request-headers"
            },
            {
              "name": "via",
              "value": "1.1 google"
            }
          ],
          "cookies": [],
          "content": {
            "size": 41,
            "mimeType": "application/json",
            "text": "{\"id\":\"1681d5e10c36430cb1b08aee42cc1aa8\"}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 59,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "34.120.195.249",
        "startedDateTime": "2025-06-08T14:49:35.013Z",
        "time": 66.33400000282563,
        "timings": {
          "blocked": 2.6989999984325843,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 10.491000000000001,
          "wait": 52.59799999417551,
          "receive": 0.54600001021754,
          "_blocked_queueing": 2.466999998432584,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126370",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 203349
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55796
              },
              {
                "functionName": "add",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17847
              },
              {
                "functionName": "s",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55787
              },
              {
                "functionName": "In",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201641
              },
              {
                "functionName": "sendSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 198325
              },
              {
                "functionName": "captureSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 196510
              },
              {
                "functionName": "Ve",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29333
              },
              {
                "functionName": "Ye",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29198
              },
              {
                "functionName": "Ge",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29083
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 217760
              },
              {
                "functionName": "st",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 7533
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 12798
              },
              {
                "functionName": "pushState",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 226,
                "columnNumber": 27
              },
              {
                "functionName": "updateUrlParams",
                "scriptId": "389",
                "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                "lineNumber": 101,
                "columnNumber": 25
              },
              {
                "functionName": "navigateTo",
                "scriptId": "389",
                "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                "lineNumber": 223,
                "columnNumber": 8
              },
              {
                "functionName": "navigateToProject",
                "scriptId": "389",
                "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                "lineNumber": 291,
                "columnNumber": 11
              },
              {
                "functionName": "onViewProject",
                "scriptId": "402",
                "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                "lineNumber": 1172,
                "columnNumber": 30
              },
              {
                "functionName": "_handleCardClick",
                "scriptId": "402",
                "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                "lineNumber": 699,
                "columnNumber": 12
              },
              {
                "functionName": "",
                "scriptId": "402",
                "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                "lineNumber": 249,
                "columnNumber": 31
              },
              {
                "functionName": "",
                "scriptId": "410",
                "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                "lineNumber": 19,
                "columnNumber": 18
              },
              {
                "functionName": "wrapped",
                "scriptId": "409",
                "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                "lineNumber": 142,
                "columnNumber": 35
              },
              {
                "functionName": "sentryWrapped",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 192306
              }
            ]
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://o4508070823395328.ingest.us.sentry.io/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": "o4508070823395328.ingest.us.sentry.io"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "495"
            },
            {
              "name": "content-type",
              "value": "text/plain;charset=UTF-8"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [
            {
              "name": "sentry_key",
              "value": "b03711f63d1160f48dcaeda3edae14ac"
            },
            {
              "name": "sentry_version",
              "value": "7"
            },
            {
              "name": "sentry_client",
              "value": "sentry.javascript.browser%2F7.100.0"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 495,
          "postData": {
            "mimeType": "text/plain;charset=UTF-8",
            "text": "{\"sent_at\":\"2025-06-08T14:49:36.848Z\",\"sdk\":{\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\"}}\n{\"type\":\"session\"}\n{\"sid\":\"1b087924801b4cb7bc24f74a431b58d4\",\"init\":false,\"started\":\"2025-06-08T14:49:33.523Z\",\"timestamp\":\"2025-06-08T14:49:36.848Z\",\"status\":\"exited\",\"errors\":0,\"attrs\":{\"release\":\"azure_chatapp@1.0.0+dev\",\"environment\":\"production\",\"user_agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\"}}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "x-sentry-error,x-sentry-rate-limits,retry-after"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:33 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "vary",
              "value": "origin, access-control-request-method, access-control-request-headers"
            },
            {
              "name": "via",
              "value": "1.1 google"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "application/json",
            "text": "{}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 20,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "34.120.195.249",
        "startedDateTime": "2025-06-08T14:49:36.848Z",
        "time": 49.36499999894295,
        "timings": {
          "blocked": 1.1870000033210963,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.139,
          "wait": 47.63999999878928,
          "receive": 0.3989999968325719,
          "_blocked_queueing": 0.8910000033210963,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126370",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 203349
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55796
              },
              {
                "functionName": "add",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17847
              },
              {
                "functionName": "s",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55787
              },
              {
                "functionName": "In",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201641
              },
              {
                "functionName": "sendSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 198325
              },
              {
                "functionName": "captureSession",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 196510
              },
              {
                "functionName": "Ve",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29333
              },
              {
                "functionName": "Qe",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 29376
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 217784
              },
              {
                "functionName": "st",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 7533
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 12798
              },
              {
                "functionName": "pushState",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 226,
                "columnNumber": 27
              },
              {
                "functionName": "updateUrlParams",
                "scriptId": "389",
                "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                "lineNumber": 101,
                "columnNumber": 25
              },
              {
                "functionName": "navigateTo",
                "scriptId": "389",
                "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                "lineNumber": 223,
                "columnNumber": 8
              },
              {
                "functionName": "navigateToProject",
                "scriptId": "389",
                "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                "lineNumber": 291,
                "columnNumber": 11
              },
              {
                "functionName": "onViewProject",
                "scriptId": "402",
                "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                "lineNumber": 1172,
                "columnNumber": 30
              },
              {
                "functionName": "_handleCardClick",
                "scriptId": "402",
                "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                "lineNumber": 699,
                "columnNumber": 12
              },
              {
                "functionName": "",
                "scriptId": "402",
                "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                "lineNumber": 249,
                "columnNumber": 31
              },
              {
                "functionName": "",
                "scriptId": "410",
                "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                "lineNumber": 19,
                "columnNumber": 18
              },
              {
                "functionName": "wrapped",
                "scriptId": "409",
                "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                "lineNumber": 142,
                "columnNumber": 35
              },
              {
                "functionName": "sentryWrapped",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 192306
              }
            ]
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://o4508070823395328.ingest.us.sentry.io/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": "o4508070823395328.ingest.us.sentry.io"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "490"
            },
            {
              "name": "content-type",
              "value": "text/plain;charset=UTF-8"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [
            {
              "name": "sentry_key",
              "value": "b03711f63d1160f48dcaeda3edae14ac"
            },
            {
              "name": "sentry_version",
              "value": "7"
            },
            {
              "name": "sentry_client",
              "value": "sentry.javascript.browser%2F7.100.0"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 490,
          "postData": {
            "mimeType": "text/plain;charset=UTF-8",
            "text": "{\"sent_at\":\"2025-06-08T14:49:36.849Z\",\"sdk\":{\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\"}}\n{\"type\":\"session\"}\n{\"sid\":\"f010cb810b2a464bb13d0657116cb1b1\",\"init\":true,\"started\":\"2025-06-08T14:49:36.848Z\",\"timestamp\":\"2025-06-08T14:49:36.848Z\",\"status\":\"ok\",\"errors\":0,\"attrs\":{\"release\":\"azure_chatapp@1.0.0+dev\",\"environment\":\"production\",\"user_agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\"}}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "x-sentry-error,x-sentry-rate-limits,retry-after"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:33 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "vary",
              "value": "origin, access-control-request-method, access-control-request-headers"
            },
            {
              "name": "via",
              "value": "1.1 google"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "application/json",
            "text": "{}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 20,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "34.120.195.249",
        "startedDateTime": "2025-06-08T14:49:36.849Z",
        "time": 53.3749999885913,
        "timings": {
          "blocked": 1.1019999877586961,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.12199999999999997,
          "wait": 51.777999998250046,
          "receive": 0.3730000025825575,
          "_blocked_queueing": 0.9309999877586961,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "loadTemplate",
                "scriptId": "384",
                "url": "http://127.0.0.1:8000/static/js/utils/htmlTemplateLoader.js",
                "lineNumber": 157,
                "columnNumber": 21
              },
              {
                "functionName": "_loadTemplate",
                "scriptId": "401",
                "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                "lineNumber": 243,
                "columnNumber": 40
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "show",
                  "scriptId": "401",
                  "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                  "lineNumber": 989,
                  "columnNumber": 38
                },
                {
                  "functionName": "show",
                  "scriptId": "401",
                  "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                  "lineNumber": 74,
                  "columnNumber": 32
                },
                {
                  "functionName": "show",
                  "scriptId": "400",
                  "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                  "lineNumber": 804,
                  "columnNumber": 49
                },
                {
                  "functionName": "activateView",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 181,
                  "columnNumber": 25
                },
                {
                  "functionName": "navigateTo",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 240,
                  "columnNumber": 28
                },
                {
                  "functionName": "navigateToProject",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 291,
                  "columnNumber": 11
                },
                {
                  "functionName": "onViewProject",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 1172,
                  "columnNumber": 30
                },
                {
                  "functionName": "_handleCardClick",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 699,
                  "columnNumber": 12
                },
                {
                  "functionName": "",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 249,
                  "columnNumber": 31
                },
                {
                  "functionName": "",
                  "scriptId": "410",
                  "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                  "lineNumber": 19,
                  "columnNumber": 18
                },
                {
                  "functionName": "wrapped",
                  "scriptId": "409",
                  "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                  "lineNumber": 142,
                  "columnNumber": 35
                },
                {
                  "functionName": "sentryWrapped",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 192306
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/html/chat_ui.html",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3F%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b&project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=cac0d0d505284fb9b622f0708e5f93c6,sentry-sample_rate=0.1,sentry-sampled=true"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "cac0d0d505284fb9b622f0708e5f93c6-8abe9d579a85d1ad-1"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1774,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "cache-control",
              "value": "no-store"
            },
            {
              "name": "content-length",
              "value": "6017"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:32 GMT"
            },
            {
              "name": "etag",
              "value": "\"95499f700a53010c01d1d5b0ad622064\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 08 Jun 2025 14:16:22 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 6017,
            "mimeType": "text/html",
            "compression": 0,
            "text": "<!-- Enhanced Project Chat Interface -->\n<div class=\"chat-container border rounded shadow-sm mb-4\"\n     role=\"region\"\n     aria-label=\"Project Chat Interface\">\n  <!-- Collapsible Chat Header -->\n  <div id=\"chatHeader\"\n       class=\"chat-header p-4 flex flex-col gap-2 border-b cursor-pointer\"\n       role=\"button\"\n       tabindex=\"0\"\n       aria-expanded=\"true\"\n       aria-controls=\"chatMetadata\"\n       aria-label=\"Chat Header\">\n    <!-- Header Title & Expand Button -->\n    <div class=\"flex items-center justify-between min-w-0\">\n      <h2 id=\"chatTitle\" class=\"text-responsive-lg font-semibold truncate\">\n        New Conversation\n      </h2>\n      <button type=\"button\"\n              class=\"btn btn-ghost btn-square btn-sm\"\n              aria-label=\"Toggle header\"\n              aria-expanded=\"true\"\n              aria-controls=\"chatMetadata\">\n        <svg class=\"icon-sm expandable-indicator\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n    </div>\n\n    <!-- Header Metadata (collapsible content) -->\n    <div id=\"chatMetadata\"\n         class=\"chat-metadata flex items-center gap-3 transition-all duration-200\"\n         role=\"region\"\n         aria-label=\"Chat Metadata\">\n      <!-- Status Indicator -->\n      <div class=\"status-indicator status-success\" role=\"status\" aria-live=\"polite\">\n        <span id=\"conversationStatus\">Active</span>\n      </div>\n      <!-- Token Count -->\n      <div class=\"badge badge-outline badge-sm\" aria-label=\"Conversation Token Count\">\n        <span id=\"conversationTokenCount\">0</span> tokens\n      </div>\n      <!-- More Options -->\n      <button class=\"btn btn-ghost btn-square btn-sm\"\n              aria-label=\"Chat options\"\n              aria-haspopup=\"menu\">\n        <svg class=\"icon-sm\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n        </svg>\n      </button>\n    </div>\n  </div>\n\n  <!-- Knowledge-Base status indicator (hidden by default) -->\n  <div id=\"kb-status-indicator\"\n       class=\"alert alert-info hidden flex items-start gap-2 text-sm mt-2\"\n       role=\"status\"\n       aria-live=\"polite\">\n    <svg class=\"w-4 h-4 flex-none\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n            d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n    </svg>\n    <span id=\"kb-status-message\">Knowledge base status</span>\n  </div>\n\n  <!-- Chat Messages with Loading States -->\n  <div id=\"chatMessages\"\n       class=\"chat-messages p-4 space-y-3 overflow-y-auto\"\n       style=\"height: 400px; max-height: 50vh;\"\n       role=\"log\"\n       aria-live=\"polite\"\n       aria-label=\"Chat Messages\">\n    <!-- Messages will be inserted here via JavaScript -->\n\n    <!-- Loading state template (hidden by default) -->\n    <div id=\"loadingMessageTemplate\" class=\"loading-message hidden flex items-start gap-2\">\n      <div class=\"skeleton-avatar w-10 h-10 rounded-full bg-base-200\"></div>\n      <div class=\"skeleton-content flex flex-col gap-1 flex-1\">\n        <div class=\"skeleton-text h-3 w-3/5 bg-base-200 rounded\"></div>\n        <div class=\"skeleton-text h-3 w-4/5 bg-base-200 rounded\"></div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Enhanced Chat Input -->\n  <div class=\"chat-input-container p-4 border-t bg-base-100\">\n    <div class=\"chat-input-row flex items-center gap-2\">\n      <!-- Attach File Button -->\n      <button class=\"btn btn-ghost btn-square\"\n              aria-label=\"Attach file\"\n              title=\"Attach file\">\n        <svg class=\"icon-md\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                d=\"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13\" />\n        </svg>\n      </button>\n\n      <!-- Chat Input Field -->\n      <input id=\"chatInput\"\n             class=\"chat-input flex-1 input input-bordered\"\n             type=\"text\"\n             placeholder=\"Type your message...\"\n             autocomplete=\"off\"\n             inputmode=\"text\"\n             enterkeyhint=\"send\"\n             aria-label=\"Chat message input\">\n\n      <!-- Send Button -->\n      <button id=\"chatSendBtn\"\n              class=\"chat-send-btn btn btn-primary\"\n              aria-label=\"Send message\"\n              title=\"Send message\">\n        <svg class=\"icon-md\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n        </svg>\n      </button>\n    </div>\n\n    <!-- Token counter & Input Hint -->\n    <div class=\"flex justify-between items-center text-xs text-base-content/60 mt-2\">\n      <span id=\"liveTokenCount\">0 tokens</span>\n      <span id=\"inputHint\" class=\"flex items-center gap-1\">\n        <kbd class=\"kbd kbd-xs\">Enter</kbd> to send\n      </span>\n    </div>\n  </div>\n</div>\n\n<!-- Empty State Template -->\n<template id=\"chatEmptyStateTemplate\">\n  <div class=\"empty-state flex flex-col items-center justify-center p-6 text-center text-base-content/70\">\n    <svg class=\"empty-state-icon w-12 h-12 mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n            d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\" />\n    </svg>\n    <h3 class=\"empty-state-title font-semibold text-lg\">Start a Conversation</h3>\n    <p class=\"empty-state-description mt-1\">\n      Send a message to begin chatting with the AI assistant\n    </p>\n  </div>\n</template>\n"
          },
          "redirectURL": "",
          "headersSize": 1076,
          "bodySize": 6017,
          "_transferSize": 7093,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:36.855Z",
        "time": 49.57200000353623,
        "timings": {
          "blocked": 4.764000009001233,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.1,
          "wait": 44.094000004952775,
          "receive": 0.6139999895822257,
          "_blocked_queueing": 4.540000009001233,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "other",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/static/favicon.ico",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3F%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b&project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "http/1.1",
          "headers": [
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "etag",
              "value": "\"d24d588668ef1aeab5d2552429ab7688\""
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "0"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:28 GMT"
            },
            {
              "name": "content-type",
              "value": "image/vnd.microsoft.icon"
            },
            {
              "name": "last-modified",
              "value": "Wed, 21 May 2025 18:09:28 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "image/vnd.microsoft.icon",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false,
          "_fulfilledBy": "(disk cache)"
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:36.878Z",
        "time": 1.3959999923827127,
        "timings": {
          "blocked": 0.793999994832091,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.34500000513438134,
          "receive": 0.2569999924162403,
          "_blocked_queueing": 0.650999994832091,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "fetchImpl",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 125,
                "columnNumber": 34
              },
              {
                "functionName": "",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 186,
                "columnNumber": 36
              },
              {
                "functionName": "apiRequest",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 300,
                "columnNumber": 6
              },
              {
                "functionName": "_req",
                "scriptId": "381",
                "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                "lineNumber": 328,
                "columnNumber": 36
              },
              {
                "functionName": "loadProjectDetails",
                "scriptId": "381",
                "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                "lineNumber": 536,
                "columnNumber": 37
              },
              {
                "functionName": "_fetchProjectData",
                "scriptId": "401",
                "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                "lineNumber": 748,
                "columnNumber": 48
              },
              {
                "functionName": "show",
                "scriptId": "401",
                "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                "lineNumber": 1008,
                "columnNumber": 15
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "show",
                  "scriptId": "401",
                  "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                  "lineNumber": 74,
                  "columnNumber": 32
                },
                {
                  "functionName": "show",
                  "scriptId": "400",
                  "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                  "lineNumber": 804,
                  "columnNumber": 49
                },
                {
                  "functionName": "activateView",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 181,
                  "columnNumber": 25
                },
                {
                  "functionName": "navigateTo",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 240,
                  "columnNumber": 28
                },
                {
                  "functionName": "navigateToProject",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 291,
                  "columnNumber": 11
                },
                {
                  "functionName": "onViewProject",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 1172,
                  "columnNumber": 30
                },
                {
                  "functionName": "_handleCardClick",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 699,
                  "columnNumber": 12
                },
                {
                  "functionName": "",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 249,
                  "columnNumber": 31
                },
                {
                  "functionName": "",
                  "scriptId": "410",
                  "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                  "lineNumber": 19,
                  "columnNumber": 18
                },
                {
                  "functionName": "wrapped",
                  "scriptId": "409",
                  "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                  "lineNumber": 142,
                  "columnNumber": 35
                },
                {
                  "functionName": "sentryWrapped",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 192306
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3F%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b&project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=cac0d0d505284fb9b622f0708e5f93c6,sentry-sample_rate=0.1,sentry-sampled=true"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "cac0d0d505284fb9b622f0708e5f93c6-9d89d403a47aab58-1"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1812,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "4"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:32 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4,
            "mimeType": "application/json",
            "compression": 0,
            "text": "null"
          },
          "redirectURL": "",
          "headersSize": 930,
          "bodySize": 4,
          "_transferSize": 934,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:36.930Z",
        "time": 71.98900000366848,
        "timings": {
          "blocked": 1.1510000012591481,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.09699999999999998,
          "wait": 70.3190000050664,
          "receive": 0.4219999973429367,
          "_blocked_queueing": 0.6270000012591481,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "fetchImpl",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 125,
                "columnNumber": 34
              },
              {
                "functionName": "",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 186,
                "columnNumber": 36
              },
              {
                "functionName": "apiRequest",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 300,
                "columnNumber": 6
              },
              {
                "functionName": "_req",
                "scriptId": "381",
                "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                "lineNumber": 328,
                "columnNumber": 36
              },
              {
                "functionName": "loadProjectConversations",
                "scriptId": "381",
                "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                "lineNumber": 681,
                "columnNumber": 31
              },
              {
                "functionName": "show",
                "scriptId": "401",
                "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                "lineNumber": 1057,
                "columnNumber": 34
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "show",
                  "scriptId": "401",
                  "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                  "lineNumber": 74,
                  "columnNumber": 32
                },
                {
                  "functionName": "show",
                  "scriptId": "400",
                  "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                  "lineNumber": 804,
                  "columnNumber": 49
                },
                {
                  "functionName": "activateView",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 181,
                  "columnNumber": 25
                },
                {
                  "functionName": "navigateTo",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 240,
                  "columnNumber": 28
                },
                {
                  "functionName": "navigateToProject",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 291,
                  "columnNumber": 11
                },
                {
                  "functionName": "onViewProject",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 1172,
                  "columnNumber": 30
                },
                {
                  "functionName": "_handleCardClick",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 699,
                  "columnNumber": 12
                },
                {
                  "functionName": "",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 249,
                  "columnNumber": 31
                },
                {
                  "functionName": "",
                  "scriptId": "410",
                  "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                  "lineNumber": 19,
                  "columnNumber": 18
                },
                {
                  "functionName": "wrapped",
                  "scriptId": "409",
                  "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                  "lineNumber": 142,
                  "columnNumber": 35
                },
                {
                  "functionName": "sentryWrapped",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 192306
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3F%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b&project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=cac0d0d505284fb9b622f0708e5f93c6,sentry-sample_rate=0.1,sentry-sampled=true"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "cac0d0d505284fb9b622f0708e5f93c6-ab9be9b6ce9beb93-1"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1826,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "4"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:32 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4,
            "mimeType": "application/json",
            "compression": 0,
            "text": "null"
          },
          "redirectURL": "",
          "headersSize": 930,
          "bodySize": 4,
          "_transferSize": 934,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:37.012Z",
        "time": 81.400000010035,
        "timings": {
          "blocked": 1.1020000005820765,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07900000000000007,
          "wait": 79.76199999298528,
          "receive": 0.45700001646764576,
          "_blocked_queueing": 0.6250000005820766,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126397",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "fetchImpl",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 125,
                "columnNumber": 34
              },
              {
                "functionName": "",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 186,
                "columnNumber": 36
              },
              {
                "functionName": "apiRequest",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 300,
                "columnNumber": 6
              },
              {
                "functionName": "_req",
                "scriptId": "381",
                "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                "lineNumber": 328,
                "columnNumber": 36
              },
              {
                "functionName": "loadProjectStats",
                "scriptId": "381",
                "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                "lineNumber": 644,
                "columnNumber": 31
              },
              {
                "functionName": "_restoreStatsCounts",
                "scriptId": "401",
                "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                "lineNumber": 1186,
                "columnNumber": 24
              },
              {
                "functionName": "show",
                "scriptId": "401",
                "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                "lineNumber": 1063,
                "columnNumber": 9
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "show",
                  "scriptId": "401",
                  "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                  "lineNumber": 74,
                  "columnNumber": 32
                },
                {
                  "functionName": "show",
                  "scriptId": "400",
                  "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                  "lineNumber": 804,
                  "columnNumber": 49
                },
                {
                  "functionName": "activateView",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 181,
                  "columnNumber": 25
                },
                {
                  "functionName": "navigateTo",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 240,
                  "columnNumber": 28
                },
                {
                  "functionName": "navigateToProject",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 291,
                  "columnNumber": 11
                },
                {
                  "functionName": "onViewProject",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 1172,
                  "columnNumber": 30
                },
                {
                  "functionName": "_handleCardClick",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 699,
                  "columnNumber": 12
                },
                {
                  "functionName": "",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 249,
                  "columnNumber": 31
                },
                {
                  "functionName": "",
                  "scriptId": "410",
                  "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                  "lineNumber": 19,
                  "columnNumber": 18
                },
                {
                  "functionName": "wrapped",
                  "scriptId": "409",
                  "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                  "lineNumber": 142,
                  "columnNumber": 35
                },
                {
                  "functionName": "sentryWrapped",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 192306
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/stats",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3F%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b&project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=cac0d0d505284fb9b622f0708e5f93c6,sentry-sample_rate=0.1,sentry-sampled=true"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "cac0d0d505284fb9b622f0708e5f93c6-8223739b00f9d3cc-1"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1818,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "4"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:32 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4,
            "mimeType": "application/json",
            "compression": 0,
            "text": "null"
          },
          "redirectURL": "",
          "headersSize": 930,
          "bodySize": 4,
          "_transferSize": 934,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:37.097Z",
        "time": 84.51800000329968,
        "timings": {
          "blocked": 1.2200000026132911,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.138,
          "wait": 82.49300000043772,
          "receive": 0.6670000002486631,
          "_blocked_queueing": 0.6310000026132911,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126409",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "fetchImpl",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 125,
                "columnNumber": 34
              },
              {
                "functionName": "",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 186,
                "columnNumber": 36
              },
              {
                "functionName": "apiRequest",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 300,
                "columnNumber": 6
              },
              {
                "functionName": "_req",
                "scriptId": "381",
                "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                "lineNumber": 328,
                "columnNumber": 36
              },
              {
                "functionName": "loadProjectConversations",
                "scriptId": "381",
                "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                "lineNumber": 681,
                "columnNumber": 31
              },
              {
                "functionName": "_loadTabContent",
                "scriptId": "401",
                "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                "lineNumber": 678,
                "columnNumber": 28
              },
              {
                "functionName": "switchTab",
                "scriptId": "401",
                "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                "lineNumber": 664,
                "columnNumber": 9
              },
              {
                "functionName": "show",
                "scriptId": "401",
                "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                "lineNumber": 1064,
                "columnNumber": 9
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "show",
                  "scriptId": "401",
                  "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                  "lineNumber": 74,
                  "columnNumber": 32
                },
                {
                  "functionName": "show",
                  "scriptId": "400",
                  "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                  "lineNumber": 804,
                  "columnNumber": 49
                },
                {
                  "functionName": "activateView",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 181,
                  "columnNumber": 25
                },
                {
                  "functionName": "navigateTo",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 240,
                  "columnNumber": 28
                },
                {
                  "functionName": "navigateToProject",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 291,
                  "columnNumber": 11
                },
                {
                  "functionName": "onViewProject",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 1172,
                  "columnNumber": 30
                },
                {
                  "functionName": "_handleCardClick",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 699,
                  "columnNumber": 12
                },
                {
                  "functionName": "",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 249,
                  "columnNumber": 31
                },
                {
                  "functionName": "",
                  "scriptId": "410",
                  "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                  "lineNumber": 19,
                  "columnNumber": 18
                },
                {
                  "functionName": "wrapped",
                  "scriptId": "409",
                  "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                  "lineNumber": 142,
                  "columnNumber": 35
                },
                {
                  "functionName": "sentryWrapped",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 192306
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3F%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b&project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=cac0d0d505284fb9b622f0708e5f93c6,sentry-sample_rate=0.1,sentry-sampled=true"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "cac0d0d505284fb9b622f0708e5f93c6-aea9d3c9dc5512a0-1"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1826,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "4"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:32 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4,
            "mimeType": "application/json",
            "compression": 0,
            "text": "null"
          },
          "redirectURL": "",
          "headersSize": 930,
          "bodySize": 4,
          "_transferSize": 934,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:37.098Z",
        "time": 124.77100000251085,
        "timings": {
          "blocked": 1.5529999980814755,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.11499999999999999,
          "wait": 122.65699999896158,
          "receive": 0.44600000546779484,
          "_blocked_queueing": 0.9399999980814755,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126339",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "fetchImpl",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 125,
                "columnNumber": 34
              },
              {
                "functionName": "",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 186,
                "columnNumber": 36
              },
              {
                "functionName": "apiRequest",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 300,
                "columnNumber": 6
              },
              {
                "functionName": "_req",
                "scriptId": "381",
                "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                "lineNumber": 328,
                "columnNumber": 36
              },
              {
                "functionName": "loadProjectDetails",
                "scriptId": "381",
                "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                "lineNumber": 536,
                "columnNumber": 37
              },
              {
                "functionName": "show",
                "scriptId": "400",
                "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                "lineNumber": 808,
                "columnNumber": 60
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "activateView",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 181,
                  "columnNumber": 25
                },
                {
                  "functionName": "navigateTo",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 240,
                  "columnNumber": 28
                },
                {
                  "functionName": "navigateToProject",
                  "scriptId": "389",
                  "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                  "lineNumber": 291,
                  "columnNumber": 11
                },
                {
                  "functionName": "onViewProject",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 1172,
                  "columnNumber": 30
                },
                {
                  "functionName": "_handleCardClick",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 699,
                  "columnNumber": 12
                },
                {
                  "functionName": "",
                  "scriptId": "402",
                  "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                  "lineNumber": 249,
                  "columnNumber": 31
                },
                {
                  "functionName": "",
                  "scriptId": "410",
                  "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                  "lineNumber": 19,
                  "columnNumber": 18
                },
                {
                  "functionName": "wrapped",
                  "scriptId": "409",
                  "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                  "lineNumber": 142,
                  "columnNumber": 35
                },
                {
                  "functionName": "sentryWrapped",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 192306
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3F%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b&project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=cac0d0d505284fb9b622f0708e5f93c6,sentry-sample_rate=0.1,sentry-sampled=true"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "cac0d0d505284fb9b622f0708e5f93c6-8bd193826d9450ce-1"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1812,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "4"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:32 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4,
            "mimeType": "application/json",
            "compression": 0,
            "text": "null"
          },
          "redirectURL": "",
          "headersSize": 930,
          "bodySize": 4,
          "_transferSize": 934,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:37.101Z",
        "time": 80.87599999271333,
        "timings": {
          "blocked": 1.0859999875510111,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.08799999999999997,
          "wait": 79.19399999325722,
          "receive": 0.5080000119050965,
          "_blocked_queueing": 0.6079999875510111,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126409",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "fetchImpl",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 125,
                "columnNumber": 34
              },
              {
                "functionName": "",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 186,
                "columnNumber": 36
              },
              {
                "functionName": "apiRequest",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 300,
                "columnNumber": 6
              },
              {
                "functionName": "renderConversations",
                "scriptId": "391",
                "url": "http://127.0.0.1:8000/static/js/uiRenderer.js",
                "lineNumber": 200,
                "columnNumber": 29
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "ProjectDetailsComponent.renderConversations",
                  "scriptId": "401",
                  "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                  "lineNumber": 132,
                  "columnNumber": 79
                },
                {
                  "functionName": "",
                  "scriptId": "401",
                  "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                  "lineNumber": 544,
                  "columnNumber": 15
                },
                {
                  "functionName": "",
                  "scriptId": "410",
                  "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                  "lineNumber": 19,
                  "columnNumber": 18
                },
                {
                  "functionName": "wrapped",
                  "scriptId": "409",
                  "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                  "lineNumber": 142,
                  "columnNumber": 35
                },
                {
                  "functionName": "sentryWrapped",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 192306
                },
                {
                  "functionName": "dispatchEvent",
                  "scriptId": "408",
                  "url": "http://127.0.0.1:8000/static/js/utils/domAPI.js",
                  "lineNumber": 279,
                  "columnNumber": 20
                },
                {
                  "functionName": "_emit",
                  "scriptId": "381",
                  "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                  "lineNumber": 443,
                  "columnNumber": 24
                },
                {
                  "functionName": "loadProjectConversations",
                  "scriptId": "381",
                  "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                  "lineNumber": 687,
                  "columnNumber": 13
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "show",
                    "scriptId": "401",
                    "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                    "lineNumber": 1057,
                    "columnNumber": 34
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "show",
                      "scriptId": "401",
                      "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                      "lineNumber": 74,
                      "columnNumber": 32
                    },
                    {
                      "functionName": "show",
                      "scriptId": "400",
                      "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                      "lineNumber": 804,
                      "columnNumber": 49
                    },
                    {
                      "functionName": "activateView",
                      "scriptId": "389",
                      "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                      "lineNumber": 181,
                      "columnNumber": 25
                    },
                    {
                      "functionName": "navigateTo",
                      "scriptId": "389",
                      "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                      "lineNumber": 240,
                      "columnNumber": 28
                    },
                    {
                      "functionName": "navigateToProject",
                      "scriptId": "389",
                      "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                      "lineNumber": 291,
                      "columnNumber": 11
                    },
                    {
                      "functionName": "onViewProject",
                      "scriptId": "402",
                      "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                      "lineNumber": 1172,
                      "columnNumber": 30
                    },
                    {
                      "functionName": "_handleCardClick",
                      "scriptId": "402",
                      "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                      "lineNumber": 699,
                      "columnNumber": 12
                    },
                    {
                      "functionName": "",
                      "scriptId": "402",
                      "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                      "lineNumber": 249,
                      "columnNumber": 31
                    },
                    {
                      "functionName": "",
                      "scriptId": "410",
                      "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                      "lineNumber": 19,
                      "columnNumber": 18
                    },
                    {
                      "functionName": "wrapped",
                      "scriptId": "409",
                      "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                      "lineNumber": 142,
                      "columnNumber": 35
                    },
                    {
                      "functionName": "sentryWrapped",
                      "scriptId": "373",
                      "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                      "lineNumber": 1,
                      "columnNumber": 192306
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3F%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b&project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=cac0d0d505284fb9b622f0708e5f93c6,sentry-sample_rate=0.1,sentry-sampled=true"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "cac0d0d505284fb9b622f0708e5f93c6-a22266e0f8443569-1"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1826,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "4"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:32 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4,
            "mimeType": "application/json",
            "compression": 0,
            "text": "null"
          },
          "redirectURL": "",
          "headersSize": 930,
          "bodySize": 4,
          "_transferSize": 934,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:37.101Z",
        "time": 200.12400000996422,
        "timings": {
          "blocked": 121.56500001038425,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.07299999999999329,
          "wait": 78.0260000039246,
          "receive": 0.4599999956553802,
          "_blocked_queueing": 0.5250000103842467,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126409",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 11559
              },
              {
                "functionName": "fetchImpl",
                "scriptId": "380",
                "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                "lineNumber": 125,
                "columnNumber": 34
              },
              {
                "functionName": "",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 186,
                "columnNumber": 36
              },
              {
                "functionName": "apiRequest",
                "scriptId": "383",
                "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                "lineNumber": 300,
                "columnNumber": 6
              },
              {
                "functionName": "renderConversations",
                "scriptId": "391",
                "url": "http://127.0.0.1:8000/static/js/uiRenderer.js",
                "lineNumber": 200,
                "columnNumber": 29
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "ProjectDetailsComponent.renderConversations",
                  "scriptId": "401",
                  "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                  "lineNumber": 132,
                  "columnNumber": 79
                },
                {
                  "functionName": "",
                  "scriptId": "401",
                  "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                  "lineNumber": 544,
                  "columnNumber": 15
                },
                {
                  "functionName": "",
                  "scriptId": "410",
                  "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                  "lineNumber": 19,
                  "columnNumber": 18
                },
                {
                  "functionName": "wrapped",
                  "scriptId": "409",
                  "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                  "lineNumber": 142,
                  "columnNumber": 35
                },
                {
                  "functionName": "sentryWrapped",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 192306
                },
                {
                  "functionName": "dispatchEvent",
                  "scriptId": "408",
                  "url": "http://127.0.0.1:8000/static/js/utils/domAPI.js",
                  "lineNumber": 279,
                  "columnNumber": 20
                },
                {
                  "functionName": "_emit",
                  "scriptId": "381",
                  "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                  "lineNumber": 443,
                  "columnNumber": 24
                },
                {
                  "functionName": "loadProjectConversations",
                  "scriptId": "381",
                  "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                  "lineNumber": 687,
                  "columnNumber": 13
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "_loadTabContent",
                    "scriptId": "401",
                    "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                    "lineNumber": 678,
                    "columnNumber": 28
                  },
                  {
                    "functionName": "switchTab",
                    "scriptId": "401",
                    "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                    "lineNumber": 664,
                    "columnNumber": 9
                  },
                  {
                    "functionName": "show",
                    "scriptId": "401",
                    "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                    "lineNumber": 1064,
                    "columnNumber": 9
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "show",
                      "scriptId": "401",
                      "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                      "lineNumber": 74,
                      "columnNumber": 32
                    },
                    {
                      "functionName": "show",
                      "scriptId": "400",
                      "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                      "lineNumber": 804,
                      "columnNumber": 49
                    },
                    {
                      "functionName": "activateView",
                      "scriptId": "389",
                      "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                      "lineNumber": 181,
                      "columnNumber": 25
                    },
                    {
                      "functionName": "navigateTo",
                      "scriptId": "389",
                      "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                      "lineNumber": 240,
                      "columnNumber": 28
                    },
                    {
                      "functionName": "navigateToProject",
                      "scriptId": "389",
                      "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                      "lineNumber": 291,
                      "columnNumber": 11
                    },
                    {
                      "functionName": "onViewProject",
                      "scriptId": "402",
                      "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                      "lineNumber": 1172,
                      "columnNumber": 30
                    },
                    {
                      "functionName": "_handleCardClick",
                      "scriptId": "402",
                      "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                      "lineNumber": 699,
                      "columnNumber": 12
                    },
                    {
                      "functionName": "",
                      "scriptId": "402",
                      "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                      "lineNumber": 249,
                      "columnNumber": 31
                    },
                    {
                      "functionName": "",
                      "scriptId": "410",
                      "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                      "lineNumber": 19,
                      "columnNumber": 18
                    },
                    {
                      "functionName": "wrapped",
                      "scriptId": "409",
                      "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                      "lineNumber": 142,
                      "columnNumber": 35
                    },
                    {
                      "functionName": "sentryWrapped",
                      "scriptId": "373",
                      "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                      "lineNumber": 1,
                      "columnNumber": 192306
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "8000",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:8000/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Host",
              "value": "127.0.0.1:8000"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8000/??%3F%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b&project=f304c5f9-fd3d-4a21-9073-ce455971943b"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            },
            {
              "name": "baggage",
              "value": "sentry-environment=production,sentry-release=azure_chatapp%401.0.0%2Bdev,sentry-public_key=b03711f63d1160f48dcaeda3edae14ac,sentry-trace_id=cac0d0d505284fb9b622f0708e5f93c6,sentry-sample_rate=0.1,sentry-sampled=true"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sentry-trace",
              "value": "cac0d0d505284fb9b622f0708e5f93c6-8f6fdaa648bfff16-1"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": 1826,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "content-length",
              "value": "4"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'self' blob:; connect-src 'self' http://localhost:8000 http://localhost:8001 https://o4508070823395328.ingest.us.sentry.io https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://js.sentry-cdn.com https://browser.sentry-cdn.com; worker-src 'self' blob:; child-src  'self' blob:; img-src 'self' data: blob: https://*.sentry.io https://*.sentry-cdn.com; style-src 'self' 'unsafe-inline'; font-src  'self';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:32 GMT"
            },
            {
              "name": "server",
              "value": "uvicorn"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4,
            "mimeType": "application/json",
            "compression": 0,
            "text": "null"
          },
          "redirectURL": "",
          "headersSize": 930,
          "bodySize": 4,
          "_transferSize": 934,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "127.0.0.1",
        "startedDateTime": "2025-06-08T14:49:37.229Z",
        "time": 156.009999991511,
        "timings": {
          "blocked": 72.90499999872782,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.10099999999999909,
          "wait": 82.4749999955967,
          "receive": 0.5289999971864745,
          "_blocked_queueing": 0.6839999987278134,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_connectionId": "126370",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 203349
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55796
              },
              {
                "functionName": "add",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17847
              },
              {
                "functionName": "s",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 55787
              },
              {
                "functionName": "In",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201641
              },
              {
                "functionName": "sendEvent",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 198015
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 201231
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 16990
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17577
              },
              {
                "functionName": "p",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17531
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 17074
              },
              {
                "functionName": "Xt",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 16889
              },
              {
                "functionName": "then",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 16943
              },
              {
                "functionName": "On",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 200923
              },
              {
                "functionName": "Tn",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 199862
              },
              {
                "functionName": "captureEvent",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 196425
              },
              {
                "functionName": "captureEvent",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 35614
              },
              {
                "functionName": "captureEvent",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 37263
              },
              {
                "functionName": "end",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 46838
              },
              {
                "functionName": "end",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 49421
              },
              {
                "functionName": "",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 50106
              },
              {
                "functionName": "sentryWrapped",
                "scriptId": "373",
                "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                "lineNumber": 1,
                "columnNumber": 192306
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 212752
                },
                {
                  "functionName": "Rt",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 50019
                },
                {
                  "functionName": "bt",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 50379
                },
                {
                  "functionName": "n",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 49572
                },
                {
                  "functionName": "t.end",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 48359
                },
                {
                  "functionName": "vs",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 68708
                },
                {
                  "functionName": "",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 70207
                },
                {
                  "functionName": "st",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 7533
                },
                {
                  "functionName": "",
                  "scriptId": "373",
                  "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                  "lineNumber": 1,
                  "columnNumber": 11580
                }
              ],
              "parent": {
                "description": "Promise.then",
                "callFrames": [
                  {
                    "functionName": "",
                    "scriptId": "373",
                    "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                    "lineNumber": 1,
                    "columnNumber": 11570
                  },
                  {
                    "functionName": "fetchImpl",
                    "scriptId": "380",
                    "url": "http://127.0.0.1:8000/static/js/utils/browserService.js",
                    "lineNumber": 125,
                    "columnNumber": 34
                  },
                  {
                    "functionName": "",
                    "scriptId": "383",
                    "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                    "lineNumber": 186,
                    "columnNumber": 36
                  },
                  {
                    "functionName": "apiRequest",
                    "scriptId": "383",
                    "url": "http://127.0.0.1:8000/static/js/utils/apiClient.js",
                    "lineNumber": 300,
                    "columnNumber": 6
                  },
                  {
                    "functionName": "renderConversations",
                    "scriptId": "391",
                    "url": "http://127.0.0.1:8000/static/js/uiRenderer.js",
                    "lineNumber": 200,
                    "columnNumber": 29
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "ProjectDetailsComponent.renderConversations",
                      "scriptId": "401",
                      "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                      "lineNumber": 132,
                      "columnNumber": 79
                    },
                    {
                      "functionName": "",
                      "scriptId": "401",
                      "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                      "lineNumber": 544,
                      "columnNumber": 15
                    },
                    {
                      "functionName": "",
                      "scriptId": "410",
                      "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                      "lineNumber": 19,
                      "columnNumber": 18
                    },
                    {
                      "functionName": "wrapped",
                      "scriptId": "409",
                      "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                      "lineNumber": 142,
                      "columnNumber": 35
                    },
                    {
                      "functionName": "sentryWrapped",
                      "scriptId": "373",
                      "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                      "lineNumber": 1,
                      "columnNumber": 192306
                    },
                    {
                      "functionName": "dispatchEvent",
                      "scriptId": "408",
                      "url": "http://127.0.0.1:8000/static/js/utils/domAPI.js",
                      "lineNumber": 279,
                      "columnNumber": 20
                    },
                    {
                      "functionName": "_emit",
                      "scriptId": "381",
                      "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                      "lineNumber": 443,
                      "columnNumber": 24
                    },
                    {
                      "functionName": "loadProjectConversations",
                      "scriptId": "381",
                      "url": "http://127.0.0.1:8000/static/js/projectManager.js",
                      "lineNumber": 687,
                      "columnNumber": 13
                    }
                  ],
                  "parent": {
                    "description": "await",
                    "callFrames": [
                      {
                        "functionName": "_loadTabContent",
                        "scriptId": "401",
                        "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                        "lineNumber": 678,
                        "columnNumber": 28
                      },
                      {
                        "functionName": "switchTab",
                        "scriptId": "401",
                        "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                        "lineNumber": 664,
                        "columnNumber": 9
                      },
                      {
                        "functionName": "show",
                        "scriptId": "401",
                        "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                        "lineNumber": 1064,
                        "columnNumber": 9
                      }
                    ],
                    "parent": {
                      "description": "await",
                      "callFrames": [
                        {
                          "functionName": "show",
                          "scriptId": "401",
                          "url": "http://127.0.0.1:8000/static/js/projectDetailsComponent.js",
                          "lineNumber": 74,
                          "columnNumber": 32
                        },
                        {
                          "functionName": "show",
                          "scriptId": "400",
                          "url": "http://127.0.0.1:8000/static/js/projectDashboard.js",
                          "lineNumber": 804,
                          "columnNumber": 49
                        },
                        {
                          "functionName": "activateView",
                          "scriptId": "389",
                          "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                          "lineNumber": 181,
                          "columnNumber": 25
                        },
                        {
                          "functionName": "navigateTo",
                          "scriptId": "389",
                          "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                          "lineNumber": 240,
                          "columnNumber": 28
                        },
                        {
                          "functionName": "navigateToProject",
                          "scriptId": "389",
                          "url": "http://127.0.0.1:8000/static/js/navigationService.js",
                          "lineNumber": 291,
                          "columnNumber": 11
                        },
                        {
                          "functionName": "onViewProject",
                          "scriptId": "402",
                          "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                          "lineNumber": 1172,
                          "columnNumber": 30
                        },
                        {
                          "functionName": "_handleCardClick",
                          "scriptId": "402",
                          "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                          "lineNumber": 699,
                          "columnNumber": 12
                        },
                        {
                          "functionName": "",
                          "scriptId": "402",
                          "url": "http://127.0.0.1:8000/static/js/projectListComponent.js",
                          "lineNumber": 249,
                          "columnNumber": 31
                        },
                        {
                          "functionName": "",
                          "scriptId": "410",
                          "url": "http://127.0.0.1:8000/static/js/safeHandler.js",
                          "lineNumber": 19,
                          "columnNumber": 18
                        },
                        {
                          "functionName": "wrapped",
                          "scriptId": "409",
                          "url": "http://127.0.0.1:8000/static/js/eventHandler.js",
                          "lineNumber": 142,
                          "columnNumber": 35
                        },
                        {
                          "functionName": "sentryWrapped",
                          "scriptId": "373",
                          "url": "https://browser.sentry-cdn.com/7.100.0/bundle.tracing.replay.min.js",
                          "lineNumber": 1,
                          "columnNumber": 192306
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://o4508070823395328.ingest.us.sentry.io/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": "o4508070823395328.ingest.us.sentry.io"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/4509138383863808/envelope/?sentry_key=b03711f63d1160f48dcaeda3edae14ac&sentry_version=7&sentry_client=sentry.javascript.browser%2F7.100.0"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "content-length",
              "value": "49088"
            },
            {
              "name": "content-type",
              "value": "text/plain;charset=UTF-8"
            },
            {
              "name": "dnt",
              "value": "1"
            },
            {
              "name": "origin",
              "value": "http://127.0.0.1:8000"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "http://127.0.0.1:8000/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0"
            }
          ],
          "queryString": [
            {
              "name": "sentry_key",
              "value": "b03711f63d1160f48dcaeda3edae14ac"
            },
            {
              "name": "sentry_version",
              "value": "7"
            },
            {
              "name": "sentry_client",
              "value": "sentry.javascript.browser%2F7.100.0"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 49088,
          "postData": {
            "mimeType": "text/plain;charset=UTF-8",
            "text": "{\"event_id\":\"c592565da28f45048ccf8ac1697fb0de\",\"sent_at\":\"2025-06-08T14:49:38.392Z\",\"sdk\":{\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\"},\"trace\":{\"environment\":\"production\",\"release\":\"azure_chatapp@1.0.0+dev\",\"public_key\":\"b03711f63d1160f48dcaeda3edae14ac\",\"trace_id\":\"cac0d0d505284fb9b622f0708e5f93c6\",\"sample_rate\":\"0.1\",\"sampled\":\"true\"}}\n{\"type\":\"transaction\"}\n{\"contexts\":{\"trace\":{\"data\":{\"sentry.origin\":\"auto.navigation.browser\",\"sentry.op\":\"navigation\",\"sentry.sample_rate\":0.1},\"op\":\"navigation\",\"span_id\":\"8a46850f0f3b06c0\",\"tags\":{\"effectiveConnectionType\":\"4g\",\"deviceMemory\":\"8 GB\",\"hardwareConcurrency\":\"12\"},\"trace_id\":\"cac0d0d505284fb9b622f0708e5f93c6\",\"origin\":\"auto.navigation.browser\"}},\"spans\":[{\"data\":{\"http.response.status_code\":200,\"sentry.origin\":\"auto.http.browser\",\"sentry.op\":\"http.client\",\"url\":\"/static/html/chat_ui.html\",\"type\":\"fetch\",\"http.method\":\"GET\",\"http.response_content_length\":6017,\"network.protocol.version\":\"1.1\",\"network.protocol.name\":\"http\",\"http.request.redirect_start\":1749394171.643,\"http.request.fetch_start\":1749394176.8553,\"http.request.domain_lookup_start\":1749394176.8553,\"http.request.domain_lookup_end\":1749394176.8553,\"http.request.connect_start\":1749394176.8553,\"http.request.secure_connection_start\":1749394171.643,\"http.request.connection_end\":1749394176.8553,\"http.request.request_start\":1749394176.86,\"http.request.response_start\":1749394176.9041002,\"http.request.response_end\":1749394176.9048},\"description\":\"GET /static/html/chat_ui.html\",\"op\":\"http.client\",\"parent_span_id\":\"8a46850f0f3b06c0\",\"span_id\":\"8abe9d579a85d1ad\",\"start_timestamp\":1749394176.8552997,\"status\":\"ok\",\"tags\":{\"http.status_code\":\"200\"},\"timestamp\":1749394176.9067,\"trace_id\":\"cac0d0d505284fb9b622f0708e5f93c6\",\"origin\":\"auto.http.browser\"},{\"data\":{\"http.response.status_code\":200,\"sentry.origin\":\"auto.http.browser\",\"sentry.op\":\"http.client\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b\",\"type\":\"fetch\",\"http.method\":\"GET\",\"http.response_content_length\":4,\"network.protocol.version\":\"1.1\",\"network.protocol.name\":\"http\",\"http.request.redirect_start\":1749394171.643,\"http.request.fetch_start\":1749394176.9304,\"http.request.domain_lookup_start\":1749394176.9304,\"http.request.domain_lookup_end\":1749394176.9304,\"http.request.connect_start\":1749394176.9304,\"http.request.secure_connection_start\":1749394171.643,\"http.request.connection_end\":1749394176.9304,\"http.request.request_start\":1749394176.9315,\"http.request.response_start\":1749394177.0016,\"http.request.response_end\":1749394177.0023},\"description\":\"GET /api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b\",\"op\":\"http.client\",\"parent_span_id\":\"8a46850f0f3b06c0\",\"span_id\":\"9d89d403a47aab58\",\"start_timestamp\":1749394176.9304,\"status\":\"ok\",\"tags\":{\"http.status_code\":\"200\"},\"timestamp\":1749394177.0038998,\"trace_id\":\"cac0d0d505284fb9b622f0708e5f93c6\",\"origin\":\"auto.http.browser\"},{\"data\":{\"http.response.status_code\":200,\"sentry.origin\":\"auto.http.browser\",\"sentry.op\":\"http.client\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations\",\"type\":\"fetch\",\"http.method\":\"GET\",\"http.response_content_length\":4,\"network.protocol.version\":\"1.1\",\"network.protocol.name\":\"http\",\"http.request.redirect_start\":1749394171.643,\"http.request.fetch_start\":1749394177.0121999,\"http.request.domain_lookup_start\":1749394177.0121999,\"http.request.domain_lookup_end\":1749394177.0121999,\"http.request.connect_start\":1749394177.0121999,\"http.request.secure_connection_start\":1749394171.643,\"http.request.connection_end\":1749394177.0121999,\"http.request.request_start\":1749394177.0133,\"http.request.response_start\":1749394177.0928998,\"http.request.response_end\":1749394177.0936},\"description\":\"GET /api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations\",\"op\":\"http.client\",\"parent_span_id\":\"8a46850f0f3b06c0\",\"span_id\":\"ab9be9b6ce9beb93\",\"start_timestamp\":1749394177.0121999,\"status\":\"ok\",\"tags\":{\"http.status_code\":\"200\"},\"timestamp\":1749394177.0949,\"trace_id\":\"cac0d0d505284fb9b622f0708e5f93c6\",\"origin\":\"auto.http.browser\"},{\"data\":{\"http.response.status_code\":200,\"sentry.origin\":\"auto.http.browser\",\"sentry.op\":\"http.client\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/stats\",\"type\":\"fetch\",\"http.method\":\"GET\",\"http.response_content_length\":4,\"network.protocol.version\":\"1.1\",\"network.protocol.name\":\"http\",\"http.request.redirect_start\":1749394171.643,\"http.request.fetch_start\":1749394177.0968,\"http.request.domain_lookup_start\":1749394177.0968,\"http.request.domain_lookup_end\":1749394177.0968,\"http.request.connect_start\":1749394177.0968,\"http.request.secure_connection_start\":1749394171.643,\"http.request.connection_end\":1749394177.0968,\"http.request.request_start\":1749394177.098,\"http.request.response_start\":1749394177.1803,\"http.request.response_end\":1749394177.1812},\"description\":\"GET /api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/stats\",\"op\":\"http.client\",\"parent_span_id\":\"8a46850f0f3b06c0\",\"span_id\":\"8223739b00f9d3cc\",\"start_timestamp\":1749394177.0969,\"status\":\"ok\",\"tags\":{\"http.status_code\":\"200\"},\"timestamp\":1749394177.183,\"trace_id\":\"cac0d0d505284fb9b622f0708e5f93c6\",\"origin\":\"auto.http.browser\"},{\"data\":{\"http.response.status_code\":200,\"sentry.origin\":\"auto.http.browser\",\"sentry.op\":\"http.client\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations\",\"type\":\"fetch\",\"http.method\":\"GET\",\"network.protocol.version\":\"1.1\",\"network.protocol.name\":\"http\",\"http.request.redirect_start\":1749394171.643,\"http.request.fetch_start\":1749394177.0121999,\"http.request.domain_lookup_start\":1749394177.0121999,\"http.request.domain_lookup_end\":1749394177.0121999,\"http.request.connect_start\":1749394177.0121999,\"http.request.secure_connection_start\":1749394171.643,\"http.request.connection_end\":1749394177.0121999,\"http.request.request_start\":1749394177.0133,\"http.request.response_start\":1749394177.0928998,\"http.request.response_end\":1749394177.0936,\"http.response_content_length\":4},\"description\":\"GET /api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations\",\"op\":\"http.client\",\"parent_span_id\":\"8a46850f0f3b06c0\",\"span_id\":\"aea9d3c9dc5512a0\",\"start_timestamp\":1749394177.0981,\"status\":\"ok\",\"tags\":{\"http.status_code\":\"200\"},\"timestamp\":1749394177.2245998,\"trace_id\":\"cac0d0d505284fb9b622f0708e5f93c6\",\"origin\":\"auto.http.browser\"},{\"data\":{\"http.response.status_code\":200,\"sentry.origin\":\"auto.http.browser\",\"sentry.op\":\"http.client\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b\",\"type\":\"fetch\",\"http.method\":\"GET\",\"http.response_content_length\":4,\"network.protocol.version\":\"1.1\",\"network.protocol.name\":\"http\",\"http.request.redirect_start\":1749394171.643,\"http.request.fetch_start\":1749394177.1007,\"http.request.domain_lookup_start\":1749394177.1007,\"http.request.domain_lookup_end\":1749394177.1007,\"http.request.connect_start\":1749394177.1007,\"http.request.secure_connection_start\":1749394171.643,\"http.request.connection_end\":1749394177.1007,\"http.request.request_start\":1749394177.1017,\"http.request.response_start\":1749394177.1804,\"http.request.response_end\":1749394177.1815},\"description\":\"GET /api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b\",\"op\":\"http.client\",\"parent_span_id\":\"8a46850f0f3b06c0\",\"span_id\":\"8bd193826d9450ce\",\"start_timestamp\":1749394177.1007998,\"status\":\"ok\",\"tags\":{\"http.status_code\":\"200\"},\"timestamp\":1749394177.1834,\"trace_id\":\"cac0d0d505284fb9b622f0708e5f93c6\",\"origin\":\"auto.http.browser\"},{\"data\":{\"http.response.status_code\":200,\"sentry.origin\":\"auto.http.browser\",\"sentry.op\":\"http.client\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations\",\"type\":\"fetch\",\"http.method\":\"GET\",\"network.protocol.version\":\"1.1\",\"network.protocol.name\":\"http\",\"http.request.redirect_start\":1749394171.643,\"http.request.fetch_start\":1749394177.0121999,\"http.request.domain_lookup_start\":1749394177.0121999,\"http.request.domain_lookup_end\":1749394177.0121999,\"http.request.connect_start\":1749394177.0121999,\"http.request.secure_connection_start\":1749394171.643,\"http.request.connection_end\":1749394177.0121999,\"http.request.request_start\":1749394177.0133,\"http.request.response_start\":1749394177.0928998,\"http.request.response_end\":1749394177.0936,\"http.response_content_length\":4},\"description\":\"GET /api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations\",\"op\":\"http.client\",\"parent_span_id\":\"8a46850f0f3b06c0\",\"span_id\":\"a22266e0f8443569\",\"start_timestamp\":1749394177.1017997,\"status\":\"ok\",\"tags\":{\"http.status_code\":\"200\"},\"timestamp\":1749394177.3033,\"trace_id\":\"cac0d0d505284fb9b622f0708e5f93c6\",\"origin\":\"auto.http.browser\"},{\"data\":{\"http.response.status_code\":200,\"sentry.origin\":\"auto.http.browser\",\"sentry.op\":\"http.client\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations\",\"type\":\"fetch\",\"http.method\":\"GET\",\"network.protocol.version\":\"1.1\",\"network.protocol.name\":\"http\",\"http.request.redirect_start\":1749394171.643,\"http.request.fetch_start\":1749394177.1016002,\"http.request.domain_lookup_start\":1749394177.1016002,\"http.request.domain_lookup_end\":1749394177.1016002,\"http.request.connect_start\":1749394177.1016002,\"http.request.secure_connection_start\":1749394171.643,\"http.request.connection_end\":1749394177.1016002,\"http.request.request_start\":1749394177.2231002,\"http.request.response_start\":1749394177.301,\"http.request.response_end\":1749394177.3016999,\"http.response_content_length\":4},\"description\":\"GET /api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations\",\"op\":\"http.client\",\"parent_span_id\":\"8a46850f0f3b06c0\",\"span_id\":\"8f6fdaa648bfff16\",\"start_timestamp\":1749394177.2292,\"status\":\"ok\",\"tags\":{\"http.status_code\":\"200\"},\"timestamp\":1749394177.3865,\"trace_id\":\"cac0d0d505284fb9b622f0708e5f93c6\",\"origin\":\"auto.http.browser\"},{\"data\":{\"http.response_transfer_size\":0,\"http.response_content_length\":0,\"http.decoded_response_content_length\":0,\"resource.render_blocking_status\":\"non-blocking\",\"url.scheme\":\"http\",\"server.address\":\"127.0.0.1:8000\",\"url.same_origin\":true,\"sentry.origin\":\"auto.resource.browser.metrics\",\"sentry.op\":\"resource.other\"},\"description\":\"/static/favicon.ico\",\"op\":\"resource.other\",\"parent_span_id\":\"8a46850f0f3b06c0\",\"span_id\":\"97fff1bf3c99e33e\",\"start_timestamp\":1749394176.8786,\"timestamp\":1749394176.8799,\"trace_id\":\"cac0d0d505284fb9b622f0708e5f93c6\",\"origin\":\"auto.resource.browser.metrics\"}],\"start_timestamp\":1749394176.8485,\"tags\":{\"effectiveConnectionType\":\"4g\",\"deviceMemory\":\"8 GB\",\"hardwareConcurrency\":\"12\"},\"timestamp\":1749394177.3865,\"transaction\":\"/\",\"type\":\"transaction\",\"transaction_info\":{\"source\":\"url\"},\"platform\":\"javascript\",\"request\":{\"url\":\"http://127.0.0.1:8000/??%3F%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b&project=f304c5f9-fd3d-4a21-9073-ce455971943b\",\"headers\":{\"User-Agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\"}},\"event_id\":\"c592565da28f45048ccf8ac1697fb0de\",\"environment\":\"production\",\"release\":\"azure_chatapp@1.0.0+dev\",\"sdk\":{\"integrations\":[\"InboundFilters\",\"FunctionToString\",\"TryCatch\",\"Breadcrumbs\",\"GlobalHandlers\",\"LinkedErrors\",\"Dedupe\",\"HttpContext\",\"BrowserTracing\",\"Replay\"],\"name\":\"sentry.javascript.browser\",\"version\":\"7.100.0\",\"packages\":[{\"name\":\"npm:@sentry/browser\",\"version\":\"7.100.0\"}]},\"breadcrumbs\":[{\"timestamp\":1749394173.494,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.494Z] [INFO] [projectEnhancements] [initializeProjectList] Project list enhancements initialized\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.494Z] [INFO] [projectEnhancements] [initializeProjectList] Project list enhancements initialized\"},{\"timestamp\":1749394173.494,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.494Z] [INFO] [tokenStatsManager] [domReadinessService] Event \\\"ui:templates:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.494Z] [INFO] [tokenStatsManager] [domReadinessService] Event \\\"ui:templates:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.495,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.495Z] [INFO] [tokenStatsManager] [tokenStatsManager] Initializing token stats manager\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.495Z] [INFO] [tokenStatsManager] [tokenStatsManager] Initializing token stats manager\"},{\"timestamp\":1749394173.495,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.495Z] [INFO] [tokenStatsManager] [tokenStatsManager] Token stats manager initialized\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.495Z] [INFO] [tokenStatsManager] [tokenStatsManager] Token stats manager initialized\"},{\"timestamp\":1749394173.496,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.496Z] [INFO] [unknown] [domReadinessService] Event \\\"authReady\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.496Z] [INFO] [unknown] [domReadinessService] Event \\\"authReady\\\" replayed from cache\"},{\"timestamp\":1749394173.496,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.496Z] [INFO] [projectDashboard] [domReadinessService] Event \\\"ui:templates:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.496Z] [INFO] [projectDashboard] [domReadinessService] Event \\\"ui:templates:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.497,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.497Z] [INFO] [ProjectListComponent_template] [domReadinessService] Event \\\"projectListHtmlLoaded\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.497Z] [INFO] [ProjectListComponent_template] [domReadinessService] Event \\\"projectListHtmlLoaded\\\" replayed from cache\"},{\"timestamp\":1749394173.51,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.509Z] [INFO] [ProjectListComponent:bindCreateProjectBtn] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.509Z] [INFO] [ProjectListComponent:bindCreateProjectBtn] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.517,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.517Z] [INFO] [unknown] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.517Z] [INFO] [unknown] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.517,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.517Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Initializing...\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.517Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Initializing...\"},{\"timestamp\":1749394173.518,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.518Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Initialized successfully.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.518Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Initialized successfully.\"},{\"timestamp\":1749394173.519,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.519Z] [INFO] [appState:setCurrentProject:clear] [appState][setCurrentProject] Clearing current project.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.519Z] [INFO] [appState:setCurrentProject:clear] [appState][setCurrentProject] Clearing current project.\"},{\"timestamp\":1749394173.519,\"category\":\"navigation\",\"data\":{\"from\":\"/??%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\",\"to\":\"/??%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\"}},{\"timestamp\":1749394173.522,\"category\":\"navigation\",\"data\":{\"from\":\"/??%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\",\"to\":\"/??%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\"}},{\"timestamp\":1749394173.526,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.526Z] [INFO] [ProjectListComponent_template] [domReadinessService] Event \\\"projectListHtmlLoaded\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.526Z] [INFO] [ProjectListComponent_template] [domReadinessService] Event \\\"projectListHtmlLoaded\\\" replayed from cache\"},{\"timestamp\":1749394173.545,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.545Z] [INFO] [ProjectListComponent:bindCreateProjectBtn] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.545Z] [INFO] [ProjectListComponent:bindCreateProjectBtn] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.547,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.547Z] [INFO] [uiInit:createAndRegisterUIComponents] [UIInit] Late-stage UI components registered\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.547Z] [INFO] [uiInit:createAndRegisterUIComponents] [UIInit] Late-stage UI components registered\"},{\"timestamp\":1749394173.548,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.548Z] [INFO] [uiInit:navigation] [UIInit] Navigation views registered\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.548Z] [INFO] [uiInit:navigation] [UIInit] Navigation views registered\"},{\"timestamp\":1749394173.549,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.549Z] [INFO] [uiInit:initializeUIComponents] [uiInit] UI initialization complete\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.549Z] [INFO] [uiInit:initializeUIComponents] [uiInit] UI initialization complete\"},{\"timestamp\":1749394173.549,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.549Z] [INFO] [ProjectListComponent_template] [domReadinessService] Event \\\"projectListHtmlLoaded\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.549Z] [INFO] [ProjectListComponent_template] [domReadinessService] Event \\\"projectListHtmlLoaded\\\" replayed from cache\"},{\"timestamp\":1749394173.557,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.557Z] [INFO] [ProjectListComponent:bindCreateProjectBtn] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.557Z] [INFO] [ProjectListComponent:bindCreateProjectBtn] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.562,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.562Z] [INFO] [uiInit] [uiInit] sidebar.init completed\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.562Z] [INFO] [uiInit] [uiInit] sidebar.init completed\"},{\"timestamp\":1749394173.562,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.562Z] [INFO] [SidebarMobileDock] [SidebarMobileDock] Initialized\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.562Z] [INFO] [SidebarMobileDock] [SidebarMobileDock] Initialized\"},{\"timestamp\":1749394173.563,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.563Z] [INFO] [unknown] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.563Z] [INFO] [unknown] [domReadinessService] Event \\\"app:ready\\\" replayed from cache\"},{\"timestamp\":1749394173.564,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.564Z] [INFO] [App] [appInitializer] ✔ Phase complete: ui (235 ms)\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.564Z] [INFO] [App] [appInitializer] ✔ Phase complete: ui (235 ms)\"},{\"timestamp\":1749394173.564,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.564Z] [INFO] [appState:setAppLifecycleState] [appState][setAppLifecycleState] Updating app lifecycle state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.564Z] [INFO] [appState:setAppLifecycleState] [appState][setAppLifecycleState] Updating app lifecycle state.\"},{\"timestamp\":1749394173.564,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.564Z] [INFO] [appState:setAppLifecycleState] [appState][setAppLifecycleState] Updating app lifecycle state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.564Z] [INFO] [appState:setAppLifecycleState] [appState][setAppLifecycleState] Updating app lifecycle state.\"},{\"timestamp\":1749394173.565,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.565Z] [INFO] [App] [appInitializer] Boot sequence complete – app is READY\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.565Z] [INFO] [App] [appInitializer] Boot sequence complete – app is READY\"},{\"timestamp\":1749394173.891,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:33.891Z] [INFO] [AuthFormListenerFactory] [AuthFormListenerFactory] Listener setup completed\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:33.891Z] [INFO] [AuthFormListenerFactory] [AuthFormListenerFactory] Listener setup completed\"},{\"timestamp\":1749394174.006,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/api/user/projects\",\"__span\":\"898d85c33245096b\",\"status_code\":200,\"response_body_size\":223},\"type\":\"http\"},{\"timestamp\":1749394175.012,\"category\":\"sentry.transaction\",\"event_id\":\"1681d5e10c36430cb1b08aee42cc1aa8\",\"message\":\"1681d5e10c36430cb1b08aee42cc1aa8\"},{\"timestamp\":1749394176.845,\"category\":\"ui.click\",\"message\":\"div.flex.justify-between.items-start\"},{\"timestamp\":1749394176.846,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.846Z] [INFO] [ProjectManager] [ProjectManager][setCurrentProject] Delegating to canonical appModule state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.846Z] [INFO] [ProjectManager] [ProjectManager][setCurrentProject] Delegating to canonical appModule state.\"},{\"timestamp\":1749394176.846,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.846Z] [INFO] [appState:setCurrentProject:object] [appState][setCurrentProject] Updating current project object.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.846Z] [INFO] [appState:setCurrentProject:object] [appState][setCurrentProject] Updating current project object.\"},{\"timestamp\":1749394176.846,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.846Z] [INFO] [ProjectManager] [ProjectManager] Received \\\"currentProjectChanged\\\" event via AppBus.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.846Z] [INFO] [ProjectManager] [ProjectManager] Received \\\"currentProjectChanged\\\" event via AppBus.\"},{\"timestamp\":1749394176.847,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.847Z] [INFO] [ProjectManager] [ProjectManager] Current project cleared (null) via canonical state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.847Z] [INFO] [ProjectManager] [ProjectManager] Current project cleared (null) via canonical state.\"},{\"timestamp\":1749394176.848,\"category\":\"navigation\",\"data\":{\"from\":\"/??%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b\",\"to\":\"/??%3F%3F%3F%3F%3Fproject=f304c5f9-fd3d-4a21-9073-ce455971943b&project=f304c5f9-fd3d-4a21-9073-ce455971943b\"}},{\"timestamp\":1749394176.851,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.851Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] show() invoked\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.851Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] show() invoked\"},{\"timestamp\":1749394176.851,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.851Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Loading project details template\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.851Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Loading project details template\"},{\"timestamp\":1749394176.851,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.851Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] ProjectManager found in DI system, setting it directly\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.851Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] ProjectManager found in DI system, setting it directly\"},{\"timestamp\":1749394176.851,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.851Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] ProjectManager set, dispatching projectManagerReady event\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.851Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] ProjectManager set, dispatching projectManagerReady event\"},{\"timestamp\":1749394176.852,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.852Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] projectManagerReady event dispatched successfully\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.852Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] projectManagerReady event dispatched successfully\"},{\"timestamp\":1749394176.852,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.852Z] [INFO] [App] [HtmlTemplateLoader] Attempting to load template: /static/html/project_details.html into #projectDetailsView\",{\"url\":\"/static/html/project_details.html\",\"containerSelector\":\"#projectDetailsView\",\"eventName\":\"projectDetailsTemplateLoaded\",\"isModalsHtml\":false}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.852Z] [INFO] [App] [HtmlTemplateLoader] Attempting to load template: /static/html/project_details.html into #projectDetailsView [object Object]\"},{\"timestamp\":1749394176.853,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.853Z] [INFO] [App] [HtmlTemplateLoader] Template already present in #projectDetailsView, skipping fetch for /static/html/project_details.html\",{\"url\":\"/static/html/project_details.html\",\"containerSelector\":\"#projectDetailsView\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.853Z] [INFO] [App] [HtmlTemplateLoader] Template already present in #projectDetailsView, skipping fetch for /static/html/project_details.html [object Object]\"},{\"timestamp\":1749394176.853,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.853Z] [INFO] [App] [HtmlTemplateLoader] Emitting replayable event: projectDetailsTemplateLoaded\",{\"eventName\":\"projectDetailsTemplateLoaded\",\"detail\":\"[Object]\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.853Z] [INFO] [App] [HtmlTemplateLoader] Emitting replayable event: projectDetailsTemplateLoaded [object Object]\"},{\"timestamp\":1749394176.853,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.853Z] [INFO] [App] [domReadinessService] Emitting replayable event: projectDetailsTemplateLoaded\",{\"eventName\":\"projectDetailsTemplateLoaded\",\"detail\":\"[Object]\",\"currentCacheSize\":10}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.853Z] [INFO] [App] [domReadinessService] Emitting replayable event: projectDetailsTemplateLoaded [object Object]\"},{\"timestamp\":1749394176.854,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.854Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Template loaded\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.854Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Template loaded\"},{\"timestamp\":1749394176.854,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.854Z] [INFO] [App] [HtmlTemplateLoader] Attempting to load template: /static/html/chat_ui.html into #chatUIContainer\",{\"url\":\"/static/html/chat_ui.html\",\"containerSelector\":\"#chatUIContainer\",\"eventName\":\"chatUITemplatePreloaded\",\"isModalsHtml\":false}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.854Z] [INFO] [App] [HtmlTemplateLoader] Attempting to load template: /static/html/chat_ui.html into #chatUIContainer [object Object]\"},{\"timestamp\":1749394176.855,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.855Z] [INFO] [App] [HtmlTemplateLoader] Fetching template: /static/html/chat_ui.html\",{\"url\":\"/static/html/chat_ui.html\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.855Z] [INFO] [App] [HtmlTemplateLoader] Fetching template: /static/html/chat_ui.html [object Object]\"},{\"timestamp\":1749394176.856,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.856Z] [INFO] [ProjectManager] [ProjectManager][setCurrentProject] Delegating to canonical appModule state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.856Z] [INFO] [ProjectManager] [ProjectManager][setCurrentProject] Delegating to canonical appModule state.\"},{\"timestamp\":1749394176.856,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.856Z] [INFO] [appState:setCurrentProject:object] [appState][setCurrentProject] Updating current project object.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.856Z] [INFO] [appState:setCurrentProject:object] [appState][setCurrentProject] Updating current project object.\"},{\"timestamp\":1749394176.856,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.856Z] [INFO] [ProjectManager] [ProjectManager][setCurrentProject] Delegating to canonical appModule state.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.856Z] [INFO] [ProjectManager] [ProjectManager][setCurrentProject] Delegating to canonical appModule state.\"},{\"timestamp\":1749394176.856,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.856Z] [INFO] [appState:setCurrentProject:object] [appState][setCurrentProject] Updating current project object.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.856Z] [INFO] [appState:setCurrentProject:object] [appState][setCurrentProject] Updating current project object.\"},{\"timestamp\":1749394176.906,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/static/html/chat_ui.html\",\"__span\":\"8abe9d579a85d1ad\",\"status_code\":200,\"response_body_size\":6017},\"type\":\"http\"},{\"timestamp\":1749394176.907,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.907Z] [INFO] [App] [HtmlTemplateLoader] Successfully fetched template: /static/html/chat_ui.html, preparing to inject. Length: 6017\",{\"url\":\"/static/html/chat_ui.html\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.907Z] [INFO] [App] [HtmlTemplateLoader] Successfully fetched template: /static/html/chat_ui.html, preparing to inject. Length: 6017 [object Object]\"},{\"timestamp\":1749394176.911,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.910Z] [INFO] [App] [HtmlTemplateLoader] Successfully injected template: /static/html/chat_ui.html into #chatUIContainer\",{\"url\":\"/static/html/chat_ui.html\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.910Z] [INFO] [App] [HtmlTemplateLoader] Successfully injected template: /static/html/chat_ui.html into #chatUIContainer [object Object]\"},{\"timestamp\":1749394176.911,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.911Z] [INFO] [App] [HtmlTemplateLoader] Emitting replayable event: chatUITemplatePreloaded\",{\"eventName\":\"chatUITemplatePreloaded\",\"detail\":\"[Object]\"}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.911Z] [INFO] [App] [HtmlTemplateLoader] Emitting replayable event: chatUITemplatePreloaded [object Object]\"},{\"timestamp\":1749394176.911,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.911Z] [INFO] [App] [domReadinessService] Emitting replayable event: chatUITemplatePreloaded\",{\"eventName\":\"chatUITemplatePreloaded\",\"detail\":\"[Object]\",\"currentCacheSize\":11}],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.911Z] [INFO] [App] [domReadinessService] Emitting replayable event: chatUITemplatePreloaded [object Object]\"},{\"timestamp\":1749394176.926,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.926Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Chat UI template pre-loaded successfully\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.926Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Chat UI template pre-loaded successfully\"},{\"timestamp\":1749394176.926,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.926Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Template loaded: true\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.926Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Template loaded: true\"},{\"timestamp\":1749394176.927,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.927Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Found 5 tab buttons\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.927Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Found 5 tab buttons\"},{\"timestamp\":1749394176.927,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.927Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Tab button 0: details\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.927Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Tab button 0: details\"},{\"timestamp\":1749394176.927,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.927Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Tab button 1: files\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.927Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Tab button 1: files\"},{\"timestamp\":1749394176.927,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.927Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Tab button 2: chat\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.927Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Tab button 2: chat\"},{\"timestamp\":1749394176.928,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.928Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Tab button 3: knowledge\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.928Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Tab button 3: knowledge\"},{\"timestamp\":1749394176.928,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.928Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Tab button 4: settings\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.928Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Tab button 4: settings\"},{\"timestamp\":1749394176.928,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.928Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] All critical elements are ready\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.928Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] All critical elements are ready\"},{\"timestamp\":1749394176.928,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.928Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Elements ready: true\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.928Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Elements ready: true\"},{\"timestamp\":1749394176.929,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.929Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Fetching project data\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.929Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Fetching project data\"},{\"timestamp\":1749394176.929,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.929Z] [INFO] [projectDetailsComponent._fetchProjectData] [ProjectDetailsComponent] Fetching data for project f304c5f9-fd3d-4a21-9073-ce455971943b... (About to call loadProjectDetails)\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.929Z] [INFO] [projectDetailsComponent._fetchProjectData] [ProjectDetailsComponent] Fetching data for project f304c5f9-fd3d-4a21-9073-ce455971943b... (About to call loadProjectDetails)\"},{\"timestamp\":1749394176.929,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:36.929Z] [INFO] [ProjectManager] [ProjectManager] GET project details → URL: /api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:36.929Z] [INFO] [ProjectManager] [ProjectManager] GET project details → URL: /api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/\"},{\"timestamp\":1749394177.003,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b\",\"__span\":\"9d89d403a47aab58\",\"status_code\":200,\"response_body_size\":4},\"type\":\"http\"},{\"timestamp\":1749394177.004,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.004Z] [ERROR] [ProjectManager] [ProjectManager][loadProjectDetails]\",{\"message\":\"Null or undefined response from server\",\"name\":\"Error\",\"stack\":\"Error: Null or undefined response from server\\n    at normalizeProjectResponse (http://127.0.0.1:8000/static/js/projectManager.js:119:13)\\n    at ProjectManager.loadProjectDetails (http://127.0.0.1:8000/static/js/projectManager.js:539:35)\\n    at async ProjectDetailsComponent._fetchProjectData (http://127.0.0.1:8000/static/js/projectDetailsComponent.js:749:23)\\n    at async ProjectDetailsComponent.show (http://127.0.0.1:8000/static/js/projectDetailsComponent.js:1009:5)\\n    at async Object.show (http://127.0.0.1:8000/static/js/projectDashboard.js:805:13)\\n    at async activateView (http://127.0.0.1:8000/static/js/navigationService.js:182:7)\\n    at async navigateTo (http://127.0.0.1:8000/static/js/navigationService.js:241:23)\"}],\"logger\":\"console\"},\"level\":\"error\",\"message\":\"[2025-06-08T14:49:37.004Z] [ERROR] [ProjectManager] [ProjectManager][loadProjectDetails] Error: Null or undefined response from server\"},{\"timestamp\":1749394177.005,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.005Z] [ERROR] [ProjectManager] [ProjectManager][_handleErr] Event: projectDetailsError\",{\"message\":\"Null or undefined response from server\",\"name\":\"Error\",\"stack\":\"Error: Null or undefined response from server\\n    at normalizeProjectResponse (http://127.0.0.1:8000/static/js/projectManager.js:119:13)\\n    at ProjectManager.loadProjectDetails (http://127.0.0.1:8000/static/js/projectManager.js:539:35)\\n    at async ProjectDetailsComponent._fetchProjectData (http://127.0.0.1:8000/static/js/projectDetailsComponent.js:749:23)\\n    at async ProjectDetailsComponent.show (http://127.0.0.1:8000/static/js/projectDetailsComponent.js:1009:5)\\n    at async Object.show (http://127.0.0.1:8000/static/js/projectDashboard.js:805:13)\\n    at async activateView (http://127.0.0.1:8000/static/js/navigationService.js:182:7)\\n    at async navigateTo (http://127.0.0.1:8000/static/js/navigationService.js:241:23)\"}],\"logger\":\"console\"},\"level\":\"error\",\"message\":\"[2025-06-08T14:49:37.005Z] [ERROR] [ProjectManager] [ProjectManager][_handleErr] Event: projectDetailsError Error: Null or undefined response from server\"},{\"timestamp\":1749394177.005,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.005Z] [ERROR] [ProjectDetailsComponent] [ProjectDetailsComponent] Unable to load project f304c5f9-fd3d-4a21-9073-ce455971943b\"],\"logger\":\"console\"},\"level\":\"error\",\"message\":\"[2025-06-08T14:49:37.005Z] [ERROR] [ProjectDetailsComponent] [ProjectDetailsComponent] Unable to load project f304c5f9-fd3d-4a21-9073-ce455971943b\"},{\"timestamp\":1749394177.006,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.006Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Initializing subcomponents\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.006Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Initializing subcomponents\"},{\"timestamp\":1749394177.007,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.007Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] FileUploadComponent initialized successfully.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.007Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] FileUploadComponent initialized successfully.\"},{\"timestamp\":1749394177.007,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.007Z] [INFO] [tokenStatsManager] [domReadinessService] Event \\\"ui:templates:ready\\\" replayed from cache\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.007Z] [INFO] [tokenStatsManager] [domReadinessService] Event \\\"ui:templates:ready\\\" replayed from cache\"},{\"timestamp\":1749394177.008,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.008Z] [INFO] [tokenStatsManager] [tokenStatsManager] Initializing token stats manager\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.008Z] [INFO] [tokenStatsManager] [tokenStatsManager] Initializing token stats manager\"},{\"timestamp\":1749394177.008,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.008Z] [INFO] [tokenStatsManager] [tokenStatsManager] Token stats manager initialized\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.008Z] [INFO] [tokenStatsManager] [tokenStatsManager] Token stats manager initialized\"},{\"timestamp\":1749394177.009,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.009Z] [INFO] [projectEnhancements] [initializeProjectList] Project list enhancements initialized\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.009Z] [INFO] [projectEnhancements] [initializeProjectList] Project list enhancements initialized\"},{\"timestamp\":1749394177.009,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.009Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Binding 5 tab buttons\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.009Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Binding 5 tab buttons\"},{\"timestamp\":1749394177.01,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.010Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Binding tab button: details\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.010Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Binding tab button: details\"},{\"timestamp\":1749394177.01,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.010Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Binding tab button: files\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.010Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Binding tab button: files\"},{\"timestamp\":1749394177.01,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.010Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Binding tab button: chat\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.010Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Binding tab button: chat\"},{\"timestamp\":1749394177.01,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.010Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Binding tab button: knowledge\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.010Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Binding tab button: knowledge\"},{\"timestamp\":1749394177.011,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.010Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Binding tab button: settings\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.010Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Binding tab button: settings\"},{\"timestamp\":1749394177.011,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.011Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Event listeners bound for project details view\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.011Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Event listeners bound for project details view\"},{\"timestamp\":1749394177.011,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.011Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Reloading conversations post listener-binding\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.011Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Reloading conversations post listener-binding\"},{\"timestamp\":1749394177.094,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations\",\"__span\":\"ab9be9b6ce9beb93\",\"status_code\":200,\"response_body_size\":4},\"type\":\"http\"},{\"timestamp\":1749394177.097,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.097Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Activated tab: chat\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.097Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] Activated tab: chat\"},{\"timestamp\":1749394177.099,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.099Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] View for project f304c5f9-fd3d-4a21-9073-ce455971943b is now visible.\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.099Z] [INFO] [ProjectDetailsComponent] [ProjectDetailsComponent] View for project f304c5f9-fd3d-4a21-9073-ce455971943b is now visible.\"},{\"timestamp\":1749394177.1,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.100Z] [INFO] [ProjectManager] [ProjectManager] GET project details → URL: /api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/\"],\"logger\":\"console\"},\"level\":\"info\",\"message\":\"[2025-06-08T14:49:37.100Z] [INFO] [ProjectManager] [ProjectManager] GET project details → URL: /api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/\"},{\"timestamp\":1749394177.182,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/stats\",\"__span\":\"8223739b00f9d3cc\",\"status_code\":200,\"response_body_size\":4},\"type\":\"http\"},{\"timestamp\":1749394177.183,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b\",\"__span\":\"8bd193826d9450ce\",\"status_code\":200,\"response_body_size\":4},\"type\":\"http\"},{\"timestamp\":1749394177.184,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.184Z] [ERROR] [ProjectManager] [ProjectManager][loadProjectDetails]\",{\"message\":\"Null or undefined response from server\",\"name\":\"Error\",\"stack\":\"Error: Null or undefined response from server\\n    at normalizeProjectResponse (http://127.0.0.1:8000/static/js/projectManager.js:119:13)\\n    at ProjectManager.loadProjectDetails (http://127.0.0.1:8000/static/js/projectManager.js:539:35)\\n    at async Object.show (http://127.0.0.1:8000/static/js/projectDashboard.js:809:35)\\n    at async activateView (http://127.0.0.1:8000/static/js/navigationService.js:182:7)\\n    at async navigateTo (http://127.0.0.1:8000/static/js/navigationService.js:241:23)\"}],\"logger\":\"console\"},\"level\":\"error\",\"message\":\"[2025-06-08T14:49:37.184Z] [ERROR] [ProjectManager] [ProjectManager][loadProjectDetails] Error: Null or undefined response from server\"},{\"timestamp\":1749394177.184,\"category\":\"console\",\"data\":{\"arguments\":[\"[2025-06-08T14:49:37.184Z] [ERROR] [ProjectManager] [ProjectManager][_handleErr] Event: projectDetailsError\",{\"message\":\"Null or undefined response from server\",\"name\":\"Error\",\"stack\":\"Error: Null or undefined response from server\\n    at normalizeProjectResponse (http://127.0.0.1:8000/static/js/projectManager.js:119:13)\\n    at ProjectManager.loadProjectDetails (http://127.0.0.1:8000/static/js/projectManager.js:539:35)\\n    at async Object.show (http://127.0.0.1:8000/static/js/projectDashboard.js:809:35)\\n    at async activateView (http://127.0.0.1:8000/static/js/navigationService.js:182:7)\\n    at async navigateTo (http://127.0.0.1:8000/static/js/navigationService.js:241:23)\"}],\"logger\":\"console\"},\"level\":\"error\",\"message\":\"[2025-06-08T14:49:37.184Z] [ERROR] [ProjectManager] [ProjectManager][_handleErr] Event: projectDetailsError Error: Null or undefined response from server\"},{\"timestamp\":1749394177.224,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations\",\"__span\":\"aea9d3c9dc5512a0\",\"status_code\":200,\"response_body_size\":4},\"type\":\"http\"},{\"timestamp\":1749394177.303,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations\",\"__span\":\"a22266e0f8443569\",\"status_code\":200,\"response_body_size\":4},\"type\":\"http\"},{\"timestamp\":1749394177.386,\"category\":\"fetch\",\"data\":{\"method\":\"GET\",\"url\":\"/api/projects/f304c5f9-fd3d-4a21-9073-ce455971943b/conversations\",\"__span\":\"8f6fdaa648bfff16\",\"status_code\":200,\"response_body_size\":4},\"type\":\"http\"}]}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "x-sentry-error,x-sentry-rate-limits,retry-after"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "content-length",
              "value": "41"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "date",
              "value": "Sun, 08 Jun 2025 14:49:35 GMT"
            },
            {
              "name": "server",
              "value": "nginx"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "vary",
              "value": "origin, access-control-request-method, access-control-request-headers"
            },
            {
              "name": "via",
              "value": "1.1 google"
            }
          ],
          "cookies": [],
          "content": {
            "size": 41,
            "mimeType": "application/json",
            "text": "{\"id\":\"c592565da28f45048ccf8ac1697fb0de\"}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 59,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "34.120.195.249",
        "startedDateTime": "2025-06-08T14:49:38.393Z",
        "time": 73.25999999011401,
        "timings": {
          "blocked": 2.2819999916208906,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 19.923000000000002,
          "wait": 50.48000000028591,
          "receive": 0.574999998207204,
          "_blocked_queueing": 2.102999991620891,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      }
    ]
  }
}