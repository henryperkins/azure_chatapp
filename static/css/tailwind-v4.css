/* 1. Import Tailwind */
@import "tailwindcss";

/* 2. Define Theme Variables using @theme */
@theme {
  /* Colors (Converted from tailwind.config.js theme.extend.colors) */
  /* Primary color palette */
  --color-primary-50: #eff6ff;
  --color-primary-100: #dbeafe;
  --color-primary-200: #bfdbfe;
  --color-primary-300: #93c5fd;
  --color-primary-400: #60a5fa;
  --color-primary-500: #3b82f6;
  --color-primary-600: #2563eb;
  --color-primary-700: #1d4ed8;
  --color-primary-800: #1e40af;
  --color-primary-900: #1e3a8a;
  --color-primary: var(--color-primary-500); /* DEFAULT becomes variable reference */

  /* Secondary color palette */
  --color-secondary: #4F46E5; /* DEFAULT */
  --color-secondary-light: #818CF8;
  --color-secondary-dark: #3730A3;

  /* State colors (using built-in CSS variables) */
  --color-success-50: var(--color-green-50);
  --color-success-500: var(--color-green-500);
  --color-success-700: var(--color-green-700);
  --color-warning-50: var(--color-amber-50);
  --color-warning-500: var(--color-amber-500);
  --color-warning-700: var(--color-amber-700);
  --color-danger-50: var(--color-rose-50);
  --color-danger-500: var(--color-rose-500);
  --color-danger-700: var(--color-rose-700);

  /* Surface Colors */
  --color-surface: white; /* DEFAULT */
  --color-surface-dark: #111827;
  --color-surface-light: #ffffff;
  --color-surface-hover-light: #f9fafb;
  --color-surface-hover-dark: #1f2937;

  /* Border Colors */
  --color-border: #e5e7eb; /* DEFAULT */
  --color-border-dark: #374151;
  --color-border-hover-light: #d1d5db;
  --color-border-hover-dark: #4b5563;

  /* Skeleton Colors */
  --color-skeleton: #f3f4f6; /* DEFAULT */
  --color-skeleton-dark: #4b5563;

  /* Spacing (Converted from tailwind.config.js theme.extend.spacing) */
  --spacing-card-padding: 1rem;
  --spacing-card-spacing: 1rem;
  --spacing-touch-min: 44px;

  /* Screens (Converted from tailwind.config.js theme.extend.screens) */
  --breakpoint-xs: 320px;
  --breakpoint-3xl: 1920px;
  --breakpoint-4xl: 2560px;

  /* Border Radius (Converted from tailwind.config.js theme.extend.borderRadius) */
  --radius-card: 0.5rem;
  --radius-empty-state: 0.75rem;

  /* Box Shadow (Converted from tailwind.config.js theme.extend.boxShadow) */
  --shadow-card: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --shadow-card-hover: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);

  /* Border Width (Converted from tailwind.config.js theme.extend.borderWidth) */
  --line-width-card: 1px;

  /* Compatibility variables for default ring behavior */
  --default-ring-width: 3px;
  --default-ring-color: var(--color-blue-500);

  /* Animation durations */
  --animate-spin-slow: spin 3s linear infinite;
  --animate-slide-in: slideIn 0.2s ease-out forwards;
  --animate-pulse-slow: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  --animate-count-up: countUp 0.3s ease-out;
  --animate-fade-in: fadeIn 0.3s ease-in-out forwards;
  --animate-fade-in-slow: fadeIn 0.5s ease-in-out forwards;
}

/* Define Keyframes used in @theme */
@keyframes slideIn {
  from { opacity: 0; transform: translateY(-10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes countUp {
  from { opacity: 0.5; transform: translateY(5px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

@keyframes pulse {
  50% { opacity: 0.5; }
}

/* 3. Add Base Styles using @layer base */
@layer base {
  /* Typography scale */
  h1 {
    font-size: var(--text-2xl);
    @apply md:text-3xl font-bold text-gray-900 dark:text-gray-100;
  }

  h2 {
    font-size: var(--text-xl);
    @apply md:text-2xl font-semibold text-gray-800 dark:text-gray-200;
  }

  h3 {
    font-size: var(--text-lg);
    @apply md:text-xl font-medium text-gray-800 dark:text-gray-200;
  }

  p {
    @apply text-gray-600 dark:text-gray-300 leading-relaxed;
  }

  /* Fix for v3 default border color */
  *, ::before, ::after, ::backdrop {
    border-color: var(--color-gray-200, currentColor);
  }

  /* Small text utility */
  .text-small {
    @apply text-sm text-gray-500 dark:text-gray-400;
  }
}

/* 4. Define Custom Utilities using @utility */
/* Button components */
@utility btn-primary {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  background-color: var(--color-primary-600);
  color: white;
  border-radius: 0.5rem;
  font-weight: 500;
  font-size: 0.875rem;
  line-height: 1.25rem;
  transition-property: color, background-color, border-color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
}

@variant hover {
  .btn-primary {
    background-color: var(--color-primary-700);
  }
}

@variant focus {
  .btn-primary {
    outline: 2px solid transparent;
    outline-offset: 2px;
    box-shadow: 0 0 0 2px var(--color-primary-500);
  }
}

@variant dark {
  .btn-primary {
    background-color: var(--color-primary-500);
  }
}

@variant dark.hover {
  .btn-primary {
    background-color: var(--color-primary-400);
  }
}

@variant dark.focus {
  .btn-primary {
    box-shadow: 0 0 0 2px var(--color-primary-400);
  }
}

/* Card component */
@utility card {
  background-color: var(--color-surface, white);
  border-radius: var(--radius-card);
  padding: var(--spacing-card-padding);
  box-shadow: var(--shadow-card);
  border-width: var(--line-width-card);
  border-color: var(--color-border, currentColor);
  transition-property: box-shadow;
  transition-duration: 200ms;
}

@variant hover {
  .card {
    box-shadow: var(--shadow-card-hover);
  }
}

@variant dark {
  .card {
    background-color: var(--color-surface-dark);
    border-color: var(--color-border-dark);
  }
}

/* Collapsible panel */
@utility collapsible-panel {
  transition-property: all;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  overflow: hidden;
  will-change: max-height;
}

/* Animation utilities */
@utility animate-slide-in {
  animation: slideIn 0.2s ease-out forwards;
}

/* Modal styles */
@utility confirm-modal {
  position: fixed;
  inset: 0;
  background-color: rgb(0 0 0 / 50%);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem;
  z-index: 1050;
}

@utility confirm-modal-content {
  background-color: white;
  border-radius: 0.5rem;
  box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  max-width: 28rem;
  width: 100%;
  padding: 1.5rem;
  margin: 2rem auto;
}

@variant dark {
  .confirm-modal-content {
    background-color: var(--color-gray-800);
  }
}

/* 5. Handle Dark Mode Strategy */
@custom-variant dark (&:where(.dark, .dark *));

/* 6. Custom CSS Variables (like z-index) */
:root {
  /* Global z-index scale */
  --z-base: 1000;
  --z-dropdown: calc(var(--z-base) + 10);
  --z-sidebar: calc(var(--z-base) + 30);
  --z-notification: calc(var(--z-base) + 40);
  --z-modal: calc(var(--z-base) + 50);
}

/* Raw CSS (Styles outside of @layer in v3) */
svg {
  fill: currentColor;
  stroke: currentColor;
}

body.sidebar-open {
  overflow: hidden;
  position: fixed;
  width: 100%;
  height: 100%;
}
