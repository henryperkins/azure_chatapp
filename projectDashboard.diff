--- a/static/js/projectDashboard.js
+++ b/static/js/projectDashboard.js
@@ -408,40 +408,8 @@
     this.logger.info('[ProjectDashboard] Components initialized.');
   }

-  _processUrlParameters() {
-    const projectIdFromUrl = this.browserService.getSearchParam('project');
-    const chatIdFromUrl = this.browserService.getSearchParam('chatId'); // Check for chatId too
-
-    // Only navigate if the URL explicitly requests a project
-    if (
-      projectIdFromUrl &&
-      (this.state.currentView !== 'details' || this.state.currentProject?.id !== projectIdFromUrl)
-    ) {
-      this.logger.info(`[ProjectDashboard] Processing URL parameter: project=${projectIdFromUrl}, chat=${chatIdFromUrl}`);
-      this.showProjectDetails(projectIdFromUrl); // This will handle setting chatId if it's a new project load
-    } else if (!projectIdFromUrl && this.state.currentView !== 'list') {
-      this.logger.info('[ProjectDashboard] No project in URL, ensuring list view is shown.');
-      this.showProjectList();
-    } else {
-      this.logger.info(
-        `[ProjectDashboard] URL processing skipped: URL Project=${projectIdFromUrl}, Chat=${chatIdFromUrl}, CurrentView=${this.state.currentView}, CurrentProject=${this.state.currentProject?.id}`
-      );
-    }
-  }
-
   _setupEventListeners() {
     const add = (el, event, handler, opts = {}) => {
       if (!this.eventHandlers?.trackListener)
@@ -545,10 +513,6 @@
       });
   }

-  _handlePopState() {
-    this._processUrlParameters();
-  }
-
   _handleViewProject(projectId) {
     // Push url then show â€“ enables Back button
     // Construct a clean, absolute path for navigation
@@ -665,13 +629,9 @@
           throw err; // Re-throw the error to halt initialization of ProjectDashboard if critical elements for ProjectList are missing
         }
       }
-      this.components.projectList.onViewProject = this._handleViewProject.bind(this);
       await this.components.projectList.initialize(); // Initialize after explicit wait
-      // Re-assign onViewProject as initialize might overwrite it if it's set in constructor directly
-      this.components.projectList.onViewProject = this._handleViewProject.bind(this);
       this.logger.info('[ProjectDashboard] ProjectListComponent initialized.');
     } else if (this.components.projectList) {
-      // Ensure onViewProject is correctly bound even if already initialized
-      this.components.projectList.onViewProject = this._handleViewProject.bind(this);
     } else {
       this.logger.error('[ProjectDashboard] projectListComponent not found (DependencySystem).');
     }
@@ -698,16 +658,10 @@
           // Decide if to proceed or throw
         }
       }
-      this.components.projectDetails.onBack = this._handleBackToList.bind(this);
       await this.components.projectDetails.initialize(); // Initialize after explicit wait
       this.logger.info('[ProjectDashboard] ProjectDetailsComponent initialized.');
     } else if (this.components.projectDetails) {
-        // Ensure onBack is correctly bound
-        this.components.projectDetails.onBack = this._handleBackToList.bind(this);
     } else {
       this.logger.error('[ProjectDashboard] projectDetailsComponent not found (DependencySystem).');
     }
