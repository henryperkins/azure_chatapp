{"version":3,"names":["createDomReadinessService","DependencySystem","domAPI","browserService","eventHandlers","APP_CONFIG","logger","injectedLogger","_missingSelectors","Set","pendingPromises","Map","observers","appearanceListeners","firedEvents","REPLAY_CONFIG","enabled","EVENT_REPLAY_ENABLED","maxEvents","MAX_CACHED_EVENTS","ttlMs","EVENT_REPLAY_TTL","cleanupIntervalMs","EVENT_CLEANUP_INTERVAL","TIMEOUTS","DOM_READY","Error","DEFAULT_TIMEOUT","_logger","setLogger","newLogger","_eventHandlers","setEventHandlers","newEH","_trackListener","target","type","handler","options","trackListener","addEventListener","removeEventListener","_createCustomEvent","opts","createCustomEvent","win","getWindow","CustomEvent","detail","_cleanupListeners","cleanupListeners","cleanupTimer","_SEL_STATS","_nowPerf","performance","now","Date","_markStart","selectors","t","forEach","sel","has","set","total","waits","get","push","start","_markEnd","rec","length","last","at","end","duration","documentReady","doc","getDocument","readyState","Promise","resolve","once","context","elementsReady","timeout","observeMutations","selectorArray","Array","isArray","alreadyPresent","every","querySelector","map","key","sort","join","promise","reject","startTime","then","nowPresent","el","info","Math","round","timeoutId","setTimeout","delete","missing","filter","add","warn","waitedMs","onAppear","newAppear","clearTimeout","err","error","_ensureObserver","_pollForElements","intervalId","setInterval","found","clearInterval","MutationObserverImpl","MutationObserver","observer","mutations","size","listener","bodyEl","getBody","observe","childList","subtree","dependenciesAndElements","deps","domSelectors","optional","waitForDependencies","cleanupExpiredEvents","initialSize","eventName","eventData","entries","ttl","age","timestamp","startCleanupTimer","emitReplayable","event","dispatchEvent","currentCacheSize","oldestEvent","from","a","b","evictedEvent","winTarget","replay","_","waitForEvent","app","state","ready","syntheticEvt","e","cachedEvent","expiredTimestamp","cachedDetail","cachedTimestamp","syntheticEvent","listenerRemover","cleanup","evt","message","getEventReplayStats","stats","totalCachedEvents","events","newestEvent","expiredCount","oldest","Infinity","newest","isExpired","expired","hasDetail","detailKeys","Object","keys","destroy","obs","disconnect","clear","getSelectorTimings","out","v","k","getMissingSelectors","getFiredEvents","isReplayEnabled"],"sources":["domReadinessService.js"],"sourcesContent":["/**\n * @module domReadinessService\n *\n * A unified service to handle DOM readiness within the application, ensuring\n * that document parsing, required dependencies, and dynamic element injections\n * are consistently managed via a single standardized approach.\n *\n * Dependencies:\n *  - DependencySystem: For waiting on module dependencies (auth, eventHandlers, etc.)\n *  - domAPI: Abstracted DOM utilities\n *  - browserService: Abstraction layer for setTimeout, setInterval, MutationObserver\n *  - eventHandlers: For registering and cleaning up event listeners\n *  - APP_CONFIG: Optionally used to set a default or maximum timeout for DOM readiness checks\n *\n * Usage:\n *   const domReadinessService = createDomReadinessService({\n *     DependencySystem,\n *     domAPI,\n *     browserService,\n *     eventHandlers,\n *     APP_CONFIG\n *   });\n *\n *   // Wait for the document to be ready\n *   await domReadinessService.documentReady();\n *\n *   // Wait for dependencies and specific elements\n *   await domReadinessService.dependenciesAndElements({\n *     deps: ['auth', 'eventHandlers'],\n *     domSelectors: ['#myElement'],\n *     timeout: 10000,\n *     context: 'example'\n *   });\n *\n *   // Wait for a custom event\n *   await domReadinessService.waitForEvent('modalsLoaded', { timeout: 8000, context: 'example' });\n */\n\nexport function createDomReadinessService({\n  DependencySystem,\n  domAPI,\n  browserService,\n  eventHandlers = null, // optional to break circular dependency\n  APP_CONFIG,\n  logger: injectedLogger = null        // ← NEW\n} = {}) {\n  // Track selectors that never appeared (for UI diagnostics)\n  const _missingSelectors = new Set();\n  // Store pending readiness promises by selector sets\n  const pendingPromises = new Map();\n  // Store references to active MutationObservers\n  const observers = [];\n  // Track listeners waiting for element appearance\n  const appearanceListeners = new Map();\n  // Cache fired events for replay capability with TTL support\n  const firedEvents = new Map(); // eventName -> { detail, timestamp, ttl }\n\n  // Enhanced replay event config\n  const REPLAY_CONFIG = {\n    enabled: APP_CONFIG?.EVENT_REPLAY_ENABLED ?? true,\n    maxEvents: APP_CONFIG?.MAX_CACHED_EVENTS ?? 50,\n    ttlMs: APP_CONFIG?.EVENT_REPLAY_TTL ?? 300000, // 5 mins default\n    cleanupIntervalMs: APP_CONFIG?.EVENT_CLEANUP_INTERVAL ?? 60000 // 1 min\n  };\n\n  // Default timeout is required from APP_CONFIG, fallback forbidden\n  if (!APP_CONFIG?.TIMEOUTS?.DOM_READY)\n    throw new Error('[domReadinessService] APP_CONFIG.TIMEOUTS.DOM_READY is required; fallback is forbidden.');\n  const DEFAULT_TIMEOUT = APP_CONFIG.TIMEOUTS.DOM_READY;\n\n  // ───── unified logger ─────\n  if (!injectedLogger)\n    throw new Error('[domReadinessService] logger is required');\n  let _logger = injectedLogger;\n  const logger = _logger;          // alias for rule-12 scanner\n\n  function setLogger(newLogger) {\n    if (newLogger) _logger = newLogger;\n  }\n\n  // ---- late binding for eventHandlers to break circular dependency ----\n  let _eventHandlers = eventHandlers || null;\n  function setEventHandlers(newEH) {\n    if (newEH) _eventHandlers = newEH;\n  }\n\n  function _trackListener(target, type, handler, options = {}) {\n    if (_eventHandlers?.trackListener) {\n      return _eventHandlers.trackListener(target, type, handler, options);\n    }\n    if (!target || typeof target.addEventListener !== 'function') return () => {};\n    target.addEventListener(type, handler, options);\n    return () => target.removeEventListener(type, handler, options);\n  }\n\n  function _createCustomEvent(type, opts = {}) {\n    if (_eventHandlers?.createCustomEvent) {\n      return _eventHandlers.createCustomEvent(type, opts);\n    }\n    const win = browserService.getWindow?.();\n    if (win?.CustomEvent) {\n      return new win.CustomEvent(type, opts);\n    }\n    return { type, detail: opts?.detail };\n  }\n\n  function _cleanupListeners(opts = {}) {\n    if (_eventHandlers?.cleanupListeners) {\n      _eventHandlers.cleanupListeners(opts);\n    }\n  }\n\n  // ───── periodic cleanup for expired events ─────\n  let cleanupTimer = null;\n\n  // ───── instrumentation – selector wait times ─────\n  const _SEL_STATS = new Map();                // sel ➜ { total, waits:[{start,end,duration}] }\n  function _nowPerf() {\n    const win = browserService.getWindow?.();\n    return (win?.performance?.now?.()) ?? Date.now();\n  }\n\n  function _markStart(selectors) {\n    const t = _nowPerf();\n    selectors.forEach(sel => {\n      if (!_SEL_STATS.has(sel)) _SEL_STATS.set(sel, { total: 0, waits: [] });\n      _SEL_STATS.get(sel).waits.push({ start: t });\n    });\n  }\n  function _markEnd(selectors) {\n    const t = _nowPerf();\n    selectors.forEach(sel => {\n      const rec = _SEL_STATS.get(sel);\n      if (!rec || !rec.waits.length) return;\n      const last = rec.waits.at(-1);\n      if (last.end) return;                   // already closed\n      last.end = t;\n      last.duration = t - last.start;\n      rec.total += last.duration;\n    });\n  }\n\n  /**\n   * Waits for the document to be in a state beyond \"loading\"\n   * (i.e. DOMContentLoaded or readystatechange complete).\n   * @returns {Promise<Document>}\n   */\n  function documentReady() {\n    const doc = domAPI.getDocument();\n    // If the document is not in \"loading\" state, resolve immediately\n    if (doc.readyState !== 'loading') {\n      return Promise.resolve(doc);\n    }\n    // Otherwise, wait for DOMContentLoaded once\n    return new Promise((resolve) => {\n      eventHandlers.trackListener(\n        doc,\n        'DOMContentLoaded',\n        () => resolve(doc),\n        { once: true, context: 'domReadinessService' }\n      );\n    });\n  }\n\n  /**\n   * Waits for one or more DOM elements matching the provided selectors.\n   * If they exist immediately, it resolves; otherwise it observes for new nodes\n   * until they appear or times out.\n   * @param {string|string[]} selectors - One or more CSS selectors\n   * @param {object} options\n   * @param {number} [options.timeout=DEFAULT_TIMEOUT] - Time in ms before rejecting\n   * @param {boolean} [options.observeMutations=true] - Whether to watch dynamically inserted elements\n   * @param {string} [options.context='unknown'] - Descriptive context for error logs\n   * @returns {Promise<HTMLElement[]>}\n   */\n  function elementsReady(selectors, {\n    timeout = 15000,\n    observeMutations = true,\n    context = 'unknown'\n  } = {}) {\n    const selectorArray = Array.isArray(selectors) ? selectors : [selectors];\n\n    _markStart(selectorArray);\n\n    // Quick check if all elements are already present\n    const alreadyPresent = selectorArray.every((sel) => domAPI.querySelector(sel) !== null);\n    if (alreadyPresent) {\n      return Promise.resolve(selectorArray.map((sel) => domAPI.querySelector(sel)));\n    }\n\n    // Create a unique key based on sorted selectors\n    const key = selectorArray.sort().join('|');\n\n    // If we already have a pending promise for these selectors, return it\n    if (pendingPromises.has(key)) {\n      return pendingPromises.get(key);\n    }\n\n    // Otherwise, create a new promise\n    const promise = new Promise((resolve, reject) => {\n      const startTime = _nowPerf();\n      // Step 1: Ensure the document is ready first\n      documentReady().then(() => {\n        // Check again in case the elements appeared during doc load\n        const nowPresent = selectorArray.map((sel) => domAPI.querySelector(sel));\n        if (nowPresent.every((el) => el !== null)) {\n          _markEnd(selectorArray);\n          _logger.info?.(\n            '[domReadinessService] selectors ready',\n            { selectors: selectorArray, duration: Math.round(_nowPerf() - startTime) }\n          );\n          return resolve(nowPresent);\n        }\n\n        // Setup a timeout for safety\n        const timeoutId = browserService.setTimeout(() => {\n          // Clean up from structures\n          pendingPromises.delete(key);\n          appearanceListeners.delete(key);\n\n          const missing = selectorArray.filter((sel) => domAPI.querySelector(sel) === null);\n          missing.forEach((sel) => _missingSelectors.add(sel));\n          _logger.warn?.(\n            '[domReadinessService] Timeout waiting for selectors',\n            { selectors: missing, context, waitedMs: timeout }\n          );\n          reject(\n            new Error(\n              `[domReadinessService] Timed out after ${timeout}ms for selectors: ${missing.join(', ')\n              } (context: ${context}). Elements missing: [${missing.join(', ')}]`\n            )\n          );\n        }, timeout);\n\n        // If we want to observe DOM changes for newly added elements\n        if (observeMutations) {\n          appearanceListeners.set(key, {\n            selectors: selectorArray,\n            onAppear: () => {\n              try {\n                const newAppear = selectorArray.map((sel) => domAPI.querySelector(sel));\n                if (newAppear.every((el) => el !== null)) {\n                  // Clear the pending state\n                  browserService.clearTimeout(timeoutId);\n                  pendingPromises.delete(key);\n                  appearanceListeners.delete(key);\n                  _markEnd(selectorArray);\n                  _logger.info?.(\n                    '[domReadinessService] selectors ready',\n                    { selectors: selectorArray, duration: Math.round(_nowPerf() - startTime) }\n                  );\n                  resolve(newAppear);\n                }\n              } catch (err) {\n                logger.error('[domReadinessService] elementsReady failed', err,\n                  { context: 'domReadinessService:elementsReady' });\n                throw err;\n              }\n            }\n          });\n          // Ensure at least one global observer is active\n          try {\n            _ensureObserver();\n          } catch (err) {\n            logger.error('[domReadinessService] ensureObserver failed', err,\n              { context: 'domReadinessService:ensureObserver' });\n            throw err;\n          }\n        } else {\n          // Fallback to a quick polling if we don't want to use observers\n          try {\n            _pollForElements({\n              selectors: selectorArray,\n              timeoutId,\n              resolve\n            });\n          } catch (err) {\n            _logger.error('[domReadinessService] elementsReady failed', err,\n              { context: 'domReadinessService:elementsReady' });\n            throw err;\n          }\n        }\n      });\n    });\n\n    pendingPromises.set(key, promise);\n    return promise;\n  }\n\n  /**\n   * Helper to poll for elements (used when observeMutations=false).\n   * Checks from time to time until either we find our elements or the outer\n   * timeout triggers.\n   */\n  function _pollForElements({ selectors, timeoutId, resolve }) {\n    const intervalId = browserService.setInterval(() => {\n      const found = selectors.map((sel) => domAPI.querySelector(sel));\n      if (found.every((el) => el !== null)) {\n        browserService.clearInterval(intervalId);\n        browserService.clearTimeout(timeoutId);\n\n        // Also remove from pendingPromises since we've resolved\n        const key = selectors.sort().join('|');\n        pendingPromises.delete(key);\n        appearanceListeners.delete(key);\n\n        resolve(found);\n      }\n    }, 500);\n  }\n\n  /**\n   * Ensures we have at least one MutationObserver that watches for newly added elements,\n   * so we can process watchers in appearanceListeners.\n   */\n  function _ensureObserver() {\n    // If we've already attached at least one observer, skip\n    if (observers.length > 0) return;\n\n    // Create a MutationObserver to watch the entire body subtree\n    const MutationObserverImpl =\n      browserService.getWindow?.()?.MutationObserver;\n    if (!MutationObserverImpl) {\n      logger.error('[domReadinessService] MutationObserver unavailable via DI', { context: 'domReadinessService' });\n      return;\n    }\n\n    const observer = new MutationObserverImpl((mutations) => {\n      if (appearanceListeners.size === 0) return;\n      // Trigger each appearance listener to see if their elements are now present\n      appearanceListeners.forEach((listener) => {\n        listener.onAppear();\n      });\n    });\n\n    const bodyEl = domAPI.getBody(); // or docAPI.getDocument().body\n    if (!bodyEl)\n      throw new Error('[domReadinessService] Document body not found – MutationObserver attachment failed. Fallback is forbidden.');\n\n    try {\n      observer.observe(bodyEl, {\n        childList: true,\n        subtree: true\n      });\n    } catch (err) {\n      logger.error('[domReadinessService] ensureObserver failed', err,\n        { context: 'domReadinessService:ensureObserver' });\n      throw err;\n    }\n\n    observers.push(observer);\n  }\n\n  /**\n   * Waits for the specified dependencies in DependencySystem and for the specified\n   * DOM selectors, all within an optional timeout.\n   * @param {object} config\n   * @param {string[]} config.deps - Dependencies to wait for in the DI\n   * @param {string[]} config.domSelectors - DOM selectors to wait for\n   * @param {number} config.timeout - Timeout in ms\n   * @param {string} config.context - Debugging context\n   */\n  async function dependenciesAndElements({\n    deps = [],\n    domSelectors = [],\n    timeout = DEFAULT_TIMEOUT,\n    context = 'unknown',\n    optional = false          // ← NEW: allow non-fatal selector misses\n  } = {}) {\n    // First wait for needed dependencies\n    if (deps.length > 0) {\n      if (DependencySystem?.waitForDependencies) {\n        // Preferred injection-based readiness API\n        await DependencySystem.waitForDependencies(deps, { timeout });\n      } else {\n        throw new Error(\n          '[domReadinessService] DependencySystem.waitForDependencies not available – direct waitFor forbidden by frontend guardrails. Please update DependencySystem DI to expose waitForDependencies.'\n        );\n      }\n    }\n\n    // Then wait for any DOM elements\n    if (domSelectors.length > 0) {\n      try {\n        await elementsReady(domSelectors, { timeout, context });\n      } catch (err) {\n        logger.error('[domReadinessService] dependenciesAndElements failed', err,\n          { context: 'domReadinessService:dependenciesAndElements' });\n        logger.error('[domReadinessService] elementsReady failed', err,\n                     { context: 'domReadinessService:dependenciesAndElements' });\n        domSelectors.forEach((sel) => _missingSelectors.add(sel));\n        if (optional) {\n          logger.warn?.(\n            '[domReadinessService] Optional selectors not found – continuing bootstrap',\n            { selectors: domSelectors, context }\n          );\n          return true;        // ← do NOT abort init\n        }\n        throw err;            // original behaviour for required selectors\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Cleanup expired events from cache\n   */\n  function cleanupExpiredEvents() {\n    if (!REPLAY_CONFIG.enabled) return;\n\n    const now = _nowPerf();\n    const initialSize = firedEvents.size;\n\n    for (const [eventName, eventData] of firedEvents.entries()) {\n      if (eventData.ttl && eventData.ttl < now) {\n        firedEvents.delete(eventName);\n        _logger.info?.(`[domReadinessService] Cleaned up expired event: ${eventName}`, {\n          eventName,\n          age: now - eventData.timestamp\n        });\n      }\n    }\n\n    if (firedEvents.size !== initialSize) {\n      _logger.info?.(`[domReadinessService] Cleanup removed ${initialSize - firedEvents.size} expired events`);\n    }\n  }\n\n  /**\n   * Start periodic cleanup if enabled\n   */\n  function startCleanupTimer() {\n    if (!REPLAY_CONFIG.enabled || cleanupTimer) return;\n\n    cleanupTimer = browserService.setInterval(() => {\n      cleanupExpiredEvents();\n    }, REPLAY_CONFIG.cleanupIntervalMs);\n  }\n\n  /**\n   * Emits a replay-able custom event that can be received by late listeners.\n   * Enhanced: TTL, maxEvents, logs, eviction. No fallback to standard allowed.\n   */\n  function emitReplayable(eventName, detail = {}) {\n    // Validate eventName\n    if (!eventName || typeof eventName !== 'string') {\n      _logger.error?.(`[domReadinessService] Invalid event name for emitReplayable`, { eventName, detail });\n      return;\n    }\n\n    if (!REPLAY_CONFIG.enabled) {\n      _logger.info?.(`[domReadinessService] Event replay disabled, emitting standard event: ${eventName}`);\n      const event = eventHandlers.createCustomEvent(eventName, { detail });\n      domAPI.dispatchEvent(domAPI.getDocument(), event);\n      return;\n    }\n\n    _logger.info?.(`[domReadinessService] Emitting replayable event: ${eventName}`, {\n      eventName,\n      detail,\n      currentCacheSize: firedEvents.size\n    });\n\n    // Enforce cache limit\n    if (firedEvents.size >= REPLAY_CONFIG.maxEvents) {\n      const oldestEvent = Array.from(firedEvents.entries())\n        .sort(([, a], [, b]) => a.timestamp - b.timestamp)[0];\n      if (oldestEvent) {\n        firedEvents.delete(oldestEvent[0]);\n        _logger.warn?.(`[domReadinessService] Evicted oldest cached event: ${oldestEvent[0]}`, {\n          evictedEvent: oldestEvent[0],\n          age: _nowPerf() - oldestEvent[1].timestamp\n        });\n      }\n    }\n\n    const now = _nowPerf();\n\n    firedEvents.set(eventName, {\n      detail,\n      timestamp: now,\n      ttl: now + REPLAY_CONFIG.ttlMs\n    });\n\n    // Start cleanup interval timer if not started\n    startCleanupTimer();\n\n    // Dispatch the event normally, with error catch\n    try {\n      const event = eventHandlers.createCustomEvent(eventName, { detail });\n      domAPI.dispatchEvent(domAPI.getDocument(), event);\n\n      /* --- NEW: also notify window listeners --- */\n      try {\n        const winTarget = browserService?.getWindow?.();\n        if (winTarget && typeof winTarget.dispatchEvent === 'function') {\n          // immediate (same-tick) dispatch\n          domAPI.dispatchEvent(\n            winTarget,\n            eventHandlers.createCustomEvent(eventName, { detail })\n          );\n\n          // one more dispatch on next-tick so very-late inline listeners\n          // (e.g. in base.html) still catch the event\n          browserService.setTimeout(() => {\n            try {\n              domAPI.dispatchEvent(\n                winTarget,\n                eventHandlers.createCustomEvent(eventName, { detail, replay: true })\n              );\n            } catch (_) {\n              _logger.warn?.(\n                '[domReadinessService] delayed window dispatch failed',\n                _,\n                { context: 'domReadinessService:emitReplayable:window-delayed' }\n              );\n            }\n          }, 0);\n        }\n      } catch (err) {\n        _logger.warn?.(\n          '[domReadinessService] window dispatch failed',\n          err,\n          { context: 'domReadinessService:emitReplayable:window' }\n        );\n      }\n    } catch (err) {\n      logger.error('[domReadinessService] emitReplayable failed', err,\n        { context: 'domReadinessService:emitReplayable' });\n      logger.error('[domReadinessService] emitReplayable failed', err,\n                   { context: 'domReadinessService:emitReplayable' });\n      logger.error?.(`[domReadinessService] Failed to dispatch event: ${eventName}`, err, {\n        eventName,\n        detail\n      });\n    }\n  }\n\n  /**\n   * Wait for a specified custom event (e.g. \"modalsLoaded\"), with a time limit.\n   * If the event was already fired, returns immediately with cached data,\n   * handling TTL expiry. Synthetic event is created via eventHandlers.\n   * @param {string} eventName - The name of the event (e.g., 'modalsLoaded')\n   * @param {object} options\n   * @param {number} [options.timeout=DEFAULT_TIMEOUT] - Time in ms before rejecting\n   * @param {string} [options.context='unknown'] - Context for debugging\n   * @returns {Promise<Event>}\n   */\n  function waitForEvent(eventName, {\n    timeout = DEFAULT_TIMEOUT,\n    context = 'unknown'\n  } = {}) {\n    // Validate event name\n    if (!eventName || typeof eventName !== 'string') {\n      return Promise.reject(\n        new Error(`[domReadinessService] Invalid event name: ${eventName}`)\n      );\n    }\n\n    // == STICKY STATE PATCH: if \"app:ready\", resolve immediately using sticky readiness flag ==\n    const win = browserService?.getWindow?.();\n    if (eventName === 'app:ready' && win?.app?.state?.ready) {\n      _logger.info?.('[domReadinessService] Sticky readiness flag detected (`window.app.state.ready === true`), resolving waitForEvent(\"app:ready\") immediately', { context });\n      try {\n        const detail = (win?.app?.state) || { ready: true };\n        const syntheticEvt = eventHandlers.createCustomEvent('app:ready', { detail });\n        return Promise.resolve(syntheticEvt);\n      } catch (e) {\n        _logger.warn?.('[domReadinessService] Could not synthesize \"app:ready\" event from sticky readiness. Falling back to regular wait.', { context });\n        // fall through to regular code if event construction fails\n      }\n    }\n    // == END PATCH ==\n\n    // Check if event was already fired (replay capability)\n    if (firedEvents.has(eventName)) {\n      const cachedEvent = firedEvents.get(eventName);\n\n      // Check if cached event has expired via TTL\n      if (cachedEvent.ttl && cachedEvent.ttl < _nowPerf()) {\n        firedEvents.delete(eventName);\n        _logger.warn?.(`[domReadinessService] Cached event \"${eventName}\" expired, waiting for new event`, {\n          eventName,\n          context,\n          expiredTimestamp: cachedEvent.timestamp\n        });\n      } else {\n        const age = _nowPerf() - cachedEvent.timestamp;\n        _logger.info?.(`[domReadinessService] Event \"${eventName}\" replayed from cache`, {\n          eventName,\n          context,\n          cachedDetail: cachedEvent.detail,\n          cachedTimestamp: cachedEvent.timestamp,\n          age\n        });\n\n        // Create a synthetic event with the cached detail, best-effort try/catch\n        try {\n          const syntheticEvent = eventHandlers.createCustomEvent(eventName, {\n            detail: cachedEvent.detail\n          });\n          return Promise.resolve(syntheticEvent);\n        } catch (err) {\n          logger.error('[domReadinessService] waitForEvent synthetic event failed', err,\n                       { context: 'domReadinessService:waitForEvent' });\n          // Fall through to normal event listening\n        }\n      }\n    }\n\n    _logger.info?.(`[domReadinessService] Waiting for event \"${eventName}\" (context: ${context})`);\n\n    return new Promise((resolve, reject) => {\n      let timeoutId = null;\n      let listenerRemover = null;\n\n      // Cleanup function to prevent memory leaks\n      const cleanup = () => {\n        if (timeoutId) {\n          browserService.clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n        if (listenerRemover && typeof listenerRemover === 'function') {\n          try {\n            listenerRemover();\n          } catch (err) {\n            logger.warn?.(`[domReadinessService] Error removing event listener during cleanup`, err, {\n              eventName,\n              context\n            });\n          }\n          listenerRemover = null;\n        }\n      };\n\n      // Start a timeout\n      timeoutId = browserService.setTimeout(() => {\n        cleanup();\n        reject(\n          new Error(\n            `[domReadinessService] Timeout after ${timeout}ms waiting for event \"${eventName}\" (context: ${context})`\n          )\n        );\n      }, timeout);\n\n      // Listen for the event once\n      try {\n        listenerRemover = eventHandlers.trackListener(\n          domAPI.getDocument(),\n          eventName,\n          (evt) => {\n            cleanup();\n            _logger.info?.(`[domReadinessService] Event \"${eventName}\" received by listener`, {\n              eventName,\n              context,\n              detail: evt.detail\n            });\n            resolve(evt);\n          },\n          { once: true, context: 'domReadinessService' }\n        );\n      } catch (err) {\n        logger.error('[domReadinessService] waitForEvent failed', err,\n          { context: 'domReadinessService:waitForEvent' });\n        logger.error('[domReadinessService] waitForEvent listener setup failed', err,\n                     { context: 'domReadinessService:waitForEvent' });\n        cleanup();\n        reject(new Error(`[domReadinessService] Failed to set up event listener for \"${eventName}\": ${err.message}`));\n      }\n    });\n  }\n\n  /**\n   * Get comprehensive event replay statistics\n   */\n  function getEventReplayStats() {\n    const stats = {\n      enabled: REPLAY_CONFIG.enabled,\n      totalCachedEvents: firedEvents.size,\n      maxEvents: REPLAY_CONFIG.maxEvents,\n      ttlMs: REPLAY_CONFIG.ttlMs,\n      events: {},\n      oldestEvent: null,\n      newestEvent: null,\n      expiredCount: 0\n    };\n\n    if (firedEvents.size === 0) return stats;\n\n    let oldest = Infinity;\n    let newest = 0;\n    const now = _nowPerf();\n\n    for (const [eventName, eventData] of firedEvents.entries()) {\n      const age = now - eventData.timestamp;\n      const isExpired = eventData.ttl && eventData.ttl < now;\n\n      if (isExpired) stats.expiredCount++;\n\n      stats.events[eventName] = {\n        timestamp: eventData.timestamp,\n        age,\n        expired: isExpired,\n        ttl: eventData.ttl,\n        hasDetail: !!eventData.detail,\n        detailKeys: eventData.detail ? Object.keys(eventData.detail) : []\n      };\n\n      if (eventData.timestamp < oldest) {\n        oldest = eventData.timestamp;\n        stats.oldestEvent = eventName;\n      }\n      if (eventData.timestamp > newest) {\n        newest = eventData.timestamp;\n        stats.newestEvent = eventName;\n      }\n    }\n\n    return stats;\n  }\n\n  /**\n   * Enhanced cleanup function\n   */\n  function destroy() {\n    // Stop cleanup timer\n    if (cleanupTimer) {\n      browserService.clearInterval(cleanupTimer);\n      cleanupTimer = null;\n    }\n\n    // Stop all mutation observers\n    observers.forEach((obs) => {\n      try {\n        obs.disconnect();\n      } catch (err) {\n        logger.error('[domReadinessService] destroy observer.disconnect failed', err,\n                     { context: 'domReadinessService:destroy' });\n      }\n    });\n    observers.length = 0;\n\n    // Clear pending states\n    pendingPromises.clear();\n    appearanceListeners.clear();\n    firedEvents.clear();\n\n    // Remove any event listeners with the matching context\n    eventHandlers.cleanupListeners({ context: 'domReadinessService' });\n\n    _logger.info?.('[domReadinessService] Destroyed and cleaned up all resources');\n  }\n\n  function getSelectorTimings() {\n    const out = {};\n    _SEL_STATS.forEach((v, k) => { out[k] = v.total; });\n    return out;\n  }\n\n  function getMissingSelectors() {\n    return Array.from(_missingSelectors);\n  }\n\n  function getFiredEvents() {\n    return Array.from(firedEvents.keys());\n  }\n\n  // Additional helpers for replay/diagnostics/feature flagging\n  function isReplayEnabled() {\n    return REPLAY_CONFIG.enabled;\n  }\n\n  return {\n    documentReady,\n    elementsReady,\n    dependenciesAndElements,\n    waitForEvent,\n    emitReplayable,\n    destroy,\n    getSelectorTimings,\n    getMissingSelectors,\n    getFiredEvents,\n    getEventReplayStats,    // NEW: diagnostics\n    cleanupExpiredEvents,   // NEW: manual trigger\n    isReplayEnabled,        // NEW: config check\n    setLogger,              // ← NEW\n    setEventHandlers,       // ← NEW\n  };\n}\n"],"mappings":"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","ignoreList":[]}