{"version":3,"names":["createApiClient","APP_CONFIG","globalUtils","getAuthModule","browserService","eventHandlers","logger","Error","cleanupListeners","pending","Map","BASE_URL","BASE_API_URL","mainApiRequest","apiRequest","url","opts","skipCache","returnFullResponse","restOpts","method","toUpperCase","shouldSkipDedup","auth","fullUrl","isAbsoluteUrl","params","queryParams","URLSearchParams","toString","includes","normUrl","normaliseUrl","err","error","context","bodyKey","body","FormData","Date","now","stableStringify","key","has","get","headers","Accept","credentials","getAuthHeader","authHeaderObj","Authorization","getAccessToken","token","globalDS","globalThis","DependencySystem","userSeemsAuthed","hasAuthCookies","modules","state","isAuthenticated","storageService","storageTok","getItem","isCsrfOrAuthInit","test","info","warn","getCSRFToken","isLogDelivery","setLogDeliveryContext","csrf","JSON","stringify","Promise","reject","AbortControllerImpl","getWindow","AbortController","abortCtl","signal","apiTimeout","TIMEOUTS","API_REQUEST","timer","setTimeout","abort","p","resp","payload","contentType","fetch","wantsBlob","responseType","wantsArrayBuffer","data","arrayBuffer","blob","ok","status","Object","fromEntries","entries","json","text","expectsJson","allowNonJsonResponse","humanMsg","detail","String","message","outerErr","console","clearTimeout","delete","set","post","skip","cleanup","clear"],"sources":["apiClient.js"],"sourcesContent":["/**\n * apiClient.js — Handles API requests with deduplication, timeouts, CSRF, and JSON handling.\n *\n * Usage:\n *   import { createApiClient } from './apiClient.js';\n *   const apiClient = createApiClient({ ... });\n */\n\n/**\n * createApiClient\n * @param {Object} opts\n * @param {Object} opts.APP_CONFIG\n * @param {Object} opts.globalUtils\n * @param {Object} opts.getAuthModule\n * @param {Object} opts.browserService\n * @returns {Function} apiRequest(url, opts, skipCache)\n */\nexport function createApiClient({\n  APP_CONFIG,\n  globalUtils,\n  getAuthModule,\n  browserService,\n  eventHandlers,\n  logger\n}) {\n  // Dependency validation (MANDATORY for factories)\n  if (!APP_CONFIG) throw new Error('[apiClient] Missing APP_CONFIG dependency');\n  if (!globalUtils) throw new Error('[apiClient] Missing globalUtils dependency');\n  if (!getAuthModule) throw new Error('[apiClient] Missing getAuthModule dependency');\n  if (!browserService) throw new Error('[apiClient] Missing browserService dependency');\n  if (!eventHandlers) throw new Error('[apiClient] Missing eventHandlers dependency');\n  if (typeof eventHandlers.cleanupListeners !== \"function\") throw new Error('[apiClient] eventHandlers.cleanupListeners is required');\n  if (!logger) throw new Error('[apiClient] Missing logger dependency');\n\n  const pending = new Map();\n  const BASE_URL = APP_CONFIG?.BASE_API_URL || '';\n\n  // Define the main request function\n  const mainApiRequest = async function apiRequest(url, opts = {}, skipCache = false) {\n    const { returnFullResponse = false, ...restOpts } = opts;\n    const method = (restOpts.method || \"GET\").toUpperCase();\n\n    if (!skipCache && method === \"GET\" && globalUtils.shouldSkipDedup(url)) {\n      skipCache = true;\n    }\n\n    const auth = getAuthModule?.();\n    let fullUrl = globalUtils.isAbsoluteUrl(url) ? url : `${BASE_URL}${url}`;\n\n    // Handle restOpts.params for GET requests\n    if (method === \"GET\" && restOpts.params && typeof restOpts.params === 'object') {\n      const queryParams = new browserService.URLSearchParams(restOpts.params)\n        .toString();\n      if (queryParams) {\n        fullUrl += (fullUrl.includes('?') ? '&' : '?') + queryParams;\n      }\n    }\n\n    let normUrl;\n    try {\n      normUrl = globalUtils.normaliseUrl(fullUrl);\n    } catch (err) {\n      logger.error('[apiClient] URL normalization failed', err, { context: 'apiClient:normaliseUrl', url: fullUrl });\n      normUrl = fullUrl; // Fallback to fullUrl if normalization fails\n    }\n\n    const bodyKey =\n      restOpts.body instanceof FormData\n        ? `[form-data-${Date.now()}]`\n        : globalUtils.stableStringify(restOpts.body || {});\n    const key = `${method}-${normUrl}-${bodyKey}`;\n\n    if (!skipCache && method === \"GET\" && pending.has(key)) {\n      return pending.get(key);\n    }\n\n    restOpts.headers = { Accept: \"application/json\", ...(restOpts.headers || {}) };\n    // Always send cookies unless caller over-rides\n    if (!('credentials' in restOpts)) restOpts.credentials = 'include';\n\n    // Inject Authorization header if auth module provides it and caller hasn't set it explicitly\n    if (auth) {\n      try {\n        if (typeof auth.getAuthHeader === 'function') {\n          const authHeaderObj = auth.getAuthHeader();\n          if (\n            authHeaderObj &&\n            authHeaderObj.Authorization &&\n            !restOpts.headers[\"Authorization\"]\n          ) {\n            restOpts.headers[\"Authorization\"] = authHeaderObj.Authorization;\n          }\n        } else if (typeof auth.getAccessToken === 'function') {\n          const token = auth.getAccessToken();\n          if (token && !restOpts.headers[\"Authorization\"]) {\n            restOpts.headers[\"Authorization\"] = `Bearer ${token}`;\n          }\n        }\n        /* ------------------------------------------------------------------\n         * Fallback: If user appears authenticated but still no Authorization\n         * header, attempt to fetch a token from the DependencySystem's\n         * storageService – accessed via the global namespace to avoid an\n         * undeclared identifier error under ESLint's no-undef rule.\n         * ------------------------------------------------------------------ */\n        const globalDS = globalThis?.DependencySystem;\n        const userSeemsAuthed =\n          !restOpts.headers[\"Authorization\"] &&\n          ((typeof auth.hasAuthCookies === \"function\" && auth.hasAuthCookies()) ||\n            globalDS?.modules?.get?.('appModule')?.state?.isAuthenticated);\n        if (userSeemsAuthed) {\n          const storageService = globalDS?.modules?.get?.('storageService');\n          const storageTok = storageService?.getItem?.('access_token');\n          if (storageTok) {\n            restOpts.headers[\"Authorization\"] = `Bearer ${storageTok}`;\n          }\n        }\n      } catch (err) {\n        logger.error('[apiClient] Failed to inject Authorization header', err, {\n          context: 'apiClient:authHeader'\n        });\n      }\n    }\n\n    // Diagnostic: warn only if the header is missing *and* no auth cookies exist\n    // Suppress warning for CSRF and login/verify endpoints (expected to be unauthenticated)\n    const isCsrfOrAuthInit =\n      /\\/api\\/auth\\/csrf\\b/.test(normUrl) ||\n      /\\/api\\/auth\\/(login|register|verify)\\b/.test(normUrl);\n    if (\n      !restOpts.headers[\"Authorization\"] &&\n      !(auth?.hasAuthCookies?.() === true)\n    ) {\n      if (isCsrfOrAuthInit) {\n        logger.info(\n          '[apiClient] Authorization header/cookie missing (this is normal for CSRF/login/register/verify endpoints)',\n          { url: normUrl, context: 'apiClient:authHeader:missing:init' }\n        );\n      } else {\n        logger.warn(\n          '[apiClient] Authorization header missing and no auth cookies present',\n          { url: normUrl, context: 'apiClient:authHeader:missing:noCookie' }\n        );\n      }\n    }\n    // CSRF token injection\n    if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(method) && auth?.getCSRFToken) {\n      // Set log delivery context if this is a request to /api/logs\n      const isLogDelivery = /\\/api\\/logs\\b/.test(normUrl);\n      if (isLogDelivery && auth.setLogDeliveryContext) {\n        auth.setLogDeliveryContext(true);\n      }\n\n      const csrf = auth.getCSRFToken();\n\n      if (isLogDelivery && auth.setLogDeliveryContext) {\n        auth.setLogDeliveryContext(false);\n      }\n\n      if (csrf) {\n        restOpts.headers[\"X-CSRF-Token\"] = csrf;\n      } else if (!isLogDelivery && auth?.logger && typeof auth.logger.warn === \"function\") {\n        auth.logger.warn(\"[apiClient] Missing CSRF token for \" + normUrl, { context: \"apiClient:csrf\" });\n      }\n    }\n\n    // JSON stringify body if plain object (not FormData)\n    if (restOpts.body && typeof restOpts.body === \"object\" && !(restOpts.body instanceof FormData)) {\n      restOpts.headers[\"Content-Type\"] ??= \"application/json;charset=UTF-8\";\n      if (restOpts.headers[\"Content-Type\"].includes(\"application/json\")) {\n        try {\n          restOpts.body = JSON.stringify(restOpts.body);\n        } catch (err) {\n          logger.error('[apiClient] Failed to serialize request body.', err, { context: 'apiClient:jsonStringify', url: normUrl });\n          return Promise.reject(new Error(\"Failed to serialize request body.\"));\n        }\n      }\n    }\n\n    // Timeout via AbortController (browserService/DI if available)\n    const AbortControllerImpl =\n      browserService.getWindow()?.AbortController\n      ?? (()=>{ throw new Error('[apiClient] AbortController unavailable via DI'); })();\n    const abortCtl = new AbortControllerImpl();\n    restOpts.signal = abortCtl.signal;\n    const apiTimeout = APP_CONFIG?.TIMEOUTS?.API_REQUEST || 15000;\n    const timer = browserService.setTimeout(\n      () => abortCtl.abort(new Error(`API Timeout (${apiTimeout}ms)`)),\n      apiTimeout,\n    );\n\n    const p = (async () => {\n      let resp;\n      let payload = null;\n      let contentType = '';\n      try {\n        if (!browserService?.fetch) throw new Error('[apiClient] browserService.fetch unavailable');\n        resp = await browserService.fetch(normUrl, restOpts);\n\n        /* --------------------------------------------------------\n         *  Binary / file download handling\n         * --------------------------------------------------------\n         *  A caller can force binary mode by passing\n         *     { responseType: 'blob' }   or  'arrayBuffer'\n         *  OR the code auto-detects when the server sets\n         *  `Content-Disposition: attachment`.\n         * ------------------------------------------------------ */\n        const wantsBlob =\n          restOpts.responseType === 'blob' ||\n          resp.headers.get('content-disposition')?.includes('attachment');\n\n        const wantsArrayBuffer = restOpts.responseType === 'arrayBuffer';\n\n        if (wantsBlob || wantsArrayBuffer) {\n          const data = wantsArrayBuffer ? await resp.arrayBuffer() : await resp.blob();\n          if (!resp.ok) {\n            const err = new Error(`HTTP ${resp.status}`);\n            err.status = resp.status;\n            err.data = data;\n            throw err;\n          }\n          return data;\n        }\n\n        // ---------- NEW unified response handling ----------\n        contentType = resp.headers.get('content-type') || '';\n\n        // ------------------------------------------------------------------\n        // Special-case handling for 204 No-Content responses\n        // ------------------------------------------------------------------\n        // When the backend returns HTTP 204 the body is empty, causing the\n        // previous implementation to propagate a `null` payload.  Down-stream\n        // callers such as ProjectManager.loadProjectDetails expect a *truthy*\n        // response object and will otherwise raise\n        // “Null or undefined response from server …”.\n        //\n        // To maintain compatibility while still signalling “no content” we now\n        // resolve with an **empty object** (or a structured full-response\n        // wrapper when `returnFullResponse` is requested).  This preserves the\n        // successful control-flow without forcing every caller to add explicit\n        // null-checks for 204 responses.\n        // ------------------------------------------------------------------\n        if (resp.status === 204) {\n          if (returnFullResponse) {\n            return {\n              data: {},\n              status: resp.status,\n              headers: Object.fromEntries(resp.headers.entries()),\n            };\n          }\n          return {}; // <- canonical empty payload for 204 success\n        }\n\n        if (resp.status !== 204) { // 204 = No-Content\n          if (contentType.includes('application/json')) {\n            try {\n              payload = await resp.json();\n            } catch (err) {\n              logger.error(\n                '[apiClient] JSON parse error in API response',\n                err,\n                { context: 'apiClient:jsonParse', url: normUrl, status: resp.status }\n              );\n              /* Propagate the parsing failure so callers can react properly\n                 instead of receiving a \"null\" payload that triggers opaque\n                 downstream errors like \"Null or undefined response\". */\n              throw err;\n            }\n          } else {\n            try {\n              payload = await resp.text();\n            } catch (err) {\n              logger.error(\n                '[apiClient] Text parse error in API response',\n                err,\n                { context: 'apiClient:textParse', url: normUrl, status: resp.status }\n              );\n              /* Surface the error to the caller for consistent handling */\n              throw err;\n            }\n          }\n        }\n\n        if (resp.ok) { // 2xx\n          // --------------------------------------------------------------\n          // Enforce JSON responses for all `/api/` endpoints unless the\n          // caller explicitly opts-in via `opts.allowNonJsonResponse`.\n          // This prevents HTML redirect pages (added by browsers or\n          // extensions) from being handed to business-logic code that expects\n          // JSON and subsequently fails deep down the stack.\n          // --------------------------------------------------------------\n\n          /* Hardened: also match URLs where “/api/” appears after a leading\n             run of “?” characters or additional query params (e.g. “??project=…”). */\n          const expectsJson =\n            /([?&].*?)?\\/api\\//.test(normUrl) &&\n            !restOpts.allowNonJsonResponse;\n\n          if (expectsJson && !contentType.includes('application/json')) {\n            const err = new Error('Non-JSON payload received for API endpoint');\n            err.status = resp.status;\n            err.data = payload;\n            logger.error('[apiClient] Expected application/json but received', err, {\n              context: 'apiClient:unexpectedContentType',\n              url: normUrl,\n              contentType,\n            });\n            throw err;\n          }\n\n          // ---- final return --------------------------------------------------\n          if (returnFullResponse) {\n            return {\n              data: payload ?? {},\n              status: resp.status,\n              headers: Object.fromEntries(resp.headers.entries()),\n            };\n          }\n          // For 204 and similar cases ensure callers receive an object, not null.\n          return payload ?? {};\n        }\n\n        // ----- non-OK: throw rich error object -----\n        // Preserve backend-provided details so callers can display them\n        const humanMsg =\n          (payload?.detail) ? String(payload.detail) :\n          (typeof payload === 'string') ? payload :\n          (payload?.message) ? String(payload.message) :\n          `HTTP ${resp.status}`;\n\n        const err = new Error(humanMsg);\n        err.status = resp.status;\n        err.data = payload;\n\n        // Prevent recursive logger/apiClient loop for logger delivery\n        if (!/\\/api\\/logs\\b/.test(normUrl)) {\n          logger.error('[apiClient] API response not OK', err, { context: 'apiClient:apiError', url: normUrl, status: resp.status, payload });\n        }\n\n        throw err;\n      } catch (outerErr) {\n        // Prevent recursive logger/apiClient loop for logger delivery\n        if (!/\\/api\\/logs\\b/.test(normUrl)) {\n          logger.error('[apiClient] Unexpected API error', outerErr, { context: 'apiClient:outerCatch', url: normUrl, method, opts: restOpts });\n        } else {\n          // Only output to console, not logger, for log delivery failures\n          (browserService?.getWindow?.()?.console ?? console).error('[apiClient] Failed to deliver log to /api/logs', outerErr);\n        }\n        throw outerErr;\n      } finally {\n        browserService.clearTimeout(timer);\n        if (method === \"GET\") pending.delete(key);\n      }\n    })();\n\n    if (!skipCache && method === \"GET\") pending.set(key, p);\n    return p;\n  };\n\n  // Convenience verbs required by other callers\n  mainApiRequest.post = (url, body = {}, opts = {}, skip = true) =>\n    mainApiRequest(url, { ...opts, method: 'POST', body }, skip);\n  mainApiRequest.get = (url, params = {}, opts = {}, skip = false) =>\n    mainApiRequest(url, { ...opts, method: 'GET',  params }, skip);\n\n  mainApiRequest.fetch = mainApiRequest; // Expose the main function as .fetch\n\n  // Expose cleanup\n  const cleanup = () => {\n    pending.clear();\n    eventHandlers.cleanupListeners({ context: \"apiClient\" });\n  };\n\n  return {\n    fetch: mainApiRequest,\n    get: mainApiRequest.get,\n    post: mainApiRequest.post,\n    cleanup\n  };\n}\n"],"mappings":"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","ignoreList":[]}