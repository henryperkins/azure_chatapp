{"version":3,"names":["_initHelpers","require","_globalUtils","_pullToRefresh","_getSafeHandler","_selectorConstants","createChatUIEnhancements","deps","required","forEach","dep","Error","domAPI","eventHandlers","browserService","domReadinessService","logger","sanitizer","chatManager","initialChatManager","modalManager","DependencySystem","eventService","uiStateService","MODULE_CONTEXT","getChatManager","modules","get","STATE_COMPONENT","getState","key","defaultValue","setState","value","isMobile","_getChatController","createMessageElement","message","sender","timestamp","Date","now","messageId","scrollToBottom","setMessageContainer","container","showTypingIndicator","hideTypingIndicator","appendMessage","role","content","id","thinking","redacted","ctrl","msgEl","clearConversationList","renderCitationsAsDOM","safeHandler","getSafeHandler","waitForElements","createDomWaitHelper","initialize","options","MAX_RETRIES","BASE_DELAY_MS","attempt","tryInit","projectId","CHAT_SELECTORS","SELECTORS","chatInput","chatMessages","chatSendBtn","context","domSelectors","timeout","err","warn","delay","Math","min","setTimeout","error","getElementById","slice","sendBtn","chatContainer","doc","getDocument","trackListener","handleNewMessage","description","setupChatHeaderCollapse","setupMobileEnhancements","setupProjectChatEnhancements","info","chatHeader","chatMetadata","isExpanded","getAttribute","newState","setAttribute","style","display","indicator","querySelector","transform","querySelectorAll","el","tagName","classList","contains","minHeight","fontSize","createPullToRefresh","element","onRefresh","cm","loadConversation","currentConversationId","ctx","newConversationBtn","dataset","bound","createNewConversation","catch","setupConversationListItemClicks","conversationsList","event","conversationItem","closest","target","conversationId","getDataAttribute","item","removeClass","addClass","detail","messageEl","appendChild","_legacyHeavyCreateMessageElement","isUser","createElement","className","avatarEl","avatarSvg","setInnerHTML","sanitize","contentEl","bubbleEl","processedContentFragment","safeText","String","footerEl","date","timeStr","toLocaleTimeString","hour","minute","setTextContent","actionsEl","copyBtn","copySvg","copyMessageToClipboard","sanitizedMessage","tempEl","textContent","getTextContent","clip","getWindow","navigator","clipboard","writeText","then","showCopyFeedback","textarea","textareaStyles","position","top","left","width","height","padding","border","outline","boxShadow","background","Object","entries","prop","setStyle","setValue","body","selectElement","successful","callMethod","parentNode","removeChild","success","toast","toastStyles","bottom","color","opacity","transition","_legacyShowTypingIndicatorHeavy","debug","indicatorEl","dotsContainer","i","dot","_legacyHideTypingIndicatorHeavy","legacySetMessageContainer","messageContainer","containerId","attachEventHandlers","inputField","sendButton","onSend","hasInputField","hasSendButton","hasMessageContainer","shiftKey","preventDefault","getValue","confirmDeleteConversationModal","conversationTitle","confirmDelete","Promise","resolve","title","confirmText","confirmClass","onConfirm","onCancel","showModal","closeModal","modalContext","confirmBtnId","cancelBtnId","safeTitle","modalContent","handleClose","confirmed","onClose","confirmBtn","cancelBtn","cleanup","cleanupListeners","apiObject","_default","exports","default"],"sources":["chatUIEnhancements.js"],"sourcesContent":["/**\n * chatUIEnhancements.js\n *\n * Guardrails-compliant factory export exclusively. No top-level logic or direct DOM/global access.\n * All dependencies (including domReadinessService, logger) injected via DI; no side effects at import time.\n *\n * Provides comprehensive UI management for chat interface:\n * - Message rendering and display\n * - Input handling and submission\n * - Typing indicators\n * - UI state management (empty states, loading)\n * - Mobile-specific enhancements\n * - Project-specific chat integration\n */\n\nimport { createDomWaitHelper } from './utils/initHelpers.js';\nimport { createElement } from './utils/globalUtils.js';\nimport { createPullToRefresh } from './utils/pullToRefresh.js';\nimport { getSafeHandler } from './utils/getSafeHandler.js';\nimport { SELECTORS } from './utils/selectorConstants.js';\n\nexport function createChatUIEnhancements(deps = {}) {\n  // Validate required dependencies\n  const required = ['domAPI', 'eventHandlers', 'browserService', 'domReadinessService', 'logger', 'sanitizer', 'DependencySystem', 'modalManager'];\n  required.forEach(dep => { if (!deps[dep]) throw new Error(`Missing ${dep}`); });\n\n  const { domAPI, eventHandlers, browserService, domReadinessService, logger, sanitizer, chatManager: initialChatManager, modalManager, DependencySystem, eventService = null, uiStateService = null } = deps;\n  const MODULE_CONTEXT = 'chatUIEnhancements';\n\n  if (!modalManager) throw new Error('Missing modalManager');\n\n  // Allow chatManager to be resolved later via DependencySystem if not provided now.\n  function getChatManager() {\n    return initialChatManager || DependencySystem?.modules?.get?.('chatManager') || null;\n  }\n\n  // Initialize state in UIStateService instead of local object\n  const STATE_COMPONENT = 'ChatUIEnhancements';\n  \n  function getState(key, defaultValue = null) {\n    return uiStateService ? uiStateService.getState(STATE_COMPONENT, key) || defaultValue : defaultValue;\n  }\n  \n  function setState(key, value) {\n    if (uiStateService) {\n      uiStateService.setState(STATE_COMPONENT, key, value);\n    }\n  }\n  \n  // Initialize default values\n  if (uiStateService) {\n    setState('typingIndicatorVisible', getState('typingIndicatorVisible', false));\n    setState('messageContainer', getState('messageContainer', null));\n    setState('activeTab', getState('activeTab', null));\n    setState('projectId', getState('projectId', null));\n    setState('isMobile', getState('isMobile', browserService?.isMobile || false));\n  }\n\n  // -------------------------------------------------------------------\n  // Phase-2 de-duplication: delegate heavy UI helpers to ChatUIController\n  // -------------------------------------------------------------------\n\n  function _getChatController() {\n    return DependencySystem?.modules?.get?.('chatUIController') || null;\n  }\n\n  // -------------------------------------------------------------------\n  // Thin wrapper helpers (delegating heavy lifting to ChatUIController)\n  // -------------------------------------------------------------------\n\n  // LEGACY duplicate implementation – renamed to prevent shadowing\n// Legacy heavyweight duplicate – retained for reference but no longer used.\nfunction createMessageElement(message, sender, timestamp = Date.now(), messageId = null) {\n    return _getChatController()?.createMessageElement?.(message, sender, timestamp, messageId) || null;\n  }\n\n  function scrollToBottom() {\n    _getChatController()?.scrollToBottom?.();\n  }\n\n  function setMessageContainer(container) {\n    _getChatController()?.setMessageContainer?.(container);\n    setState('messageContainer', container); // keep state for legacy callers\n  }\n\n  function showTypingIndicator() {\n    _getChatController()?.showTypingIndicator?.();\n  }\n\n  function hideTypingIndicator() {\n    _getChatController()?.hideTypingIndicator?.();\n  }\n\n  function appendMessage(role, content, id = null, thinking = null, redacted = false) {\n    const ctrl = _getChatController();\n    if (!ctrl) return;\n    const msgEl = ctrl.createMessageElement(content, role === 'user' ? 'user' : 'ai', Date.now(), id);\n    ctrl.appendMessage(msgEl);\n    if (role !== 'user' && (thinking || redacted)) ctrl.showTypingIndicator();\n  }\n\n  function clearConversationList() {\n    _getChatController()?.clearConversationList?.();\n  }\n\n  function renderCitationsAsDOM(content) {\n    return _getChatController()?.renderCitationsAsDOM?.(content) || null;\n  }\n\n  const safeHandler = getSafeHandler(DependencySystem);\n\n  // Use utility helper for DOM waiting\n  const waitForElements = createDomWaitHelper(domReadinessService, logger);\n\n  /**\n   * Initialize chat UI enhancements. Waits for required DOM elements.\n   * Attaches event listeners to the default chat UI selectors if found.\n   *\n   * @param {Object} options - Initialization options\n   * @param {string} [options.projectId] - Optional project ID for project-specific chat\n   * @returns {Promise<void>} A promise that resolves when initialization is complete or fails.\n   */\n  // Gap #5 – Retry-capable initialize implementation (exponential back-off)\n  async function initialize(options = {}) {\n    const MAX_RETRIES = 4;\n    const BASE_DELAY_MS = 250;\n    let attempt = 0;\n\n    const tryInit = async () => {\n      attempt += 1;\n\n      // Propagate optional projectId on every attempt so latest value is used\n      if (options.projectId) setState('projectId', options.projectId);\n\n      const CHAT_SELECTORS = [SELECTORS.chatInput, SELECTORS.chatMessages, SELECTORS.chatSendBtn];\n      const context = `${MODULE_CONTEXT}::initialize_attempt_${attempt}`;\n\n      try {\n        await waitForElements({\n          domSelectors: CHAT_SELECTORS,\n          timeout: 8000,\n          context\n        });\n      } catch (err) {\n        logger.warn(`[chatUIEnhancements] Required elements missing – attempt ${attempt}/${MAX_RETRIES}`, err, { context });\n        if (attempt < MAX_RETRIES) {\n          const delay = Math.min(BASE_DELAY_MS * 2 ** (attempt - 1), 4000);\n          browserService.setTimeout(tryInit, delay);\n        } else {\n          logger.error('[chatUIEnhancements] Initialization failed after maximum retries', err, { context });\n        }\n        return;\n      }\n\n      // Elements present – proceed with normal initialization\n      const chatInput = domAPI.getElementById(SELECTORS.chatInput.slice(1));\n      const sendBtn = domAPI.getElementById(SELECTORS.chatSendBtn.slice(1));\n      const chatContainer = domAPI.getElementById(SELECTORS.chatMessages.slice(1));\n      const doc = domAPI.getDocument();\n\n      setState('messageContainer', chatContainer);\n\n      if (doc) {\n        eventHandlers.trackListener(\n          doc,\n          'chatNewMessage',\n          safeHandler(handleNewMessage, 'chatNewMessage'),\n          { context: MODULE_CONTEXT, description: 'New message handler' }\n        );\n      }\n\n      setupChatHeaderCollapse();\n      if (getState('isMobile')) setupMobileEnhancements();\n      if (getState('projectId')) setupProjectChatEnhancements();\n\n      logger.info(`[${MODULE_CONTEXT}] Chat UI enhancements initialized on attempt ${attempt}`,\n        { context: MODULE_CONTEXT, projectId: getState('projectId') || 'global' });\n    };\n\n    // Kick off first attempt (immediately)\n    await tryInit();\n    return;\n  }\n\n  /**\n   * Setup collapsible chat header functionality\n   */\n  function setupChatHeaderCollapse() {\n    const chatHeader = domAPI.getElementById('chatHeader');\n    const chatMetadata = domAPI.getElementById('chatMetadata');\n\n    if (!chatHeader || !chatMetadata) return;\n\n    eventHandlers.trackListener(\n      chatHeader,\n      'click',\n      safeHandler(() => {\n        const isExpanded = chatHeader.getAttribute('aria-expanded') === 'true';\n        const newState = !isExpanded;\n\n        chatHeader.setAttribute('aria-expanded', newState ? 'true' : 'false');\n        chatMetadata.style.display = newState ? 'flex' : 'none';\n\n        // Rotate chevron\n        const indicator = chatHeader.querySelector('.expandable-indicator');\n        if (indicator) {\n          indicator.style.transform = newState ? 'rotate(0deg)' : 'rotate(-90deg)';\n        }\n      }, 'chatHeaderToggle'),\n      {\n        context: MODULE_CONTEXT,\n        description: 'Chat header collapse toggle'\n      }\n    );\n  }\n\n  /**\n   * Setup mobile-specific enhancements for chat UI\n   */\n  function setupMobileEnhancements() {\n    // Improve touch targets\n    domAPI.querySelectorAll(`#chatHeader button, ${SELECTORS.chatInput}, ${SELECTORS.chatSendBtn}`).forEach(el => {\n      if (el.tagName === 'BUTTON' && !el.classList.contains('btn-lg')) {\n        el.style.minHeight = '44px'; // Ensure minimum touch target size\n      }\n    });\n\n    // Improve keyboard experience for input\n    const chatInput = domAPI.getElementById(SELECTORS.chatInput.slice(1));\n    if (chatInput) {\n      // Prevent iOS zoom by ensuring font size is at least 16px\n      chatInput.style.fontSize = '16px';\n\n      // Add proper mobile keyboard support\n      chatInput.setAttribute('inputmode', 'text');\n      chatInput.setAttribute('enterkeyhint', 'send');\n    }\n\n    // Setup pull-to-refresh for chat messages\n    createPullToRefresh({\n      element        : domAPI.getElementById(SELECTORS.chatMessages.slice(1)),\n      onRefresh      : () => {\n        const cm = getChatManager();\n        cm?.loadConversation?.(cm.currentConversationId);\n      },\n      eventHandlers, domAPI, browserService,\n      ctx            : MODULE_CONTEXT\n    });\n  }\n\n\n  /**\n   * Setup project-specific chat enhancements\n   */\n  function setupProjectChatEnhancements() {\n    // Setup \"New Conversation\" button if available\n    const newConversationBtn = domAPI.getElementById(SELECTORS.newConversationBtn.slice(1));\n    if (newConversationBtn && !newConversationBtn.dataset.bound) {\n      eventHandlers.trackListener(\n        newConversationBtn,\n        'click',\n        safeHandler(() => {\n          const cm = getChatManager();\n          if (cm?.createNewConversation) {\n            cm.createNewConversation()\n              .catch(err => {\n                logger.error('[chatUIEnhancements] Error creating new conversation', err, {\n                  context: MODULE_CONTEXT\n                });\n              });\n          }\n        }, 'newConversationClick'),\n        {\n          context: MODULE_CONTEXT,\n          description: 'New conversation button click'\n        }\n      );\n      newConversationBtn.dataset.bound = '1';\n    }\n\n    // Setup conversation list item clicks\n    setupConversationListItemClicks();\n  }\n\n  /**\n   * Setup click handlers for conversation list items\n   */\n  function setupConversationListItemClicks() {\n    const conversationsList = domAPI.getElementById(SELECTORS.conversationsList.slice(1));\n    if (!conversationsList) return;\n\n    // Use event delegation for conversation items\n    eventHandlers.trackListener(\n      conversationsList,\n      'click',\n      safeHandler((event) => {\n        // Find closest conversation item\n        const conversationItem = domAPI.closest(event.target, '.conversation-item');\n        if (!conversationItem) return;\n\n        // Get conversation ID\n        const conversationId = domAPI.getDataAttribute(conversationItem, 'conversationId');\n        if (!conversationId) return;\n\n        // Load conversation if chatManager is available\n        const cm = getChatManager();\n        if (cm?.loadConversation) {\n          // Highlight active conversation\n          domAPI.querySelectorAll('.conversation-item.active').forEach(item => {\n            domAPI.removeClass(item, 'active');\n          });\n          domAPI.addClass(conversationItem, 'active');\n\n          // Load conversation\n          cm.loadConversation(conversationId)\n            .catch(err => {\n              logger.error('[chatUIEnhancements] Error loading conversation', err, {\n                context: MODULE_CONTEXT,\n                conversationId\n              });\n            });\n        }\n      }, 'conversationItemClick'),\n      {\n        context: MODULE_CONTEXT,\n        description: 'Conversation item click'\n      }\n    );\n  }\n\n  // Handle new message event\n  function handleNewMessage(event) {\n    if (!event.detail) {\n      logger.warn(`[${MODULE_CONTEXT}] Received chatNewMessage event without detail`, { context: MODULE_CONTEXT });\n      return;\n    }\n\n    const { message, sender, timestamp, messageId } = event.detail;\n    const messageEl = createMessageElement(message, sender, timestamp, messageId);\n    const chatContainer = getState('messageContainer') || domAPI.getElementById(SELECTORS.chatMessages.slice(1));\n\n    if (chatContainer && messageEl) {\n      domAPI.appendChild(chatContainer, messageEl);\n      scrollToBottom(chatContainer);\n    } else {\n      logger.error(`[${MODULE_CONTEXT}] Failed to find chat container or create message element`, { context: MODULE_CONTEXT });\n    }\n  }\n\n\n  // NOTE: duplicate legacy implementation of renderCitationsAsDOM removed – now delegated to ChatUIController via thin wrapper above.\n\n  /**\n   * Creates a message element for display in the chat UI.\n   * @param {string} message - The message content.\n   * @param {string} sender - The message sender ('user' or 'ai').\n   * @param {number} [timestamp] - Optional timestamp for the message.\n   * @param {string|number} [messageId] - Optional message ID.\n   * @returns {HTMLElement} The created message element.\n   */\n// Legacy heavyweight duplicate – not used anymore.\nfunction _legacyHeavyCreateMessageElement(message, sender, timestamp = Date.now(), messageId = null) {\n    const context = `${MODULE_CONTEXT}::createMessageElement`;\n    try {\n      const isUser = sender === 'user';\n\n      // Create message container\n      const messageEl = domAPI.createElement('div');\n      messageEl.className = `message ${isUser ? 'user-message' : 'ai-message'}`;\n      if (messageId) {\n        messageEl.dataset.messageId = messageId;\n      }\n\n      // Create avatar\n      const avatarEl = domAPI.createElement('div');\n      avatarEl.className = 'message-avatar';\n\n      // Set avatar content based on sender\n      const avatarSvg = isUser\n        ? '<svg class=\"w-8 h-8 text-primary\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clip-rule=\"evenodd\"></path></svg>'\n        : '<svg class=\"w-8 h-8 text-secondary\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z\"></path><path d=\"M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z\"></path></svg>';\n      domAPI.setInnerHTML(avatarEl, sanitizer.sanitize(avatarSvg));\n\n      // Create message content container\n      const contentEl = domAPI.createElement('div');\n      contentEl.className = 'message-content';\n\n      // Create message bubble\n      const bubbleEl = domAPI.createElement('div');\n      bubbleEl.className = 'message-bubble';\n\n      // Process and set message content\n      if (!isUser && typeof message === \"string\") {\n        // Use DOM building function for AI content with citations\n        const processedContentFragment = renderCitationsAsDOM(message);\n        domAPI.appendChild(bubbleEl, processedContentFragment);\n      } else {\n        // For user messages or non-string content, sanitize and set as text\n        const safeText = sanitizer.sanitize(String(message));\n        domAPI.setInnerHTML(bubbleEl, safeText);\n      }\n\n      // Create message footer with timestamp\n      const footerEl = domAPI.createElement('div');\n      footerEl.className = 'message-footer text-xs opacity-70';\n\n      // Format timestamp\n      const date = new Date(timestamp);\n      const timeStr = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n      domAPI.setTextContent(footerEl, timeStr);\n\n      // Add copy button for AI messages\n      if (!isUser) {\n        const actionsEl = domAPI.createElement('div');\n        actionsEl.className = 'message-actions';\n\n        const copyBtn = domAPI.createElement('button');\n        copyBtn.className = 'btn btn-ghost btn-xs';\n        copyBtn.setAttribute('aria-label', 'Copy message');\n        const copySvg = '<svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"></path></svg>';\n        domAPI.setInnerHTML(copyBtn, sanitizer.sanitize(copySvg));\n\n        // Add click handler to copy button\n        eventHandlers.trackListener(\n          copyBtn,\n          'click',\n          safeHandler(() => {\n            copyMessageToClipboard(message);\n          }, 'copyMessage'),\n          { context: MODULE_CONTEXT }\n        );\n\n        domAPI.appendChild(actionsEl, copyBtn);\n        domAPI.appendChild(contentEl, actionsEl);\n      }\n\n      // Assemble message element\n      domAPI.appendChild(contentEl, bubbleEl);\n      domAPI.appendChild(contentEl, footerEl);\n      domAPI.appendChild(messageEl, avatarEl);\n      domAPI.appendChild(messageEl, contentEl);\n\n      return messageEl;\n    } catch (err) {\n      logger.error(`[${MODULE_CONTEXT}] Error creating message element`, err, {\n        context,\n        sender,\n        messageId: messageId || 'N/A'\n      });\n      return null;\n    }\n  }\n\n  /**\n   * Copy message content to clipboard. Strips HTML from AI messages before copying.\n   * @param {string} message - The message content to copy.\n   */\n  function copyMessageToClipboard(message) {\n    const context = `${MODULE_CONTEXT}::copyMessageToClipboard`;\n    // Strip HTML tags for plain text copy, using sanitizer for safety first\n    const sanitizedMessage = sanitizer.sanitize(String(message));\n    const tempEl = domAPI.createElement('div');\n    // Set sanitized HTML, then get textContent which is plain text\n    domAPI.setInnerHTML(tempEl, sanitizedMessage); // Use domAPI wrapper for innerHTML\n    const textContent = domAPI.getTextContent(tempEl); // Use domAPI wrapper for textContent\n\n    const doc = domAPI.getDocument();\n\n    // Use clipboard API if available (DI-safe via browserService)\n    const clip = browserService.getWindow()?.navigator?.clipboard;\n    if (clip?.writeText) {\n      clip.writeText(textContent)\n        .then(() => {\n          logger.info(`[${MODULE_CONTEXT}] Text copied via clipboard API`, {\n            context\n          });\n          showCopyFeedback(true);\n        })\n        .catch(err => {\n          logger.error(`[${MODULE_CONTEXT}] Failed to copy text via clipboard API`, err, {\n            context\n          });\n          showCopyFeedback(false);\n        });\n    } else {\n      // Fallback method using textarea\n      logger.warn(`[${MODULE_CONTEXT}] Clipboard API not available, using fallback copy method`, {\n        context\n      });\n\n      const textarea = domAPI.createElement('textarea');\n      const textareaStyles = {\n        position: 'fixed', top: '0', left: '0', width: '2em', height: '2em',\n        padding: '0', border: 'none', outline: 'none', boxShadow: 'none', background: 'transparent'\n      };\n      Object.entries(textareaStyles).forEach(([prop, value]) => domAPI.setStyle(textarea, prop, value));\n      domAPI.setValue(textarea, textContent);\n\n      domAPI.appendChild(doc.body, textarea);\n\n      try {\n        domAPI.selectElement(textarea); // Use domAPI wrapper for select\n        const successful = domAPI.callMethod(doc, 'execCommand', 'copy');\n        if (!successful) {\n          logger.error(`[${MODULE_CONTEXT}] doc.execCommand('copy') failed`, {\n            context\n          });\n        } else {\n          logger.info(`[${MODULE_CONTEXT}] Text copied via fallback execCommand`, {\n            context\n          });\n        }\n        showCopyFeedback(successful);\n      } catch (err) {\n        logger.error(`[${MODULE_CONTEXT}] Fallback copy method error`, err, {\n          context\n        });\n        showCopyFeedback(false);\n      } finally {\n        if (textarea.parentNode) {\n          domAPI.removeChild(textarea.parentNode, textarea); // Use domAPI wrapper for removeChild\n        }\n      }\n    }\n  }\n\n  /**\n   * Show feedback toast for copy operation\n   * @param {boolean} success - Whether the copy operation was successful\n   */\n  function showCopyFeedback(success) {\n    const context = `${MODULE_CONTEXT}::showCopyFeedback`;\n    try {\n      // Create toast element\n      const toast = domAPI.createElement('div');\n      toast.className = `copy-toast ${success ? 'success' : 'error'}`;\n      toast.textContent = success ? 'Copied to clipboard!' : 'Failed to copy';\n\n      // Style the toast\n      const toastStyles = {\n        position: 'fixed', bottom: '20px', left: '50%', transform: 'translateX(-50%)',\n        padding: '8px 16px', background: success ? 'var(--color-success)' : 'var(--color-error)',\n        color: 'white', 'border-radius': '4px', 'z-index': '9999', opacity: '0', transition: 'opacity 0.3s ease'\n      };\n      Object.entries(toastStyles).forEach(([prop, value]) => domAPI.setStyle(toast, prop, value));\n\n      // Add to DOM\n      const doc = domAPI.getDocument();\n      domAPI.appendChild(doc.body, toast);\n\n      // Animate in\n      browserService.setTimeout(() => {\n        domAPI.setStyle(toast, 'opacity', '1');\n      }, 10);\n\n      // Remove after delay\n      browserService.setTimeout(() => {\n        domAPI.setStyle(toast, 'opacity', '0');\n        browserService.setTimeout(() => {\n          if (toast.parentNode) {\n            domAPI.removeChild(toast.parentNode, toast);\n          }\n        }, 300);\n      }, 2000);\n    } catch (err) {\n      logger.error(`[${MODULE_CONTEXT}] Error showing copy feedback`, err, {\n        context,\n        success\n      });\n    }\n  }\n\n\n  // Duplicate legacy scrollToBottom removed – ChatUIController implementation used through thin wrapper.\n\n  /**\n   * Show typing indicator in the chat UI.\n   */\n// LEGACY duplicate implementation – renamed to prevent shadowing\n// Legacy heavyweight duplicate – not used anymore.\nfunction _legacyShowTypingIndicatorHeavy() {\n    const context = `${MODULE_CONTEXT}::showTypingIndicator`;\n    if (getState('typingIndicatorVisible')) {\n      logger.debug(`[${MODULE_CONTEXT}] Typing indicator already visible, skipping`, {\n        context\n      });\n      return;\n    }\n\n    const container = getState('messageContainer') || domAPI.getElementById(SELECTORS.chatMessages.slice(1));\n    if (!container) {\n      logger.warn(`[${MODULE_CONTEXT}] Cannot show typing indicator, container not found`, {\n        context\n      });\n      return;\n    }\n\n    // Create typing indicator element\n    const indicatorEl = domAPI.createElement('div');\n    indicatorEl.id = 'typingIndicator';\n    indicatorEl.className = 'typing-indicator';\n\n    // Create dots\n    const dotsContainer = domAPI.createElement('div');\n    dotsContainer.className = 'typing-dots';\n\n    for (let i = 0; i < 3; i++) {\n      const dot = domAPI.createElement('div');\n      dot.className = 'typing-dot';\n      domAPI.appendChild(dotsContainer, dot);\n    }\n\n    domAPI.appendChild(indicatorEl, dotsContainer);\n    domAPI.appendChild(container, indicatorEl);\n\n    scrollToBottom(container);\n    setState('typingIndicatorVisible', true);\n\n    logger.debug(`[${MODULE_CONTEXT}] Typing indicator shown`, {\n      context\n    });\n  }\n\n  /**\n   * Hide typing indicator in the chat UI.\n   */\n// LEGACY duplicate implementation – renamed to prevent shadowing\n// Legacy heavyweight duplicate – not used anymore.\nfunction _legacyHideTypingIndicatorHeavy() {\n    const context = `${MODULE_CONTEXT}::hideTypingIndicator`;\n    if (!getState('typingIndicatorVisible')) {\n      logger.debug(`[${MODULE_CONTEXT}] No typing indicator visible, skipping`, {\n        context\n      });\n      return;\n    }\n\n    const indicator = domAPI.getElementById('typingIndicator');\n    if (indicator && indicator.parentNode) {\n      domAPI.removeChild(indicator.parentNode, indicator);\n      setState('typingIndicatorVisible', false);\n      logger.debug(`[${MODULE_CONTEXT}] Typing indicator removed`, {\n        context\n      });\n    } else {\n      logger.warn(`[${MODULE_CONTEXT}] Cannot hide typing indicator, element not found`, {\n        context\n      });\n      // Reset state anyway to avoid getting stuck\n      setState('typingIndicatorVisible', false);\n    }\n  }\n\n  /**\n   * Set the active message container for the chat UI.\n   * This allows the module to work with different chat containers.\n   * @param {HTMLElement} messageContainer - The container element for chat messages.\n   */\n  // LEGACY duplicate implementation – renamed to prevent shadowing\n  function legacySetMessageContainer(messageContainer) {\n    const context = `${MODULE_CONTEXT}::setMessageContainer`;\n\n    hideTypingIndicator(); // remove orphan indicator from old pane if any\n\n    /* remember the active container so showTypingIndicator/… work for both\n       the global chat and the per-project chat inside Project Details */\n    setState('messageContainer', messageContainer || null); // Cache the provided container\n    setState('typingIndicatorVisible', false); // reset state for new pane\n\n    logger.debug(`[${MODULE_CONTEXT}] Message container set`, {\n      context,\n      containerId: messageContainer?.id || 'null'\n    });\n  }\n\n  /**\n   * Attach event handlers to chat UI elements.\n   * @param {Object} options - Options for attaching event handlers.\n   * @param {HTMLElement} options.inputField - The input field element.\n   * @param {HTMLElement} options.sendButton - The send button element.\n   * @param {HTMLElement} options.messageContainer - The container for messages.\n   * @param {Function} options.onSend - Callback function when a message is sent.\n   */\n  function attachEventHandlers({\n    inputField,\n    sendButton,\n    messageContainer,\n    onSend\n  }) {\n    const context = `${MODULE_CONTEXT}::attachEventHandlers`;\n\n    if (!inputField || !sendButton || !messageContainer) {\n      logger.error(`[${MODULE_CONTEXT}] Missing required elements for attaching event handlers`, {\n        context,\n        hasInputField: !!inputField,\n        hasSendButton: !!sendButton,\n        hasMessageContainer: !!messageContainer\n      });\n      return;\n    }\n\n    // Set the active message container\n    setMessageContainer(messageContainer);\n\n    // Enhanced submit on Enter (no Shift)\n    if (inputField && typeof onSend === 'function') {\n      eventHandlers.trackListener(\n        inputField,\n        'keydown',\n        safeHandler((event) => {\n          if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            onSend(domAPI.getValue(inputField)); // Use domAPI wrapper for value\n          }\n        }, 'inputKeydownAttach'),\n        {\n          context: MODULE_CONTEXT,\n          description: 'Enhanced chat input handler on keydown'\n        }\n      );\n    }\n\n    // Send button click handler\n    if (sendButton && typeof onSend === 'function') {\n      eventHandlers.trackListener(\n        sendButton,\n        'click',\n        safeHandler(() => {\n          onSend(inputField ? domAPI.getValue(inputField) : ''); // Use domAPI wrapper for value\n        }, 'sendButtonClickAttach'),\n        {\n          context: MODULE_CONTEXT,\n          description: 'Send button click handler'\n        }\n      );\n    }\n\n    logger.info(`[${MODULE_CONTEXT}] Event handlers attached to chat UI elements`, {\n      context\n    });\n  }\n\n  /**\n   * Show a DI-guarded confirmation modal before deleting a conversation.\n   * Requires `modalManager` dependency.\n   * @param {string} conversationTitle - The title of the conversation to show in the modal.\n   * @returns {Promise<boolean>} Resolves true if user confirms, false otherwise.\n   */\n  async function confirmDeleteConversationModal(conversationTitle) {\n    const context = `${MODULE_CONTEXT}::confirmDeleteConversationModal`;\n\n    // Preferred path: use ModalManager.confirmDelete if available (wire to deleteConfirmModal)\n    if (typeof modalManager?.confirmDelete === 'function') {\n      return new Promise((resolve) => {\n        modalManager.confirmDelete({\n          title: 'Delete Conversation',\n          message: `Are you sure you want to delete \"${sanitizer.sanitize(conversationTitle || 'this conversation')}\"? This action cannot be undone.`,\n          confirmText: 'Delete',\n          confirmClass: 'btn-error',\n          onConfirm: () => resolve(true),\n          onCancel: () => resolve(false)\n        });\n      });\n    }\n\n    if (!modalManager?.showModal || !modalManager?.closeModal) {\n      logger.error(`[${MODULE_CONTEXT}] modalManager dependency missing or incomplete`, { context });\n      return false;\n    }\n\n    return new Promise((resolve) => {\n      const modalContext = `${MODULE_CONTEXT}:deleteConversationModal`;\n      const confirmBtnId = 'confirmDeleteConversation';\n      const cancelBtnId = 'cancelDeleteConversation';\n\n      // Sanitize conversation title for display\n      const safeTitle = sanitizer.sanitize(conversationTitle || 'this conversation');\n\n      const modalContent = `\n        <div class=\"modal-content p-6\">\n          <h3 class=\"text-lg font-bold mb-4\">Delete Conversation</h3>\n          <p class=\"mb-6\">Are you sure you want to delete \"${safeTitle}\"? This action cannot be undone.</p>\n          <div class=\"modal-actions flex justify-end gap-2\">\n            <button id=\"${cancelBtnId}\" class=\"btn btn-ghost\">Cancel</button>\n            <button id=\"${confirmBtnId}\" class=\"btn btn-error\">Delete</button>\n          </div>\n        </div>\n      `;\n\n      // Function to handle modal close with result\n      const handleClose = (confirmed) => {\n        modalManager.closeModal();\n        resolve(confirmed);\n      };\n\n      // Show the modal\n      modalManager.showModal({\n        content: modalContent,\n        onClose: () => handleClose(false)\n      });\n\n      // Get buttons and attach event listeners\n      const confirmBtn = domAPI.getElementById(confirmBtnId);\n      if (confirmBtn) {\n        eventHandlers.trackListener(\n          confirmBtn,\n          \"click\",\n          safeHandler(() => handleClose(true), 'confirmDeleteClick'), // Wrap handler\n          {\n            context: modalContext,\n            description: \"Confirm Delete Conversation Button\"\n          }\n        );\n        logger.debug(`[${MODULE_CONTEXT}] Confirm button listener attached`, {\n          context: modalContext\n        });\n      } else {\n        logger.error(`[${MODULE_CONTEXT}] Confirm button with ID ${confirmBtnId} not found in modal`, {\n          context: modalContext\n        });\n      }\n\n      const cancelBtn = domAPI.getElementById(cancelBtnId);\n      if (cancelBtn) {\n        eventHandlers.trackListener(\n          cancelBtn,\n          \"click\",\n          safeHandler(() => handleClose(false), 'cancelDeleteClick'), // Wrap handler\n          {\n            context: modalContext,\n            description: \"Cancel Delete Conversation Button\"\n          }\n        );\n        logger.debug(`[${MODULE_CONTEXT}] Cancel button listener attached`, {\n          context: modalContext\n        });\n      } else {\n        logger.error(`[${MODULE_CONTEXT}] Cancel button with ID ${cancelBtnId} not found in modal`, {\n          context: modalContext\n        });\n      }\n    });\n  }\n\n  /**\n   * Clean up all event listeners and resources.\n   */\n  function cleanup() {\n    const context = `${MODULE_CONTEXT}::cleanup`;\n    logger.info(`[${MODULE_CONTEXT}] Cleaning up chat UI enhancements`, {\n      context\n    });\n\n    // Clean up all event listeners\n    eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n\n    // Reset state\n    setState('typingIndicatorVisible', false);\n    setState('messageContainer', null);\n\n    logger.info(`[${MODULE_CONTEXT}] Chat UI enhancements cleaned up`, {\n      context\n    });\n  }\n\n  // NOTE: appendMessage and clearConversationList are already defined above (lines 80-90)\n  // Removing duplicate definitions to fix lint errors\n\n  // Public API\n  const apiObject = {\n    initialize,\n    // Wrapped helpers – implemented via ChatUIController\n    showTypingIndicator,\n    hideTypingIndicator,\n    cleanup,\n    createMessageElement,\n    attachEventHandlers,\n    confirmDeleteConversationModal,\n    renderCitationsAsDOM,\n    setMessageContainer,\n    setupMobileEnhancements,\n    setupProjectChatEnhancements,\n    appendMessage,\n    clearConversationList\n  };\n\n  // Ensure wrapper helpers override any legacy implementations defined earlier.\n  apiObject.createMessageElement   = createMessageElement;\n  apiObject.showTypingIndicator    = showTypingIndicator;\n  apiObject.hideTypingIndicator    = hideTypingIndicator;\n  apiObject.setMessageContainer    = setMessageContainer;\n  apiObject.appendMessage          = appendMessage;\n  apiObject.clearConversationList  = clearConversationList;\n\n  // Registration is handled by appInitializer.js to avoid duplicate DI entries.\n\n  return apiObject;\n}\n\nexport default createChatUIEnhancements;\n"],"mappings":"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","ignoreList":[]}