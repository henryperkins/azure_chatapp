{"version":3,"names":["_domAPI","require","_eventHandler","_safeHandler","_domReadinessService","_logger","_polyfillCustomEvent","_eventService","_uiStateService","_session","_tokenStatsManagerProxy","_authFormHandler","_authApiService","_authStateManager","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","createBootstrapCore","opts","DependencySystem","browserService","APP_CONFIG","initializeCoreServices","registerSessionBrowserService","sanitizer","getWindow","DOMPurify","createDOMPurifyGlobal","err","Error","domAPI","createDomAPI","documentObject","getDocument","windowObject","debug","DEBUG","stubSafeHandler","fn","_description","args","apply","logger","eventHandlers","createEventHandlers","safeHandler","errorReporter","report","error","undefined","info","warn","log","createLogger","context","minLevel","LOGGING","MIN_LEVEL","consoleEnabled","CONSOLE_ENABLED","sessionIdProvider","coreGetSessionId","cleanup","customEventPolyfillCleanup","createCustomEventPolyfill","register","setLogger","ctx","console","createSafeHandler","setSafeHandler","createChatManager","domReadinessService","createDomReadinessService","setDomReadinessService","AppBus","EventTarget","eventService","createEventService","existingBus","modules","uiUtils","formatBytes","globalFormatBytes","formatDate","globalFormatDate","fileIcon","globalFileIcon","globalUtils","shouldSkipDedup","stableStringify","normaliseUrl","isAbsoluteUrl","isValidProjectId","tokenStatsProxy","createTokenStatsManagerProxy","uiStateService","createUIStateService","authFormHandler","createAuthFormHandler","_tryCreateAuthApiService","instance","apiClient","apiEndpoints","createAuthApiService","authApiServiceProxy","Proxy","_target","prop","inst","value","bind","Symbol","toPrimitive","authStateManager","createAuthStateManager","storageService","registerFactories","getSessionId","factoriesToRegister","Promise","resolve","then","m","createKnowledgeBaseManager","createKnowledgeBaseSearchHandler","createPollingService","createChatUIEnhancements"],"sources":["bootstrapCore.js"],"sourcesContent":["// ========================================\n// FILE: /initialization/bootstrap/bootstrapCore.js\n// ========================================\n/**\n * Core Bootstrap Logic\n * Handles circular dependency resolution and early service setup\n * Extracted from initialDISetup()\n */\n\nimport { createDomAPI } from \"../../utils/domAPI.js\";\nimport { createEventHandlers } from \"../../eventHandler.js\";\nimport { createSafeHandler } from \"../../safeHandler.js\";\nimport { createDomReadinessService } from \"../../utils/domReadinessService.js\";\nimport { createLogger } from \"../../logger.js\";\nimport { createCustomEventPolyfill } from \"../../utils/polyfillCustomEvent.js\";\nimport { createEventService } from \"../../services/eventService.js\";\nimport { createUIStateService } from \"../../uiStateService.js\";\nimport { setBrowserService as registerSessionBrowserService, getSessionId as coreGetSessionId } from \"../../utils/session.js\";\n\n// Statically import modules that were previously loaded with dynamic `import()`.\nimport { createTokenStatsManagerProxy } from \"../../tokenStatsManagerProxy.js\";\nimport { createAuthFormHandler } from \"../../authFormHandler.js\";\nimport { createAuthApiService } from \"../../authApiService.js\";\nimport { createAuthStateManager } from \"../../authStateManager.js\";\n\nexport function createBootstrapCore(opts) {\n    const { DependencySystem, browserService, APP_CONFIG } = opts;\n\n    /**\n     * Bootstrap core services with circular dependency resolution\n     */\n    function initializeCoreServices() {\n        // 1. Attach browserService to session for backward-compatibility\n        registerSessionBrowserService(browserService);\n\n        // 2. Ensure DOMPurify (sanitizer) is available.\n        // If it does not exist yet, attempt to lazily create it using the\n        // injected `createDOMPurifyGlobal` factory (added to opts by\n        // app.js).  This preserves the original safety check while avoiding\n        // a hard-failure during early bootstrap ordering.\n\n        let sanitizer = browserService?.getWindow?.()?.DOMPurify;\n\n        if (!sanitizer) {\n            const { createDOMPurifyGlobal } = opts;\n            if (typeof createDOMPurifyGlobal === 'function') {\n                try {\n                    createDOMPurifyGlobal({ browserService });\n                    sanitizer = browserService?.getWindow?.()?.DOMPurify;\n                } catch (err) {\n                    /* eslint-disable no-empty */\n                }\n            }\n        }\n\n        if (!sanitizer) {\n            throw new Error('[appInitializer] DOMPurify not found â€” cannot proceed (security requirement).');\n        }\n\n        // 3. Create domAPI BEFORE logger/eventHandlers\n        const domAPI = createDomAPI({\n            documentObject: browserService.getDocument(),\n            windowObject: browserService.getWindow(),\n            debug: APP_CONFIG?.DEBUG === true,\n            sanitizer\n        });\n\n        // 4. Bootstrap logger with stub pattern for circular dependency\n\n        // Bootstrap minimal safeHandler stub for pre-logger DI\n        function stubSafeHandler(fn, _description) {\n            if (typeof fn !== 'function') return () => {};\n            return function (...args) {\n                try { return fn.apply(this, args); } catch { /* intentionally ignored */ }\n            };\n        }\n\n        let logger;\n\n        // Create eventHandlers with stub logger\n        const eventHandlers = createEventHandlers({\n            DependencySystem,\n            domAPI,\n            browserService,\n            APP_CONFIG,\n            safeHandler: stubSafeHandler,\n            sanitizer,\n            errorReporter: {\n                report: (...args) => logger ? logger.error('[errorReporter]', ...args) : undefined\n            },\n            logger: {\n                debug: () => {},\n                info: () => {},\n                warn: () => {},\n                error: () => {},\n                log: () => {}\n            }\n        });\n\n        // Create real logger\n        logger = createLogger({\n            context: 'App',\n            debug: APP_CONFIG?.DEBUG === true,\n            minLevel: APP_CONFIG?.LOGGING?.MIN_LEVEL || 'info',\n            consoleEnabled: APP_CONFIG?.LOGGING?.CONSOLE_ENABLED !== false,\n            sessionIdProvider: coreGetSessionId,\n            domAPI,\n            browserService,\n            eventHandlers\n        });\n\n        // Create custom event polyfill\n        const { cleanup: customEventPolyfillCleanup } = createCustomEventPolyfill({\n            browserService,\n            logger\n        });\n        DependencySystem.register('customEventPolyfill', {\n            cleanup: customEventPolyfillCleanup\n        });\n\n        // Wire logger into eventHandlers\n        if (typeof eventHandlers.setLogger === 'function') {\n            eventHandlers.setLogger(logger);\n        }\n\n        // Create error reporter\n        const errorReporter = {\n            report(error, ctx = {}) {\n                if (logger) {\n                    logger.error('[errorReporter] reported', error, { context: 'errorReporter', ...ctx });\n                } else if (typeof console !== 'undefined') {\n                    console.error('[errorReporter] reported', error, ctx);\n                }\n            }\n        };\n\n        // Wire logger into domAPI\n        if (typeof domAPI.setLogger === 'function') {\n            domAPI.setLogger(logger);\n        }\n\n        // Create real safeHandler with logger\n        const { safeHandler } = createSafeHandler({ logger });\n\n        // Upgrade eventHandlers with real safeHandler\n        if (typeof eventHandlers.setSafeHandler === 'function') {\n            eventHandlers.setSafeHandler(safeHandler);\n        }\n\n        // Register core objects into DependencySystem\n        DependencySystem.register('browserService', browserService);\n        DependencySystem.register('logger', logger);\n        DependencySystem.register('sanitizer', sanitizer);\n        DependencySystem.register('domPurify', sanitizer); // legacy alias\n        DependencySystem.register('safeHandler', safeHandler);\n        DependencySystem.register('createChatManager', opts.createChatManager);\n        DependencySystem.register('domAPI', domAPI);\n        DependencySystem.register('eventHandlers', eventHandlers);\n        DependencySystem.register('errorReporter', errorReporter);\n\n        // Setup domReadinessService\n        const domReadinessService = createDomReadinessService({\n            DependencySystem,\n            domAPI,\n            browserService,\n            eventHandlers,\n            APP_CONFIG,\n            logger\n        });\n        DependencySystem.register('domReadinessService', domReadinessService);\n        eventHandlers.setDomReadinessService(domReadinessService);\n\n        // Create event bus and services\n        const AppBus = new EventTarget();\n        DependencySystem.register('AppBus', AppBus);\n\n        const eventService = createEventService({\n            DependencySystem,\n            logger,\n            eventHandlers,\n            existingBus: AppBus\n        });\n        DependencySystem.register('eventService', eventService);\n\n        // Legacy aliases\n        if (!DependencySystem.modules.get('eventBus')) {\n            DependencySystem.register('eventBus', AppBus);\n        }\n        if (!DependencySystem.modules.get('AuthBus')) {\n            DependencySystem.register('AuthBus', AppBus);\n        }\n\n        // UI utilities\n        const uiUtils = {\n            formatBytes: opts.globalFormatBytes,\n            formatDate: opts.globalFormatDate,\n            fileIcon: opts.globalFileIcon\n        };\n\n        const globalUtils = {\n            shouldSkipDedup: opts.shouldSkipDedup,\n            stableStringify: opts.stableStringify,\n            normaliseUrl: browserService.normaliseUrl || null,\n            isAbsoluteUrl: opts.isAbsoluteUrl,\n            isValidProjectId: opts.isValidProjectId\n        };\n\n        // Register token stats proxy\n        const tokenStatsProxy = createTokenStatsManagerProxy({ DependencySystem, logger });\n        DependencySystem.register('tokenStatsManagerProxy', tokenStatsProxy);\n        // Alias: expose proxy under canonical name so downstream modules can\n        // safely `modules.get('tokenStatsManager')` before the real manager is\n        // ready.  uiInit later replaces this entry with the concrete\n        // implementation.\n        if (!DependencySystem.modules.get('tokenStatsManager')) {\n            DependencySystem.register('tokenStatsManager', tokenStatsProxy);\n        }\n\n        // UI State Service\n        const uiStateService = createUIStateService({ logger });\n        DependencySystem.register('uiStateService', uiStateService);\n\n        // Register auth component factories\n        const authFormHandler = createAuthFormHandler({\n            domAPI, sanitizer, eventHandlers, logger, safeHandler\n        });\n        DependencySystem.register('authFormHandler', authFormHandler);\n\n        // AuthApiService requires a functional apiClient and apiEndpoints.\n        // These are only available after serviceInit's basic & advanced\n        // registrations.  Therefore we register *a factory wrapper* that can\n        // lazily create the real service on first access, once the\n        // dependencies exist.  This prevents an early boot failure while\n        // keeping the module name reserved in the DI container.\n\n        function _tryCreateAuthApiService() {\n            let instance = DependencySystem.modules.get('__authApiServiceReal');\n            if (instance) return instance;\n\n            const apiClient    = DependencySystem.modules.get('apiRequest')\n                              || DependencySystem.modules.get('apiClient');\n            const apiEndpoints = DependencySystem.modules.get('apiEndpoints') || opts.apiEndpoints;\n\n            if (!apiClient || !apiEndpoints) {\n                return null; // dependencies not ready yet\n            }\n\n            instance = createAuthApiService({\n                apiClient,\n                apiEndpoints,\n                logger,\n                browserService\n            });\n\n            DependencySystem.register('__authApiServiceReal', instance);\n            return instance;\n        }\n\n        const authApiServiceProxy = new Proxy({}, {\n            get(_target, prop) {\n                const inst = _tryCreateAuthApiService();\n                if (inst) {\n                    const value = inst[prop];\n                    return (typeof value === 'function') ? value.bind(inst) : value;\n                }\n                // Not ready yet â€“ return noop to avoid hard crash\n                if (prop === 'toString' || prop === Symbol.toPrimitive) {\n                    return () => '[authApiServiceProxy:unready]';\n                }\n                return () => {\n                    throw new Error('[authApiServiceProxy] AuthApiService not ready yet');\n                };\n            },\n            set(_target, prop, value) {\n                const inst = _tryCreateAuthApiService();\n                if (inst) {\n                    inst[prop] = value;\n                }\n                return true;\n            }\n        });\n\n        DependencySystem.register('authApiService', authApiServiceProxy);\n\n        const authStateManager = createAuthStateManager({\n            eventService, logger, browserService,\n            storageService: null // will be set later\n        });\n        DependencySystem.register('authStateManager', authStateManager);\n\n        // Return all created services\n        // Start background factory registration (non-blocking)\n        try {\n            // Intentionally not awaited â€“ side-effects only.\n            registerFactories();\n        } catch (err) {\n            logger.warn('[bootstrapCore] registerFactories() failed', err, {\n                context: 'bootstrapCore:registerFactories'\n            });\n        }\n\n        return {\n            logger,\n            eventHandlers,\n            domAPI,\n            safeHandler,\n            sanitizer,\n            domReadinessService,\n            uiUtils,\n            globalUtils,\n            getSessionId: coreGetSessionId,\n            eventService,\n            errorReporter\n        };\n    }\n\n    /**\n     * Register factory functions in DI container\n     */\n    function registerFactories() {\n        const factoriesToRegister = [\n            'KBManagerFactory',\n            'KBSearchHandlerFactory',\n            'PollingServiceFactory',\n            'chatUIEnhancementsFactory',\n            // Phase-2 factories\n            'createChatUIController',\n            'createConversationManager',\n            'createMessageHandler',\n            'createProjectDetailsRenderer',\n            'createProjectDataCoordinator',\n            'createProjectEventHandlers'\n        ];\n\n        // Import and register KB factories\n        import(\"../../knowledgeBaseManager.js\").then(m => {\n            if (!DependencySystem.modules.get('KBManagerFactory')) {\n                DependencySystem.register('KBManagerFactory', m.createKnowledgeBaseManager);\n            }\n        });\n\n        import(\"../../knowledgeBaseSearchHandler.js\").then(m => {\n            if (!DependencySystem.modules.get('KBSearchHandlerFactory')) {\n                DependencySystem.register('KBSearchHandlerFactory', m.createKnowledgeBaseSearchHandler);\n            }\n        });\n\n        import(\"../../pollingService.js\").then(m => {\n            if (!DependencySystem.modules.get('PollingServiceFactory')) {\n                DependencySystem.register('PollingServiceFactory', m.createPollingService);\n            }\n        });\n\n        import(\"../../chatUIEnhancements.js\").then(m => {\n            if (!DependencySystem.modules.get('chatUIEnhancementsFactory')) {\n                DependencySystem.register('chatUIEnhancementsFactory', m.createChatUIEnhancements);\n            }\n        });\n    }\n\n    return {\n        initializeCoreServices,\n        registerFactories\n    };\n}\n"],"mappings":"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","ignoreList":[]}