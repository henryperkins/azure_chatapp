{"version":3,"names":["createTokenStatsManagerProxy","DependencySystem","logger","Error","callQueue","realManager","_flushQueue","length","method","args","shift","err","error","context","setRealManager","instance","proxyTarget","proxy","Proxy","get","_obj","prop","push","undefined","_default","exports","default"],"sources":["tokenStatsManagerProxy.js"],"sourcesContent":["/**\n * tokenStatsManagerProxy.js – Lightweight buffering proxy to bridge the gap\n * between ChatManager initialisation and the asynchronous registration of the\n * real tokenStatsManager instance.  Supports a *subset* of the public API\n * required by ChatManager (currently `setInputTokenCount`).  All calls made\n * before the real manager becomes available are queued and flushed once the\n * real instance is registered.\n *\n * Size: < 50 LOC to comply with remediation guidance.\n */\n\nexport function createTokenStatsManagerProxy({ DependencySystem, logger } = {}) {\n  if (!DependencySystem) throw new Error('[tokenStatsManagerProxy] Missing DependencySystem');\n  if (!logger) throw new Error('[tokenStatsManagerProxy] Missing logger');\n\n  const callQueue = [];\n  let realManager = null;\n\n  function _flushQueue() {\n    if (!realManager) return;\n    while (callQueue.length) {\n      const { method, args } = callQueue.shift();\n      if (typeof realManager[method] === 'function') {\n        try {\n          realManager[method](...args);\n        } catch (err) {\n          logger.error('[tokenStatsManagerProxy] Failed to replay buffered call', err, {\n            context: 'tokenStatsManagerProxy', method\n          });\n        }\n      }\n    }\n  }\n\n  function setRealManager(instance) {\n    if (realManager) return; // Prevent re-binding (avoids memory build-up)\n    realManager = instance;\n    _flushQueue();\n  }\n\n  // Universal proxy handler – buffer calls until ready\n  const proxyTarget = {};\n  const proxy = new Proxy(proxyTarget, {\n    get(_obj, prop) {\n      if (prop === 'setRealManager') return setRealManager;\n      if (prop === 'cleanup') return () => { callQueue.length = 0; realManager = null; };\n      if (prop === '__isProxy') return true;\n      return (...args) => {\n        if (realManager && typeof realManager[prop] === 'function') {\n          return realManager[prop](...args);\n        }\n        callQueue.push({ method: prop, args });\n        return undefined;\n      };\n    }\n  });\n\n  return proxy;\n}\n\nexport default createTokenStatsManagerProxy;\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,SAASA,4BAA4BA,CAAC;EAAEC,gBAAgB;EAAEC;AAAO,CAAC,GAAG,CAAC,CAAC,EAAE;EAC9E,IAAI,CAACD,gBAAgB,EAAE,MAAM,IAAIE,KAAK,CAAC,mDAAmD,CAAC;EAC3F,IAAI,CAACD,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;EAEvE,MAAMC,SAAS,GAAG,EAAE;EACpB,IAAIC,WAAW,GAAG,IAAI;EAEtB,SAASC,WAAWA,CAAA,EAAG;IACrB,IAAI,CAACD,WAAW,EAAE;IAClB,OAAOD,SAAS,CAACG,MAAM,EAAE;MACvB,MAAM;QAAEC,MAAM;QAAEC;MAAK,CAAC,GAAGL,SAAS,CAACM,KAAK,CAAC,CAAC;MAC1C,IAAI,OAAOL,WAAW,CAACG,MAAM,CAAC,KAAK,UAAU,EAAE;QAC7C,IAAI;UACFH,WAAW,CAACG,MAAM,CAAC,CAAC,GAAGC,IAAI,CAAC;QAC9B,CAAC,CAAC,OAAOE,GAAG,EAAE;UACZT,MAAM,CAACU,KAAK,CAAC,yDAAyD,EAAED,GAAG,EAAE;YAC3EE,OAAO,EAAE,wBAAwB;YAAEL;UACrC,CAAC,CAAC;QACJ;MACF;IACF;EACF;EAEA,SAASM,cAAcA,CAACC,QAAQ,EAAE;IAChC,IAAIV,WAAW,EAAE,OAAO,CAAC;IACzBA,WAAW,GAAGU,QAAQ;IACtBT,WAAW,CAAC,CAAC;EACf;;EAEA;EACA,MAAMU,WAAW,GAAG,CAAC,CAAC;EACtB,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACF,WAAW,EAAE;IACnCG,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAE;MACd,IAAIA,IAAI,KAAK,gBAAgB,EAAE,OAAOP,cAAc;MACpD,IAAIO,IAAI,KAAK,SAAS,EAAE,OAAO,MAAM;QAAEjB,SAAS,CAACG,MAAM,GAAG,CAAC;QAAEF,WAAW,GAAG,IAAI;MAAE,CAAC;MAClF,IAAIgB,IAAI,KAAK,WAAW,EAAE,OAAO,IAAI;MACrC,OAAO,CAAC,GAAGZ,IAAI,KAAK;QAClB,IAAIJ,WAAW,IAAI,OAAOA,WAAW,CAACgB,IAAI,CAAC,KAAK,UAAU,EAAE;UAC1D,OAAOhB,WAAW,CAACgB,IAAI,CAAC,CAAC,GAAGZ,IAAI,CAAC;QACnC;QACAL,SAAS,CAACkB,IAAI,CAAC;UAAEd,MAAM,EAAEa,IAAI;UAAEZ;QAAK,CAAC,CAAC;QACtC,OAAOc,SAAS;MAClB,CAAC;IACH;EACF,CAAC,CAAC;EAEF,OAAON,KAAK;AACd;AAAC,IAAAO,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc1B,4BAA4B","ignoreList":[]}