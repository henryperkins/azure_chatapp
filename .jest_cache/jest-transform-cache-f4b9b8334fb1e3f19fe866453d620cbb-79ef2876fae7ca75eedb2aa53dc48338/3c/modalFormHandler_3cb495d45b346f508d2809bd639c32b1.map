{"version":3,"names":["MODULE_CONTEXT","createModalFormHandler","domAPI","eventHandlers","logger","sanitizer","safeHandler","MODULE","Error","_log","msg","extra","debug","context","_logError","err","error","stack","bindModalForm","modalEl","formSelector","onSubmit","options","form","querySelector","modalId","id","validateOnSubmit","clearOnSuccess","closeOnSuccess","submitHandler","event","preventDefault","stopPropagation","formData","FormData","data","Object","fromEntries","entries","validation","validateModalForm","valid","showFormErrors","errors","clearFormErrors","setFormLoading","result","clearModalForm","dispatchEvent","source","message","trackListener","description","requiredInputs","querySelectorAll","forEach","input","value","trim","fieldName","name","push","addClass","removeClass","type","emailRegex","test","URL","num","parseFloat","isNaN","min","max","length","errorCount","formId","Array","isArray","errorContainer","createElement","className","firstChild","firstElementChild","insertBefore","appendChild","errorList","li","setTextContent","sanitize","removeAllChildren","errorInputs","isLoading","submitBtn","inputs","disabled","dataset","originalText","textContent","tagName","selectedIndex","checkboxes","checked","populateModalForm","Boolean","String","fieldsCount","keys","getFormData","checkbox","prototype","hasOwnProperty","call","cleanup","cleanupListeners","_default","exports","default"],"sources":["modalFormHandler.js"],"sourcesContent":["/**\n * ModalFormHandler - extracted modal form management (Phase-2)\n * -----------------------------------------------------------\n * Handles form operations within modals, form validation,\n * modal-specific form behaviors. Extracted from oversized modalManager.js.\n */\n\nconst MODULE_CONTEXT = 'modalFormHandler';\n\nexport function createModalFormHandler({\n  domAPI,\n  eventHandlers,\n  logger,\n  sanitizer,\n  safeHandler\n} = {}) {\n  const MODULE = 'ModalFormHandler';\n\n  if (!domAPI || !eventHandlers || !logger || !sanitizer || !safeHandler) {\n    throw new Error(`[${MODULE}] Required dependencies missing: domAPI, eventHandlers, logger, sanitizer, safeHandler`);\n  }\n\n  const _log = (msg, extra = {}) => logger?.debug?.(`[${MODULE}] ${msg}`, {\n    context: MODULE,\n    ...extra\n  });\n\n  const _logError = (msg, err, extra = {}) => {\n    logger?.error?.(`[${MODULE}] ${msg}`, err?.stack || err, {\n      context: MODULE,\n      ...extra\n    });\n  };\n\n  function bindModalForm(modalEl, formSelector, onSubmit, options = {}) {\n    if (!modalEl || !formSelector || typeof onSubmit !== 'function') {\n      _logError('bindModalForm: modalEl, formSelector, and onSubmit required');\n      return false;\n    }\n\n    try {\n      const form = modalEl.querySelector(formSelector);\n      if (!form) {\n        _logError('Form not found in modal', null, { modalId: modalEl.id, formSelector });\n        return false;\n      }\n\n      const {\n        validateOnSubmit = true,\n        clearOnSuccess = true,\n        closeOnSuccess = true,\n        context = MODULE\n      } = options;\n\n      const submitHandler = safeHandler(async (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const formData = new FormData(form);\n        const data = Object.fromEntries(formData.entries());\n\n        // Validate if required\n        if (validateOnSubmit) {\n          const validation = validateModalForm(form);\n          if (!validation.valid) {\n            showFormErrors(form, validation.errors);\n            return;\n          }\n        }\n\n        try {\n          clearFormErrors(form);\n          setFormLoading(form, true);\n\n          const result = await onSubmit(data, form, modalEl);\n\n          if (result !== false) {\n            if (clearOnSuccess) {\n              clearModalForm(form);\n            }\n\n            if (closeOnSuccess) {\n              // Emit event to close modal\n              eventHandlers.dispatchEvent(modalEl, 'modal:requestClose', {\n                source: 'formSuccess',\n                modalId: modalEl.id\n              });\n            }\n          }\n        } catch (err) {\n          _logError('Modal form submission failed', err, { modalId: modalEl.id });\n          showFormErrors(form, [err.message || 'An error occurred']);\n        } finally {\n          setFormLoading(form, false);\n        }\n      }, `${context}:ModalFormSubmit`);\n\n      eventHandlers.trackListener(form, 'submit', submitHandler, {\n        context,\n        description: `ModalForm_${modalEl.id}`\n      });\n\n      _log('Modal form bound', { modalId: modalEl.id, formSelector });\n      return true;\n    } catch (err) {\n      _logError('Failed to bind modal form', err, { modalId: modalEl.id, formSelector });\n      return false;\n    }\n  }\n\n  function validateModalForm(form) {\n    if (!form) {\n      return { valid: false, errors: ['Form element required'] };\n    }\n\n    const errors = [];\n\n    try {\n      // Get all required inputs\n      const requiredInputs = form.querySelectorAll('input[required], select[required], textarea[required]');\n\n      requiredInputs.forEach(input => {\n        const value = input.value?.trim();\n        const fieldName = input.name || input.id || 'Unknown field';\n\n        if (!value) {\n          errors.push(`${fieldName} is required`);\n          domAPI.addClass(input, 'input-error');\n        } else {\n          domAPI.removeClass(input, 'input-error');\n        }\n\n        // Email validation\n        if (input.type === 'email' && value) {\n          const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n          if (!emailRegex.test(value)) {\n            errors.push(`${fieldName} must be a valid email address`);\n            domAPI.addClass(input, 'input-error');\n          }\n        }\n\n        // URL validation\n        if (input.type === 'url' && value) {\n          try {\n            new URL(value);\n            domAPI.removeClass(input, 'input-error');\n          } catch {\n            errors.push(`${fieldName} must be a valid URL`);\n            domAPI.addClass(input, 'input-error');\n          }\n        }\n\n        // Number validation\n        if (input.type === 'number' && value) {\n          const num = parseFloat(value);\n          if (isNaN(num)) {\n            errors.push(`${fieldName} must be a valid number`);\n            domAPI.addClass(input, 'input-error');\n          } else {\n            const min = parseFloat(input.min);\n            const max = parseFloat(input.max);\n\n            if (!isNaN(min) && num < min) {\n              errors.push(`${fieldName} must be at least ${min}`);\n              domAPI.addClass(input, 'input-error');\n            }\n\n            if (!isNaN(max) && num > max) {\n              errors.push(`${fieldName} must be at most ${max}`);\n              domAPI.addClass(input, 'input-error');\n            }\n          }\n        }\n      });\n\n      const result = { valid: errors.length === 0, errors };\n      _log('Modal form validation', {\n        valid: result.valid,\n        errorCount: errors.length,\n        formId: form.id\n      });\n\n      return result;\n    } catch (err) {\n      _logError('Form validation failed', err, { formId: form.id });\n      return { valid: false, errors: ['Validation error occurred'] };\n    }\n  }\n\n  function showFormErrors(form, errors) {\n    if (!form || !Array.isArray(errors)) return;\n\n    try {\n      clearFormErrors(form);\n\n      if (errors.length === 0) return;\n\n      // Create or update error container\n      let errorContainer = form.querySelector('.form-errors');\n      if (!errorContainer) {\n        errorContainer = domAPI.createElement('div');\n        errorContainer.className = 'form-errors alert alert-error mt-3';\n\n        // Insert at top of form\n        const firstChild = form.firstElementChild;\n        if (firstChild) {\n          form.insertBefore(errorContainer, firstChild);\n        } else {\n          form.appendChild(errorContainer);\n        }\n      }\n\n      // Create error list\n      const errorList = domAPI.createElement('ul');\n      errorList.className = 'list-disc list-inside space-y-1';\n\n      errors.forEach(error => {\n        const li = domAPI.createElement('li');\n        domAPI.setTextContent(li, sanitizer.sanitize(error));\n        domAPI.appendChild(errorList, li);\n      });\n\n      // Clear and add new errors\n      domAPI.removeAllChildren(errorContainer);\n      domAPI.appendChild(errorContainer, errorList);\n\n      domAPI.removeClass(errorContainer, 'hidden');\n\n      _log('Form errors displayed', { errorCount: errors.length, formId: form.id });\n    } catch (err) {\n      _logError('Failed to show form errors', err, { formId: form.id });\n    }\n  }\n\n  function clearFormErrors(form) {\n    if (!form) return;\n\n    try {\n      const errorContainer = form.querySelector('.form-errors');\n      if (errorContainer) {\n        domAPI.addClass(errorContainer, 'hidden');\n        domAPI.removeAllChildren(errorContainer);\n      }\n\n      // Remove error classes from inputs\n      const errorInputs = form.querySelectorAll('.input-error');\n      errorInputs.forEach(input => {\n        domAPI.removeClass(input, 'input-error');\n      });\n\n      _log('Form errors cleared', { formId: form.id });\n    } catch (err) {\n      _logError('Failed to clear form errors', err, { formId: form.id });\n    }\n  }\n\n  function setFormLoading(form, isLoading) {\n    if (!form) return;\n\n    try {\n      const submitBtn = form.querySelector('button[type=\"submit\"], input[type=\"submit\"]');\n      const inputs = form.querySelectorAll('input, select, textarea, button');\n\n      if (isLoading) {\n        // Disable all form elements\n        inputs.forEach(input => {\n          input.disabled = true;\n        });\n\n        // Update submit button\n        if (submitBtn) {\n          submitBtn.dataset.originalText = submitBtn.textContent || submitBtn.value;\n          if (submitBtn.tagName === 'BUTTON') {\n            submitBtn.textContent = 'Processing...';\n          } else {\n            submitBtn.value = 'Processing...';\n          }\n          domAPI.addClass(submitBtn, 'loading');\n        }\n\n        domAPI.addClass(form, 'form-loading');\n      } else {\n        // Enable all form elements\n        inputs.forEach(input => {\n          input.disabled = false;\n        });\n\n        // Restore submit button\n        if (submitBtn) {\n          const originalText = submitBtn.dataset.originalText;\n          if (originalText) {\n            if (submitBtn.tagName === 'BUTTON') {\n              submitBtn.textContent = originalText;\n            } else {\n              submitBtn.value = originalText;\n            }\n            delete submitBtn.dataset.originalText;\n          }\n          domAPI.removeClass(submitBtn, 'loading');\n        }\n\n        domAPI.removeClass(form, 'form-loading');\n      }\n\n      _log('Form loading state changed', { isLoading, formId: form.id });\n    } catch (err) {\n      _logError('Failed to set form loading state', err, { formId: form.id, isLoading });\n    }\n  }\n\n  function clearModalForm(form) {\n    if (!form) return;\n\n    try {\n      // Clear text inputs, textareas, and selects\n      const inputs = form.querySelectorAll('input[type=\"text\"], input[type=\"email\"], input[type=\"url\"], input[type=\"number\"], input[type=\"password\"], textarea, select');\n      inputs.forEach(input => {\n        if (input.tagName === 'SELECT') {\n          input.selectedIndex = 0;\n        } else {\n          input.value = '';\n        }\n      });\n\n      // Clear checkboxes and radio buttons\n      const checkboxes = form.querySelectorAll('input[type=\"checkbox\"], input[type=\"radio\"]');\n      checkboxes.forEach(input => {\n        input.checked = false;\n      });\n\n      // Clear any errors\n      clearFormErrors(form);\n\n      _log('Modal form cleared', { formId: form.id });\n    } catch (err) {\n      _logError('Failed to clear modal form', err, { formId: form.id });\n    }\n  }\n\n  function populateModalForm(form, data) {\n    if (!form || !data || typeof data !== 'object') return false;\n\n    try {\n      Object.entries(data).forEach(([name, value]) => {\n        const input = form.querySelector(`[name=\"${name}\"], #${name}`);\n        if (input) {\n          if (input.type === 'checkbox' || input.type === 'radio') {\n            input.checked = Boolean(value);\n          } else if (input.tagName === 'SELECT') {\n            input.value = value;\n          } else {\n            input.value = String(value || '');\n          }\n        }\n      });\n\n      _log('Modal form populated', { formId: form.id, fieldsCount: Object.keys(data).length });\n      return true;\n    } catch (err) {\n      _logError('Failed to populate modal form', err, { formId: form.id });\n      return false;\n    }\n  }\n\n  function getFormData(form) {\n    if (!form) return null;\n\n    try {\n      const formData = new FormData(form);\n      const data = Object.fromEntries(formData.entries());\n\n      // Handle checkboxes that aren't checked (they won't be in FormData)\n      const checkboxes = form.querySelectorAll('input[type=\"checkbox\"]');\n      checkboxes.forEach(checkbox => {\n        if (!Object.prototype.hasOwnProperty.call(data, checkbox.name)) {\n          data[checkbox.name] = false;\n        } else {\n          data[checkbox.name] = true;\n        }\n      });\n\n      return data;\n    } catch (err) {\n      _logError('Failed to get form data', err, { formId: form.id });\n      return null;\n    }\n  }\n\n  return {\n    // Form binding and handling\n    bindModalForm,\n\n    // Form validation\n    validateModalForm,\n\n    // Error handling\n    showFormErrors,\n    clearFormErrors,\n\n    // Form state management\n    setFormLoading,\n    clearModalForm,\n    populateModalForm,\n    getFormData,\n\n    cleanup() {\n      _log('cleanup()');\n      eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n    }\n  };\n}\n\nexport default createModalFormHandler;\n"],"mappings":"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","ignoreList":[]}