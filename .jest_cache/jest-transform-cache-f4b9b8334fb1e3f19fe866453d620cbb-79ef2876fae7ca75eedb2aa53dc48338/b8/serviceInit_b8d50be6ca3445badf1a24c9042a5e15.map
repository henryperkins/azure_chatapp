{"version":3,"names":["createServiceInit","deps","DependencySystem","domAPI","browserService","eventHandlers","domReadinessService","sanitizer","APP_CONFIG","getSessionId","uiUtils","globalUtils","createFileUploadComponent","createApiEndpoints","createApiClient","createAccessibilityEnhancements","createNavigationService","createHtmlTemplateLoader","createUiRenderer","logger","modules","get","Error","safeRegister","name","value","has","register","debug","context","registerBasicServices","info","existingErrorReporter","_buffer","proxy","estimateTokens","args","push","method","flushBufferTo","realService","length","shift","cleanup","apiEndpointsInstance","config","resolvedEndpoints","endpoints","endpointCount","Object","keys","registerAdvancedServices","apiClientInstance","shouldSkipDedup","stableStringify","normaliseUrl","isAbsoluteUrl","getAuthModule","set","fetch","accessibilityUtilsInstance","safeHandler","htmlTemplateLoader","navInstance","init","htmlLoaderInstance","apiClient","timerAPI","curEndpoints","uiRendererInstance","apiRequest","apiEndpoints","onConversationSelect","conversationId","doc","getDocument","createCustomEvent","dispatchEvent","detail","onProjectSelect","projectId","setLogger","newLogger","cleanupListeners","log"],"sources":["serviceInit.js"],"sourcesContent":["// ========================================\n// FILE: /initialization/phases/serviceInit.js\n// ========================================\n/**\n * Service Registration and Initialization\n * Registers basic and advanced services in the DI container\n * ~150 lines\n */\n\nexport function createServiceInit(deps) {\n    const {\n        DependencySystem, domAPI, browserService, eventHandlers,\n        domReadinessService, sanitizer, APP_CONFIG, getSessionId,\n        uiUtils, globalUtils, createFileUploadComponent,\n        createApiEndpoints, createApiClient, createAccessibilityEnhancements,\n        createNavigationService, createHtmlTemplateLoader, createUiRenderer\n    } = deps;\n\n    let logger = DependencySystem?.modules?.get('logger');\n\n    if (!DependencySystem || !domAPI || !browserService || !eventHandlers ||\n        !domReadinessService || !sanitizer || !APP_CONFIG || !getSessionId) {\n        throw new Error('[serviceInit] Missing required dependencies for service initialization.');\n    }\n\n    if (!logger) {\n        throw new Error('[serviceInit] Logger instance is required; fallback removed.');\n    }\n\n    function safeRegister(name, value) {\n        if (!DependencySystem.modules.has(name)) {\n            DependencySystem.register(name, value);\n            logger.debug(`[serviceInit] Registered \"${name}\"`, { context: 'serviceInit:safeRegister' });\n        } else {\n            logger.debug(`[serviceInit] \"${name}\" already registered â€“ skipping.`, { context: 'serviceInit:safeRegister' });\n        }\n    }\n\n    function registerBasicServices() {\n        logger.info('[serviceInit] Starting registration of basic services...', { context: 'serviceInit:registerBasicServices' });\n\n        safeRegister('logger', logger);\n        safeRegister('domAPI', domAPI);\n        safeRegister('browserAPI', browserService);\n        safeRegister('browserService', browserService);\n        safeRegister('viewportAPI', browserService);\n        safeRegister('storage', browserService);\n        safeRegister('eventHandlers', eventHandlers);\n        safeRegister('domReadinessService', domReadinessService);\n\n        const existingErrorReporter = DependencySystem.modules.get('errorReporter');\n        if (!existingErrorReporter) {\n            throw new Error('[serviceInit] errorReporter module must be registered before ServiceInit runs.');\n        }\n        safeRegister('errorReporter', existingErrorReporter);\n\n        if (uiUtils) safeRegister('uiUtils', uiUtils);\n        if (globalUtils) safeRegister('globalUtils', globalUtils);\n        safeRegister('sanitizer', sanitizer);\n        safeRegister('domPurify', sanitizer);\n\n        if (createFileUploadComponent) {\n            safeRegister('FileUploadComponent', createFileUploadComponent);\n        }\n\n        // ------------------------------------------------------------------\n        // Early placeholder for tokenStatsManager\n        // ------------------------------------------------------------------\n        // Some downstream modules (e.g., messageHandler, chatUIController) expect a\n        // tokenStatsManager instance to be present even before the full\n        // coreInit phase wires the real implementation.  To avoid runtime\n        // failures we register a lightweight proxy here that buffers calls\n        // until the real service is registered later in the boot sequence.\n\n        if (!DependencySystem.modules.has('tokenStatsManager')) {\n            const _buffer = [];\n            const proxy = {\n                estimateTokens: (...args) => {\n                    _buffer.push({ method: 'estimateTokens', args });\n                    return 0; // Safe default to unblock sync callers\n                },\n                flushBufferTo (realService) {\n                    while (_buffer.length) {\n                        const { method, args } = _buffer.shift();\n                        if (typeof realService[method] === 'function') {\n                            realService[method](...args);\n                        }\n                    }\n                },\n                cleanup () {\n                    _buffer.length = 0;\n                }\n            };\n            safeRegister('tokenStatsManager', proxy);\n            logger.debug('[serviceInit] tokenStatsManager proxy registered (placeholder)', {\n                context: 'serviceInit:registerBasicServices'\n            });\n        }\n\n        // Register API endpoints\n        if (typeof createApiEndpoints !== 'function') {\n            throw new Error('[serviceInit] createApiEndpoints factory missing.');\n        }\n        const apiEndpointsInstance = createApiEndpoints({ logger, DependencySystem, config: APP_CONFIG });\n        const resolvedEndpoints = DependencySystem.modules.get('apiEndpoints') || apiEndpointsInstance.endpoints;\n        safeRegister('apiEndpoints', resolvedEndpoints);\n\n        logger.debug('[serviceInit] API endpoints registered.', {\n            endpointCount: Object.keys(resolvedEndpoints).length,\n            context: 'serviceInit:registerBasicServices'\n        });\n\n        logger.info('[serviceInit] Basic services registration completed.', {\n            context: 'serviceInit:registerBasicServices'\n        });\n    }\n\n    function registerAdvancedServices() {\n        logger.info('[serviceInit] Starting registration of advanced services...', {\n            context: 'serviceInit:registerAdvancedServices'\n        });\n\n        // API Client creation and registration\n        let apiClientInstance = null;\n        if (createApiClient && globalUtils) {\n            logger.debug('[serviceInit] Creating API client...', {\n                context: 'serviceInit:registerAdvancedServices'\n            });\n\n            apiClientInstance = createApiClient({\n                APP_CONFIG,\n                globalUtils: {\n                    shouldSkipDedup: globalUtils.shouldSkipDedup,\n                    stableStringify: globalUtils.stableStringify,\n                    normaliseUrl: globalUtils.normaliseUrl,\n                    isAbsoluteUrl: globalUtils.isAbsoluteUrl\n                },\n                getAuthModule: () => DependencySystem.modules.get('auth'),\n                browserService,\n                eventHandlers,\n                logger\n            });\n\n            // Register API client\n            if (DependencySystem.modules.has('apiRequest')) {\n                DependencySystem.modules.set('apiRequest', apiClientInstance.fetch);\n            } else {\n                safeRegister('apiRequest', apiClientInstance.fetch);\n            }\n\n            safeRegister('apiClient', apiClientInstance.fetch);\n            safeRegister('apiClientObject', apiClientInstance);\n\n            logger.debug('[serviceInit] API client created and registered.', {\n                context: 'serviceInit:registerAdvancedServices'\n            });\n        }\n\n        // Register other advanced services\n        if (createAccessibilityEnhancements) {\n            const accessibilityUtilsInstance = createAccessibilityEnhancements({\n                domAPI,\n                eventHandlers,\n                logger,\n                domReadinessService,\n                DependencySystem,\n                safeHandler: DependencySystem.modules.get('safeHandler'),\n                htmlTemplateLoader: DependencySystem.modules.get('htmlTemplateLoader')\n            });\n            safeRegister('accessibilityUtils', accessibilityUtilsInstance);\n        }\n\n        if (createNavigationService) {\n            const navInstance = createNavigationService({\n                domAPI,\n                browserService,\n                DependencySystem,\n                eventHandlers,\n                logger\n            });\n            navInstance.init();\n            safeRegister('navigationService', navInstance);\n        }\n\n        if (createHtmlTemplateLoader) {\n            const htmlLoaderInstance = createHtmlTemplateLoader({\n                DependencySystem,\n                domAPI,\n                sanitizer,\n                eventHandlers,\n                apiClient: apiClientInstance,\n                timerAPI: browserService,\n                domReadinessService,\n                logger\n            });\n            safeRegister('htmlTemplateLoader', htmlLoaderInstance);\n        }\n\n        if (createUiRenderer && apiClientInstance) {\n            const curEndpoints = DependencySystem.modules.get('apiEndpoints');\n            if (curEndpoints) {\n                const uiRendererInstance = createUiRenderer({\n                    domAPI,\n                    eventHandlers,\n                    apiRequest: apiClientInstance.fetch,\n                    apiEndpoints: curEndpoints,\n                    domReadinessService,\n                    logger,\n                    DependencySystem,\n                    onConversationSelect: (conversationId) => {\n                        const doc = domAPI.getDocument();\n                        if (doc && eventHandlers.createCustomEvent) {\n                            domAPI.dispatchEvent(doc,\n                                eventHandlers.createCustomEvent('uiRenderer:conversationSelected', {\n                                    detail: { conversationId }\n                                })\n                            );\n                        }\n                    },\n                    onProjectSelect: (projectId) => {\n                        const doc = domAPI.getDocument();\n                        if (doc && eventHandlers.createCustomEvent) {\n                            domAPI.dispatchEvent(doc,\n                                eventHandlers.createCustomEvent('uiRenderer:projectSelected', {\n                                    detail: { projectId }\n                                })\n                            );\n                        }\n                    }\n                });\n                safeRegister('uiRenderer', uiRendererInstance);\n            }\n        }\n\n        logger.info('[serviceInit] Advanced services registration completed.', {\n            context: 'serviceInit:registerAdvancedServices'\n        });\n    }\n\n    function setLogger(newLogger) {\n        if (!newLogger) return;\n        logger = newLogger;\n        safeRegister('logger', newLogger);\n    }\n\n    function cleanup() {\n        eventHandlers.cleanupListeners({ context: 'serviceInit' });\n        const log = DependencySystem.modules.get('logger');\n        log.debug('[serviceInit] Cleanup completed', { context: 'serviceInit:cleanup' });\n    }\n\n    return {\n        registerBasicServices,\n        registerAdvancedServices,\n        setLogger,\n        cleanup\n    };\n}\n"],"mappings":"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","ignoreList":[]}