{"version":3,"names":["createEventService","DependencySystem","logger","eventHandlers","existingBus","Error","warn","context","mainBus","EventTarget","MODULE_CONTEXT","emit","eventName","detail","undefined","evt","CustomEvent","dispatchEvent","err","error","on","handler","options","addEventListener","trackListener","off","removeEventListener","once","wrapped","waitFor","filter","Promise","resolve","disposer","getAuthBus","getAppBus","cleanup","cleanupListeners","target","debug","_getBus","_default","exports","default"],"sources":["eventService.js"],"sourcesContent":["/**\n * Unified Event Service – single EventTarget for the entire frontend\n * ------------------------------------------------------------------\n * This service replaces the legacy scattered buses (AuthBus, AppBus,\n * chatUIBus, SidebarBus, …).  Every module should depend on this service\n * and no module should create its own EventTarget after migration.\n *\n * Guard-rails compliance:\n *   • Pure factory – no side-effects at module scope.\n *   • Explicit DI parameters (only `logger` is optional).\n *   • Always exposes cleanup() even if currently a no-op.\n *\n * Back-compat helpers:\n *   • getAuthBus() / getAppBus() return the same underlying bus so legacy\n *     modules continue to work during incremental migration.\n */\n\nexport function createEventService({\n  DependencySystem,\n  logger,\n  eventHandlers,\n  existingBus\n} = {}) {\n  /* ------------------------------------------------------------------\n   * Dependency validation\n   * ---------------------------------------------------------------- */\n  if (!logger) {\n    throw new Error('[eventService] Missing logger');\n  }\n\n  if (!eventHandlers) {\n    throw new Error('[eventService] Missing eventHandlers');\n  }\n\n  if (!DependencySystem) {\n    // Soft-fail: allow unit tests to omit DI but warn in debug builds.\n    logger.warn?.('[eventService] DependencySystem not provided – listener ' +\n                 'cleanup by module context will not be possible', {\n      context: 'eventService'\n    });\n  }\n\n  // Use supplied bus (e.g., AppBus from appInitializer) or create new.\n  const mainBus = existingBus || new EventTarget();\n\n  const MODULE_CONTEXT = 'eventService';\n\n  /* ---------------------------------------------------------------- */\n  /* Core helpers                                                      */\n  /* ---------------------------------------------------------------- */\n\n  function emit(eventName, detail = undefined) {\n    if (!eventName || typeof eventName !== 'string') {\n      throw new Error('[eventService] emit() requires non-empty event name');\n    }\n    try {\n      const evt = new CustomEvent(eventName, { detail });\n      mainBus.dispatchEvent(evt);\n    } catch (err) {\n      logger.error?.('[eventService] Failed to dispatch', err, {\n        context: MODULE_CONTEXT,\n        eventName\n      });\n      throw err;\n    }\n  }\n\n  /**\n   * Subscribe to an event.\n   * Returns an unsubscribe function for convenience so callers can do:\n   *   const off = eventService.on('foo', handler);\n   *   ...later => off();\n   */\n  function on(eventName, handler, { context = MODULE_CONTEXT, options } = {}) {\n    if (!eventName || typeof handler !== 'function') {\n      throw new Error('[eventService] on() requires eventName & handler');\n    }\n    mainBus.addEventListener(eventName, handler, options);\n    // Register with global tracking so components can automatically clean up\n    eventHandlers.trackListener(mainBus, eventName, handler, { context });\n\n    return () => off(eventName, handler, options);\n  }\n\n  function off(eventName, handler, options) {\n    if (!eventName || typeof handler !== 'function') return;\n    mainBus.removeEventListener(eventName, handler, options);\n  }\n\n  /**\n   * One-shot listener that auto-unsubscribes after first invocation.\n   */\n  function once(eventName, handler, { context = MODULE_CONTEXT } = {}) {\n    const wrapped = function (evt) {\n      try { handler(evt); } finally { off(eventName, wrapped); }\n    };\n    return on(eventName, wrapped, { context });\n  }\n\n  /**\n   * Promise helper – resolves next time `eventName` fires.  If a filter\n   * function is supplied it must return truthy for the promise to resolve.\n   */\n  function waitFor(eventName, { filter } = {}) {\n    return new Promise((resolve) => {\n      const disposer = once(eventName, (evt) => {\n        if (typeof filter === 'function' && !filter(evt)) return;\n        resolve(evt.detail);\n        disposer(); // ensure removal in case once() wasn't used\n      }, { context: MODULE_CONTEXT + ':waitFor' });\n    });\n  }\n\n  /* ---------------------------------------------------------------- */\n  /* Public API                                                        */\n  /* ---------------------------------------------------------------- */\n\n  return {\n    emit,\n    on,\n    off,\n    once,\n    waitFor,\n\n    // Legacy shims – point to the same bus for backwards compatibility\n    getAuthBus() {\n      return mainBus;\n    },\n    getAppBus() {\n      return mainBus;\n    },\n\n    /**\n     * Explicit cleanup.  Removes all listeners that were registered through\n     * the eventHandlers tracking system and targeted this EventTarget.\n     */\n    cleanup() {\n      eventHandlers.cleanupListeners({ target: mainBus });\n      logger.debug?.('[eventService] cleanup() executed', { context: MODULE_CONTEXT });\n    },\n\n    /* internal for unit tests */\n    _getBus() {\n      return mainBus;\n    }\n  };\n}\n\nexport default createEventService;\n"],"mappings":"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","ignoreList":[]}