{"version":3,"names":["createChatManager","DependencySystem","logger","eventHandlers","domReadinessService","domAPI","conversationManager","messageHandler","chatUIController","eventService","chatUIEnhancements","MODULE_CONTEXT","REQUIRED","k","v","Object","entries","Error","inputField","sendButton","messageContainer","_wireDOMElements","dependenciesAndElements","domSelectors","timeout","context","getElementById","setMessageContainer","attachEventHandlers","onSend","text","sendMessage","initialize","info","attachUI","catch","err","error","loadConversationHistory","content","trim","appendMessage","createMessageElement","Date","now","showTypingIndicator","responseData","conversationId","getCurrentConversationId","model","hideTypingIndicator","aiText","assistant_response","reply","aiEl","message_id","emit","response","createNewConversation","a","loadConversation","deleteConversation","getCurrentConversation","cleanup","forEach","mod","cleanupListeners","debug","apiObject","defineProperty","get","enumerable","_default","exports","default"],"sources":["chat.js"],"sourcesContent":["/**\n * chat.js (≤400 LOC) – Phase-2 slim coordinator that glues together\n * ConversationManager, MessageHandler and ChatUIController.\n *\n * All heavy lifting has been extracted into dedicated modules; this file now\n * performs orchestration only, keeping under the 1 000-line limit.\n *\n * Guard-rails summary:\n *   • Factory export only – no side-effects at module scope.\n *   • All dependencies injected via DI object.\n *   • No runtime DependencySystem look-ups; use injected deps.\n *   • Exposes cleanup() which delegates to sub-modules.\n */\n\nexport function createChatManager({\n  // Core injected services\n  DependencySystem,\n  logger,\n  eventHandlers,\n  domReadinessService,\n  domAPI,\n\n  conversationManager,\n  messageHandler,\n  chatUIController,\n\n  // Cross-app single event service (Phase-3 consolidation)\n  eventService,\n\n  // Optional legacy module (until fully removed)\n  chatUIEnhancements = null,\n} = {}) {\n  /* ------------------------------------------------------------------ */\n  /* Dependency validation                                               */\n  /* ------------------------------------------------------------------ */\n  const MODULE_CONTEXT = 'ChatManager';\n\n  const REQUIRED = {\n    DependencySystem,\n    logger,\n    eventHandlers,\n    domReadinessService,\n    domAPI,\n    conversationManager,\n    messageHandler,\n    chatUIController,\n    eventService,\n  };\n\n  for (const [k, v] of Object.entries(REQUIRED)) {\n    if (!v) throw new Error(`[${MODULE_CONTEXT}] Missing required dependency: ${k}`);\n  }\n\n  /* ------------------------------------------------------------------ */\n  /* Internal state                                                      */\n  /* ------------------------------------------------------------------ */\n  // Use the unified eventService bus instead of a private EventTarget to\n  // avoid event-system fragmentation.\n  // const chatBus = eventService?.getAppBus?.() || eventService?._getBus?.(); // unused\n\n  let inputField = null;\n  let sendButton = null;\n  let messageContainer = null;\n\n  /* ------------------------------------------------------------------ */\n  /* Private helpers                                                     */\n  /* ------------------------------------------------------------------ */\n\n  async function _wireDOMElements() {\n    // Wait for essential DOM elements to be present before wiring events.\n    await domReadinessService.dependenciesAndElements({\n      domSelectors: ['#chatInput', '#chatSendBtn', '#chatMessages'],\n      timeout: 10_000,\n      context: MODULE_CONTEXT,\n    });\n\n    inputField       = domAPI.getElementById('chatInput');\n    sendButton       = domAPI.getElementById('chatSendBtn');\n    messageContainer = domAPI.getElementById('chatMessages');\n\n    chatUIController.setMessageContainer(messageContainer);\n\n    chatUIController.attachEventHandlers({\n      inputField,\n      sendButton,\n      messageContainer,\n      onSend: (text) => sendMessage(text),\n    });\n  }\n\n  /* ------------------------------------------------------------------ */\n  /* Public API                                                          */\n  /* ------------------------------------------------------------------ */\n\n  async function initialize() {\n    logger.info('[ChatManager] initialize()', { context: MODULE_CONTEXT });\n\n    await chatUIController.attachUI();\n\n    // Wire DOM once elements are ready.\n    _wireDOMElements().catch((err) => {\n      logger.error('[ChatManager] Failed to wire DOM elements', err, { context: MODULE_CONTEXT });\n    });\n\n    // Kick-off conversation bootstrap (load last or create new).\n    conversationManager.loadConversationHistory().catch((err) => {\n      logger.error('[ChatManager] Conversation bootstrap failed', err, { context: MODULE_CONTEXT });\n    });\n  }\n\n  async function sendMessage(content) {\n    if (!content || !content.trim()) return;\n\n    chatUIController.appendMessage(\n      chatUIController.createMessageElement(content, 'user', Date.now()),\n    );\n\n    chatUIController.showTypingIndicator();\n\n    try {\n      const responseData = await messageHandler.sendMessage(content, {\n        conversationId: conversationManager.getCurrentConversationId(),\n        model: null, // let backend decide for now\n      });\n\n      chatUIController.hideTypingIndicator();\n\n      const aiText = responseData?.assistant_response\n                  ?? responseData?.reply\n                  ?? responseData?.content\n                  ?? null;\n\n      if (aiText) {\n        const aiEl = chatUIController.createMessageElement(\n          aiText,\n          'ai',\n          Date.now(),\n          responseData?.message_id || null,\n        );\n        chatUIController.appendMessage(aiEl);\n      }\n\n      eventService.emit('chat:messageSent', { text: content, response: responseData });\n    } catch (err) {\n      chatUIController.hideTypingIndicator();\n      logger.error('[ChatManager] sendMessage failed', err, { context: MODULE_CONTEXT });\n    }\n  }\n\n  /* Simple thin wrappers delegating to ConversationManager ------------- */\n\n  const createNewConversation  = (...a) => conversationManager.createNewConversation(...a);\n  const loadConversation       = (...a) => conversationManager.loadConversation(...a);\n  const deleteConversation     = (...a) => conversationManager.deleteConversation(...a);\n  const getCurrentConversation = ()   => conversationManager.getCurrentConversationId();\n\n  /* ------------------------------------------------------------------ */\n  /* Cleanup                                                             */\n  /* ------------------------------------------------------------------ */\n\n  function cleanup() {\n    chatUIController.cleanup();\n    // sub-modules provide their own cleanup(); call if present.\n    [conversationManager, messageHandler, chatUIEnhancements].forEach((mod) => {\n      if (mod && typeof mod.cleanup === 'function') {\n        try { mod.cleanup(); }\n        catch (err) {\n          logger.error('[ChatManager] sub-module cleanup failed', err, { context: MODULE_CONTEXT });\n        }\n      }\n    });\n\n    eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n    logger.debug('[ChatManager] cleaned up', { context: MODULE_CONTEXT });\n  }\n\n  /* ------------------------------------------------------------------ */\n  /* Exported object                                                     */\n  /* ------------------------------------------------------------------ */\n\n  const apiObject = {\n    initialize,\n    sendMessage,\n    createNewConversation,\n    loadConversation,\n    deleteConversation,\n    getCurrentConversationId: getCurrentConversation,\n    chatUIController,\n    chatUIEnhancements,\n    cleanup,\n  };\n\n  // Back-compat: expose `currentConversationId` as a (readonly) property.\n  Object.defineProperty(apiObject, 'currentConversationId', {\n    get: getCurrentConversation,\n    enumerable: false,\n  });\n\n  return apiObject;\n}\n\nexport default createChatManager;\n"],"mappings":"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","ignoreList":[]}