{"version":3,"names":["_modalConstants","require","_modalRenderer","_modalStateManager","_modalFormHandler","createModalManager","eventHandlers","domAPI","browserService","DependencySystem","modalMapping","domPurify","domReadinessService","logger","errorReporter","eventService","sanitizer","Error","MODULE_CONTEXT","modalSanitizer","safeHandler","modules","get","renderer","createModalRenderer","stateManager","createModalStateManager","modalMappings","MODAL_MAPPINGS","formHandler","createModalFormHandler","isReady","readyPromise","initialize","info","context","mappings","name","id","Object","entries","registerModal","setupGlobalEventListeners","modalCount","keys","length","err","error","document","getDocument","escapeHandler","event","key","activeModal","getActiveModal","hide","trackListener","description","backdropHandler","target","classList","contains","closeRequestHandler","modalId","source","detail","modalName","getModalName","debug","show","options","canOpenModal","warn","getModalId","modalEl","findModalElement","content","updateModalContent","sanitize","selector","contentSelector","title","setModalTitle","updateContent","success","showModalElement","setActiveModal","center","centerModal","canCloseModal","hideModalElement","toggle","isModalOpen","hideAll","closedModals","closeAllModals","forEach","count","bindForm","formSelector","onSubmit","bindModalForm","confirmDelete","message","confirmText","cancelText","confirmClass","onConfirm","onCancel","messageEl","querySelector","setTextContent","confirmBtn","className","cleanupListeners","cancelBtn","confirmAction","isReadyPromise","openModal","isOpen","getModalStack","getAllStates","getAllModalStates","validateForm","form","validateModalForm","valid","errors","unregisterModal","getModalMappings","cleanup","ModalManager","constructor","opts","manager","assign","catch","console","exports","default","createProjectModal","modalManager","projectData","_","nameInput","value","descInput"],"sources":["modalManager.js"],"sourcesContent":["/**\n * modalManager.js - Refactored Modal Manager (Phase-2)\n * ---------------------------------------------------\n * Slim coordinator that orchestrates modal operations using extracted modules:\n * - ModalRenderer: DOM manipulation and rendering\n * - ModalStateManager: State tracking and lifecycle\n * - ModalFormHandler: Form handling within modals\n *\n * Reduced from 1235 â†’ ~400 lines through separation of concerns.\n */\n\nimport { MODAL_MAPPINGS } from './modalConstants.js';\nimport { createModalRenderer } from './modalRenderer.js';\nimport { createModalStateManager } from './modalStateManager.js';\nimport { createModalFormHandler } from './modalFormHandler.js';\n\nexport function createModalManager({\n  eventHandlers,\n  domAPI,\n  browserService,\n  DependencySystem,\n  modalMapping,\n  domPurify,\n  domReadinessService,\n  logger,\n  errorReporter,\n  eventService,\n  sanitizer\n} = {}) {\n\n  // Dependency validation\n  if (!domAPI) {\n    throw new Error('[ModalManager] domAPI DI not provided');\n  }\n  if (!browserService) {\n    throw new Error('[ModalManager] browserService DI not provided');\n  }\n  if (!logger) {\n    throw new Error('[ModalManager] logger is required');\n  }\n\n  const MODULE_CONTEXT = 'ModalManager';\n\n  // Use provided sanitizer or fallback to domPurify\n  const modalSanitizer = sanitizer || domPurify;\n  if (!modalSanitizer) {\n    throw new Error('[ModalManager] sanitizer (DOMPurify) is required');\n  }\n\n  // Get safeHandler\n  const safeHandler = DependencySystem?.modules?.get?.('safeHandler');\n  if (typeof safeHandler !== 'function') {\n    throw new Error('[ModalManager] safeHandler not available in DependencySystem');\n  }\n\n  // === EXTRACTED MODULE INSTANCES ===\n  const renderer = createModalRenderer({\n    domAPI,\n    browserService,\n    logger,\n    sanitizer: modalSanitizer\n  });\n\n  const stateManager = createModalStateManager({\n    eventService: eventService || DependencySystem?.modules?.get?.('eventService'),\n    logger,\n    modalMappings: modalMapping || MODAL_MAPPINGS\n  });\n\n  const formHandler = createModalFormHandler({\n    domAPI,\n    eventHandlers,\n    logger,\n    sanitizer: modalSanitizer,\n    safeHandler\n  });\n\n  // === INITIALIZATION ===\n  let isReady = false;\n  let readyPromise = null;\n\n  async function initialize() {\n    if (readyPromise) return readyPromise;\n\n    readyPromise = (async () => {\n      try {\n        logger.info('[ModalManager] Initializing', { context: MODULE_CONTEXT });\n\n\n\n        // Register default modal mappings\n        const mappings = modalMapping || MODAL_MAPPINGS;\n        for (const [name, id] of Object.entries(mappings)) {\n          stateManager.registerModal(name, id);\n        }\n\n        // Set up global modal event listeners\n        setupGlobalEventListeners();\n\n        isReady = true;\n        logger.info('[ModalManager] Initialization complete', {\n          modalCount: Object.keys(mappings).length,\n          context: MODULE_CONTEXT\n        });\n\n      } catch (err) {\n        logger.error('[ModalManager] Initialization failed', err, { context: MODULE_CONTEXT });\n        throw err;\n      }\n    })();\n\n    return readyPromise;\n  }\n\n  function setupGlobalEventListeners() {\n    const document = domAPI.getDocument();\n\n    // ESC key handler\n    const escapeHandler = safeHandler((event) => {\n      if (event.key === 'Escape') {\n        const activeModal = stateManager.getActiveModal();\n        if (activeModal) {\n          hide(activeModal);\n        }\n      }\n    }, MODULE_CONTEXT + ':EscapeKey');\n\n    eventHandlers.trackListener(document, 'keydown', escapeHandler, {\n      context: MODULE_CONTEXT,\n      description: 'EscapeKeyHandler'\n    });\n\n    // Modal backdrop click handler\n    const backdropHandler = safeHandler((event) => {\n      if (event.target.classList.contains('modal-backdrop')) {\n        const activeModal = stateManager.getActiveModal();\n        if (activeModal) {\n          hide(activeModal);\n        }\n      }\n    }, MODULE_CONTEXT + ':BackdropClick');\n\n    eventHandlers.trackListener(document, 'click', backdropHandler, {\n      context: MODULE_CONTEXT,\n      description: 'BackdropClickHandler'\n    });\n\n    // Modal close request handler\n    const closeRequestHandler = safeHandler((event) => {\n      const { modalId, source } = event.detail || {};\n      if (modalId) {\n        const modalName = stateManager.getModalName(modalId);\n        if (modalName) {\n          logger.debug('[ModalManager] Close requested', { modalName, source });\n          hide(modalName);\n        }\n      }\n    }, MODULE_CONTEXT + ':CloseRequest');\n\n    eventHandlers.trackListener(document, 'modal:requestClose', closeRequestHandler, {\n      context: MODULE_CONTEXT,\n      description: 'CloseRequestHandler'\n    });\n  }\n\n  // === CORE MODAL OPERATIONS ===\n  function show(modalName, options = {}) {\n    try {\n      logger.debug('[ModalManager] Showing modal', { modalName, options });\n\n      if (!stateManager.canOpenModal(modalName)) {\n        logger.warn('[ModalManager] Cannot open modal', { modalName });\n        return false;\n      }\n\n      const modalId = stateManager.getModalId(modalName);\n      const modalEl = renderer.findModalElement(modalId);\n\n      if (!modalEl) {\n        logger.error('[ModalManager] Modal element not found', { modalName, modalId });\n        return false;\n      }\n\n      // Update content if provided\n      if (options.content) {\n        renderer.updateModalContent(modalEl, options.content, {\n          sanitize: options.sanitize !== false,\n          selector: options.contentSelector\n        });\n      }\n\n      // Update title if provided\n      if (options.title) {\n        renderer.setModalTitle(modalEl, options.title);\n      }\n\n      // Update modal content via callback\n      if (typeof options.updateContent === 'function') {\n        try {\n          options.updateContent(modalEl);\n        } catch (err) {\n          logger.error('[ModalManager] Update content callback failed', err, { modalName });\n        }\n      }\n\n      // Show the modal\n      const success = renderer.showModalElement(modalEl);\n      if (success) {\n        stateManager.setActiveModal(modalName);\n\n        // Center modal if requested\n        if (options.center) {\n          renderer.centerModal(modalEl);\n        }\n\n        logger.info('[ModalManager] Modal shown successfully', { modalName });\n        return true;\n      } else {\n        logger.error('[ModalManager] Failed to show modal element', { modalName });\n        return false;\n      }\n\n    } catch (err) {\n      logger.error('[ModalManager] Error showing modal', err, { modalName });\n      return false;\n    }\n  }\n\n  function hide(modalName) {\n    try {\n      logger.debug('[ModalManager] Hiding modal', { modalName });\n\n      if (!modalName) {\n        // Hide active modal if no name provided\n        modalName = stateManager.getActiveModal();\n        if (!modalName) {\n          logger.warn('[ModalManager] No modal to hide');\n          return false;\n        }\n      }\n\n      if (!stateManager.canCloseModal(modalName)) {\n        logger.warn('[ModalManager] Cannot close modal', { modalName });\n        return false;\n      }\n\n      const modalId = stateManager.getModalId(modalName);\n      const modalEl = renderer.findModalElement(modalId);\n\n      if (!modalEl) {\n        logger.error('[ModalManager] Modal element not found for hiding', { modalName, modalId });\n        return false;\n      }\n\n      // Hide the modal\n      const success = renderer.hideModalElement(modalEl);\n      if (success) {\n        stateManager.setActiveModal(null);\n        logger.info('[ModalManager] Modal hidden successfully', { modalName });\n        return true;\n      } else {\n        logger.error('[ModalManager] Failed to hide modal element', { modalName });\n        return false;\n      }\n\n    } catch (err) {\n      logger.error('[ModalManager] Error hiding modal', err, { modalName });\n      return false;\n    }\n  }\n\n  function toggle(modalName, options = {}) {\n    if (stateManager.isModalOpen(modalName)) {\n      return hide(modalName);\n    } else {\n      return show(modalName, options);\n    }\n  }\n\n  function hideAll() {\n    try {\n      const closedModals = stateManager.closeAllModals();\n\n      // Hide all modal elements\n      closedModals.forEach(modalName => {\n        const modalId = stateManager.getModalId(modalName);\n        const modalEl = renderer.findModalElement(modalId);\n        if (modalEl) {\n          renderer.hideModalElement(modalEl);\n        }\n      });\n\n      logger.info('[ModalManager] All modals hidden', { count: closedModals.length });\n      return closedModals;\n    } catch (err) {\n      logger.error('[ModalManager] Error hiding all modals', err);\n      return [];\n    }\n  }\n\n  // === FORM INTEGRATION ===\n  function bindForm(modalName, formSelector, onSubmit, options = {}) {\n    try {\n      const modalId = stateManager.getModalId(modalName);\n      const modalEl = renderer.findModalElement(modalId);\n\n      if (!modalEl) {\n        logger.error('[ModalManager] Cannot bind form - modal not found', { modalName, modalId });\n        return false;\n      }\n\n      return formHandler.bindModalForm(modalEl, formSelector, onSubmit, {\n        ...options,\n        context: MODULE_CONTEXT + ':' + modalName\n      });\n    } catch (err) {\n      logger.error('[ModalManager] Error binding modal form', err, { modalName, formSelector });\n      return false;\n    }\n  }\n\n  // === CONFIRMATION DIALOGS ===\n  function confirmDelete(options = {}) {\n    const {\n      title = 'Confirm Delete',\n      message = 'Are you sure you want to delete this item?',\n      confirmText = 'Delete',\n      cancelText = 'Cancel',\n      confirmClass = 'btn-error',\n      onConfirm,\n      onCancel\n    } = options;\n\n    return show('confirm', {\n      title,\n      updateContent: (modalEl) => {\n        const messageEl = modalEl.querySelector('.modal-message');\n        if (messageEl) {\n          domAPI.setTextContent(messageEl, message);\n        }\n\n        const confirmBtn = modalEl.querySelector('.confirm-btn');\n        if (confirmBtn) {\n          domAPI.setTextContent(confirmBtn, confirmText);\n          confirmBtn.className = `btn ${confirmClass}`;\n\n          // Remove existing listeners\n          eventHandlers.cleanupListeners({\n            target: confirmBtn,\n            context: MODULE_CONTEXT + ':ConfirmDelete'\n          });\n\n          // Add new listener\n          eventHandlers.trackListener(confirmBtn, 'click', safeHandler(() => {\n            hide('confirm');\n            if (typeof onConfirm === 'function') {\n              onConfirm();\n            }\n          }, MODULE_CONTEXT + ':ConfirmAction'), {\n            context: MODULE_CONTEXT + ':ConfirmDelete',\n            description: 'ConfirmDeleteAction'\n          });\n        }\n\n        const cancelBtn = modalEl.querySelector('.cancel-btn');\n        if (cancelBtn) {\n          domAPI.setTextContent(cancelBtn, cancelText);\n\n          eventHandlers.trackListener(cancelBtn, 'click', safeHandler(() => {\n            hide('confirm');\n            if (typeof onCancel === 'function') {\n              onCancel();\n            }\n          }, MODULE_CONTEXT + ':CancelAction'), {\n            context: MODULE_CONTEXT + ':ConfirmDelete',\n            description: 'ConfirmDeleteCancel'\n          });\n        }\n      }\n    });\n  }\n\n  function confirmAction(options = {}) {\n    return confirmDelete(options);\n  }\n\n  // === PUBLIC API ===\n  return {\n    // Initialization\n    initialize,\n    isReadyPromise: () => readyPromise,\n\n    // Core modal operations\n    // Alias openModal -> show for backward compatibility with modules that still\n    // expect an `openModal` helper. This avoids widespread refactors while the\n    // codebase completes the migration to the more explicit `show` verb.\n    openModal: show,\n    show,\n    hide,\n    toggle,\n    hideAll,\n\n    // State queries (delegate to state manager)\n    isOpen: (modalName) => stateManager.isModalOpen(modalName),\n    getActiveModal: () => stateManager.getActiveModal(),\n    getModalStack: () => stateManager.getModalStack(),\n    getAllStates: () => stateManager.getAllModalStates(),\n\n    // Form handling (delegate to form handler)\n    bindForm,\n    validateForm: (modalName, formSelector) => {\n      const modalId = stateManager.getModalId(modalName);\n      const modalEl = renderer.findModalElement(modalId);\n      if (modalEl) {\n        const form = modalEl.querySelector(formSelector);\n        return formHandler.validateModalForm(form);\n      }\n      return { valid: false, errors: ['Modal or form not found'] };\n    },\n\n    // Confirmation dialogs\n    confirmDelete,\n    confirmAction,\n\n    // Modal management\n    registerModal: (name, id, options) => stateManager.registerModal(name, id, options),\n    unregisterModal: (name) => stateManager.unregisterModal(name),\n\n    // Utility methods\n    getModalMappings: () => stateManager.getModalMappings(),\n    updateModalContent: (modalName, content, options) => {\n      const modalId = stateManager.getModalId(modalName);\n      const modalEl = renderer.findModalElement(modalId);\n      return modalEl ? renderer.updateModalContent(modalEl, content, options) : false;\n    },\n\n    cleanup() {\n      logger.debug('[ModalManager] cleanup()', { context: MODULE_CONTEXT });\n\n      // Cleanup extracted modules\n      renderer.cleanup();\n      stateManager.cleanup();\n      formHandler.cleanup();\n\n      // Cleanup event listeners\n      eventHandlers.cleanupListeners({ context: MODULE_CONTEXT });\n\n      // Reset state\n      isReady = false;\n      readyPromise = null;\n    }\n  };\n}\n\n// Legacy class-based interface for backward compatibility\nexport default class ModalManager {\n  constructor(opts) {\n    const manager = createModalManager(opts);\n\n    // Delegate all methods to the functional implementation\n    Object.assign(this, manager);\n\n    // Auto-initialize\n    this.initialize().catch(err => {\n      if (opts?.logger) {\n        opts.logger.error('[ModalManager] Auto-initialization failed:', err, { context: 'ModalManager' });\n      } else {\n        console.error('[ModalManager] Auto-initialization failed:', err);\n      }\n    });\n  }\n}\n\n/**\n * createProjectModal â€“ thin convenience wrapper around the generic\n * createModalManager specifically configured for the \"project\" modal\n * defined in MODAL_MAPPINGS (logical key: 'project').  It exposes a\n * single helper `openModal(projectData)` that pre-populates the modal\n * form fields when editing an existing project.  All other methods are\n * delegated to the underlying ModalManager instance so consumers retain\n * full access to show/hide/toggle APIs.\n *\n * This factory exists solely for backward-compatibility with modules\n * that were built before the Phase-2 modal refactor and still expect a\n * dedicated ProjectModal helper.  New code should use the unified\n * ModalManager.show('project', â€¦) interface.\n */\nexport function createProjectModal(options = {}) {\n  // Re-use the generic modal manager implementation â€“ do **NOT** create\n  // duplicate state; single source of truth lives in ModalManager.\n  const modalManager = createModalManager(options);\n\n  async function openModal(projectData = {}) {\n    // Ensure underlying ModalManager is ready before attempting to show.\n    if (typeof modalManager.initialize === 'function') {\n      try {\n        await modalManager.initialize();\n      } catch (_) {\n        // Initialization errors are already logged inside ModalManager.\n      }\n    }\n\n    const { name = '', description = '' } = projectData || {};\n\n    return modalManager.show('project', {\n      updateContent: (modalEl) => {\n        if (!modalEl) return;\n\n        // Pre-fill commonly used inputs.  Fallbacks are no-ops if elements\n        // are missing â€“ we intentionally avoid hard dependencies on the\n        // exact template markup to keep this helper resilient to future\n        // UI tweaks.\n        const nameInput = modalEl.querySelector('#projectModalNameInput');\n        if (nameInput) nameInput.value = name;\n\n        const descInput = modalEl.querySelector('#projectModalDescriptionInput');\n        if (descInput) descInput.value = description;\n      }\n    });\n  }\n\n  return {\n    ...modalManager,\n    openModal\n  };\n}\n"],"mappings":"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","ignoreList":[]}