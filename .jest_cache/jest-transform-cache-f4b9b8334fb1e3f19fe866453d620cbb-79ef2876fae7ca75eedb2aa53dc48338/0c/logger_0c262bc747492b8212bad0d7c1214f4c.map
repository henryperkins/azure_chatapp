{"version":3,"names":["createLogger","context","debug","minLevel","consoleEnabled","sessionIdProvider","traceIdProvider","domAPI","browserService","eventHandlers","Error","levels","info","warn","critical","error","currentMinLevel","shouldLog","level","formatLogEntry","message","data","metadata","timestamp","Date","toISOString","sessionId","traceId","name","stack","log","args","length","lastArg","slice","logEntry","method","console","prefix","toUpperCase","consoleArgs","push","apply","CustomEventCtor","getWindow","CustomEvent","dispatchEvent","event","detail","bubbles","target","getDocument","e","withContext","newContext","setMinLevel","undefined","cleanup","cleanupListeners"],"sources":["logger.js"],"sourcesContent":["/**\n * logger.js - Pure logging functionality, no delivery concerns\n * Emits events for external handlers to process\n */\n\nexport function createLogger({\n  context = 'App',\n  debug = false,\n  minLevel = 'info',\n  consoleEnabled = true,\n  sessionIdProvider = () => null,\n  traceIdProvider = () => null,\n  domAPI,\n  browserService,\n  eventHandlers\n}) {\n  if (!domAPI) {\n    throw new Error('[logger] Missing domAPI');\n  }\n  if (!browserService) {\n    throw new Error('[logger] Missing browserService');\n  }\n  if (!eventHandlers) {\n    throw new Error('[logger] Missing eventHandlers');\n  }\n  const levels = {\n    debug: 0,\n    info: 1,\n    warn: 2,\n    critical: 4\n  };\n  levels.error = 3;\n\n  let currentMinLevel = levels[minLevel] || levels.info;\n\n  function shouldLog(level) {\n    return levels[level] >= currentMinLevel;\n  }\n\n  function formatLogEntry(level, message, data, metadata) {\n    return {\n      timestamp: new Date().toISOString(),\n      level,\n      message,\n      context: metadata?.context || context,\n      sessionId: sessionIdProvider(),\n      traceId: traceIdProvider(),\n      data: data instanceof Error ? {\n        name: data.name,\n        message: data.message,\n        stack: data.stack\n      } : data,\n      metadata\n    };\n  }\n\n  function log(level, message, ...args) {\n    if (!shouldLog(level)) return;\n\n    // Parse args: [data], {metadata with context}\n    let data = null;\n    let metadata = {};\n\n    if (args.length > 0) {\n      const lastArg = args[args.length - 1];\n      if (lastArg && typeof lastArg === 'object' && 'context' in lastArg) {\n        metadata = lastArg;\n        args = args.slice(0, -1);\n      }\n    }\n\n    if (args.length > 0) {\n      data = args[0];\n    }\n\n    const logEntry = formatLogEntry(level, message, data, metadata);\n\n    // Console output\n    if (consoleEnabled) {\n      const method = console[level] || console.log;\n      const prefix = `[${logEntry.timestamp}] [${level.toUpperCase()}] [${logEntry.context}]`;\n      const consoleArgs = [`${prefix} ${message}`];\n      if (data) consoleArgs.push(data);\n      method.apply(console, consoleArgs);\n    }\n\n    try {\n      const CustomEventCtor = browserService.getWindow?.()?.CustomEvent;\n      if (domAPI && typeof domAPI.dispatchEvent === 'function' && CustomEventCtor) {\n        const event = new CustomEventCtor('app:log', { detail: logEntry, bubbles: false });\n        const target = domAPI.getDocument();\n        if (target) {\n          domAPI.dispatchEvent(target, event);\n        }\n      }\n    } catch (e) {\n      // Silent fail - don't create log loops\n    }\n  }\n\n  return {\n    debug: (message, ...args) => log('debug', message, ...args),\n    info: (message, ...args) => log('info', message, ...args),\n    warn: (message, ...args) => log('warn', message, ...args),\n    critical: (message, ...args) => log('critical', message, ...args),\n    log: (message, ...args) => log('info', message, ...args),\n\n    withContext(newContext) {\n      return createLogger({\n        context: newContext,\n        debug,\n        minLevel,\n        consoleEnabled,\n        sessionIdProvider,\n        traceIdProvider,\n        domAPI,\n        browserService,\n        eventHandlers\n      });\n    },\n\n    setMinLevel(level) {\n      if (levels[level] !== undefined) {\n        currentMinLevel = levels[level];\n      }\n    },\n\n    cleanup() {\n      eventHandlers.cleanupListeners({ context });\n    },\n\n    ['error']: (message, ...args) => log('error', message, ...args)\n  };\n}\n"],"mappings":"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","ignoreList":[]}